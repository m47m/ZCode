{:highlights [{:id #uuid "63b2b1aa-a728-4818-a146-7e8805f05585", :page 27, :position {:bounding {:x1 429.0018005371094, :y1 763.9500427246094, :x2 429.0127868652344, :y2 777.5500183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 429.0018005371094, :y1 763.9500427246094, :x2 429.0127868652344, :y2 777.5500183105469, :width 841, :height 1050.0968921389397}), :page 27}, :content {:text nil}, :properties {:color "yellow"}} {:id #uuid "63b2b207-d821-4358-9f2c-1a21abc9405a", :page 27, :position {:bounding {:x1 78.5, :y1 884.6750183105469, :x2 627.8500366210938, :y2 903.7000122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 613.25, :y1 884.6750183105469, :x2 627.8500366210938, :y2 903.0750122070312, :width 841, :height 1050.0968921389397} {:x1 78.5, :y1 885.3000183105469, :x2 602.855712890625, :y2 903.7000122070312, :width 841, :height 1050.0968921389397}), :page 27}, :content {:text "Web 浏览器只是 ECMAScript 实现可能存在的一种宿主环境（host environment）"}, :properties {:color "yellow"}} {:id #uuid "63b2b220-be98-47f6-a69b-2d5681ef2791", :page 27, :position {:bounding {:x1 107.73750305175781, :y1 841.1250152587891, :x2 364.4878845214844, :y2 859.5250091552734, :width 841, :height 1050.0968921389397}, :rects ({:x1 107.73750305175781, :y1 841.1250152587891, :x2 364.4878845214844, :y2 859.5250091552734, :width 841, :height 1050.0968921389397}), :page 27}, :content {:text "ECMAScript，即 ECMA-262 定义的语言"}, :properties {:color "yellow"}} {:id #uuid "63b2b27d-1381-4bc0-9bb7-3012b6aa3b7f", :page 28, :position {:bounding {:x1 0, :y1 604.8000183105469, :x2 762.6356201171875, :y2 663.2375183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 604.8000183105469, :x2 0, :y2 627.2000122070312, :width 841, :height 1050.0968921389397} {:x1 705.2723999023438, :y1 623.0625152587891, :x2 762.6356201171875, :y2 641.4625091552734, :width 841, :height 1050.0968921389397} {:x1 108.98750305175781, :y1 644.8375091552734, :x2 665.0403594970703, :y2 663.2375183105469, :width 841, :height 1050.0968921389397}), :page 28}, :content {:text "第 4 版包括强类型变量、新语句和数据结构、真正的类和经典的继承，以及操作数据的新手段。"}, :properties {:color "yellow"}} {:id #uuid "63b2b293-3f7c-4ee4-8905-3342f73d2b4a", :page 28, :position {:bounding {:x1 0, :y1 716.8000183105469, :x2 762.9337768554688, :y2 815.8000183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 716.8000183105469, :x2 0, :y2 739.2000122070312, :width 841, :height 1050.0968921389397} {:x1 430.8248596191406, :y1 775.5750122070312, :x2 762.9337768554688, :y2 793.9750061035156, :width 841, :height 1050.0968921389397} {:x1 109.0374984741211, :y1 797.4000244140625, :x2 704.9993286132812, :y2 815.8000183105469, :width 841, :height 1050.0968921389397}), :page 28}, :content {:text "原生的解析和序列化 JSON 数据的 JSON 对象、方便继承和高级属性定义的方法，以及新的增强 ECMAScript 引擎解释和执行代码能力的严格模式"}, :properties {:color "yellow"}} {:id #uuid "63b2b2a7-49e4-49a5-9324-1925efcb0a23", :page 28, :position {:bounding {:x1 0, :y1 796.8000183105469, :x2 763.24658203125, :y2 924.7625122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 796.8000183105469, :x2 0, :y2 819.2000122070312, :width 841, :height 1050.0968921389397} {:x1 444.5, :y1 885.1250305175781, :x2 763.24658203125, :y2 903.5250244140625, :width 841, :height 1050.0968921389397} {:x1 108.98750305175781, :y1 906.3625183105469, :x2 416.2246856689453, :y2 924.7625122070312, :width 841, :height 1050.0968921389397}), :page 28}, :content {:text "ES6 正式支持了类、模块、迭代器、生成器、箭头函数、期约、反射、代理和众多新的数据类型。"}, :properties {:color "yellow"}} {:id #uuid "63b2b2ce-c93e-4bf2-bd73-6f10128c3291", :page 29, :position {:bounding {:x1 0, :y1 12.800003051757812, :x2 734.1940307617188, :y2 182.5500030517578, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 12.800003051757812, :x2 0, :y2 35.19999694824219, :width 841, :height 1050.0968921389397} {:x1 0, :y1 28.800003051757812, :x2 0, :y2 51.19999694824219, :width 841, :height 1050.0968921389397} {:x1 581.43505859375, :y1 118.53749084472656, :x2 728.9339599609375, :y2 136.93751525878906, :width 841, :height 1050.0968921389397} {:x1 78.48750305175781, :y1 140.9499969482422, :x2 734.1940307617188, :y2 159.34999084472656, :width 841, :height 1050.0968921389397} {:x1 78.48750305175781, :y1 164.15000915527344, :x2 668.4691162109375, :y2 182.5500030517578, :width 841, :height 1050.0968921389397}), :page 29}, :content {:text "增加了异步函数（async/ await）、SharedArrayBuffer 及 Atomics API，以及 Object.values()/Object.entries()/Object. getOwnPropertyDescriptors()和字符串填充方法，另外明确支持对象字面量最后的逗号"}, :properties {:color "yellow"}} {:id #uuid "63b2b2de-2166-4887-a3a6-b6d81dc479b9", :page 29, :position {:bounding {:x1 0, :y1 60.80000305175781, :x2 732.72314453125, :y2 224.12501525878906, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 60.80000305175781, :x2 0, :y2 83.19999694824219, :width 841, :height 1050.0968921389397} {:x1 586.3289794921875, :y1 183.9499969482422, :x2 732.72314453125, :y2 202.34999084472656, :width 841, :height 1050.0968921389397} {:x1 78.48750305175781, :y1 205.72499084472656, :x2 614.2670288085938, :y2 224.12501525878906, :width 841, :height 1050.0968921389397}), :page 29}, :content {:text "包括异步迭代、剩余和扩展属性、一组新的正则表达式特性、Promise finally()，以及模板字面量修订"}, :properties {:color "yellow"}} {:id #uuid "63b2b3d6-9917-43f7-9ee7-7f8392a46259", :page 31, :position {:bounding {:x1 0, :y1 364.8000030517578, :x2 723.8226318359375, :y2 920.7000122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 364.8000030517578, :x2 0, :y2 387.1999969482422, :width 841, :height 1050.0968921389397} {:x1 502.56524658203125, :y1 879.8875122070312, :x2 723.8226318359375, :y2 898.2875061035156, :width 841, :height 1050.0968921389397} {:x1 78.4749984741211, :y1 902.3000183105469, :x2 348.87255859375, :y2 920.7000122070312, :width 841, :height 1050.0968921389397}), :page 31}, :content {:text "万维网联盟（W3C，World Wide Web Consortium）开始了制定 DOM 标准的进程"}, :properties {:color "yellow"}} {:id #uuid "63b2b44b-fd8f-48f0-b372-2abcbe6b9554", :page 32, :position {:bounding {:x1 0, :y1 285.70001220703125, :x2 762.8302001953125, :y2 355.20001220703125, :width 841, :height 1050.0968921389397}, :rects ({:x1 167.4796142578125, :y1 285.70001220703125, :x2 762.8302001953125, :y2 304.1000061035156, :width 841, :height 1050.0968921389397} {:x1 109.0250015258789, :y1 307.4750061035156, :x2 425.9125061035156, :y2 325.875, :width 841, :height 1050.0968921389397} {:x1 0, :y1 332.8000183105469, :x2 0, :y2 355.20001220703125, :width 841, :height 1050.0968921389397}), :page 32}, :content {:text "对（DHTML 早就支持的）鼠标和用户界面事件、范围、遍历（迭代 DOM 节点的方法）的支持，而且通过对象接口支持了层叠样式表（CSS）"}, :properties {:color "yellow"}} {:id #uuid "63b2b484-97f7-4a8b-b4c6-6880f7b695e4", :page 32, :position {:bounding {:x1 138.2624969482422, :y1 351.73751068115234, :x2 220.4385986328125, :y2 366.93749237060547, :width 841, :height 1050.0968921389397}, :rects ({:x1 138.2624969482422, :y1 351.73751068115234, :x2 220.4385986328125, :y2 366.93749237060547, :width 841, :height 1050.0968921389397}), :page 32}, :content {:text "DOM Level 2 "}, :properties {:color "yellow"}} {:id #uuid "63b2b4bc-1173-42da-9698-9ae87a9a792e", :page 32, :position {:bounding {:x1 138.27500915527344, :y1 460.6750068664551, :x2 218.9698486328125, :y2 475.87500762939453, :width 841, :height 1050.0968921389397}, :rects ({:x1 138.27500915527344, :y1 460.6750068664551, :x2 218.9698486328125, :y2 475.87500762939453, :width 841, :height 1050.0968921389397}), :page 32}, :content {:text "DOM Level 3 "}, :properties {:color "yellow"}} {:id #uuid "63b2b58a-4c56-4694-9957-a327e17f4a46", :page 35, :position {:bounding {:x1 107.73750305175781, :y1 161.2375030517578, :x2 390.9926452636719, :y2 176.43751525878906, :width 841, :height 1050.0968921389397}, :rects ({:x1 107.73750305175781, :y1 161.2375030517578, :x2 390.9926452636719, :y2 176.43751525878906, :width 841, :height 1050.0968921389397}), :page 35}, :content {:text "JavaScript 是一门用来与网页交互的脚本语言"}, :properties {:color "yellow"}} {:id #uuid "63b2b5b6-7baf-469b-8940-ba9e1feeb5c8", :page 36, :position {:bounding {:x1 160.60000610351562, :y1 514.5375137329102, :x2 303.1954040527344, :y2 536.1375122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 160.60000610351562, :y1 514.5375137329102, :x2 303.1954040527344, :y2 536.1375122070312, :width 841, :height 1050.0968921389397}), :page 36}, :content {:text "<script>元素"}, :properties {:color "yellow"}} {:id #uuid "63b2b632-3923-406f-bc11-55d8bef81d2f", :page 36, :position {:bounding {:x1 0, :y1 444.800012588501, :x2 762.7337036132812, :y2 616.8250122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 444.800012588501, :x2 0, :y2 467.20001220703125, :width 841, :height 1050.0968921389397} {:x1 637.8875122070312, :y1 578.7125091552734, :x2 762.7337036132812, :y2 597.1125183105469, :width 841, :height 1050.0968921389397} {:x1 109.0250015258789, :y1 598.4250183105469, :x2 195.9462127685547, :y2 616.8250122070312, :width 841, :height 1050.0968921389397}), :page 36}, :content {:text "<script>元素有下列 8 个属性。"}, :properties {:color "yellow"}} {:id #uuid "63b2b807-b7a9-4cee-9ae8-21fa39d50bf7", :page 37, :position {:bounding {:x1 0, :y1 76.80001831054688, :x2 732.232666015625, :y2 245.88754272460938, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 76.80001831054688, :x2 0, :y2 99.20001220703125, :width 841, :height 1050.0968921389397} {:x1 609.1920776367188, :y1 205.71249389648438, :x2 732.232666015625, :y2 224.11251831054688, :width 841, :height 1050.0968921389397} {:x1 126.4625015258789, :y1 227.48751831054688, :x2 652.5316772460938, :y2 245.88754272460938, :width 841, :height 1050.0968921389397}), :page 37}, :content {:text "值是 module，则代码会被当成 ES6 模块，而且只有这时候代码中才能出现 import 和 export 关键字"}, :properties {:color "yellow"}} {:id #uuid "63b2b848-1988-4c32-898c-f89dcc2d7705", :page 37, :position {:bounding {:x1 375.8233337402344, :y1 249.26251220703125, :x2 559.9981079101562, :y2 267.6625061035156, :width 841, :height 1050.0968921389397}, :rects ({:x1 375.8233337402344, :y1 249.26251220703125, :x2 559.9981079101562, :y2 267.6625061035156, :width 841, :height 1050.0968921389397}), :page 37}, :content {:text "在网页中嵌入 JavaScript 代码"}, :properties {:color "yellow"}} {:id #uuid "63b2b852-0d55-451f-90c1-664c6c8d3b89", :page 37, :position {:bounding {:x1 0, :y1 108.80000305175781, :x2 732.5713500976562, :y2 289.4375, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 108.80000305175781, :x2 0, :y2 131.1999969482422, :width 841, :height 1050.0968921389397} {:x1 644.7357788085938, :y1 249.26251220703125, :x2 732.5713500976562, :y2 267.6625061035156, :width 841, :height 1050.0968921389397} {:x1 78.48750305175781, :y1 271.0375061035156, :x2 204.38560485839844, :y2 289.4375, :width 841, :height 1050.0968921389397}), :page 37}, :content {:text "在网页中包含外部 JavaScript 文件"}, :properties {:color "yellow"}} {:id #uuid "63b2b882-4075-4556-8e7e-c0b775e7fce4", :page 37, :position {:bounding {:x1 0, :y1 252.79999923706055, :x2 732.868896484375, :y2 461.74999618530273, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 252.79999923706055, :x2 0, :y2 275.200008392334, :width 841, :height 1050.0968921389397} {:x1 299.02520751953125, :y1 421.575008392334, :x2 732.868896484375, :y2 439.97500228881836, :width 841, :height 1050.0968921389397} {:x1 78.5, :y1 443.35000228881836, :x2 224.72830200195312, :y2 461.74999618530273, :width 841, :height 1050.0968921389397}), :page 37}, :content {:text "在<script>元素中的代码被计算完成之前，页面的其余内容不会被加载，也不会被显示。"}, :properties {:color "yellow"}} {:id #uuid "63b2b945-51a9-4d19-83ea-b59de7a0419e", :page 38, :position {:bounding {:x1 0, :y1 556.8000183105469, :x2 762.79443359375, :y2 618.5750122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 556.8000183105469, :x2 0, :y2 579.2000122070312, :width 841, :height 1050.0968921389397} {:x1 338.4849548339844, :y1 578.4000244140625, :x2 762.79443359375, :y2 596.8000183105469, :width 841, :height 1050.0968921389397} {:x1 109.0374984741211, :y1 600.1750183105469, :x2 240.72997283935547, :y2 618.5750122070312, :width 841, :height 1050.0968921389397}), :page 38}, :content {:text "第二个<script>元素的代码必须在第一个<script>元素的代码解释完毕才能开始解释"}, :properties {:color "yellow"}} {:id #uuid "63b2baa2-90fc-4cc9-a5ce-fd06e5e8b8a8", :page 40, :position {:bounding {:x1 0, :y1 400.2749938964844, :x2 762.9659423828125, :y2 515.1999969482422, :width 841, :height 1050.0968921389397}, :rects ({:x1 138.27500915527344, :y1 400.2749938964844, :x2 762.9659423828125, :y2 418.6750030517578, :width 841, :height 1050.0968921389397} {:x1 109.01250457763672, :y1 422.0500030517578, :x2 168.32171630859375, :y2 440.4499969482422, :width 841, :height 1050.0968921389397} {:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.1999969482422, :width 841, :height 1050.0968921389397}), :page 40}, :content {:text "异步脚本保证会在页面的 load 事件前执行，但可能会在 DOMContentLoaded（参见第 17 章）之前或之后"}, :properties {:color "yellow"}} {:id #uuid "63b2bce3-96e7-428a-88d8-e466c155377e", :page 41, :position {:bounding {:x1 0, :y1 572.8000030517578, :x2 732.2748413085938, :y2 788.0375061035156, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 572.8000030517578, :x2 0, :y2 595.1999969482422, :width 841, :height 1050.0968921389397} {:x1 637.4375, :y1 748.3999938964844, :x2 732.2748413085938, :y2 763.6000061035156, :width 841, :height 1050.0968921389397} {:x1 78.5, :y1 769.6375122070312, :x2 456.87066650390625, :y2 788.0375061035156, :width 841, :height 1050.0968921389397}), :page 41}, :content {:text "CDATA 块表示文档中可以包含任意文本的区块，其内容不作为标签来解析"}, :properties {:color "yellow"}} {:id #uuid "63b2be3b-1da2-4deb-9e8d-caa480fc8785", :page 43, :position {:bounding {:x1 129.96250915527344, :y1 119.72499084472656, :x2 323.8534240722656, :y2 141.3249969482422, :width 841, :height 1050.0968921389397}, :rects ({:x1 129.96250915527344, :y1 119.72499084472656, :x2 323.8534240722656, :y2 141.3249969482422, :width 841, :height 1050.0968921389397}), :page 43}, :content {:text "行内代码与外部文件"}, :properties {:color "yellow"}} {:id #uuid "63b2beaf-d402-4c5d-af7d-b81224b2baa6", :page 43, :position {:bounding {:x1 129.96250915527344, :y1 780.9625244140625, :x2 216.15188598632812, :y2 802.5625, :width 841, :height 1050.0968921389397}, :rects ({:x1 129.96250915527344, :y1 780.9625244140625, :x2 216.15188598632812, :y2 802.5625, :width 841, :height 1050.0968921389397}), :page 43}, :content {:text "文档模式"}, :properties {:color "yellow"}} {:id #uuid "63b2bfb2-2199-4581-89bd-f3576abbcc2e", :page 44, :position {:bounding {:x1 160.60000610351562, :y1 735.8500366210938, :x2 328.1879577636719, :y2 757.4500427246094, :width 841, :height 1050.0968921389397}, :rects ({:x1 160.60000610351562, :y1 735.8500366210938, :x2 328.1879577636719, :y2 757.4500427246094, :width 841, :height 1050.0968921389397}), :page 44}, :content {:text "<noscript>元素"}, :properties {:color "yellow"}} {:id #uuid "63b2c01d-5344-40be-8f93-efdd431c2850", :page 45, :position {:bounding {:x1 129.96250915527344, :y1 380.4125061035156, :x2 173.02040100097656, :y2 402.01251220703125, :width 841, :height 1050.0968921389397}, :rects ({:x1 129.96250915527344, :y1 380.4125061035156, :x2 173.02040100097656, :y2 402.01251220703125, :width 841, :height 1050.0968921389397}), :page 45}, :content {:text "小结"}, :properties {:color "yellow"}} {:id #uuid "63b2c02e-5e10-4c6e-bbcc-09781f20d1c8", :page 46, :position {:bounding {:x1 140.52171325683594, :y1 556.4750061035156, :x2 203.5579071044922, :y2 583.6750183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 140.52171325683594, :y1 556.4750061035156, :x2 140.52474975585938, :y2 583.6750183105469, :width 841, :height 1050.0968921389397} {:x1 160.5, :y1 557.4375305175781, :x2 203.5579071044922, :y2 579.0375061035156, :width 841, :height 1050.0968921389397}), :page 46}, :content {:text "语法"}, :properties {:color "yellow"}} {:id #uuid "63b2c143-f380-449a-9d14-1d0111652505", :page 46, :position {:bounding {:x1 157, :y1 829.6875305175781, :x2 523.0875244140625, :y2 848.0875244140625, :width 841, :height 1050.0968921389397}, :rects ({:x1 157, :y1 829.6875305175781, :x2 523.0875244140625, :y2 848.0875244140625, :width 841, :height 1050.0968921389397}), :page 46}, :content {:text "第一个字符必须是一个字母、下划线（_）或美元符号（$"}, :properties {:color "yellow"}} {:id #uuid "63b2c14b-cdcd-4d85-8bfc-25c5c35f5344", :page 46, :position {:bounding {:x1 157, :y1 851.5500183105469, :x2 522.8335571289062, :y2 869.9500122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 157, :y1 851.5500183105469, :x2 522.8335571289062, :y2 869.9500122070312, :width 841, :height 1050.0968921389397}), :page 46}, :content {:text "剩下的其他字符可以是字母、下划线、美元符号或数字。"}, :properties {:color "yellow"}} {:id #uuid "63b2c159-be86-44a0-81fa-3335a79dad4c", :page 46, :position {:bounding {:x1 211.39854431152344, :y1 873.3250122070312, :x2 748.1620483398438, :y2 891.7250213623047, :width 841, :height 1050.0968921389397}, :rects ({:x1 211.39854431152344, :y1 873.3250122070312, :x2 748.1620483398438, :y2 891.7250213623047, :width 841, :height 1050.0968921389397}), :page 46}, :content {:text "字母可以是扩展 ASCII（Extended ASCII）中的字母，也可以是 Unicode 的字母字符"}, :properties {:color "yellow"}} {:id #uuid "63b2c224-ee25-4295-924d-681baeab0bfc", :page 48, :position {:bounding {:x1 160.4875030517578, :y1 440.8375244140625, :x2 311.3416442871094, :y2 462.43751525878906, :width 841, :height 1050.0968921389397}, :rects ({:x1 160.4875030517578, :y1 440.8375244140625, :x2 311.3416442871094, :y2 462.43751525878906, :width 841, :height 1050.0968921389397}), :page 48}, :content {:text "关键字与保留字"}, :properties {:color "yellow"}} {:id #uuid "63b2c2af-586d-48d9-b557-ea2945eeb0df", :page 49, :position {:bounding {:x1 129.96250915527344, :y1 178.48750019073486, :x2 173.02040100097656, :y2 200.0875062942505, :width 841, :height 1050.0968921389397}, :rects ({:x1 129.96250915527344, :y1 178.48750019073486, :x2 173.02040100097656, :y2 200.0875062942505, :width 841, :height 1050.0968921389397}), :page 49}, :content {:text "变量"}, :properties {:color "yellow"}} {:id #uuid "63b2c6b3-a8e4-43ef-955c-47b90da7a251", :page 49, :position {:bounding {:x1 0, :y1 156.80000972747803, :x2 732.5436401367188, :y2 423.75001525878906, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 156.80000972747803, :x2 0, :y2 179.20000743865967, :width 841, :height 1050.0968921389397} {:x1 587.8324584960938, :y1 383.57501220703125, :x2 732.5436401367188, :y2 401.9750213623047, :width 841, :height 1050.0968921389397} {:x1 78.48750305175781, :y1 405.3500213623047, :x2 294.18719482421875, :y2 423.75001525878906, :width 841, :height 1050.0968921389397}), :page 49}, :content {:text "不初始化的情况下，变量会保存一个特殊值 undefined"}, :properties {:color "yellow"}} {:id #uuid "63b2c71d-72b8-4d0d-9bed-480fb3a1298b", :page 49, :position {:bounding {:x1 107.73750305175781, :y1 908.2875366210938, :x2 477.5182800292969, :y2 926.6875305175781, :width 841, :height 1050.0968921389397}, :rects ({:x1 107.73750305175781, :y1 908.2875366210938, :x2 477.5182800292969, :y2 926.6875305175781, :width 841, :height 1050.0968921389397}), :page 49}, :content {:text "去掉之前的 var 操作符之后，message 就变成了全局变量"}, :properties {:color "yellow"}} {:id #uuid "63b2c780-7808-4dca-b890-89f48372508d", :page 50, :position {:bounding {:x1 195.6317901611328, :y1 169.73749542236328, :x2 715.60400390625, :y2 188.13751983642578, :width 841, :height 1050.0968921389397}, :rects ({:x1 195.6317901611328, :y1 169.73749542236328, :x2 715.60400390625, :y2 188.13751983642578, :width 841, :height 1050.0968921389397}), :page 50}, :content {:text "在严格模式下，如果像这样给未声明的变量赋值，则会导致抛出 ReferenceError"}, :properties {:color "yellow"}} {:id #uuid "63b2ca8d-2353-42a7-bc7c-37a67271640d", :page 51, :position {:bounding {:x1 123.9749984741211, :y1 730.6000061035156, :x2 190.55453491210938, :y2 745.8000183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 123.9749984741211, :y1 730.6000061035156, :x2 190.55453491210938, :y2 745.8000183105469, :width 841, :height 1050.0968921389397}), :page 51}, :content {:text "暂时性死区"}, :properties {:color "yellow"}} {:id #uuid "63b2caeb-3bf4-449b-9dc1-d86bf9e74a59", :page 51, :position {:bounding {:x1 238.61123657226562, :y1 907.2749938964844, :x2 696.4000244140625, :y2 925.6750183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 238.61123657226562, :y1 907.2749938964844, :x2 696.4000244140625, :y2 925.6750183105469, :width 841, :height 1050.0968921389397}), :page 51}, :content {:text "在 let 声明之前的执行瞬间被称为“暂时性死区”（temporal dead zone）"}, :properties {:color "yellow"}} {:id #uuid "63b2cb48-0aa3-4639-9713-5c741bdbefb8", :page 52, :position {:bounding {:x1 154.5124969482422, :y1 118.71250915527344, :x2 207.7122802734375, :y2 133.91250610351562, :width 841, :height 1050.0968921389397}, :rects ({:x1 154.5124969482422, :y1 118.71250915527344, :x2 207.7122802734375, :y2 133.91250610351562, :width 841, :height 1050.0968921389397}), :page 52}, :content {:text "全局声明"}, :properties {:color "yellow"}} {:id #uuid "63b2cb56-8354-47b0-8489-541496027a2d", :page 52, :position {:bounding {:x1 274.7039489746094, :y1 137.5500030517578, :x2 703.6995849609375, :y2 155.95001220703125, :width 841, :height 1050.0968921389397}, :rects ({:x1 274.7039489746094, :y1 137.5500030517578, :x2 703.6995849609375, :y2 155.95001220703125, :width 841, :height 1050.0968921389397}), :page 52}, :content {:text "使用 let 在全局作用域中声明的变量不会成为 window 对象的属性"}, :properties {:color "yellow"}} {:id #uuid "63b2cba1-1a8f-4b1d-91d4-500e2e1b8ca6", :page 52, :position {:bounding {:x1 154.5124969482422, :y1 316.0375061035156, :x2 207.7122802734375, :y2 331.2375183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 154.5124969482422, :y1 316.0375061035156, :x2 207.7122802734375, :y2 331.2375183105469, :width 841, :height 1050.0968921389397}), :page 52}, :content {:text "条件声明"}, :properties {:color "yellow"}} {:id #uuid "63b2cbf9-c5a8-49ff-b3ab-65f72bda1b55", :page 52, :position {:bounding {:x1 0, :y1 356.63750648498535, :x2 762.9606323242188, :y2 435.20000648498535, :width 841, :height 1050.0968921389397}, :rects ({:x1 240.375, :y1 356.63750648498535, :x2 762.9606323242188, :y2 375.0375003814697, :width 841, :height 1050.0968921389397} {:x1 109.0374984741211, :y1 378.4125003814697, :x2 372.4310836791992, :y2 396.8124942779541, :width 841, :height 1050.0968921389397} {:x1 0, :y1 412.800012588501, :x2 0, :y2 435.20000648498535, :width 841, :height 1050.0968921389397}), :page 52}, :content {:text " let 的作用域是块，所以不可能检查前面是否已经使用 let 声明过同名变量，同时也就不可能在没有声明的情况下声明它"}, :properties {:color "yellow"}} {:id #uuid "63b2cc82-b07e-45c4-bddd-e57dc456e8fa", :page 53, :position {:bounding {:x1 136.97940063476562, :y1 661.0500183105469, :x2 718.2348022460938, :y2 679.4500427246094, :width 841, :height 1050.0968921389397}, :rects ({:x1 136.97940063476562, :y1 661.0500183105469, :x2 718.2348022460938, :y2 679.4500427246094, :width 841, :height 1050.0968921389397}), :page 53}, :content {:text "使用 let 声明迭代变量时，JavaScript 引擎在后台会为每个迭代循环声明一个新的迭代变量"}, :properties {:color "yellow"}} {:id #uuid "63b2ce0b-773e-47c9-9a8d-06723ccd57f5", :page 55, :position {:bounding {:x1 129.96250915527344, :y1 178.4875030517578, :x2 216.15188598632812, :y2 200.08750915527344, :width 841, :height 1050.0968921389397}, :rects ({:x1 129.96250915527344, :y1 178.4875030517578, :x2 216.15188598632812, :y2 200.08750915527344, :width 841, :height 1050.0968921389397}), :page 55}, :content {:text "数据类型"}, :properties {:color "yellow"}} {:id #uuid "63b2d02b-ee53-4807-908d-42401e383cc3", :page 56, :position {:bounding {:x1 182.0784149169922, :y1 348.8000183105469, :x2 513.2628784179688, :y2 367.2000198364258, :width 841, :height 1050.0968921389397}, :rects ({:x1 182.0784149169922, :y1 348.8000183105469, :x2 513.2628784179688, :y2 367.2000198364258, :width 841, :height 1050.0968921389397}), :page 56}, :content {:text "包含 undefined 值的变量跟未定义变量是有区别的"}, :properties {:color "yellow"}} {:id #uuid "63b2d116-477f-467a-98c9-73c1f5b063b9", :page 57, :position {:bounding {:x1 106.17500305175781, :y1 567.7375030517578, :x2 644.8668823242188, :y2 586.1375274658203, :width 841, :height 1050.0968921389397}, :rects ({:x1 106.17500305175781, :y1 567.7375030517578, :x2 644.8668823242188, :y2 586.1375274658203, :width 841, :height 1050.0968921389397}), :page 57}, :content {:text "undefined 值是由 null 值派生而来的，因此 ECMA-262 将它们定义为表面上相等"}, :properties {:color "yellow"}} {:id #uuid "63b2d164-21ec-463d-b49b-016d43a404de", :page 58, :position {:bounding {:x1 0, :y1 422.13749980926514, :x2 763.5425415039062, :y2 467.19999980926514, :width 841, :height 1050.0968921389397}, :rects ({:x1 704.9972534179688, :y1 422.13749980926514, :x2 763.5425415039062, :y2 440.5374937057495, :width 841, :height 1050.0968921389397} {:x1 109.05000305175781, :y1 444.000018119812, :x2 523.4163208007812, :y2 462.4000120162964, :width 841, :height 1050.0968921389397} {:x1 0, :y1 444.80000591278076, :x2 0, :y2 467.19999980926514, :width 841, :height 1050.0968921389397}), :page 58}, :content {:text "将一个其他类型的值转换为布尔值，可以调用特定的 Boolean()转型函数"}, :properties {:color "yellow"}} {:id #uuid "63b2d236-e39f-4878-ba54-b165e432fc5d", :page 59, :position {:bounding {:x1 136.989501953125, :y1 622.3125305175781, :x2 444.27960205078125, :y2 640.7125244140625, :width 841, :height 1050.0968921389397}, :rects ({:x1 136.989501953125, :y1 622.3125305175781, :x2 444.27960205078125, :y2 640.7125244140625, :width 841, :height 1050.0968921389397}), :page 59}, :content {:text "存储浮点值使用的内存空间是存储整数值的两倍"}, :properties {:color "yellow"}} {:id #uuid "63b2d240-d46f-4644-9efc-382194f42961", :page 59, :position {:bounding {:x1 122.14666748046875, :y1 644.0875244140625, :x2 456.8791198730469, :y2 662.4875183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 122.14666748046875, :y1 644.0875244140625, :x2 456.8791198730469, :y2 662.4875183105469, :width 841, :height 1050.0968921389397}), :page 59}, :content {:text "在小数点后面没有数字的情况下，数值就会变成整数"}, :properties {:color "yellow"}} {:id #uuid "63b2d2a8-dd78-4795-adef-a467920361f3", :page 59, :position {:bounding {:x1 203.10000610351562, :y1 886.3375244140625, :x2 732.562255859375, :y2 904.7375183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 203.10000610351562, :y1 886.3375244140625, :x2 732.562255859375, :y2 904.7375183105469, :width 841, :height 1050.0968921389397}), :page 59}, :content {:text "默认情况下，ECMAScript 会将小数点后至少包含 6 个零的浮点值转换为科学记数法"}, :properties {:color "yellow"}} {:id #uuid "63b2d380-b580-4176-b70b-81ad8a00b250", :page 60, :position {:bounding {:x1 0, :y1 454.87501525878906, :x2 763.0834350585938, :y2 516.8250274658203, :width 841, :height 1050.0968921389397}, :rects ({:x1 632.1359252929688, :y1 454.87501525878906, :x2 763.0834350585938, :y2 473.27500915527344, :width 841, :height 1050.0968921389397} {:x1 0, :y1 460.8000030517578, :x2 0, :y2 483.2000274658203, :width 841, :height 1050.0968921389397} {:x1 109.0374984741211, :y1 476.65000915527344, :x2 762.7606201171875, :y2 495.0500030517578, :width 841, :height 1050.0968921389397} {:x1 0, :y1 476.8000030517578, :x2 0, :y2 499.2000274658203, :width 841, :height 1050.0968921389397} {:x1 109.0374984741211, :y1 498.4250030517578, :x2 152.77203369140625, :y2 516.8250274658203, :width 841, :height 1050.0968921389397}), :page 60}, :content {:text "如果某个计算得到的数值结果超出了 JavaScript 可以表示的范围，那么这个数值会被自动转换为一个特殊的 Infinity（无穷）值"}, :properties {:color "yellow"}} {:id #uuid "63b2d39a-d584-45bc-bbbb-542e8b30fbea", :page 60, :position {:bounding {:x1 0, :y1 540.8000030517578, :x2 762.808837890625, :y2 604.0000152587891, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 540.8000030517578, :x2 0, :y2 563.2000274658203, :width 841, :height 1050.0968921389397} {:x1 401.173583984375, :y1 563.8250274658203, :x2 762.808837890625, :y2 582.2250213623047, :width 841, :height 1050.0968921389397} {:x1 109.0250015258789, :y1 585.6000213623047, :x2 436.804443359375, :y2 604.0000152587891, :width 841, :height 1050.0968921389397}), :page 60}, :content {:text "要确定一个值是不是有限大（即介于 JavaScript 能表示的最小值和最大值之间），可以使用 isFinite()函数"}, :properties {:color "yellow"}} {:id #uuid "63b2d5a3-1649-4e5b-8bc4-145523e4dc59", :page 61, :position {:bounding {:x1 0, :y1 588.7999877929688, :x2 732.1913452148438, :y2 966.0124816894531, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 588.7999877929688, :x2 0, :y2 611.1999893188477, :width 841, :height 1050.0968921389397} {:x1 121.36250305175781, :y1 924.375, :x2 732.1913452148438, :y2 942.7749938964844, :width 841, :height 1050.0968921389397} {:x1 126.4625015258789, :y1 947.6124877929688, :x2 458.2158203125, :y2 966.0124816894531, :width 841, :height 1050.0968921389397}), :page 61}, :content {:text " 对象，调用 valueOf()方法，并按照上述规则转换返回的值。如果转换结果是 NaN，则调用 toString()方法，再按照转换字符串的规则转换。"}, :properties {:color "yellow"}} {:id #uuid "63b2d5bc-6200-4bab-a417-0f0c59494ebb", :page 62, :position {:bounding {:x1 383.0724792480469, :y1 354.15000915527344, :x2 587.9398803710938, :y2 372.5500030517578, :width 841, :height 1050.0968921389397}, :rects ({:x1 383.0724792480469, :y1 354.15000915527344, :x2 587.9398803710938, :y2 372.5500030517578, :width 841, :height 1050.0968921389397}), :page 62}, :content {:text "专注于字符串是否包含数值模式"}, :properties {:color "yellow"}} {:id #uuid "63b2d6c1-19cc-49fd-bb17-07aca65763c0", :page 62, :position {:bounding {:x1 0, :y1 375.9250030517578, :x2 762.860595703125, :y2 435.1999969482422, :width 841, :height 1050.0968921389397}, :rects ({:x1 358.35382080078125, :y1 375.9250030517578, :x2 762.860595703125, :y2 394.3249969482422, :width 841, :height 1050.0968921389397} {:x1 109.0374984741211, :y1 397.6875, :x2 167.61236572265625, :y2 416.08750915527344, :width 841, :height 1050.0968921389397} {:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.1999969482422, :width 841, :height 1050.0968921389397}), :page 62}, :content {:text "如果第一个字符不是数值字符、加号或减号，parseInt()立即返回 NaN"}, :properties {:color "yellow"}} {:id #uuid "63b2d858-d53a-4a08-a2ca-b840bd80b9c8", :page 65, :position {:bounding {:x1 0, :y1 188.80001831054688, :x2 732.5116577148438, :y2 367.38751220703125, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 188.80001831054688, :x2 0, :y2 211.20001220703125, :width 841, :height 1050.0968921389397} {:x1 107.73750305175781, :y1 327.2124938964844, :x2 732.5116577148438, :y2 345.6125183105469, :width 841, :height 1050.0968921389397} {:x1 78.48750305175781, :y1 348.9875183105469, :x2 224.77952575683594, :y2 367.38751220703125, :width 841, :height 1050.0968921389397}), :page 65}, :content {:text "如果你不确定一个值是不是 null 或 undefined，可以使用 String()转型函数，它始终会返回表示相应类型值的字符串"}, :properties {:color "yellow"}} {:id #uuid "63b2d8f4-e69e-4943-ba74-0f539beb636e", :page 66, :position {:bounding {:x1 167.36717224121094, :y1 291.875, :x2 400.216552734375, :y2 310.2749938964844, :width 841, :height 1050.0968921389397}, :rects ({:x1 167.36717224121094, :y1 291.875, :x2 400.216552734375, :y2 310.2749938964844, :width 841, :height 1050.0968921389397}), :page 66}, :content {:text "模板字面量会保持反引号内部的空格"}, :properties {:color "yellow"}} {:id #uuid "63b2d922-fdd9-46d5-8692-ca070c5df4c5", :page 66, :position {:bounding {:x1 138.29165649414062, :y1 642.7000122070312, :x2 616.8558959960938, :y2 661.1000061035156, :width 841, :height 1050.0968921389397}, :rects ({:x1 138.29165649414062, :y1 642.7000122070312, :x2 616.8558959960938, :y2 661.1000061035156, :width 841, :height 1050.0968921389397}), :page 66}, :content {:text "技术上讲，模板字面量不是字符串，而是一种特殊的 JavaScript 句法表达式"}, :properties {:color "yellow"}} {:id #uuid "63b2dac7-5456-4a3b-a568-4cbe18d9b5d1", :page 68, :position {:bounding {:x1 0, :y1 696.4750137329102, :x2 763.0165405273438, :y2 739.2000122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 284.6075744628906, :y1 696.4750137329102, :x2 763.0165405273438, :y2 714.8750152587891, :width 841, :height 1050.0968921389397} {:x1 0, :y1 716.8000183105469, :x2 0, :y2 739.2000122070312, :width 841, :height 1050.0968921389397} {:x1 109.0374984741211, :y1 718.2500152587891, :x2 211.4450225830078, :y2 736.6500091552734, :width 841, :height 1050.0968921389397}), :page 68}, :content {:text "直接获取原始的模板字面量内容（如换行符或 Unicode 字符），而不是被转换后的字符表示"}, :properties {:color "yellow"}} {:id #uuid "63b2db65-ce96-4e92-a064-93f2a78c0db2", :page 69, :position {:bounding {:x1 382.4934997558594, :y1 243.4499969482422, :x2 725.2457275390625, :y2 261.84999084472656, :width 841, :height 1050.0968921389397}, :rects ({:x1 382.4934997558594, :y1 243.4499969482422, :x2 725.2457275390625, :y2 261.84999084472656, :width 841, :height 1050.0968921389397}), :page 69}, :content {:text "即字符串数组的.raw 属性取得每个字符串的原始内容"}, :properties {:color "yellow"}} {:id #uuid "63b2dba6-e1d5-4e16-b16e-506020667547", :page 69, :position {:bounding {:x1 107.76250457763672, :y1 739.1125183105469, :x2 338.6454772949219, :y2 757.5125122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 107.76250457763672, :y1 739.1125183105469, :x2 338.6454772949219, :y2 757.5125122070312, :width 841, :height 1050.0968921389397}), :page 69}, :content {:text "符号需要使用 Symbol()函数初始化"}, :properties {:color "yellow"}} {:id #uuid "63b2dbc5-4267-4217-9b93-f2286abbf272", :page 69, :position {:bounding {:x1 280.4291687011719, :y1 822.9500122070312, :x2 651.9375, :y2 841.3500213623047, :width 841, :height 1050.0968921389397}, :rects ({:x1 280.4291687011719, :y1 822.9500122070312, :x2 651.9375, :y2 841.3500213623047, :width 841, :height 1050.0968921389397}), :page 69}, :content {:text "可以传入一个字符串参数作为对符号的描述（description）"}, :properties {:color "yellow"}} {:id #uuid "63b2dbfb-4f18-48fe-a535-fdd9adcea9af", :page 70, :position {:bounding {:x1 0, :y1 271.98751068115234, :x2 763.1725463867188, :y2 371.2000045776367, :width 841, :height 1050.0968921389397}, :rects ({:x1 225.72500610351562, :y1 271.98751068115234, :x2 763.1725463867188, :y2 290.3875045776367, :width 841, :height 1050.0968921389397} {:x1 109.0374984741211, :y1 291.7000045776367, :x2 196.41615295410156, :y2 310.0999984741211, :width 841, :height 1050.0968921389397} {:x1 0, :y1 348.80001068115234, :x2 0, :y2 371.2000045776367, :width 841, :height 1050.0968921389397}), :page 70}, :content {:text "Symbol()函数不能与 new 关键字一起作为构造函数使用。这样做是为了避免创建符号包装对象，"}, :properties {:color "yellow"}} {:id #uuid "63b2dc64-6d9d-4cec-997e-26fc9331f535", :page 70, :position {:bounding {:x1 154.5124969482422, :y1 577.375, :x2 274.3716125488281, :y2 592.5750122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 154.5124969482422, :y1 577.375, :x2 274.3716125488281, :y2 592.5750122070312, :width 841, :height 1050.0968921389397}), :page 70}, :content {:text "使用全局符号注册表"}, :properties {:color "yellow"}} {:id #uuid "63b2dc7f-b846-4f2e-9258-701ff3d23e95", :page 70, :position {:bounding {:x1 280.28509521484375, :y1 702.75, :x2 441.4847106933594, :y2 721.1500244140625, :width 841, :height 1050.0968921389397}, :rects ({:x1 280.28509521484375, :y1 702.75, :x2 441.4847106933594, :y2 721.1500244140625, :width 841, :height 1050.0968921389397}), :page 70}, :content {:text "字符串键都执行幂等操作"}, :properties {:color "yellow"}} {:id #uuid "63b2dc92-fba9-44fe-af62-ddfc416dfb87", :page 70, :position {:bounding {:x1 328.51129150390625, :y1 746.3874969482422, :x2 708.9667358398438, :y2 764.7875061035156, :width 841, :height 1050.0968921389397}, :rects ({:x1 328.51129150390625, :y1 746.3874969482422, :x2 708.9667358398438, :y2 764.7875061035156, :width 841, :height 1050.0968921389397}), :page 70}, :content {:text "发现存在与该字符串对应的符号，然后就会返回该符号实例"}, :properties {:color "yellow"}} {:id #uuid "63b2dca3-cc8a-472e-9930-9e815badfcc1", :page 70, :position {:bounding {:x1 138.27500915527344, :y1 838.6374969482422, :x2 763.6712646484375, :y2 857.0375061035156, :width 841, :height 1050.0968921389397}, :rects ({:x1 138.27500915527344, :y1 838.6374969482422, :x2 763.6712646484375, :y2 857.0375061035156, :width 841, :height 1050.0968921389397}), :page 70}, :content {:text "即使采用相同的符号描述，在全局注册表中定义的符号跟使用 Symbol()定义的符号也并不等同："}, :properties {:color "yellow"}} {:id #uuid "63b2dcb5-a383-4d3e-b0b2-c3e4bfc7a0c0", :page 70, :position {:bounding {:x1 469.58251953125, :y1 930.9750289916992, :x2 762.9124145507812, :y2 949.3750228881836, :width 841, :height 1050.0968921389397}, :rects ({:x1 469.58251953125, :y1 930.9750289916992, :x2 762.9124145507812, :y2 949.3750228881836, :width 841, :height 1050.0968921389397}), :page 70}, :content {:text "作为参数传给 Symbol.for()的任何值都会被"}, :properties {:color "yellow"}} {:id #uuid "63b2dcb7-e0ac-49b2-9cf1-f8ce05cbf2f6", :page 71, :position {:bounding {:x1 78.5, :y1 118.53750610351562, :x2 166.28953552246094, :y2 136.9375, :width 841, :height 1050.0968921389397}, :rects ({:x1 78.5, :y1 118.53750610351562, :x2 166.28953552246094, :y2 136.9375, :width 841, :height 1050.0968921389397}), :page 71}, :content {:text "转换为字符串"}, :properties {:color "yellow"}} {:id #uuid "63b2dd0b-e24e-4223-908b-3519659a88f7", :page 71, :position {:bounding {:x1 119.9000015258789, :y1 393.62499618530273, :x2 230.5341796875, :y2 412.02502059936523, :width 841, :height 1050.0968921389397}, :rects ({:x1 119.9000015258789, :y1 393.62499618530273, :x2 230.5341796875, :y2 412.02502059936523, :width 841, :height 1050.0968921389397}), :page 71}, :content {:text " 使用符号作为属性"}, :properties {:color "yellow"}} {:id #uuid "63b2de45-08d5-44cf-961c-8173f779af1d", :page 71, :position {:bounding {:x1 153.77500915527344, :y1 872.25, :x2 551.9188232421875, :y2 890.6500244140625, :width 841, :height 1050.0968921389397}, :rects ({:x1 153.77500915527344, :y1 872.25, :x2 551.9188232421875, :y2 890.6500244140625, :width 841, :height 1050.0968921389397}), :page 71}, :content {:text "Object.getOwnPropertyNames()返回对象实例的常规属性数组"}, :properties {:color "yellow"}} {:id #uuid "63b2de4f-0594-406c-942b-d22c73908ef3", :page 71, :position {:bounding {:x1 0, :y1 604.8000183105469, :x2 738.4708251953125, :y2 912.5125122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 604.8000183105469, :x2 0, :y2 627.2000122070312, :width 841, :height 1050.0968921389397} {:x1 563.0750122070312, :y1 872.25, :x2 738.4708251953125, :y2 890.6500244140625, :width 841, :height 1050.0968921389397} {:x1 78.5, :y1 894.1124877929688, :x2 343.40692138671875, :y2 912.5125122070312, :width 841, :height 1050.0968921389397}), :page 71}, :content {:text "Object.getOwnPropertySymbols()返回对象实例的符号属性数组"}, :properties {:color "yellow"}} {:id #uuid "63b2df37-528a-41e6-b5d4-81bb8c11c412", :page 71, :position {:bounding {:x1 0, :y1 636.8000335693359, :x2 732.46240234375, :y2 953.9875411987305, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 636.8000335693359, :x2 0, :y2 659.2000274658203, :width 841, :height 1050.0968921389397} {:x1 488.82501220703125, :y1 915.8875389099121, :x2 732.46240234375, :y2 934.287540435791, :width 841, :height 1050.0968921389397} {:x1 78.5, :y1 935.5875396728516, :x2 107.71060943603516, :y2 953.9875411987305, :width 841, :height 1050.0968921389397}), :page 71}, :content {:text "Reflect.ownKeys()会返回两种类型的键"}, :properties {:color "yellow"}} {:id #uuid "63b2df6e-5853-49cf-849b-42994aa2362d", :page 72, :position {:bounding {:x1 154.5124969482422, :y1 685.1124877929688, :x2 234.47178649902344, :y2 700.3125, :width 841, :height 1050.0968921389397}, :rects ({:x1 154.5124969482422, :y1 685.1124877929688, :x2 234.47178649902344, :y2 700.3125, :width 841, :height 1050.0968921389397}), :page 72}, :content {:text "常用内置符号"}, :properties {:color "yellow"}} {:id #uuid "63b2dfcc-3e24-4925-a808-24830df6ae31", :page 72, :position {:bounding {:x1 167.54246520996094, :y1 834.6750335693359, :x2 518.7349090576172, :y2 853.0750427246094, :width 841, :height 1050.0968921389397}, :rects ({:x1 167.54246520996094, :y1 834.6750335693359, :x2 518.7349090576172, :y2 853.0750427246094, :width 841, :height 1050.0968921389397}), :page 72}, :content {:text "所有内置符号属性都是不可写、不可枚举、不可配置的"}, :properties {:color "yellow"}} {:id #uuid "63b2dfd3-9011-4aaa-b512-0c5373d2068d", :page 73, :position {:bounding {:x1 123.9749984741211, :y1 120.79998779296875, :x2 295.53768157958984, :y2 134.39999389648438, :width 841, :height 1050.0968921389397}, :rects ({:x1 123.9749984741211, :y1 120.79998779296875, :x2 295.53768157958984, :y2 134.39999389648438, :width 841, :height 1050.0968921389397}), :page 73}, :content {:text "Symbol.asyncIterator"}, :properties {:color "yellow"}} {:id #uuid "63b2e04a-bfc5-4d89-ab2b-906c6875b418", :page 73, :position {:bounding {:x1 0, :y1 204.80001068115234, :x2 732.4568481445312, :y2 417.37500762939453, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 204.80001068115234, :x2 0, :y2 227.20000457763672, :width 841, :height 1050.0968921389397} {:x1 199.63763427734375, :y1 379.7000198364258, :x2 732.4568481445312, :y2 398.10001373291016, :width 841, :height 1050.0968921389397} {:x1 78.5, :y1 403.53751373291016, :x2 170.0169219970703, :y2 417.37500762939453, :width 841, :height 1050.0968921389397}), :page 73}, :content {:text "由 Symbol.asyncIterator 函数生成的对象应该通过其 next()方法陆续返回 Promise 实例"}, :properties {:color "yellow"}} {:id #uuid "63b2e052-4203-493b-918d-78d0aca430dc", :page 73, :position {:bounding {:x1 184.63160705566406, :y1 401.4625015258789, :x2 691.4408569335938, :y2 419.8624954223633, :width 841, :height 1050.0968921389397}, :rects ({:x1 184.63160705566406, :y1 401.4625015258789, :x2 691.4408569335938, :y2 419.8624954223633, :width 841, :height 1050.0968921389397}), :page 73}, :content {:text "可以通过显式地调用 next()方法返回，也可以隐式地通过异步生成器函数返回"}, :properties {:color "yellow"}} {:id #uuid "63b2e05d-97d4-46a9-92bd-3da8a822843f", :page 73, :position {:bounding {:x1 123.9749984741211, :y1 919.1125335693359, :x2 278.38436126708984, :y2 932.7125396728516, :width 841, :height 1050.0968921389397}, :rects ({:x1 123.9749984741211, :y1 919.1125335693359, :x2 278.38436126708984, :y2 932.7125396728516, :width 841, :height 1050.0968921389397}), :page 73}, :content {:text "Symbol.hasInstance"}, :properties {:color "yellow"}} {:id #uuid "63b2e0f1-04d4-4070-a5f9-4a497a591d66", :page 74, :position {:bounding {:x1 0, :y1 276.37500762939453, :x2 764.7315673828125, :y2 387.2000045776367, :width 841, :height 1050.0968921389397}, :rects ({:x1 682.720703125, :y1 276.37500762939453, :x2 764.7315673828125, :y2 294.7750015258789, :width 841, :height 1050.0968921389397} {:x1 109.0374984741211, :y1 300.31250762939453, :x2 555.7127532958984, :y2 314.1500015258789, :width 841, :height 1050.0968921389397} {:x1 0, :y1 364.80001068115234, :x2 0, :y2 387.2000045776367, :width 841, :height 1050.0968921389397}), :page 74}, :content {:text "以 Symbol. hasInstance 为键的函数会执行同样的操作，只是操作数对调了一下"}, :properties {:color "yellow"}} {:id #uuid "63b2e132-c0f1-4bad-b02e-d740bf26ead5", :page 74, :position {:bounding {:x1 154.5124969482422, :y1 693.7500152587891, :x2 368.9510192871094, :y2 707.3500061035156, :width 841, :height 1050.0968921389397}, :rects ({:x1 154.5124969482422, :y1 693.7500152587891, :x2 368.9510192871094, :y2 707.3500061035156, :width 841, :height 1050.0968921389397}), :page 74}, :content {:text "Symbol.isConcatSpreadable"}, :properties {:color "yellow"}} {:id #uuid "63b2e1b2-385e-4d8c-aaa0-1a9cd9997fec", :page 74, :position {:bounding {:x1 138.27500915527344, :y1 801.1000061035156, :x2 734.3670654296875, :y2 819.5, :width 841, :height 1050.0968921389397}, :rects ({:x1 138.27500915527344, :y1 801.1000061035156, :x2 734.3670654296875, :y2 819.5, :width 841, :height 1050.0968921389397}), :page 74}, :content {:text "数组对象默认情况下会被打平到已有的数组，false 或假值会导致整个对象被追加到数组末尾"}, :properties {:color "yellow"}} {:id #uuid "63b2e1be-0837-46ba-831b-64e18ae16a90", :page 74, :position {:bounding {:x1 0, :y1 796.8000030517578, :x2 763.3717041015625, :y2 841.2624969482422, :width 841, :height 1050.0968921389397}, :rects ({:x1 0, :y1 796.8000030517578, :x2 0, :y2 819.1999969482422, :width 841, :height 1050.0968921389397} {:x1 748.85693359375, :y1 801.0875091552734, :x2 763.3717041015625, :y2 819.4875030517578, :width 841, :height 1050.0968921389397} {:x1 109.0250015258789, :y1 822.8625030517578, :x2 734.096435546875, :y2 841.2624969482422, :width 841, :height 1050.0968921389397}), :page 74}, :content {:text "类数组对象默认情况下会被追加到数组末尾，true 或真值会导致这个类数组对象被打平到数组实例"}, :properties {:color "yellow"}} {:id #uuid "63b2e1d8-dabf-4cee-9f24-52cb3c085e07", :page 75, :position {:bounding {:x1 123.9749984741211, :y1 306.3000030517578, :x2 252.64702606201172, :y2 319.90000915527344, :width 841, :height 1050.0968921389397}, :rects ({:x1 123.9749984741211, :y1 306.3000030517578, :x2 252.64702606201172, :y2 319.90000915527344, :width 841, :height 1050.0968921389397}), :page 75}, :content {:text "Symbol.iterator"}, :properties {:color "yellow"}} {:id #uuid "63b2e278-90d0-43f2-8af2-38243a38b3e6", :page 76, :position {:bounding {:x1 154.5124969482422, :y1 255.01250457763672, :x2 257.4471435546875, :y2 268.61251068115234, :width 841, :height 1050.0968921389397}, :rects ({:x1 154.5124969482422, :y1 255.01250457763672, :x2 257.4471435546875, :y2 268.61251068115234, :width 841, :height 1050.0968921389397}), :page 76}, :content {:text "Symbol.match"}, :properties {:color "yellow"}} {:id #uuid "63b2e291-390a-4201-a6ea-5349d3244fd8", :page 76, :position {:bounding {:x1 209.63931274414062, :y1 297.05001068115234, :x2 485.22882080078125, :y2 315.4500045776367, :width 841, :height 1050.0968921389397}, :rects ({:x1 209.63931274414062, :y1 297.05001068115234, :x2 485.22882080078125, :y2 315.4500045776367, :width 841, :height 1050.0968921389397}), :page 76}, :content {:text "由 String.prototype.match()方法使用"}, :properties {:color "yellow"}} {:id #uuid "63b2e2c1-29f4-4c9a-abb8-02ca7b6f8d33", :page 76, :position {:bounding {:x1 138.27500915527344, :y1 447.5000228881836, :x2 560.7200927734375, :y2 465.89998626708984, :width 841, :height 1050.0968921389397}, :rects ({:x1 138.27500915527344, :y1 447.5000228881836, :x2 560.7200927734375, :y2 465.89998626708984, :width 841, :height 1050.0968921389397}), :page 76}, :content {:text "给这个方法传入非正则表达式值会导致该值被转换为 RegExp 对象"}, :properties {:color "yellow"}} {:id #uuid "63b2e303-fad1-4d25-ba7f-5591e4ab3acf", :page 76, :position {:bounding {:x1 162.625, :y1 860.1625061035156, :x2 282.71295166015625, :y2 873.7625122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 162.625, :y1 860.1625061035156, :x2 282.71295166015625, :y2 873.7625122070312, :width 841, :height 1050.0968921389397}), :page 76}, :content {:text "Symbol.replace"}, :properties {:color "yellow"}} {:id #uuid "63b2e30c-64e2-4791-a75b-eb1c92f14700", :page 77, :position {:bounding {:x1 132.10000610351562, :y1 612.3000030517578, :x2 243.6186981201172, :y2 625.9000091552734, :width 841, :height 1050.0968921389397}, :rects ({:x1 132.10000610351562, :y1 612.3000030517578, :x2 243.6186981201172, :y2 625.9000091552734, :width 841, :height 1050.0968921389397}), :page 77}, :content {:text "Symbol.search"}, :properties {:color "yellow"}} {:id #uuid "63b2e314-c257-462f-86e2-fd3c1ff6ecc9", :page 78, :position {:bounding {:x1 162.625, :y1 387.84999084472656, :x2 282.71295166015625, :y2 401.4500274658203, :width 841, :height 1050.0968921389397}, :rects ({:x1 162.625, :y1 387.84999084472656, :x2 282.71295166015625, :y2 401.4500274658203, :width 841, :height 1050.0968921389397}), :page 78}, :content {:text "Symbol.species"}, :properties {:color "yellow"}} {:id #uuid "63b2e31c-33fe-4383-9c9c-0e563fed4fd0", :page 78, :position {:bounding {:x1 162.625, :y1 778.1625061035156, :x2 265.5596618652344, :y2 791.7625122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 162.625, :y1 778.1625061035156, :x2 265.5596618652344, :y2 791.7625122070312, :width 841, :height 1050.0968921389397}), :page 78}, :content {:text "Symbol.split"}, :properties {:color "yellow"}} {:id #uuid "63b2e326-b3f0-4788-8188-c76e467f7669", :page 79, :position {:bounding {:x1 132.10000610351562, :y1 521.5250129699707, :x2 286.5093688964844, :y2 535.1250190734863, :width 841, :height 1050.0968921389397}, :rects ({:x1 132.10000610351562, :y1 521.5250129699707, :x2 286.5093688964844, :y2 535.1250190734863, :width 841, :height 1050.0968921389397}), :page 79}, :content {:text "Symbol.toPrimitive"}, :properties {:color "yellow"}} {:id #uuid "63b2e32d-f7b0-40dd-9feb-656a62b5627e", :page 80, :position {:bounding {:x1 162.625, :y1 204.7375030517578, :x2 317.0343933105469, :y2 218.33750915527344, :width 841.133760511883, :height 1050.3275137111518}, :rects ({:x1 162.625, :y1 204.7375030517578, :x2 317.0343933105469, :y2 218.33750915527344, :width 841.133760511883, :height 1050.3275137111518}), :page 80}, :content {:text "Symbol.toStringTag"}, :properties {:color "yellow"}} {:id #uuid "63b2e33a-5c01-49ca-943d-28de5327e640", :page 80, :position {:bounding {:x1 162.625, :y1 649.1000061035156, :x2 317.0343933105469, :y2 662.7000122070312, :width 841.133760511883, :height 1050.3275137111518}, :rects ({:x1 162.625, :y1 649.1000061035156, :x2 317.0343933105469, :y2 662.7000122070312, :width 841.133760511883, :height 1050.3275137111518}), :page 80}, :content {:text "Symbol.unscopables"}, :properties {:color "yellow"}} {:id #uuid "63b2e41a-3d2c-4482-9200-950b5f94ac6b", :page 81, :position {:bounding {:x1 129.96250915527344, :y1 775.7000122070312, :x2 194.62294006347656, :y2 797.3000183105469, :width 841, :height 1050.0968921389397}, :rects ({:x1 129.96250915527344, :y1 775.7000122070312, :x2 194.62294006347656, :y2 797.3000183105469, :width 841, :height 1050.0968921389397}), :page 81}, :content {:text "操作符"}, :properties {:color "yellow"}} {:id #uuid "63b2e434-f487-4760-9c5e-4ecaff09863a", :page 98, :position {:bounding {:x1 160.5, :y1 543.6000061035156, :x2 203.5579071044922, :y2 565.2000122070312, :width 841, :height 1050.0968921389397}, :rects ({:x1 160.5, :y1 543.6000061035156, :x2 203.5579071044922, :y2 565.2000122070312, :width 841, :height 1050.0968921389397}), :page 98}, :content {:text "语句"}, :properties {:color "yellow"}} {:id #uuid "63b2e447-e5b9-444f-8f5c-d921d3e0620f", :page 105, :position {:bounding {:x1 129.96250915527344, :y1 824.0375061035156, :x2 173.02040100097656, :y2 845.6374969482422, :width 841, :height 1050.0968921389397}, :rects ({:x1 129.96250915527344, :y1 824.0375061035156, :x2 173.02040100097656, :y2 845.6374969482422, :width 841, :height 1050.0968921389397}), :page 105}, :content {:text "函数"}, :properties {:color "yellow"}} {:id #uuid "63b56867-a1cd-41c8-a2a4-ba4bd7a63c5e", :page 81, :position {:bounding {:x1 0, :y1 476.8000030517578, :x2 702.811547845602, :y2 863.5875091552734, :width 806, :height 1006.3948811700183}, :rects ({:x1 0, :y1 476.8000030517578, :x2 0, :y2 499.20001220703125, :width 806, :height 1006.3948811700183} {:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.2000122070312, :width 806, :height 1006.3948811700183} {:x1 243.57500609755516, :y1 804.9250106811523, :x2 702.811547845602, :y2 823.3250198364258, :width 806, :height 1006.3948811700183} {:x1 75.23750457167625, :y1 824.3250122070312, :x2 499.22499999403954, :y2 842.7250213623047, :width 806, :height 1006.3948811700183} {:x1 571.562524408102, :y1 824.3250122070312, :x2 603.897241204977, :y2 842.7250213623047, :width 806, :height 1006.3948811700183} {:x1 687.7375122010708, :y1 824.3250122070312, :x2 701.7375122010708, :y2 842.7250213623047, :width 806, :height 1006.3948811700183} {:x1 499.95000609755516, :y1 826.4000091552734, :x2 573.9488159120083, :y2 839.6625213623047, :width 806, :height 1006.3948811700183} {:x1 608.1624999940395, :y1 826.4000091552734, :x2 690.3738647401333, :y2 839.6625213623047, :width 806, :height 1006.3948811700183} {:x1 75.23750457167625, :y1 845.1875152587891, :x2 229.58574065566063, :y2 863.5875091552734, :width 806, :height 1006.3948811700183}), :page 81}, :content {:text "ECMAScript 中的操作符是独特的，因为它们可用于各种值，包括字符串、数值、布尔值，甚至还有对象。在应用给对象时，操作符通常会调用 valueOf()和/或 toString()方法来取得可以计算的值。"}, :properties {:color "yellow"}} {:id #uuid "63b56880-ea21-4536-81d1-64b24c3bd484", :page 81, :position {:bounding {:x1 116.068254083395, :y1 876.1624984741211, :x2 219.24741515517235, :y2 898.5625, :width 806, :height 1006.3948811700183}, :rects ({:x1 116.068254083395, :y1 876.1624984741211, :x2 116.07176360487938, :y2 898.5625, :width 806, :height 1006.3948811700183} {:x1 132.25000914931297, :y1 877.3875045776367, :x2 219.24741515517235, :y2 894.9875030517578, :width 806, :height 1006.3948811700183}), :page 81}, :content {:text "一元操作符"}, :properties {:color "yellow"}} {:id #uuid "63b5688f-eb0a-402b-8d6c-d2c8489c0952", :page 82, :position {:bounding {:x1 148.08750304579735, :y1 114.53750610351562, :x2 252.09125670790672, :y2 132.9375, :width 806, :height 1006.3948811700183}, :rects ({:x1 148.08750304579735, :y1 114.53750610351562, :x2 252.09125670790672, :y2 132.9375, :width 806, :height 1006.3948811700183}), :page 82}, :content {:text "递增/递减操作符"}, :properties {:color "yellow"}} {:id #uuid "63b5695c-1e36-4518-b9bb-5d43cedd7bee", :page 83, :position {:bounding {:x1 115.32735595107079, :y1 689.4124984741211, :x2 190.90007933974266, :y2 707.8125228881836, :width 806, :height 1006.3948811700183}, :rects ({:x1 115.32735595107079, :y1 689.4124984741211, :x2 190.90007933974266, :y2 707.8125228881836, :width 806, :height 1006.3948811700183}), :page 83}, :content {:text "一元加和减"}, :properties {:color "yellow"}} {:id #uuid "63b56a1d-2843-482b-bd41-8bdca0730fb2", :page 84, :position {:bounding {:x1 161.51250609755516, :y1 751.9375, :x2 231.11042174696922, :y2 769.5375061035156, :width 806, :height 1006.3948811700183}, :rects ({:x1 161.51250609755516, :y1 751.9375, :x2 231.11042174696922, :y2 769.5375061035156, :width 806, :height 1006.3948811700183}), :page 84}, :content {:text "位操作符"}, :properties {:color "yellow"}} {:id #uuid "63b56a37-f75d-4ff2-a0ab-1b4cbf926723", :page 84, :position {:bounding {:x1 0, :y1 784.5875091552734, :x2 733.3699584901333, :y2 899.2000122070312, :width 806, :height 1006.3948811700183}, :rects ({:x1 657.0500122010708, :y1 784.5875091552734, :x2 733.3699584901333, :y2 798.1875, :width 806, :height 1006.3948811700183} {:x1 104.48750457167625, :y1 803.9875030517578, :x2 731.3285156190395, :y2 822.3875122070312, :width 806, :height 1006.3948811700183} {:x1 104.47499999403954, :y1 826.3250122070312, :x2 433.44365844130516, :y2 840.2875061035156, :width 806, :height 1006.3948811700183} {:x1 0, :y1 860.8000183105469, :x2 0, :y2 883.2000122070312, :width 806, :height 1006.3948811700183} {:x1 0, :y1 876.8000183105469, :x2 0, :y2 899.2000122070312, :width 806, :height 1006.3948811700183}), :page 84}, :content {:text "ECMAScript中的所有数值都以 IEEE 754 64 位格式存储，但位操作并不直接应用到 64 位表示，而是先把值转换为32 位整数，再进行位操作，之后再把结果转换为 64 位"}, :properties {:color "yellow"}} {:id #uuid "63b56a43-8c13-41ac-be50-ecc34c72141d", :page 84, :position {:bounding {:x1 132.47499999403954, :y1 866.6000366210938, :x2 396.6040893495083, :y2 885.0000457763672, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.47499999403954, :y1 866.6000366210938, :x2 396.6040893495083, :y2 885.0000457763672, :width 806, :height 1006.3948811700183}), :page 84}, :content {:text "有符号整数使用 32 位的前 31 位表示整数值"}, :properties {:color "yellow"}} {:id #uuid "63b56ada-2d40-4978-ac32-6d46adcd9aed", :page 85, :position {:bounding {:x1 103.52500304579735, :y1 339.48753356933594, :x2 443.5047546327114, :y2 357.8874969482422, :width 806, :height 1006.3948811700183}, :rects ({:x1 103.52500304579735, :y1 339.48753356933594, :x2 443.5047546327114, :y2 357.8874969482422, :width 806, :height 1006.3948811700183}), :page 85}, :content {:text "负值以一种称为二补数（或补码）的二进制编码存储。"}, :properties {:color "yellow"}} {:id #uuid "63b56b2f-fb7e-4790-8596-5730cd210065", :page 85, :position {:bounding {:x1 0, :y1 428.8000030517578, :x2 660.5983520448208, :y2 867.3875122070312, :width 806, :height 1006.3948811700183}, :rects ({:x1 0, :y1 428.8000030517578, :x2 0, :y2 451.2000045776367, :width 806, :height 1006.3948811700183} {:x1 187.37622985243797, :y1 828.8250122070312, :x2 660.5983520448208, :y2 847.2250061035156, :width 806, :height 1006.3948811700183} {:x1 117.22499999403954, :y1 848.9875183105469, :x2 411.8898559510708, :y2 867.3875122070312, :width 806, :height 1006.3948811700183}), :page 85}, :content {:text "无符号整数来说，第 32 位不表示符号，因为只有正值。无符号整数比有符号整数的范围更大，因为符号位被用来表示数值了"}, :properties {:color "yellow"}} {:id #uuid "63b56b7e-3f77-4ca4-a68d-5cc958be6033", :page 86, :position {:bounding {:x1 0, :y1 113.51251220703125, :x2 733.1803832948208, :y2 259.20001220703125, :width 806, :height 1006.3948811700183}, :rects ({:x1 580.3788696229458, :y1 113.51251220703125, :x2 622.6451660096645, :y2 131.91250610351562, :width 806, :height 1006.3948811700183} {:x1 651.0374999940395, :y1 113.51251220703125, :x2 665.257592767477, :y2 131.91250610351562, :width 806, :height 1006.3948811700183} {:x1 624.7000366151333, :y1 115.58749389648438, :x2 655.8000122010708, :y2 128.85000610351562, :width 806, :height 1006.3948811700183} {:x1 667.312524408102, :y1 115.58749389648438, :x2 733.1803832948208, :y2 128.85000610351562, :width 806, :height 1006.3948811700183} {:x1 104.50000151991844, :y1 134.375, :x2 285.77910766005516, :y2 152.77499389648438, :width 806, :height 1006.3948811700183} {:x1 0, :y1 236.80001831054688, :x2 0, :y2 259.20001220703125, :width 806, :height 1006.3948811700183}), :page 86}, :content {:text "特殊值 NaN 和 Infinity在位操作中都会被当成 0 处理"}, :properties {:color "yellow"}} {:id #uuid "63b56c2a-55d6-4c24-9c5f-9e5bd784fb5d", :page 86, :position {:bounding {:x1 216.68992003798485, :y1 221.01249998807907, :x2 336.5939575135708, :y2 239.4125091433525, :width 806, :height 1006.3948811700183}, :rects ({:x1 216.68992003798485, :y1 221.01249998807907, :x2 336.5939575135708, :y2 239.4125091433525, :width 806, :height 1006.3948811700183} {:x1 286.4374938905239, :y1 223.1000091433525, :x2 293.6750122010708, :y2 236.3625060915947, :width 806, :height 1006.3948811700183}), :page 86}, :content {:text "用波浪符（~）表示"}, :properties {:color "yellow"}} {:id #uuid "63b56c36-f313-4f94-809b-b58a60e7207f", :page 86, :position {:bounding {:x1 0, :y1 316.41249388456345, :x2 731.6613403260708, :y2 419.19999998807907, :width 806, :height 1006.3948811700183}, :rects ({:x1 717.6315551698208, :y1 316.41249388456345, :x2 731.6613403260708, :y2 334.81251829862595, :width 806, :height 1006.3948811700183} {:x1 104.50000151991844, :y1 337.2750121951103, :x2 199.26250609755516, :y2 355.6750060915947, :width 806, :height 1006.3948811700183} {:x1 0, :y1 396.8000060915947, :x2 0, :y2 419.19999998807907, :width 806, :height 1006.3948811700183}), :page 86}, :content {:text "对数值取反并减 1"}, :properties {:color "yellow"}} {:id #uuid "63b56d01-cff7-4faf-8f55-8953bcf4647f", :page 86, :position {:bounding {:x1 217.05390319228172, :y1 477.4875030517578, :x2 323.4280944764614, :y2 495.88751220703125, :width 806, :height 1006.3948811700183}, :rects ({:x1 217.05390319228172, :y1 477.4875030517578, :x2 323.4280944764614, :y2 495.88751220703125, :width 806, :height 1006.3948811700183} {:x1 273.0875183045864, :y1 479.57501220703125, :x2 280.32500609755516, :y2 492.83750915527344, :width 806, :height 1006.3948811700183}), :page 86}, :content {:text "用和号（&）表示"}, :properties {:color "yellow"}} {:id #uuid "63b56db9-61e2-45cb-9890-80a782a1f261", :page 86, :position {:bounding {:x1 216.66492614150047, :y1 883.2000122070312, :x2 336.5872741639614, :y2 901.6000061035156, :width 806, :height 1006.3948811700183}, :rects ({:x1 216.66492614150047, :y1 883.2000122070312, :x2 336.5872741639614, :y2 901.6000061035156, :width 806, :height 1006.3948811700183} {:x1 286.4374938905239, :y1 885.2875061035156, :x2 293.6750122010708, :y2 898.5500183105469, :width 806, :height 1006.3948811700183}), :page 86}, :content {:text "用管道符（|）表示"}, :properties {:color "yellow"}} {:id #uuid "63b56ed8-794d-422c-94e9-52f44a343250", :page 87, :position {:bounding {:x1 159.3221374452114, :y1 446.8125, :x2 279.2294860780239, :y2 465.2125244140625, :width 806, :height 1006.3948811700183}, :rects ({:x1 159.3221374452114, :y1 446.8125, :x2 279.2294860780239, :y2 465.2125244140625, :width 806, :height 1006.3948811700183} {:x1 229.15000304579735, :y1 448.88751220703125, :x2 236.38750609755516, :y2 462.1500244140625, :width 806, :height 1006.3948811700183}), :page 87}, :content {:text "用脱字符（^）表示"}, :properties {:color "yellow"}} {:id #uuid "63b56ee6-e3ba-49aa-9c3b-55d67a54e72d", :page 87, :position {:bounding {:x1 172.9051910340786, :y1 852.4375, :x2 327.77190551161766, :y2 870.8375244140625, :width 806, :height 1006.3948811700183}, :rects ({:x1 172.9051910340786, :y1 852.4375, :x2 270.50481566786766, :y2 870.8375244140625, :width 806, :height 1006.3948811700183} {:x1 286.0875183045864, :y1 852.4375, :x2 327.77190551161766, :y2 870.8375244140625, :width 806, :height 1006.3948811700183} {:x1 270.1750122010708, :y1 854.5125122070312, :x2 286.6286559998989, :y2 867.7750244140625, :width 806, :height 1006.3948811700183}), :page 87}, :content {:text "用两个小于号（<<）表示"}, :properties {:color "yellow"}} {:id #uuid "63b56f28-3254-402d-b871-c687c177f12d", :page 88, :position {:bounding {:x1 174.61542662978172, :y1 386.68751525878906, :x2 371.1083923280239, :y2 405.0874786376953, :width 806, :height 1006.3948811700183}, :rects ({:x1 174.61542662978172, :y1 386.68751525878906, :x2 371.1083923280239, :y2 405.0874786376953, :width 806, :height 1006.3948811700183}), :page 88}, :content {:text "左移会保留它所操作数值的符号"}, :properties {:color "yellow"}} {:id #uuid "63b56f44-9259-4950-a317-2c739e2227f8", :page 88, :position {:bounding {:x1 148.06250914931297, :y1 414.5125160217285, :x2 220.15007933974266, :y2 428.112491607666, :width 806, :height 1006.3948811700183}, :rects ({:x1 148.06250914931297, :y1 414.5125160217285, :x2 220.15007933974266, :y2 428.112491607666, :width 806, :height 1006.3948811700183}), :page 88}, :content {:text "有符号右移"}, :properties {:color "yellow"}} {:id #uuid "63b56f50-fe08-4cda-ac42-c64dc84126af", :page 88, :position {:bounding {:x1 202.6362243592739, :y1 431.6000061035156, :x2 735.6375366151333, :y2 450.00001525878906, :width 806, :height 1006.3948811700183}, :rects ({:x1 202.6362243592739, :y1 431.6000061035156, :x2 300.85698851943016, :y2 450.00001525878906, :width 806, :height 1006.3948811700183} {:x1 316.41249999403954, :y1 431.6000061035156, :x2 735.6375366151333, :y2 450.00001525878906, :width 806, :height 1006.3948811700183} {:x1 300.4999938905239, :y1 433.68751525878906, :x2 316.95363768935204, :y2 446.95001220703125, :width 806, :height 1006.3948811700183}), :page 88}, :content {:text "由两个大于号（>>）表示，会将数值的所有 32 位都向右移，同时保留符号（正或负）。"}, :properties {:color "yellow"}} {:id #uuid "63b56fae-3f05-4672-abf9-4cd9f33effba", :page 88, :position {:bounding {:x1 148.08750304579735, :y1 789.1000061035156, :x2 220.17507323622704, :y2 802.7000122070312, :width 806, :height 1006.3948811700183}, :rects ({:x1 148.08750304579735, :y1 789.1000061035156, :x2 220.17507323622704, :y2 802.7000122070312, :width 806, :height 1006.3948811700183}), :page 88}, :content {:text "无符号右移"}, :properties {:color "yellow"}} {:id #uuid "63b56fca-0bcc-4e34-acdc-9397c6764441", :page 88, :position {:bounding {:x1 104.48750457167625, :y1 535.2750244140625, :x2 503.8897796571255, :y2 549.2375183105469, :width 806, :height 1006.3948811700183}, :rects ({:x1 104.48750457167625, :y1 535.2750244140625, :x2 503.8897796571255, :y2 549.2375183105469, :width 806, :height 1006.3948811700183}), :page 88}, :content {:text "ECMAScript 会用符号位的值来填充这些空位，以得到完整的数值"}, :properties {:color "yellow"}} {:id #uuid "63b5700a-7f95-4ede-a927-1fe327cca27f", :page 88, :position {:bounding {:x1 202.62619933485985, :y1 806.2000122070312, :x2 366.66249999403954, :y2 824.6000061035156, :width 806, :height 1006.3948811700183}, :rects ({:x1 202.62619933485985, :y1 806.2000122070312, :x2 329.0667663514614, :y2 824.6000061035156, :width 806, :height 1006.3948811700183} {:x1 352.66249999403954, :y1 806.2000122070312, :x2 366.66249999403954, :y2 824.6000061035156, :width 806, :height 1006.3948811700183} {:x1 328.78749999403954, :y1 808.2749938964844, :x2 353.45375975966454, :y2 821.5375061035156, :width 806, :height 1006.3948811700183}), :page 88}, :content {:text "用 3 个大于号表示（>>>）"}, :properties {:color "yellow"}} {:id #uuid "63b571ab-1933-4e99-bc18-af510e70b1db", :page 89, :position {:bounding {:x1 132.25000914931297, :y1 272.57501220703125, :x2 219.24741515517235, :y2 290.1750183105469, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 272.57501220703125, :x2 219.24741515517235, :y2 290.1750183105469, :width 806, :height 1006.3948811700183}), :page 89}, :content {:text "布尔操作符"}, :properties {:color "yellow"}} {:id #uuid "63b571c0-0583-4399-939b-23011d3c0b09", :page 89, :position {:bounding {:x1 118.81250151991844, :y1 354.3000183105469, :x2 162.01569518446922, :y2 367.90000915527344, :width 806, :height 1006.3948811700183}, :rects ({:x1 118.81250151991844, :y1 354.3000183105469, :x2 162.01569518446922, :y2 367.90000915527344, :width 806, :height 1006.3948811700183}), :page 89}, :content {:text "逻辑非"}, :properties {:color "yellow"}} {:id #uuid "63b573cd-6484-4c8f-80b5-9a3e911dff55", :page 89, :position {:bounding {:x1 118.81250151991844, :y1 868.6625061035156, :x2 162.01569518446922, :y2 882.2625122070312, :width 806, :height 1006.3948811700183}, :rects ({:x1 118.81250151991844, :y1 868.6625061035156, :x2 162.01569518446922, :y2 882.2625122070312, :width 806, :height 1006.3948811700183}), :page 89}, :content {:text "逻辑与"}, :properties {:color "yellow"}} {:id #uuid "63b5746e-f392-47f8-99c7-87da08d949b9", :page 89, :position {:bounding {:x1 187.41596373915672, :y1 885.8500061035156, :x2 329.2549987733364, :y2 904.25, :width 806, :height 1006.3948811700183}, :rects ({:x1 187.41596373915672, :y1 885.8500061035156, :x2 271.60698851943016, :y2 904.25, :width 806, :height 1006.3948811700183} {:x1 287.1500183045864, :y1 885.8500061035156, :x2 329.2549987733364, :y2 904.25, :width 806, :height 1006.3948811700183} {:x1 271.2375122010708, :y1 887.9375, :x2 287.6911559998989, :y2 901.1999969482422, :width 806, :height 1006.3948811700183}), :page 89}, :content {:text "由两个和号（&&）表示"}, :properties {:color "yellow"}} {:id #uuid "63b574e0-5cca-49af-85d3-7d5d42270248", :page 90, :position {:bounding {:x1 0, :y1 416.0500183105469, :x2 732.7029357850552, :y2 483.20001220703125, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.51250609755516, :y1 416.0500183105469, :x2 732.7029357850552, :y2 434.45001220703125, :width 806, :height 1006.3948811700183} {:x1 104.48750457167625, :y1 436.9250183105469, :x2 188.14991149306297, :y2 455.32501220703125, :width 806, :height 1006.3948811700183} {:x1 0, :y1 460.8000183105469, :x2 0, :y2 483.20001220703125, :width 806, :height 1006.3948811700183}), :page 90}, :content {:text "逻辑与操作符是一种短路操作符，意思就是如果第一个操作数决定了结果，那么永远不会对第二个操作数求值。"}, :properties {:color "yellow"}} {:id #uuid "63b575ca-9c01-4bac-a479-75d1d22dd7f3", :page 90, :position {:bounding {:x1 144.18750914931297, :y1 737.4125061035156, :x2 191.30320128798485, :y2 755.8125, :width 806, :height 1006.3948811700183}, :rects ({:x1 144.18750914931297, :y1 737.4125061035156, :x2 191.30320128798485, :y2 755.8125, :width 806, :height 1006.3948811700183}), :page 90}, :content {:text " 逻辑或"}, :properties {:color "yellow"}} {:id #uuid "63b575e1-8c58-4769-9372-528e7d96dc84", :page 90, :position {:bounding {:x1 216.73255309462547, :y1 755.9750061035156, :x2 372.4732604920864, :y2 774.3875122070312, :width 806, :height 1006.3948811700183}, :rects ({:x1 330.3749938905239, :y1 755.9750061035156, :x2 372.4732604920864, :y2 774.375, :width 806, :height 1006.3948811700183} {:x1 216.73255309462547, :y1 755.9874877929688, :x2 314.9872985780239, :y2 774.3875122070312, :width 806, :height 1006.3948811700183} {:x1 314.4625183045864, :y1 758.0625, :x2 330.9161315858364, :y2 771.3250122070312, :width 806, :height 1006.3948811700183}), :page 90}, :content {:text "由两个管道符（||）表示"}, :properties {:color "yellow"}} {:id #uuid "63b576d2-48cc-47db-854b-0d1112f997d2", :page 91, :position {:bounding {:x1 104.50000151991844, :y1 516.1499872207642, :x2 445.6165710389614, :y2 528.1499872207642, :width 806, :height 1006.3948811700183}, :rects ({:x1 104.50000151991844, :y1 516.1499872207642, :x2 445.6165710389614, :y2 528.1499872207642, :width 806, :height 1006.3948811700183}), :page 91}, :content {:text "let myObject = preferredObject || backupObject;"}, :properties {:color "yellow"}} {:id #uuid "63b578db-a9c5-4434-9165-464e20ca8815", :page 91, :position {:bounding {:x1 132.25000914931297, :y1 637.1750259399414, :x2 219.24741515517235, :y2 654.7750015258789, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 637.1750259399414, :x2 219.24741515517235, :y2 654.7750015258789, :width 806, :height 1006.3948811700183}), :page 91}, :content {:text "乘性操作符"}, :properties {:color "yellow"}} {:id #uuid "63b579e6-8fe0-4217-9801-72ae12bc4bb6", :page 91, :position {:bounding {:x1 114.91249999403954, :y1 759.25, :x2 190.90007933974266, :y2 777.6500244140625, :width 806, :height 1006.3948811700183}, :rects ({:x1 114.91249999403954, :y1 759.25, :x2 190.90007933974266, :y2 777.6500244140625, :width 806, :height 1006.3948811700183}), :page 91}, :content {:text " 乘法操作符"}, :properties {:color "yellow"}} {:id #uuid "63b579fa-4898-4ccd-a12a-7a71b2b0a432", :page 92, :position {:bounding {:x1 148.07500609755516, :y1 203.92498779296875, :x2 220.16257628798485, :y2 217.5250244140625, :width 806, :height 1006.3948811700183}, :rects ({:x1 148.07500609755516, :y1 203.92498779296875, :x2 220.16257628798485, :y2 217.5250244140625, :width 806, :height 1006.3948811700183}), :page 92}, :content {:text "除法操作符"}, :properties {:color "yellow"}} {:id #uuid "63b57a0f-9f3f-45ad-94e0-5c558632e5c7", :page 92, :position {:bounding {:x1 148.08750304579735, :y1 462.3375015258789, :x2 220.17507323622704, :y2 475.93753814697266, :width 806, :height 1006.3948811700183}, :rects ({:x1 148.08750304579735, :y1 462.3375015258789, :x2 220.17507323622704, :y2 475.93753814697266, :width 806, :height 1006.3948811700183}), :page 92}, :content {:text "取模操作符"}, :properties {:color "yellow"}} {:id #uuid "63b57a1a-5c4f-4511-b005-c8f617d1336c", :page 92, :position {:bounding {:x1 258.8012329041958, :y1 479.5250015258789, :x2 434.5357604920864, :y2 497.9250259399414, :width 806, :height 1006.3948811700183}, :rects ({:x1 258.8012329041958, :y1 479.5250015258789, :x2 434.5357604920864, :y2 497.9250259399414, :width 806, :height 1006.3948811700183} {:x1 384.4875122010708, :y1 481.60001373291016, :x2 391.72499999403954, :y2 494.8625259399414, :width 806, :height 1006.3948811700183}), :page 92}, :content {:text "由一个百分比符号（%）表示"}, :properties {:color "yellow"}} {:id #uuid "63b57adf-beb6-4c01-9746-4320ce30c8bf", :page 92, :position {:bounding {:x1 161.51250609755516, :y1 708.0750122070312, :x2 248.50991210341454, :y2 725.6749877929688, :width 806, :height 1006.3948811700183}, :rects ({:x1 161.51250609755516, :y1 708.0750122070312, :x2 248.50991210341454, :y2 725.6749877929688, :width 806, :height 1006.3948811700183}), :page 92}, :content {:text "指数操作符"}, :properties {:color "yellow"}} {:id #uuid "63b57af8-d0ad-4a66-98f0-086b290dc163", :page 92, :position {:bounding {:x1 523.403833001852, :y1 741.2125396728516, :x2 581.6536498963833, :y2 759.6125335693359, :width 806, :height 1006.3948811700183}, :rects ({:x1 523.403833001852, :y1 741.2125396728516, :x2 565.4930053651333, :y2 759.6125335693359, :width 806, :height 1006.3948811700183} {:x1 565.2000366151333, :y1 743.3000335693359, :x2 581.6536498963833, :y2 756.5625457763672, :width 806, :height 1006.3948811700183}), :page 92}, :content {:text "操作符**"}, :properties {:color "yellow"}} {:id #uuid "63b57aff-38dd-4ce0-8335-f4a0c167564d", :page 92, :position {:bounding {:x1 339.6845642030239, :y1 843.6875305175781, :x2 461.92876586318016, :y2 862.0875549316406, :width 806, :height 1006.3948811700183}, :rects ({:x1 339.6845642030239, :y1 843.6875305175781, :x2 437.9312683045864, :y2 862.0875549316406, :width 806, :height 1006.3948811700183} {:x1 437.26250609755516, :y1 845.7625427246094, :x2 461.92876586318016, :y2 859.0250549316406, :width 806, :height 1006.3948811700183}), :page 92}, :content {:text "指数赋值操作符**="}, :properties {:color "yellow"}} {:id #uuid "63b57b35-eb63-4ec3-843d-1c8a499c46e4", :page 93, :position {:bounding {:x1 132.25000914931297, :y1 174.35000610351562, :x2 219.24741515517235, :y2 191.95001220703125, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 174.35000610351562, :x2 219.24741515517235, :y2 191.95001220703125, :width 806, :height 1006.3948811700183}), :page 93}, :content {:text "加性操作符"}, :properties {:color "yellow"}} {:id #uuid "63b57b48-7df0-4a5f-ab16-b9f63052fef7", :page 93, :position {:bounding {:x1 118.81250151991844, :y1 277.0374984741211, :x2 190.90007933974266, :y2 290.6375045776367, :width 806, :height 1006.3948811700183}, :rects ({:x1 118.81250151991844, :y1 277.0374984741211, :x2 190.90007933974266, :y2 290.6375045776367, :width 806, :height 1006.3948811700183}), :page 93}, :content {:text "加法操作符"}, :properties {:color "yellow"}} {:id #uuid "63b57bc1-d452-4d08-8f27-b5efa71a3a78", :page 93, :position {:bounding {:x1 121.19999846816063, :y1 424.1750030517578, :x2 417.3124938905239, :y2 442.5749969482422, :width 806, :height 1006.3948811700183}, :rects ({:x1 121.19999846816063, :y1 424.1750030517578, :x2 167.28749999403954, :y2 442.5749969482422, :width 806, :height 1006.3948811700183} {:x1 234.36249694228172, :y1 424.1750030517578, :x2 248.36249694228172, :y2 442.5749969482422, :width 806, :height 1006.3948811700183} {:x1 319.95000609755516, :y1 424.1750030517578, :x2 376.21145018935204, :y2 442.5749969482422, :width 806, :height 1006.3948811700183} {:x1 403.3124938905239, :y1 424.1750030517578, :x2 417.3124938905239, :y2 442.5749969482422, :width 806, :height 1006.3948811700183} {:x1 166.65000304579735, :y1 426.2624969482422, :x2 232.51784667372704, :y2 439.52500915527344, :width 806, :height 1006.3948811700183} {:x1 248.33750304579735, :y1 426.2624969482422, :x2 322.3362670838833, :y2 439.52500915527344, :width 806, :height 1006.3948811700183} {:x1 379.45000609755516, :y1 426.2624969482422, :x2 404.11626586318016, :y2 439.52500915527344, :width 806, :height 1006.3948811700183}), :page 93}, :content {:text "如果是 Infinity 加-Infinity，则返回 NaN；"}, :properties {:color "yellow"}} {:id #uuid "63b57c1b-a0a9-4e12-93c5-f80440b5ce97", :page 93, :position {:bounding {:x1 113.08750304579735, :y1 465.9125061035156, :x2 298.84999999403954, :y2 484.875, :width 806, :height 1006.3948811700183}, :rects ({:x1 212.97499999403954, :y1 465.9125061035156, :x2 269.00994262099266, :y2 484.3125, :width 806, :height 1006.3948811700183} {:x1 284.84999999403954, :y1 465.9125061035156, :x2 298.84999999403954, :y2 484.3125, :width 806, :height 1006.3948811700183} {:x1 113.08750304579735, :y1 466.4750061035156, :x2 197.00000914931297, :y2 484.875, :width 806, :height 1006.3948811700183} {:x1 196.97499999403954, :y1 467.9875030517578, :x2 213.52051696181297, :y2 481.25, :width 806, :height 1006.3948811700183} {:x1 268.84999999403954, :y1 467.9875030517578, :x2 285.30364379286766, :y2 481.25, :width 806, :height 1006.3948811700183}), :page 93}, :content {:text " 如果是-0 加+0，则返回+0；"}, :properties {:color "yellow"}} {:id #uuid "63b57c56-f1e8-4a0c-910f-7bb789cf9d34", :page 93, :position {:bounding {:x1 121.19999846816063, :y1 549.4500122070312, :x2 710.2955184876919, :y2 567.8500061035156, :width 806, :height 1006.3948811700183}, :rects ({:x1 121.19999846816063, :y1 549.4500122070312, :x2 710.2955184876919, :y2 567.8500061035156, :width 806, :height 1006.3948811700183}), :page 93}, :content {:text "如果只有一个操作数是字符串，则将另一个操作数转换为字符串，再将两个字符串拼接在一起。"}, :properties {:color "yellow"}} {:id #uuid "63b57ce7-4317-49d8-b6e8-b9570bdd85e2", :page 94, :position {:bounding {:x1 148.07500609755516, :y1 271.4624938964844, :x2 220.16257628798485, :y2 285.0625, :width 806, :height 1006.3948811700183}, :rects ({:x1 148.07500609755516, :y1 271.4624938964844, :x2 220.16257628798485, :y2 285.0625, :width 806, :height 1006.3948811700183}), :page 94}, :content {:text "减法操作符"}, :properties {:color "yellow"}} {:id #uuid "63b57cfa-16d3-4d38-8906-054d36ecc82a", :page 94, :position {:bounding {:x1 150.46250304579735, :y1 502.1625061035156, :x2 314.5661559998989, :y2 520.5625, :width 806, :height 1006.3948811700183}, :rects ({:x1 150.46250304579735, :y1 502.1625061035156, :x2 192.48871764540672, :y2 520.5625, :width 806, :height 1006.3948811700183} {:x1 212.26250609755516, :y1 502.1625061035156, :x2 226.26250609755516, :y2 520.5625, :width 806, :height 1006.3948811700183} {:x1 242.23749694228172, :y1 502.1625061035156, :x2 298.2724548280239, :y2 520.5625, :width 806, :height 1006.3948811700183} {:x1 192.37500914931297, :y1 504.2375183105469, :x2 215.52500304579735, :y2 517.5, :width 806, :height 1006.3948811700183} {:x1 226.23749694228172, :y1 504.2375183105469, :x2 242.78301391005516, :y2 517.5, :width 806, :height 1006.3948811700183} {:x1 298.1125122010708, :y1 504.2375183105469, :x2 314.5661559998989, :y2 517.5, :width 806, :height 1006.3948811700183}), :page 94}, :content {:text "如果是+0 减-0，则返回-0"}, :properties {:color "yellow"}} {:id #uuid "63b57d14-0d4d-4a87-9272-463165868f47", :page 94, :position {:bounding {:x1 150.46250304579735, :y1 523.0250244140625, :x2 314.5661559998989, :y2 541.4249877929688, :width 806, :height 1006.3948811700183}, :rects ({:x1 150.46250304579735, :y1 523.0250244140625, :x2 192.48871764540672, :y2 541.4249877929688, :width 806, :height 1006.3948811700183} {:x1 212.26250609755516, :y1 523.0250244140625, :x2 226.26250609755516, :y2 541.4249877929688, :width 806, :height 1006.3948811700183} {:x1 242.23749694228172, :y1 523.0250244140625, :x2 298.2724548280239, :y2 541.4249877929688, :width 806, :height 1006.3948811700183} {:x1 192.37500914931297, :y1 525.1000366210938, :x2 215.52500304579735, :y2 538.3624877929688, :width 806, :height 1006.3948811700183} {:x1 226.23749694228172, :y1 525.1000366210938, :x2 242.78301391005516, :y2 538.3624877929688, :width 806, :height 1006.3948811700183} {:x1 298.1125122010708, :y1 525.1000366210938, :x2 314.5661559998989, :y2 537.9000244140625, :width 806, :height 1006.3948811700183}), :page 94}, :content {:text "如果是-0 减-0，则返回+0"}, :properties {:color "yellow"}} {:id #uuid "63b57d27-24e1-4cf9-bc3b-347242195e80", :page 94, :position {:bounding {:x1 150.46250304579735, :y1 418.6125183105469, :x2 450.9999938905239, :y2 437.01251220703125, :width 806, :height 1006.3948811700183}, :rects ({:x1 150.46250304579735, :y1 418.6125183105469, :x2 192.48871764540672, :y2 437.01251220703125, :width 806, :height 1006.3948811700183} {:x1 268.0500122010708, :y1 418.6125183105469, :x2 282.0500122010708, :y2 437.01251220703125, :width 806, :height 1006.3948811700183} {:x1 353.63750609755516, :y1 418.6125183105469, :x2 409.89898070693016, :y2 437.01251220703125, :width 806, :height 1006.3948811700183} {:x1 436.9999938905239, :y1 418.6125183105469, :x2 450.9999938905239, :y2 437.01251220703125, :width 806, :height 1006.3948811700183} {:x1 192.37500914931297, :y1 420.6875, :x2 271.3124938905239, :y2 433.95001220703125, :width 806, :height 1006.3948811700183} {:x1 282.0250183045864, :y1 420.6875, :x2 356.0237670838833, :y2 433.95001220703125, :width 806, :height 1006.3948811700183} {:x1 413.13750609755516, :y1 420.6875, :x2 437.80376586318016, :y2 433.95001220703125, :width 806, :height 1006.3948811700183}), :page 94}, :content {:text "如果是-Infinity 减-Infinity，则返回 NaN。"}, :properties {:color "yellow"}} {:id #uuid "63b57d6f-81a0-452d-874b-df87a4dde944", :page 94, :position {:bounding {:x1 161.51250609755516, :y1 800.7375183105469, :x2 248.50991210341454, :y2 818.3374938964844, :width 806, :height 1006.3948811700183}, :rects ({:x1 161.51250609755516, :y1 800.7375183105469, :x2 248.50991210341454, :y2 818.3374938964844, :width 806, :height 1006.3948811700183}), :page 94}, :content {:text "关系操作符"}, :properties {:color "yellow"}} {:id #uuid "63b57fa3-3c9c-4908-9597-586c2b0c5cce", :page 95, :position {:bounding {:x1 132.25000914931297, :y1 837.0750350952148, :x2 219.24741515517235, :y2 854.6750335693359, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 837.0750350952148, :x2 219.24741515517235, :y2 854.6750335693359, :width 806, :height 1006.3948811700183}), :page 95}, :content {:text "相等操作符"}, :properties {:color "yellow"}} {:id #uuid "63b58071-56c1-46a8-a015-c4233a933ab6", :page 96, :position {:bounding {:x1 146.12238463759422, :y1 409.06251525878906, :x2 321.38869628310204, :y2 428.02500915527344, :width 806, :height 1006.3948811700183}, :rects ({:x1 279.3625122010708, :y1 409.06251525878906, :x2 321.38869628310204, :y2 427.46250915527344, :width 806, :height 1006.3948811700183} {:x1 146.12238463759422, :y1 409.62501525878906, :x2 200.6145416200161, :y2 428.02500915527344, :width 806, :height 1006.3948811700183} {:x1 203.77500304579735, :y1 411.13751220703125, :x2 282.6249938905239, :y2 424.40000915527344, :width 806, :height 1006.3948811700183}), :page 96}, :content {:text "null 和 undefined 相等。"}, :properties {:color "yellow"}} {:id #uuid "63b58093-dff1-4302-9b29-f4abb2898109", :page 96, :position {:bounding {:x1 210.32500609755516, :y1 662.9875030517578, :x2 584.7990356385708, :y2 674.1875152587891, :width 806, :height 1006.3948811700183}, :rects ({:x1 210.32500609755516, :y1 662.9875030517578, :x2 312.7685180604458, :y2 674.1875152587891, :width 806, :height 1006.3948811700183} {:x1 558.562524408102, :y1 662.9875030517578, :x2 584.7990356385708, :y2 674.1875152587891, :width 806, :height 1006.3948811700183}), :page 96}, :content {:text "NaN != NaN true"}, :properties {:color "yellow"}} {:id #uuid "63b580c7-fd7c-4818-858d-92356f01b507", :page 96, :position {:bounding {:x1 133.76250609755516, :y1 878.8000183105469, :x2 569.8297363221645, :y2 890.7999877929688, :width 806, :height 1006.3948811700183}, :rects ({:x1 133.76250609755516, :y1 878.8000183105469, :x2 569.8297363221645, :y2 890.7999877929688, :width 806, :height 1006.3948811700183}), :page 96}, :content {:text "let result2 = (\"55\" === 55); // false，不相等，因为数据类型不同"}, :properties {:color "yellow"}} {:id #uuid "63b580d6-05f3-4713-a027-146e5ffc7363", :page 97, :position {:bounding {:x1 0, :y1 156.80001068115234, :x2 701.8250366151333, :y2 338.52501678466797, :width 806, :height 1006.3948811700183}, :rects ({:x1 0, :y1 156.80001068115234, :x2 0, :y2 179.20000457763672, :width 806, :height 1006.3948811700183} {:x1 687.8250366151333, :y1 299.2625045776367, :x2 701.8250366151333, :y2 317.6624984741211, :width 806, :height 1006.3948811700183} {:x1 538.1375366151333, :y1 301.33751678466797, :x2 686.1208129823208, :y2 314.5999984741211, :width 806, :height 1006.3948811700183} {:x1 115.01249846816063, :y1 320.12499237060547, :x2 325.4797225892544, :y2 338.52501678466797, :width 806, :height 1006.3948811700183} {:x1 75.22499999403954, :y1 322.2000045776367, :x2 116.33068999648094, :y2 335.46251678466797, :width 806, :height 1006.3948811700183}), :page 97}, :content {:text "null === undefined 是 false，因为它们不是相同的数据类型。"}, :properties {:color "yellow"}} {:id #uuid "63b580dd-4b0a-44b4-acde-7f378162f9e9", :page 97, :position {:bounding {:x1 132.25000914931297, :y1 433.7500228881836, :x2 219.24741515517235, :y2 451.3499984741211, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 433.7500228881836, :x2 219.24741515517235, :y2 451.3499984741211, :width 806, :height 1006.3948811700183}), :page 97}, :content {:text "条件操作符"}, :properties {:color "yellow"}} {:id #uuid "63b580f3-c054-4223-bc53-f04577b9a8fc", :page 97, :position {:bounding {:x1 125.85797271132469, :y1 657.1750183105469, :x2 229.05991515517235, :y2 679.5750122070312, :width 806, :height 1006.3948811700183}, :rects ({:x1 125.85797271132469, :y1 657.1750183105469, :x2 125.86149749159813, :y2 679.5750122070312, :width 806, :height 1006.3948811700183} {:x1 142.06250914931297, :y1 658.3999938964844, :x2 229.05991515517235, :y2 676, :width 806, :height 1006.3948811700183}), :page 97}, :content {:text "赋值操作符"}, :properties {:color "yellow"}} {:id #uuid "63b580fb-16f2-4874-bb47-01a959304e3c", :page 98, :position {:bounding {:x1 170.00000914931297, :y1 316.5125045776367, :x2 256.9974304139614, :y2 334.11251068115234, :width 806, :height 1006.3948811700183}, :rects ({:x1 170.00000914931297, :y1 316.5125045776367, :x2 256.9974304139614, :y2 334.11251068115234, :width 806, :height 1006.3948811700183}), :page 98}, :content {:text "逗号操作符"}, :properties {:color "yellow"}} {:id #uuid "63b5810f-4e1e-4edd-b792-127271bcf3e5", :page 97, :position {:bounding {:x1 104.50000151991844, :y1 490.8625183105469, :x2 515.6666503846645, :y2 502.8625183105469, :width 806, :height 1006.3948811700183}, :rects ({:x1 104.50000151991844, :y1 490.8625183105469, :x2 515.6666503846645, :y2 502.8625183105469, :width 806, :height 1006.3948811700183}), :page 97}, :content {:text "variable = boolean_expression ? true_value : false_value;"}, :properties {:color "yellow"}} {:id #uuid "63b582cf-eb35-4c15-9337-bf4c081f9d2d", :page 98, :position {:bounding {:x1 0, :y1 396.0625, :x2 732.7154785096645, :y2 451.20001220703125, :width 806, :height 1006.3948811700183}, :rects ({:x1 593.1238647401333, :y1 396.0625, :x2 732.7154785096645, :y2 414.4624938964844, :width 806, :height 1006.3948811700183} {:x1 104.50000151991844, :y1 417.01251220703125, :x2 567.6288162171841, :y2 435.4125061035156, :width 806, :height 1006.3948811700183} {:x1 0, :y1 428.8000183105469, :x2 0, :y2 451.20001220703125, :width 806, :height 1006.3948811700183}), :page 98}, :content {:text "使用逗号操作符来辅助赋值。在赋值时使用逗号操作符分隔值，最终会返回表达式中最后一个值："}, :properties {:color "yellow"}} {:id #uuid "63b58321-da1c-40e8-b506-5e6d7f3339d7", :page 98, :position {:bounding {:x1 161.51250609755516, :y1 638.5000152587891, :x2 221.68647155165672, :y2 655.4750061035156, :width 806, :height 1006.3948811700183}, :rects ({:x1 161.51250609755516, :y1 638.5000152587891, :x2 221.68647155165672, :y2 655.4750061035156, :width 806, :height 1006.3948811700183}), :page 98}, :content {:text "if 语句"}, :properties {:color "yellow"}} {:id #uuid "63b58336-fee9-4ce9-920c-b9e67dce1059", :page 99, :position {:bounding {:x1 132.25000914931297, :y1 306.07501220703125, :x2 253.42397460341454, :y2 323.04998779296875, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 306.07501220703125, :x2 253.42397460341454, :y2 323.04998779296875, :width 806, :height 1006.3948811700183}), :page 99}, :content {:text "do-while 语句"}, :properties {:color "yellow"}} {:id #uuid "63b5833e-c903-4938-a353-fb73f3789254", :page 99, :position {:bounding {:x1 116.068254083395, :y1 612.875, :x2 222.92397460341454, :y2 635.2749938964844, :width 806, :height 1006.3948811700183}, :rects ({:x1 116.068254083395, :y1 612.875, :x2 116.07176360487938, :y2 635.2749938964844, :width 806, :height 1006.3948811700183} {:x1 132.25000914931297, :y1 614.7124938964844, :x2 222.92397460341454, :y2 631.6875, :width 806, :height 1006.3948811700183}), :page 99}, :content {:text "while 语句"}, :properties {:color "yellow"}} {:id #uuid "63b58346-c7ce-4857-930a-7dded1639c4f", :page 99, :position {:bounding {:x1 132.25000914931297, :y1 835.7375183105469, :x2 202.59896239638329, :y2 852.7124938964844, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 835.7375183105469, :x2 202.59896239638329, :y2 852.7124938964844, :width 806, :height 1006.3948811700183}), :page 99}, :content {:text "for 语句"}, :properties {:color "yellow"}} {:id #uuid "63b58352-12a2-4b13-9251-ede479c39ec8", :page 100, :position {:bounding {:x1 161.51250609755516, :y1 691.9875183105469, :x2 262.36147460341454, :y2 708.9624938964844, :width 806, :height 1006.3948811700183}, :rects ({:x1 161.51250609755516, :y1 691.9875183105469, :x2 262.36147460341454, :y2 708.9624938964844, :width 806, :height 1006.3948811700183}), :page 100}, :content {:text "for-in 语句"}, :properties {:color "yellow"}} {:id #uuid "63b58361-8f28-463a-ab1f-2a525e5353f0", :page 101, :position {:bounding {:x1 116.068254083395, :y1 169.0625, :x2 233.09897765517235, :y2 191.46249389648438, :width 806, :height 1006.3948811700183}, :rects ({:x1 116.068254083395, :y1 169.0625, :x2 116.07176360487938, :y2 191.46249389648438, :width 806, :height 1006.3948811700183} {:x1 132.25000914931297, :y1 170.89999389648438, :x2 233.09897765517235, :y2 187.875, :width 806, :height 1006.3948811700183}), :page 101}, :content {:text "for-of 语句"}, :properties {:color "yellow"}} {:id #uuid "63b5836c-f673-4414-9de3-9309ff40a6b9", :page 101, :position {:bounding {:x1 132.25000914931297, :y1 542.3125, :x2 201.84792479872704, :y2 559.9125061035156, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 542.3125, :x2 201.84792479872704, :y2 559.9125061035156, :width 806, :height 1006.3948811700183}), :page 101}, :content {:text "标签语句"}, :properties {:color "yellow"}} {:id #uuid "63b58376-a637-4872-805c-61cf3504bc11", :page 101, :position {:bounding {:x1 132.25000914931297, :y1 753.7875061035156, :x2 331.4114929139614, :y2 771.3875122070312, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 753.7875061035156, :x2 331.4114929139614, :y2 771.3875122070312, :width 806, :height 1006.3948811700183}), :page 101}, :content {:text "break 和 continue 语句"}, :properties {:color "yellow"}} {:id #uuid "63b58387-dd7e-4b5c-bd34-19956c9b66d4", :page 103, :position {:bounding {:x1 132.25000914931297, :y1 353.2875061035156, :x2 212.76148375868797, :y2 370.26251220703125, :width 806, :height 1006.3948811700183}, :rects ({:x1 132.25000914931297, :y1 353.2875061035156, :x2 212.76148375868797, :y2 370.26251220703125, :width 806, :height 1006.3948811700183}), :page 103}, :content {:text "with 语句"}, :properties {:color "yellow"}} {:id #uuid "63b58395-70fc-4d6c-b5df-6e394204a48b", :page 103, :position {:bounding {:x1 142.06250914931297, :y1 806.9125061035156, :x2 242.91147765517235, :y2 823.8875122070312, :width 806, :height 1006.3948811700183}, :rects ({:x1 142.06250914931297, :y1 806.9125061035156, :x2 242.91147765517235, :y2 823.8875122070312, :width 806, :height 1006.3948811700183}), :page 103}, :content {:text "switch 语句"}, :properties {:color "yellow"}} {:id #uuid "63ba22a7-2d98-405a-860f-8ace3b57b7f2", :page 101, :position {:bounding {:x1 146.65000301599503, :y1 150.50001525878906, :x2 633.859216272831, :y2 170.50001525878906, :width 900.9999999999999, :height 1125.014625228519}, :rects ({:x1 146.65000301599503, :y1 150.50001525878906, :x2 633.859216272831, :y2 170.50001525878906, :width 900.9999999999999, :height 1125.014625228519} {:x1 150.6124969124794, :y1 152.53749084472656, :x2 211.4249969124794, :y2 167.3625030517578, :width 900.9999999999999, :height 1125.014625228519} {:x1 353.11251217126846, :y1 152.53749084472656, :x2 396.13750606775284, :y2 167.3625030517578, :width 900.9999999999999, :height 1125.014625228519} {:x1 412.8124938607216, :y1 152.53749084472656, :x2 487.30562740564346, :y2 167.3625030517578, :width 900.9999999999999, :height 1125.014625228519}), :page 101}, :content {:text " for-in 循环要迭代的变量是 null 或 undefined，则不执行循环体。"}, :properties {:color "yellow"}} {:id #uuid "63ba2626-24a8-4a18-b487-1c2ffac39fa4", :page 102, :position {:bounding {:x1 146.46250301599503, :y1 571.4749870300293, :x2 809.5304809212685, :y2 591.4749870300293, :width 900.9999999999999, :height 1125.014625228519}, :rects ({:x1 146.46250301599503, :y1 571.4749870300293, :x2 809.5304809212685, :y2 591.4749870300293, :width 900.9999999999999, :height 1125.014625228519} {:x1 190.93750911951065, :y1 572.2750358581543, :x2 191.39768368005753, :y2 587.0999870300293, :width 900.9999999999999, :height 1125.014625228519} {:x1 214.95000606775284, :y1 572.2750358581543, :x2 293.5624938607216, :y2 587.0999870300293, :width 900.9999999999999, :height 1125.014625228519}), :page 102}, :content {:text "break 和 continue 都可以与标签语句一起使用，返回代码中特定的位置。这通常是在嵌套循环中"}, :properties {:color "yellow"}} {:id #uuid "63ba2fb8-5815-483f-8c79-07b7ec2e4123", :page 106, :position {:bounding {:x1 0, :y1 416.12501525878906, :x2 817.3395019173622, :y2 467.20001220703125, :width 900.9999999999999, :height 1125.014625228519}, :rects ({:x1 148.15000301599503, :y1 416.12501525878906, :x2 817.3395019173622, :y2 436.12501525878906, :width 900.9999999999999, :height 1125.014625228519} {:x1 694.3750243782997, :y1 417.6000061035156, :x2 748.5550780892372, :y2 432.4250030517578, :width 900.9999999999999, :height 1125.014625228519} {:x1 116.81250149011612, :y1 438.88751220703125, :x2 367.5957046151161, :y2 458.88751220703125, :width 900.9999999999999, :height 1125.014625228519} {:x1 0, :y1 444.8000030517578, :x2 0, :y2 467.20001220703125, :width 900.9999999999999, :height 1125.014625228519}), :page 106}, :content {:text "ECMAScript 中的函数不需要指定是否返回值。任何函数在任何时间都可以使用 return 语句来返回函数的值，用法是后跟要返回的值"}, :properties {:color "yellow"}} {:id #uuid "63bc00e6-7457-464c-b735-9fce29da28e7", :page 108, :position {:bounding {:x1 136.46331173181534, :y1 474.8250045776367, :x2 302.37944942712784, :y2 501.2249984741211, :width 816.7013888888889, :height 1019.7569444444445}, :rects ({:x1 136.46331173181534, :y1 474.8250045776367, :x2 136.4663329720497, :y2 501.2249984741211, :width 816.7013888888889, :height 1019.7569444444445} {:x1 155.8499999642372, :y1 476.62499237060547, :x2 302.37944942712784, :y2 497.42501068115234, :width 816.7013888888889, :height 1019.7569444444445}), :page 108}, :content {:text "原始值与引用值"}, :properties {:color "yellow"}} {:id #uuid "63bc00fb-de43-412c-93f2-e5c74c7f8346", :page 108, :position {:bounding {:x1 0, :y1 412.8000030517578, :x2 759.2886962890625, :y2 566.5, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.20001220703125, :width 837.0000000000001, :height 1045.1023765996345} {:x1 566.8375244140625, :y1 527.0625, :x2 759.2886962890625, :y2 545.4624938964844, :width 837.0000000000001, :height 1045.1023765996345} {:x1 108.51250457763672, :y1 548.1000061035156, :x2 195.92294311523438, :y2 566.5, :width 837.0000000000001, :height 1045.1023765996345}), :page 108}, :content {:text "原始值（primitive value）就是最简单的数据"}, :properties {:color "yellow"}} {:id #uuid "63bc0102-b67e-4721-964a-0707147bb228", :page 108, :position {:bounding {:x1 210.2375030517578, :y1 548.7375183105469, :x2 532.3438720703125, :y2 563.9375, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 210.2375030517578, :y1 548.7375183105469, :x2 532.3438720703125, :y2 563.9375, :width 837.0000000000001, :height 1045.1023765996345}), :page 108}, :content {:text "引用值（reference value）则是由多个值构成的对象"}, :properties {:color "yellow"}} {:id #uuid "63bc0123-30e5-4902-b42e-b18b1be1fb87", :page 108, :position {:bounding {:x1 459.0375061035156, :y1 635.5, :x2 686.5555419921875, :y2 653.9000244140625, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 459.0375061035156, :y1 635.5, :x2 686.5555419921875, :y2 653.9000244140625, :width 837.0000000000001, :height 1045.1023765996345}), :page 108}, :content {:text "JavaScript 不允许直接访问内存位置"}, :properties {:color "yellow"}} {:id #uuid "63bc0133-d23b-4dcf-8537-4ac727b24273", :page 108, :position {:bounding {:x1 0, :y1 508.8000030517578, :x2 759.1929321289062, :y2 696.7000122070312, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 508.8000030517578, :x2 0, :y2 531.1999969482422, :width 837.0000000000001, :height 1045.1023765996345} {:x1 327.25042724609375, :y1 656.625, :x2 759.1929321289062, :y2 675.0249938964844, :width 837.0000000000001, :height 1045.1023765996345} {:x1 108.5250015258789, :y1 678.2999877929688, :x2 602.3798828125, :y2 696.7000122070312, :width 837.0000000000001, :height 1045.1023765996345}), :page 108}, :content {:text "。在操作对象时，实际上操作的是对该对象的引用（reference）而非实际的对象本身。为此，保存引用值的变量是按引用（by reference）访问的。"}, :properties {:color "yellow"}} {:id #uuid "63bc0183-6944-43e0-9cd5-de3cadea3c20", :page 108, :position {:bounding {:x1 0, :y1 540.8000030517578, :x2 708.4995727539062, :y2 758.75, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 540.8000030517578, :x2 0, :y2 563.1999969482422, :width 837.0000000000001, :height 1045.1023765996345} {:x1 195.72500610351562, :y1 719.5, :x2 708.4995727539062, :y2 737.8999938964844, :width 837.0000000000001, :height 1045.1023765996345} {:x1 152.125, :y1 740.3500061035156, :x2 268.6473083496094, :y2 758.75, :width 837.0000000000001, :height 1045.1023765996345}), :page 108}, :content {:text "在很多语言中，字符串是使用对象表示的，因此被认为是引用类型。ECMAScript打破了这个惯例。"}, :properties {:color "yellow"}} {:id #uuid "63bc018d-50be-4577-917f-7c0f3b8aa5d3", :page 108, :position {:bounding {:x1 167.72500610351562, :y1 790.2374877929688, :x2 241.3079071044922, :y2 808.6375122070312, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 167.72500610351562, :y1 790.2374877929688, :x2 241.3079071044922, :y2 808.6375122070312, :width 837.0000000000001, :height 1045.1023765996345}), :page 108}, :content {:text "动态属性"}, :properties {:color "yellow"}} {:id #uuid "63bc01c8-546e-4484-8811-6bcbb696e597", :page 109, :position {:bounding {:x1 107.23750305175781, :y1 161.3125, :x2 471.4638214111328, :y2 179.71249389648438, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 107.23750305175781, :y1 161.3125, :x2 471.4638214111328, :y2 179.71249389648438, :width 837.0000000000001, :height 1045.1023765996345}), :page 109}, :content {:text "原始值不能有属性，尽管尝试给原始值添加属性不会报错"}, :properties {:color "yellow"}} {:id #uuid "63bc01e8-bef1-4167-bf71-30ab4f9cb180", :page 109, :position {:bounding {:x1 0, :y1 140.79998779296875, :x2 728.8125, :y2 321.0874938964844, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 140.79998779296875, :x2 0, :y2 163.20001220703125, :width 837.0000000000001, :height 1045.1023765996345} {:x1 150.80484008789062, :y1 281.0249938964844, :x2 728.8125, :y2 299.4250183105469, :width 837.0000000000001, :height 1045.1023765996345} {:x1 78.125, :y1 302.6875305175781, :x2 281.0445251464844, :y2 321.0874938964844, :width 837.0000000000001, :height 1045.1023765996345}), :page 109}, :content {:text "原始类型的初始化可以只使用原始字面量形式。如果使用的是 new 关键字，则 JavaScript 会创建一个 Object 类型的实例，"}, :properties {:color "yellow"}} {:id #uuid "63bc0206-c2f8-4455-99ba-ac8b79767fdb", :page 110, :position {:bounding {:x1 0, :y1 117.9625244140625, :x2 760.6508331298828, :y2 275.2000427246094, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 137.6125030517578, :y1 117.9625244140625, :x2 760.6508331298828, :y2 136.36251831054688, :width 837.0000000000001, :height 1045.1023765996345} {:x1 108.51250457763672, :y1 139.63751220703125, :x2 760.5505294799805, :y2 158.03750610351562, :width 837.0000000000001, :height 1045.1023765996345} {:x1 108.51250457763672, :y1 161.3125, :x2 225.0763702392578, :y2 179.7125244140625, :width 837.0000000000001, :height 1045.1023765996345} {:x1 0, :y1 236.80001831054688, :x2 0, :y2 259.2000427246094, :width 837.0000000000001, :height 1045.1023765996345} {:x1 0, :y1 252.80001831054688, :x2 0, :y2 275.2000427246094, :width 837.0000000000001, :height 1045.1023765996345}), :page 110}, :content {:text "在把引用值从一个变量赋给另一个变量时，存储在变量中的值也会被复制到新变量所在的位置。区别在于，这里复制的值实际上是一个指针，它指向存储在堆内存中的对象。操作完成后，两个变量实际上指向同一个对象"}, :properties {:color "yellow"}} {:id #uuid "63bc0240-8ab0-4374-85ab-e6712dd90fcf", :page 111, :position {:bounding {:x1 0, :y1 92.79998779296875, :x2 728.9503784179688, :y2 253.06253051757812, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 92.79998779296875, :x2 0, :y2 115.19998168945312, :width 837.0000000000001, :height 1045.1023765996345} {:x1 474.2458190917969, :y1 212.98751831054688, :x2 728.9503784179688, :y2 231.38748168945312, :width 837.0000000000001, :height 1045.1023765996345} {:x1 78.125, :y1 234.66250610351562, :x2 252.4713134765625, :y2 253.06253051757812, :width 837.0000000000001, :height 1045.1023765996345}), :page 111}, :content {:text "参数 num 和变量 count 互不干扰，它们只不过碰巧保存了一样的值"}, :properties {:color "yellow"}} {:id #uuid "63bc0253-1c15-4505-9b70-fc727b7942ec", :page 111, :position {:bounding {:x1 0, :y1 268.8000030517578, :x2 729.3214111328125, :y2 474.31251525878906, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 268.8000030517578, :x2 0, :y2 291.1999969482422, :width 837.0000000000001, :height 1045.1023765996345} {:x1 613.8397827148438, :y1 434.16249084472656, :x2 729.3214111328125, :y2 452.56251525878906, :width 837.0000000000001, :height 1045.1023765996345} {:x1 78.125, :y1 455.91249084472656, :x2 381.3662109375, :y2 474.31251525878906, :width 837.0000000000001, :height 1045.1023765996345}), :page 111}, :content {:text "果就是，即使对象是按值传进函数的，obj 也会通过引用访问对象"}, :properties {:color "yellow"}} {:id #uuid "63bc025c-b408-416c-b4e2-83c2a9e5c353", :page 111, :position {:bounding {:x1 238.37351989746094, :y1 477.5874786376953, :x2 561.8912353515625, :y2 495.9875030517578, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 238.37351989746094, :y1 477.5874786376953, :x2 561.8912353515625, :y2 495.9875030517578, :width 837.0000000000001, :height 1045.1023765996345}), :page 111}, :content {:text "因为 obj 指向的对象保存在全局作用域的堆内存上"}, :properties {:color "yellow"}} {:id #uuid "63bc02c7-95ed-43d9-8469-16103eaf13b3", :page 111, :position {:bounding {:x1 0, :y1 508.8000183105469, :x2 728.8671264648438, :y2 767.9249877929688, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 508.8000183105469, :x2 0, :y2 531.2000122070312, :width 837.0000000000001, :height 1045.1023765996345} {:x1 371.1717224121094, :y1 727.8624877929688, :x2 728.8671264648438, :y2 746.2625122070312, :width 837.0000000000001, :height 1045.1023765996345} {:x1 78.125, :y1 749.5250244140625, :x2 328.5486755371094, :y2 767.9249877929688, :width 837.0000000000001, :height 1045.1023765996345}), :page 111}, :content {:text "如果 person 是按引用传递的，那么 person 应该自动将指针改为指向 name 为\"Greg\"的对象。"}, :properties {:color "yellow"}} {:id #uuid "63bc02ca-9e82-45bc-97cb-83f9bd6953d6", :page 111, :position {:bounding {:x1 149.84280395507812, :y1 834.9875183105469, :x2 434.3392028808594, :y2 850.1875305175781, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 149.84280395507812, :y1 834.9875183105469, :x2 152.15225219726562, :y2 850.1875305175781, :width 837.0000000000001, :height 1045.1023765996345} {:x1 165.33750915527344, :y1 834.9875183105469, :x2 434.3392028808594, :y2 850.1875305175781, :width 837.0000000000001, :height 1045.1023765996345}), :page 111}, :content {:text " ECMAScript 中函数的参数就是局部变量。"}, :properties {:color "yellow"}} {:id #uuid "63bc0329-7793-46b6-88a8-74bacb1af594", :page 109, :position {:bounding {:x1 137.33750915527344, :y1 466.4250030517578, :x2 192.5309295654297, :y2 484.82501220703125, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 137.33750915527344, :y1 466.4250030517578, :x2 192.5309295654297, :y2 484.82501220703125, :width 837.0000000000001, :height 1045.1023765996345}), :page 109}, :content {:text "复制值"}, :properties {:color "yellow"}} {:id #uuid "63bc0334-9135-46fa-823d-50197cc6db07", :page 110, :position {:bounding {:x1 167.72500610351562, :y1 660.5125122070312, :x2 241.3079071044922, :y2 678.9125061035156, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 167.72500610351562, :y1 660.5125122070312, :x2 241.3079071044922, :y2 678.9125061035156, :width 837.0000000000001, :height 1045.1023765996345}), :page 110}, :content {:text "传递参数"}, :properties {:color "yellow"}} {:id #uuid "63bc0347-abea-4a3a-9996-d4c660f72ea8", :page 110, :position {:bounding {:x1 137.6125030517578, :y1 696.4500274658203, :x2 439.2023010253906, :y2 711.6500091552734, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 137.6125030517578, :y1 696.4500274658203, :x2 439.2023010253906, :y2 711.6500091552734, :width 837.0000000000001, :height 1045.1023765996345}), :page 110}, :content {:text "ECMAScript 中所有函数的参数都是按值传递的"}, :properties {:color "yellow"}} {:id #uuid "63bc0350-2c24-4ed9-b206-9e7d7062f6e3", :page 111, :position {:bounding {:x1 137.33750915527344, :y1 889.3125, :x2 210.92041015625, :y2 907.7124938964844, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 137.33750915527344, :y1 889.3125, :x2 210.92041015625, :y2 907.7124938964844, :width 837.0000000000001, :height 1045.1023765996345}), :page 111}, :content {:text "确定类型"}, :properties {:color "yellow"}} {:id #uuid "63bc0411-ef6d-4a96-ad36-6206d2d6837e", :page 112, :position {:bounding {:x1 0, :y1 538.362512588501, :x2 759.1124877929688, :y2 627.2000370025635, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 389.4093933105469, :y1 538.362512588501, :x2 759.1124877929688, :y2 556.7625370025635, :width 837.0000000000001, :height 1045.1023765996345} {:x1 108.51250457763672, :y1 560.1250247955322, :x2 239.54833221435547, :y2 578.5249881744385, :width 837.0000000000001, :height 1045.1023765996345} {:x1 0, :y1 604.800012588501, :x2 0, :y2 627.2000370025635, :width 837.0000000000001, :height 1045.1023765996345}), :page 112}, :content {:text "如果用 instanceof 检测原始值，则始终会返回 false，因为原始值不是对象"}, :properties {:color "yellow"}} {:id #uuid "63bc0428-bec7-4538-b864-d457a1e4311f", :page 112, :position {:bounding {:x1 195.7375030517578, :y1 603.4125061035156, :x2 538.8710327148438, :y2 617.1875, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 195.7375030517578, :y1 603.4125061035156, :x2 538.8710327148438, :y2 617.1875, :width 837.0000000000001, :height 1045.1023765996345}), :page 112}, :content {:text "typeof 操作符在用于检测函数时也会返回\"function\""}, :properties {:color "yellow"}} {:id #uuid "63bc0438-ea70-4f0e-845a-aef946d8a7e7", :page 112, :position {:bounding {:x1 0, :y1 683.8875122070312, :x2 715.5980834960938, :y2 723.2124938964844, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 450.7060241699219, :y1 683.8875122070312, :x2 715.5980834960938, :y2 702.2875061035156, :width 837.0000000000001, :height 1045.1023765996345} {:x1 0, :y1 700.8000183105469, :x2 0, :y2 723.2000122070312, :width 837.0000000000001, :height 1045.1023765996345} {:x1 152.125, :y1 704.8125, :x2 261.8625183105469, :y2 723.2124938964844, :width 837.0000000000001, :height 1045.1023765996345}), :page 112}, :content {:text "在 IE 和 Firefox 中，typeof 对正则表达式返回\"object\"。"}, :properties {:color "yellow"}} {:id #uuid "63bc0452-9e02-4750-acf8-a591f04e3eca", :page 112, :position {:bounding {:x1 159.7375030517578, :y1 761.3625183105469, :x2 352.6698913574219, :y2 782.9624938964844, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 159.7375030517578, :y1 761.3625183105469, :x2 352.6698913574219, :y2 782.9624938964844, :width 837.0000000000001, :height 1045.1023765996345}), :page 112}, :content {:text "执行上下文与作用域"}, :properties {:color "yellow"}} {:id #uuid "63bc04a4-645c-4661-bfc8-e33a0a0edfaa", :page 112, :position {:bounding {:x1 0, :y1 764.8000183105469, :x2 759.2875366210938, :y2 863.875, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 764.8000183105469, :x2 0, :y2 787.2000122070312, :width 837.0000000000001, :height 1045.1023765996345} {:x1 401.379638671875, :y1 823.7999877929688, :x2 759.2875366210938, :y2 842.2000122070312, :width 837.0000000000001, :height 1045.1023765996345} {:x1 108.5, :y1 845.4750366210938, :x2 499.77520751953125, :y2 863.875, :width 837.0000000000001, :height 1045.1023765996345}), :page 112}, :content {:text "每个上下文都有一个关联的变量对象（variable object），而这个上下文中定义的所有变量和函数都存在于这个对象上。"}, :properties {:color "yellow"}} {:id #uuid "63bc05c8-1af4-423b-8be8-d1ddf1ccde6b", :page 112, :position {:bounding {:x1 137.60000610351562, :y1 888.9125061035156, :x2 323.5096740722656, :y2 907.3125, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 137.60000610351562, :y1 888.9125061035156, :x2 323.5096740722656, :y2 907.3125, :width 837.0000000000001, :height 1045.1023765996345}), :page 112}, :content {:text "全局上下文是最外层的上下文"}, :properties {:color "yellow"}} {:id #uuid "63bc0746-f5a1-46b3-a025-1e6d825d0d3b", :page 113, :position {:bounding {:x1 107.2249984741211, :y1 161.3125, :x2 311.1469039916992, :y2 179.7125244140625, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 107.2249984741211, :y1 161.3125, :x2 311.1469039916992, :y2 179.7125244140625, :width 837.0000000000001, :height 1045.1023765996345}), :page 113}, :content {:text "每个函数调用都有自己的上下文"}, :properties {:color "yellow"}} {:id #uuid "63bc079d-1d56-456c-9361-ebf32137318c", :page 113, :position {:bounding {:x1 107.2249984741211, :y1 226.41253662109375, :x2 606.9625244140625, :y2 244.8125, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 107.2249984741211, :y1 226.41253662109375, :x2 606.9625244140625, :y2 244.8125, :width 837.0000000000001, :height 1045.1023765996345}), :page 113}, :content {:text "上下文中的代码在执行的时候，会创建变量对象的一个作用域链（scope chain）"}, :properties {:color "yellow"}} {:id #uuid "63bc07af-6caa-4ed9-ac8f-1d50b0b85dd9", :page 113, :position {:bounding {:x1 0, :y1 124.80000305175781, :x2 729.2318725585938, :y2 309.9125061035156, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 124.80000305175781, :x2 0, :y2 147.20000457763672, :width 837.0000000000001, :height 1045.1023765996345} {:x1 165.5148162841797, :y1 269.7624969482422, :x2 729.2318725585938, :y2 288.1625061035156, :width 837.0000000000001, :height 1045.1023765996345} {:x1 78.0999984741211, :y1 291.51251220703125, :x2 469.51055908203125, :y2 309.9125061035156, :width 837.0000000000001, :height 1045.1023765996345}), :page 113}, :content {:text "如果上下文是函数，则其活动对象（activation object）用作变量对象。活动对象最初只有一个定义变量：arguments。（全局上下文中没有这个变量。）"}, :properties {:color "yellow"}} {:id #uuid "63bc07c4-cb75-47f4-8b43-1d688ef70add", :page 113, :position {:bounding {:x1 0, :y1 156.8000030517578, :x2 730.1630249023438, :y2 353.2250061035156, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 156.8000030517578, :x2 0, :y2 179.1999969482422, :width 837.0000000000001, :height 1045.1023765996345} {:x1 556.2821044921875, :y1 313.1625061035156, :x2 730.1630249023438, :y2 331.5625, :width 837.0000000000001, :height 1045.1023765996345} {:x1 78.125, :y1 334.82501220703125, :x2 296.6136474609375, :y2 353.2250061035156, :width 837.0000000000001, :height 1045.1023765996345}), :page 113}, :content {:text "全局上下文的变量对象始终是作用域链的最后一个变量对象。"}, :properties {:color "yellow"}} {:id #uuid "63bc0863-6127-4217-ae8f-1a0f1858c348", :page 113, :position {:bounding {:x1 0, :y1 396.8000030517578, :x2 729.7572021484375, :y2 657.3500366210938, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 396.8000030517578, :x2 0, :y2 419.20001220703125, :width 837.0000000000001, :height 1045.1023765996345} {:x1 513.9537963867188, :y1 615.2125244140625, :x2 729.7572021484375, :y2 633.6125183105469, :width 837.0000000000001, :height 1045.1023765996345} {:x1 78.125, :y1 638.9500122070312, :x2 367.08782958984375, :y2 657.3500366210938, :width 837.0000000000001, :height 1045.1023765996345}), :page 113}, :content {:text "这个函数内部之所以能够访问变量 color，就是因为可以在作用域链中找到它。"}, :properties {:color "yellow"}} {:id #uuid "63bc088e-11af-43a8-8ca1-222f83f972da", :page 114, :position {:bounding {:x1 0, :y1 117.96249389648438, :x2 759.1929321289062, :y2 259.1999816894531, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 314.5488586425781, :y1 117.96249389648438, :x2 759.1929321289062, :y2 136.36248779296875, :width 837.0000000000001, :height 1045.1023765996345} {:x1 108.51250457763672, :y1 139.63751220703125, :x2 165.857421875, :y2 158.03750610351562, :width 837.0000000000001, :height 1045.1023765996345} {:x1 0, :y1 236.80001831054688, :x2 0, :y2 259.1999816894531, :width 837.0000000000001, :height 1045.1023765996345}), :page 114}, :content {:text "全局上下文、changeColor()的局部上下文和 swapColors()的局部上下文。"}, :properties {:color "yellow"}} {:id #uuid "63bc089b-b1a8-4924-89a3-720a4041840f", :page 114, :position {:bounding {:x1 0, :y1 183.06253051757812, :x2 759.8417358398438, :y2 307.1999816894531, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 656.9008178710938, :y1 183.06253051757812, :x2 759.8417358398438, :y2 201.46249389648438, :width 837.0000000000001, :height 1045.1023765996345} {:x1 108.51250457763672, :y1 206.80001831054688, :x2 470.88238525390625, :y2 225.20004272460938, :width 837.0000000000001, :height 1045.1023765996345} {:x1 0, :y1 284.8000183105469, :x2 0, :y2 307.1999816894531, :width 837.0000000000001, :height 1045.1023765996345}), :page 114}, :content {:text "。全局上下文和 changeColor()的局部上下文都无法访问到 tempColor"}, :properties {:color "yellow"}} {:id #uuid "63bc08c4-f2cf-4318-8519-82f41fba50e2", :page 114, :position {:bounding {:x1 0, :y1 348.80001068115234, :x2 760.5597534179688, :y2 537.3000106811523, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 348.80001068115234, :x2 0, :y2 371.2000045776367, :width 837.0000000000001, :height 1045.1023765996345} {:x1 731.4217529296875, :y1 497.23751068115234, :x2 760.5597534179688, :y2 515.6375350952148, :width 837.0000000000001, :height 1045.1023765996345} {:x1 108.5, :y1 518.8999862670898, :x2 383.80633544921875, :y2 537.3000106811523, :width 837.0000000000001, :height 1045.1023765996345}), :page 114}, :content {:text "但外部上下文无法访问内部上下文中的任何东西"}, :properties {:color "yellow"}} {:id #uuid "63bc08d5-5485-4359-9a24-1f7e7d232c03", :page 114, :position {:bounding {:x1 167.72500610351562, :y1 744.4249877929688, :x2 278.099365234375, :y2 762.8250122070312, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 167.72500610351562, :y1 744.4249877929688, :x2 278.099365234375, :y2 762.8250122070312, :width 837.0000000000001, :height 1045.1023765996345}), :page 114}, :content {:text "作用域链增强"}, :properties {:color "yellow"}} {:id #uuid "63bc0913-b2b2-4f86-991f-2483259306bd", :page 114, :position {:bounding {:x1 282.4042663574219, :y1 801.4000396728516, :x2 615.7196655273438, :y2 819.8000411987305, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 282.4042663574219, :y1 801.4000396728516, :x2 615.7196655273438, :y2 819.8000411987305, :width 837.0000000000001, :height 1045.1023765996345}), :page 114}, :content {:text "某些语句会导致在作用域链前端临时添加一个上下文"}, :properties {:color "yellow"}} {:id #uuid "63bc0923-246e-4534-a835-5b45d1adb370", :page 114, :position {:bounding {:x1 156.25, :y1 846.9000396728516, :x2 337.70001220703125, :y2 862.1000366210938, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 156.25, :y1 846.9000396728516, :x2 337.70001220703125, :y2 862.1000366210938, :width 837.0000000000001, :height 1045.1023765996345}), :page 114}, :content {:text "try/catch 语句的 catch 块"}, :properties {:color "yellow"}} {:id #uuid "63bc0929-a5cc-4993-9d2e-13125171579a", :page 114, :position {:bounding {:x1 151.1750030517578, :y1 867.0750427246094, :x2 222.52444458007812, :y2 885.4750518798828, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 151.1750030517578, :y1 867.0750427246094, :x2 222.52444458007812, :y2 885.4750518798828, :width 837.0000000000001, :height 1045.1023765996345}), :page 114}, :content {:text " with 语句"}, :properties {:color "yellow"}} {:id #uuid "63bc097b-86b5-4f3e-8ebe-9735bc15f303", :page 115, :position {:bounding {:x1 475.9375, :y1 254.72500610351562, :x2 714.2706298828125, :y2 268.5000305175781, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 475.9375, :y1 254.72500610351562, :x2 714.2706298828125, :y2 268.5000305175781, :width 837.0000000000001, :height 1045.1023765996345}), :page 115}, :content {:text "location 会被添加到作用域链前端"}, :properties {:color "yellow"}} {:id #uuid "63bc098c-0f66-4e9b-9c2e-7d34d2f7b94b", :page 115, :position {:bounding {:x1 0, :y1 140.8000030517578, :x2 728.915771484375, :y2 316.54998779296875, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 140.8000030517578, :x2 0, :y2 163.1999969482422, :width 837.0000000000001, :height 1045.1023765996345} {:x1 364.75, :y1 276.4750061035156, :x2 728.915771484375, :y2 294.875, :width 837.0000000000001, :height 1045.1023765996345} {:x1 78.125, :y1 298.1499938964844, :x2 373.1000061035156, :y2 316.54998779296875, :width 837.0000000000001, :height 1045.1023765996345}), :page 115}, :content {:text "with 语句中的代码引用变量 href 时，实际上引用的是 location.href，也就是自己变量对象的属性"}, :properties {:color "yellow"}} {:id #uuid "63bc0a34-2963-402d-ab4c-3ed9c11c6c84", :page 115, :position {:bounding {:x1 120.53702545166016, :y1 492.6125030517578, :x2 210.92041015625, :y2 515.8125152587891, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 120.53702545166016, :y1 492.6125030517578, :x2 120.54054260253906, :y2 515.8125152587891, :width 837.0000000000001, :height 1045.1023765996345} {:x1 137.33750915527344, :y1 493.7875213623047, :x2 210.92041015625, :y2 512.1875152587891, :width 837.0000000000001, :height 1045.1023765996345}), :page 115}, :content {:text "变量声明"}, :properties {:color "yellow"}} {:id #uuid "63bc0a47-6c43-4097-9714-6dc2cfded1b8", :page 115, :position {:bounding {:x1 0, :y1 300.80001068115234, :x2 729.5149536132812, :y2 590.9125213623047, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 0, :y1 300.80001068115234, :x2 0, :y2 323.20001220703125, :width 837.0000000000001, :height 1045.1023765996345} {:x1 179.83750915527344, :y1 551.4000091552734, :x2 729.5149536132812, :y2 569.8000030517578, :width 837.0000000000001, :height 1045.1023765996345} {:x1 78.125, :y1 572.5125274658203, :x2 150.9296417236328, :y2 590.9125213623047, :width 837.0000000000001, :height 1045.1023765996345}), :page 115}, :content {:text "ES6 不仅增加了 let 和 const 两个关键字，而且还让这两个关键字压倒性地超越 var成为首选。"}, :properties {:color "yellow"}} {:id #uuid "63bc0ad4-7a11-41bc-9bea-5bd8effd83e5", :page 115, :position {:bounding {:x1 107.2249984741211, :y1 619.0625152587891, :x2 499.93492126464844, :y2 637.4625091552734, :width 837.0000000000001, :height 1045.1023765996345}, :rects ({:x1 107.2249984741211, :y1 619.0625152587891, :x2 499.93492126464844, :y2 637.4625091552734, :width 837.0000000000001, :height 1045.1023765996345}), :page 115}, :content {:text "在使用 var 声明变量时，变量会被自动添加到最接近的上下文"}, :properties {:color "yellow"}} {:id #uuid "63bc0b02-d799-471d-9f4b-659f64cc4686", :page 115, :position {:bounding {:x1 0, :y1 364.7999954223633, :x2 754.0245116949081, :y2 696.7875061035156, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 364.7999954223633, :x2 0, :y2 387.1999969482422, :width 855.9999999999999, :height 1068.8263254113344} {:x1 532.8729614019394, :y1 655.4250030517578, :x2 754.0245116949081, :y2 674.625, :width 855.9999999999999, :height 1068.8263254113344} {:x1 79.89999997615814, :y1 677.5875091552734, :x2 318.3863891363144, :y2 696.7875061035156, :width 855.9999999999999, :height 1068.8263254113344}), :page 115}, :content {:text "如果变量未经声明就被初始化了，那么它就会自动被添加到全局上下文"}, :properties {:color "yellow"}} {:id #uuid "63bc0be4-bdca-4f6e-9e89-c813c1010c42", :page 116, :position {:bounding {:x1 0, :y1 268.67501068115234, :x2 766.480520606041, :y2 339.2000198364258, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 172.95000302791595, :y1 268.67501068115234, :x2 766.480520606041, :y2 287.87500762939453, :width 855.9999999999999, :height 1068.8263254113344} {:x1 139.14999997615814, :y1 270.73751068115234, :x2 165.47080075740814, :y2 284.8250045776367, :width 855.9999999999999, :height 1068.8263254113344} {:x1 103.56249845027924, :y1 290.8375015258789, :x2 188.43874204158783, :y2 310.0374984741211, :width 855.9999999999999, :height 1068.8263254113344} {:x1 0, :y1 316.80001068115234, :x2 0, :y2 339.2000198364258, :width 855.9999999999999, :height 1068.8263254113344}), :page 116}, :content {:text "var 声明会被拿到函数或全局作用域的顶部，位于作用域中所有代码之前。这个现象叫作“提升”（hoisting）。"}, :properties {:color "yellow"}} {:id #uuid "63bc0c2d-e78e-445e-be5a-8893dcf9e022", :page 117, :position {:bounding {:x1 108.06249845027924, :y1 344.8249816894531, :x2 517.2828124761581, :y2 364.0249938964844, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 139.05000913143158, :y1 344.8249816894531, :x2 154.37689816951752, :y2 364.0249938964844, :width 855.9999999999999, :height 1068.8263254113344} {:x1 189.37500607967377, :y1 344.8249816894531, :x2 517.2828124761581, :y2 364.0249938964844, :width 855.9999999999999, :height 1068.8263254113344} {:x1 108.06249845027924, :y1 346.8874816894531, :x2 134.25891721248627, :y2 360.9750061035156, :width 855.9999999999999, :height 1068.8263254113344} {:x1 158.48750913143158, :y1 346.8874816894531, :x2 191.07500302791595, :y2 360.9750061035156, :width 855.9999999999999, :height 1068.8263254113344}), :page 117}, :content {:text "let 与 var 的另一个不同之处是在同一作用域内不能声明两次"}, :properties {:color "yellow"}} {:id #uuid "63bc0c8d-0699-4505-85da-64170ce49791", :page 117, :position {:bounding {:x1 154.40859067440033, :y1 780.5, :x2 467.39980161190033, :y2 799.7000122070312, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 154.40859067440033, :y1 780.5, :x2 467.39980161190033, :y2 799.7000122070312, :width 855.9999999999999, :height 1068.8263254113344}), :page 117}, :content {:text "在其生命周期的任何时候都不能再重新赋予新值"}, :properties {:color "yellow"}} {:id #uuid "63bc0cdb-1f30-426e-b3b6-31d840880b9e", :page 118, :position {:bounding {:x1 0, :y1 330.4625015258789, :x2 776.8205932378769, :y2 451.19998931884766, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 470.7845824956894, :y1 330.4625015258789, :x2 578.4499877691269, :y2 349.66251373291016, :width 855.9999999999999, :height 1068.8263254113344} {:x1 627.7749999761581, :y1 330.4625015258789, :x2 776.8205932378769, :y2 349.66251373291016, :width 855.9999999999999, :height 1068.8263254113344} {:x1 579.2250121831894, :y1 332.5250015258789, :x2 622.9825195074081, :y2 346.6124954223633, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.98750150203705, :y1 352.62500762939453, :x2 200.4054321050644, :y2 371.8250198364258, :width 855.9999999999999, :height 1068.8263254113344} {:x1 0, :y1 428.8000259399414, :x2 0, :y2 451.19998931884766, :width 855.9999999999999, :height 1068.8263254113344}), :page 118}, :content {:text "，赋值为对象的 const 变量不能再被重新赋值为其他引用值"}, :properties {:color "yellow"}} {:id #uuid "63bc0db2-6a64-4939-a798-94f1043416b7", :page 119, :position {:bounding {:x1 132.28749692440033, :y1 837.1125335693359, :x2 220.02939450740814, :y2 858.7125396728516, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 132.28749692440033, :y1 837.1125335693359, :x2 220.02939450740814, :y2 858.7125396728516, :width 855.9999999999999, :height 1068.8263254113344}), :page 119}, :content {:text "垃圾回收"}, :properties {:color "yellow"}} {:id #uuid "63bc0dc5-d9c7-411d-b66a-55ab13e4625a", :page 120, :position {:bounding {:x1 171.53749692440033, :y1 291.7375183105469, :x2 246.81030881404877, :y2 310.13751220703125, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 171.53749692440033, :y1 291.7375183105469, :x2 246.81030881404877, :y2 310.13751220703125, :width 855.9999999999999, :height 1068.8263254113344}), :page 120}, :content {:text "标记清理"}, :properties {:color "yellow"}} {:id #uuid "63bc0f52-6311-4d99-9bba-e863b361e33e", :page 120, :position {:bounding {:x1 0, :y1 476.79998779296875, :x2 776.7411254644394, :y2 523.7625122070312, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 476.79998779296875, :x2 0, :y2 499.20001220703125, :width 855.9999999999999, :height 1068.8263254113344} {:x1 140.75000607967377, :y1 482.4000244140625, :x2 776.7411254644394, :y2 501.60003662109375, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.99999845027924, :y1 504.5625, :x2 629.9047836065292, :y2 523.7625122070312, :width 855.9999999999999, :height 1068.8263254113344}), :page 120}, :content {:text "垃圾回收程序运行的时候，会标记内存中存储的所有变量（记住，标记方法有很多种）。然后，它会将所有在上下文中的变量，以及被在上下文中的变量引用的变量的标记去掉。"}, :properties {:color "yellow"}} {:id #uuid "63bc0f5e-7bef-4c35-91f6-d02818ac434d", :page 120, :position {:bounding {:x1 171.53749692440033, :y1 631.3500213623047, :x2 246.81030881404877, :y2 649.7500152587891, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 171.53749692440033, :y1 631.3500213623047, :x2 246.81030881404877, :y2 649.7500152587891, :width 855.9999999999999, :height 1068.8263254113344}), :page 120}, :content {:text "引用计数"}, :properties {:color "yellow"}} {:id #uuid "63bc1137-3920-4f59-b512-d471262495f2", :page 120, :position {:bounding {:x1 0, :y1 604.8000030517578, :x2 776.9361938238144, :y2 730.2250213623047, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 604.8000030517578, :x2 0, :y2 627.2000274658203, :width 855.9999999999999, :height 1068.8263254113344} {:x1 568.3040527105331, :y1 688.8500213623047, :x2 776.9361938238144, :y2 708.0500335693359, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.98750150203705, :y1 711.0250091552734, :x2 242.92500913143158, :y2 730.2250213623047, :width 855.9999999999999, :height 1068.8263254113344}), :page 120}, :content {:text "如果同一个值又被赋给另一个变量，那么引用数加 1"}, :properties {:color "yellow"}} {:id #uuid "63bc1140-2c06-4469-b08e-bf62922610a3", :page 120, :position {:bounding {:x1 317.42978513240814, :y1 711.0250091552734, :x2 731.7375243902206, :y2 730.2250213623047, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 317.42978513240814, :y1 711.0250091552734, :x2 731.7375243902206, :y2 730.2250213623047, :width 855.9999999999999, :height 1068.8263254113344}), :page 120}, :content {:text "如果保存对该值引用的变量被其他值给覆盖了，那么引用数减 1"}, :properties {:color "yellow"}} {:id #uuid "63bc115c-f35c-42d7-a1e4-8e43fa7d53bf", :page 120, :position {:bounding {:x1 0, :y1 668.8000259399414, :x2 773.2894653081894, :y2 819.5750274658203, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 668.8000259399414, :x2 0, :y2 691.2000274658203, :width 855.9999999999999, :height 1068.8263254113344} {:x1 702.9122680425644, :y1 777.6000213623047, :x2 773.2894653081894, :y2 796.8000335693359, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.96249997615814, :y1 800.3750305175781, :x2 541.5000365972519, :y2 819.5750274658203, :width 855.9999999999999, :height 1068.8263254113344}), :page 120}, :content {:text "所谓循环引用，就是对象 A 有一个指针指向对象 B，而对象 B 也引用了对象 A"}, :properties {:color "yellow"}} {:id #uuid "63bc11cf-c53c-4d11-81be-01171fafb985", :page 121, :position {:bounding {:x1 0, :y1 268.8000183105469, :x2 745.3426269292831, :y2 499.9875183105469, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 268.8000183105469, :x2 0, :y2 291.20001220703125, :width 855.9999999999999, :height 1068.8263254113344} {:x1 109.64999997615814, :y1 458.625, :x2 745.3426269292831, :y2 477.82501220703125, :width 855.9999999999999, :height 1068.8263254113344} {:x1 79.87499845027924, :y1 480.7875061035156, :x2 154.4033569097519, :y2 499.9875183105469, :width 855.9999999999999, :height 1068.8263254113344}), :page 121}, :content {:text "为避免类似的循环引用问题，应该在确保不使用的情况下切断原生 JavaScript 对象与 DOM 元素之间的连接。"}, :properties {:color "yellow"}} {:id #uuid "63bc11d8-86fd-4c8e-82e8-83f8ab1dc595", :page 121, :position {:bounding {:x1 140.46249997615814, :y1 710.8875122070312, :x2 178.10515439510345, :y2 729.2875061035156, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 140.46249997615814, :y1 710.8875122070312, :x2 178.10515439510345, :y2 729.2875061035156, :width 855.9999999999999, :height 1068.8263254113344}), :page 121}, :content {:text "性能"}, :properties {:color "yellow"}} {:id #uuid "63bc1231-86f5-4e72-8ad3-d132f0d86743", :page 121, :position {:bounding {:x1 0, :y1 428.8000011444092, :x2 746.9793990850449, :y2 787.5874938964844, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 428.8000011444092, :x2 0, :y2 451.20000076293945, :width 855.9999999999999, :height 1068.8263254113344} {:x1 109.66250455379486, :y1 746.2250061035156, :x2 746.9793990850449, :y2 765.4250183105469, :width 855.9999999999999, :height 1068.8263254113344} {:x1 79.89999997615814, :y1 768.3875122070312, :x2 199.15193784236908, :y2 787.5874938964844, :width 855.9999999999999, :height 1068.8263254113344}), :page 121}, :content {:text "垃圾回收程序会周期性运行，如果内存中分配了很多变量，则可能造成性能损失，因此垃圾回收的时间调度很重要。"}, :properties {:color "yellow"}} {:id #uuid "63bc127a-7518-4648-b954-a8b05c39fe44", :page 121, :position {:bounding {:x1 0, :y1 524.8000030517578, :x2 746.4758666753769, :y2 920.75, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 524.8000030517578, :x2 0, :y2 547.1999969482422, :width 855.9999999999999, :height 1068.8263254113344} {:x1 92.80444180965424, :y1 879.2875061035156, :x2 746.4758666753769, :y2 898.4875183105469, :width 855.9999999999999, :height 1068.8263254113344} {:x1 79.91250455379486, :y1 901.5500183105469, :x2 124.5533355474472, :y2 920.75, :width 855.9999999999999, :height 1068.8263254113344}), :page 121}, :content {:text "一次完整的垃圾回收之后，V8 的堆增长策略会根据活跃对象的数量外加一些余量来确定何时再次垃圾回收"}, :properties {:color "yellow"}} {:id #uuid "63bc1292-b061-4e55-99f8-d4fe3ef100a3", :page 122, :position {:bounding {:x1 0, :y1 165.63751220703125, :x2 777.7290405035019, :y2 291.20001220703125, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 140.73750913143158, :y1 165.63751220703125, :x2 777.7290405035019, :y2 184.8375244140625, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.97500455379486, :y1 187.27499389648438, :x2 230.16341245174408, :y2 206.47500610351562, :width 855.9999999999999, :height 1068.8263254113344} {:x1 0, :y1 268.79998779296875, :x2 0, :y2 291.20001220703125, :width 855.9999999999999, :height 1068.8263254113344}), :page 122}, :content {:text "IE7 发布后，JavaScript 引擎的垃圾回收程序被调优为动态改变分配变量、字面量或数组槽位等会触发垃圾回收的阈值"}, :properties {:color "yellow"}} {:id #uuid "63bc1371-87ef-49b5-b7d7-7db45049d022", :page 122, :position {:bounding {:x1 154.3477691411972, :y1 371.2875061035156, :x2 246.81030881404877, :y2 395.2875061035156, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 154.3477691411972, :y1 371.2875061035156, :x2 154.35127866268158, :y2 395.2875061035156, :width 855.9999999999999, :height 1068.8263254113344} {:x1 171.53749692440033, :y1 373.23751068115234, :x2 246.81030881404877, :y2 391.63751220703125, :width 855.9999999999999, :height 1068.8263254113344}), :page 122}, :content {:text "内存管理"}, :properties {:color "yellow"}} {:id #uuid "63bc1386-0ce9-4e25-9402-5312e820eda5", :page 122, :position {:bounding {:x1 0, :y1 476.8000030517578, :x2 777.0930541753769, :y2 582.9875183105469, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 476.8000030517578, :x2 0, :y2 499.20001220703125, :width 855.9999999999999, :height 1068.8263254113344} {:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.2000122070312, :width 855.9999999999999, :height 1068.8263254113344} {:x1 508.762518286705, :y1 519.4875183105469, :x2 777.0930541753769, :y2 538.6875, :width 855.9999999999999, :height 1068.8263254113344} {:x1 568.2375243902206, :y1 541.625, :x2 776.8808959722519, :y2 560.8250122070312, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.98750150203705, :y1 541.6500244140625, :x2 528.2743362188339, :y2 560.8500061035156, :width 855.9999999999999, :height 1068.8263254113344} {:x1 534.3500121831894, :y1 543.6875, :x2 569.3855346441269, :y2 557.7750244140625, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.97500455379486, :y1 563.7875061035156, :x2 181.02901303768158, :y2 582.9875183105469, :width 855.9999999999999, :height 1068.8263254113344}), :page 122}, :content {:text "优化内存占用的最佳手段就是保证在执行代码时只保存必要的数据。如果数据不再必要，那么把它设置为 null，从而释放其引用。这也可以叫作解除引用"}, :properties {:color "yellow"}} {:id #uuid "63bc1433-5260-4691-989f-15529ed2a735", :page 122, :position {:bounding {:x1 0, :y1 716.8000183105469, :x2 777.1588500738144, :y2 891.8999938964844, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 716.8000183105469, :x2 0, :y2 739.2000122070312, :width 855.9999999999999, :height 1068.8263254113344} {:x1 334.46387326717377, :y1 850.5375061035156, :x2 353.12500607967377, :y2 869.7375183105469, :width 855.9999999999999, :height 1068.8263254113344} {:x1 464.200018286705, :y1 850.5375061035156, :x2 777.1588500738144, :y2 869.7375183105469, :width 855.9999999999999, :height 1068.8263254113344} {:x1 355.200018286705, :y1 852.6000061035156, :x2 460.0724548101425, :y2 866.6875305175781, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.97500455379486, :y1 872.7000427246094, :x2 304.7126144170761, :y2 891.8999938964844, :width 855.9999999999999, :height 1068.8263254113344}), :page 122}, :content {:text "但 globalPerson 是一个全局变量，应该在不再需要时手动解除其引用，最后一行就是这么做的"}, :properties {:color "yellow"}} {:id #uuid "63bc1436-4560-44ea-8fa9-a7454704f510", :page 122, :position {:bounding {:x1 0, :y1 748.8000183105469, :x2 778.1561645269394, :y2 936.3125305175781, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 748.8000183105469, :x2 0, :y2 771.2000122070312, :width 855.9999999999999, :height 1068.8263254113344} {:x1 585.4392455816269, :y1 894.8625183105469, :x2 778.1561645269394, :y2 914.0625305175781, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.98750150203705, :y1 917.1125183105469, :x2 528.2743362188339, :y2 936.3125305175781, :width 855.9999999999999, :height 1068.8263254113344}), :page 122}, :content {:text "解除引用的关键在于确保相关的值已经不在上下文里了，因此它在下次垃圾回收时会被回收。"}, :properties {:color "yellow"}} {:id #uuid "63bc1496-38a9-4e29-b833-e60c51387f89", :page 122, :position {:bounding {:x1 0, :y1 684.8000183105469, :x2 776.4281371831894, :y2 847.5750427246094, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 684.8000183105469, :x2 0, :y2 707.2000122070312, :width 855.9999999999999, :height 1068.8263254113344} {:x1 590.7803100347519, :y1 806.1250305175781, :x2 605.5787719488144, :y2 825.3250427246094, :width 855.9999999999999, :height 1068.8263254113344} {:x1 701.9499877691269, :y1 806.1250305175781, :x2 776.4281371831894, :y2 825.3250427246094, :width 855.9999999999999, :height 1068.8263254113344} {:x1 604.6750243902206, :y1 808.1875305175781, :x2 704.9624999761581, :y2 822.2749938964844, :width 855.9999999999999, :height 1068.8263254113344} {:x1 110.98750150203705, :y1 828.3750305175781, :x2 244.60039365291595, :y2 847.5750427246094, :width 855.9999999999999, :height 1068.8263254113344} {:x1 349.46249997615814, :y1 828.3750305175781, :x2 364.33749997615814, :y2 847.5750427246094, :width 855.9999999999999, :height 1068.8263254113344} {:x1 461.1124938726425, :y1 828.3750305175781, :x2 476.33701169490814, :y2 847.5750427246094, :width 855.9999999999999, :height 1068.8263254113344} {:x1 598.0000365972519, :y1 828.3750305175781, :x2 761.9035400152206, :y2 847.5750427246094, :width 855.9999999999999, :height 1068.8263254113344} {:x1 247.96249997615814, :y1 830.4375305175781, :x2 352.83493649959564, :y2 844.5249938964844, :width 855.9999999999999, :height 1068.8263254113344} {:x1 363.83749997615814, :y1 830.4375305175781, :x2 459.98789060115814, :y2 844.5249938964844, :width 855.9999999999999, :height 1068.8263254113344} {:x1 479.700018286705, :y1 830.4375305175781, :x2 601.9298461675644, :y2 844.5249938964844, :width 855.9999999999999, :height 1068.8263254113344}), :page 122}, :content {:text "，localPerson 作为函数值被返回，并被赋值给 globalPerson。localPerson 在 createPerson()执行完成超出上下文后会"}, :properties {:color "green"}} {:id #uuid "63bc15e5-dfca-4a4e-95b5-31706aa5c48d", :page 123, :position {:bounding {:x1 126.18749845027924, :y1 171.3624973297119, :x2 236.60890805721283, :y2 186.56250953674316, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 126.18749845027924, :y1 171.3624973297119, :x2 236.60890805721283, :y2 186.56250953674316, :width 855.9999999999999, :height 1068.8263254113344}), :page 123}, :content {:text "隐藏类和删除操作"}, :properties {:color "yellow"}} {:id #uuid "63bc160b-4f6d-46fd-869a-e6e99031f8a5", :page 123, :position {:bounding {:x1 0, :y1 620.7999992370605, :x2 745.7311156988144, :y2 977.9125061035156, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 620.7999992370605, :x2 0, :y2 643.2000007629395, :width 855.9999999999999, :height 1068.8263254113344} {:x1 303.5004333257675, :y1 936.5375061035156, :x2 527.1133788824081, :y2 955.7375183105469, :width 855.9999999999999, :height 1068.8263254113344} {:x1 566.9250243902206, :y1 936.5375061035156, :x2 745.7311156988144, :y2 955.7375183105469, :width 855.9999999999999, :height 1068.8263254113344} {:x1 533.1250365972519, :y1 938.6000061035156, :x2 568.0586303472519, :y2 952.6875, :width 855.9999999999999, :height 1068.8263254113344} {:x1 79.89999997615814, :y1 958.7124938964844, :x2 512.1374877691269, :y2 977.9125061035156, :width 855.9999999999999, :height 1068.8263254113344}), :page 123}, :content {:text "最佳实践是把不想要的属性设置为 null。这样可以保持隐藏类不变和继续共享，同时也能达到删除引用值供垃圾回收程序回收的效果"}, :properties {:color "yellow"}} {:id #uuid "63bc165a-b480-45c0-a458-5a3e3ff096b1", :page 124, :position {:bounding {:x1 140.75000607967377, :y1 354.7749938964844, :x2 528.2497924566269, :y2 373.9750061035156, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 140.75000607967377, :y1 354.7749938964844, :x2 528.2497924566269, :y2 373.9750061035156, :width 855.9999999999999, :height 1068.8263254113344}), :page 124}, :content {:text "意外声明全局变量是最常见但也最容易修复的内存泄漏问题"}, :properties {:color "yellow"}} {:id #uuid "63bc1676-162a-4c17-a2c9-ce3fca2948dc", :page 124, :position {:bounding {:x1 140.75000607967377, :y1 544.7249984741211, :x2 751.8617004156113, :y2 563.9250106811523, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 140.75000607967377, :y1 544.7249984741211, :x2 751.8617004156113, :y2 563.9250106811523, :width 855.9999999999999, :height 1068.8263254113344}), :page 124}, :content {:text "定时器也可能会悄悄地导致内存泄漏。下面的代码中，定时器的回调通过闭包引用了外部变量"}, :properties {:color "yellow"}} {:id #uuid "63bc1782-8e34-468e-a63e-a1e014cae268", :page 124, :position {:bounding {:x1 140.73750913143158, :y1 683.0374984741211, :x2 492.460760474205, :y2 702.2375106811523, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 140.73750913143158, :y1 683.0374984741211, :x2 492.460760474205, :y2 702.2375106811523, :width 855.9999999999999, :height 1068.8263254113344}), :page 124}, :content {:text "使用 JavaScript 闭包很容易在不知不觉间造成内存泄漏"}, :properties {:color "yellow"}} {:id #uuid "63bc17c1-c32e-42ed-bc4c-f36e4f02be04", :page 125, :position {:bounding {:x1 0, :y1 12.79998779296875, :x2 747.0685790777206, :y2 162.06253051757812, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 12.79998779296875, :x2 0, :y2 35.20001220703125, :width 855.9999999999999, :height 1068.8263254113344} {:x1 554.3516601324081, :y1 120.69998168945312, :x2 747.0685790777206, :y2 139.89999389648438, :width 855.9999999999999, :height 1068.8263254113344} {:x1 79.89999997615814, :y1 142.86251831054688, :x2 643.2782348394394, :y2 162.06253051757812, :width 855.9999999999999, :height 1068.8263254113344}), :page 125}, :content {:text "如果有很多对象被初始化，然后一下子又都超出了作用域，那么浏览器就会采用更激进的方式调度垃圾回收程序运行"}, :properties {:color "yellow"}} {:id #uuid "63bc17e3-4c7e-4cfb-ba38-bb854d518fef", :page 125, :position {:bounding {:x1 0, :y1 220.8000030517578, :x2 747.0686248540878, :y2 418.87501525878906, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 220.8000030517578, :x2 0, :y2 243.1999969482422, :width 855.9999999999999, :height 1068.8263254113344} {:x1 243.06178891658783, :y1 377.4250030517578, :x2 747.0686248540878, :y2 396.62501525878906, :width 855.9999999999999, :height 1068.8263254113344} {:x1 79.89999997615814, :y1 399.6750030517578, :x2 109.66055142879486, :y2 418.87501525878906, :width 855.9999999999999, :height 1068.8263254113344}), :page 125}, :content {:text "不要动态创建矢量对象，比如可以修改上面的函数，让它使用一个已有的矢量对象"}, :properties {:color "yellow"}} {:id #uuid "63bc1808-e17f-4aa7-80ed-fd865338a7ed", :page 125, :position {:bounding {:x1 0, :y1 364.8000183105469, :x2 753.2131713628769, :y2 594.1625061035156, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 0, :y1 364.8000183105469, :x2 0, :y2 387.20001220703125, :width 855.9999999999999, :height 1068.8263254113344} {:x1 109.66250455379486, :y1 552.8000183105469, :x2 753.2131713628769, :y2 572, :width 855.9999999999999, :height 1068.8263254113344} {:x1 79.89999997615814, :y1 574.9624938964844, :x2 488.80332028865814, :y2 594.1625061035156, :width 855.9999999999999, :height 1068.8263254113344}), :page 125}, :content {:text "一个策略是使用对象池。在初始化的某一时刻，可以创建一个对象池，用来管理一组可回收的对象。应用程序可以向这个对象池请求一个对象、设置其属性、使用它"}, :properties {:color "yellow"}} {:id #uuid "63bc1853-a0b0-4d79-9872-cb88dbb70e15", :page 126, :position {:bounding {:x1 200.41078794002533, :y1 310.6499938964844, :x2 722.1050018072128, :y2 329.85003662109375, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 200.41078794002533, :y1 310.6499938964844, :x2 722.1050018072128, :y2 329.85003662109375, :width 855.9999999999999, :height 1068.8263254113344}), :page 126}, :content {:text "可以在初始化时就创建一个大小够用的数组，从而避免上述先删除再创建的操作"}, :properties {:color "yellow"}} {:id #uuid "63bc1876-9120-4818-a83b-7ce170667e05", :page 126, :position {:bounding {:x1 163.36250913143158, :y1 476.08750915527344, :x2 207.18962705135345, :y2 497.68751525878906, :width 855.9999999999999, :height 1068.8263254113344}, :rects ({:x1 163.36250913143158, :y1 476.08750915527344, :x2 207.18962705135345, :y2 497.68751525878906, :width 855.9999999999999, :height 1068.8263254113344}), :page 126}, :content {:text "小结"}, :properties {:color "yellow"}} {:id #uuid "63bd5ef7-47b4-4519-a0ef-25e198499ea7", :page 128, :position {:bounding {:x1 0, :y1 332.8000183105469, :x2 827.4251098632812, :y2 465.00001525878906, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 332.8000183105469, :x2 0, :y2 355.2000198364258, :width 911.6666666666666, :height 1138.3333333333333} {:x1 498.21258544921875, :y1 421.4000244140625, :x2 827.4251098632812, :y2 441.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999694824219, :y1 445.00001525878906, :x2 423.84226989746094, :y2 465.00001525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 128}, :content {:text "在 ECMAScript 中，引用类型是把数据和功能组织到一起的结构，经常被人错误地称作“类”"}, :properties {:color "yellow"}} {:id #uuid "63bd5f3f-a101-4b6b-86e8-9b427b2a5bdc", :page 128, :position {:bounding {:x1 0, :y1 364.8000183105469, :x2 828.1057739257812, :y2 512.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 364.8000183105469, :x2 0, :y2 387.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 700.9190063476562, :y1 468.6000213623047, :x2 828.1057739257812, :y2 488.6000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999694824219, :y1 492.2125244140625, :x2 562.1099853515625, :y2 512.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 128}, :content {:text "引用类型有时候也被称为对象定义，因为它们描述了自己的对象应有的属性和方法"}, :properties {:color "yellow"}} {:id #uuid "63bd5f4d-d314-4341-92a2-14522ea031c0", :page 128, :position {:bounding {:x1 152.33433532714844, :y1 852.9000244140625, :x2 228.14846801757812, :y2 883.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 152.33433532714844, :y1 852.9000244140625, :x2 152.33738708496094, :y2 883.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 174.10000610351562, :y1 856.0500183105469, :x2 228.14846801757812, :y2 878.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 128}, :content {:text "Date"}, :properties {:color "yellow"}} {:id #uuid "63bd5f86-b6db-444c-a06c-c050c6b857ed", :page 129, :position {:bounding {:x1 398.8880920410156, :y1 128.6999969482422, :x2 636.5294799804688, :y2 148.6999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 398.8880920410156, :y1 128.6999969482422, :x2 636.5294799804688, :y2 148.6999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 129}, :content {:text "创建的对象将保存当前日期和时间"}, :properties {:color "yellow"}} {:id #uuid "63bd6093-8db6-4e00-a459-c80320068578", :page 130, :position {:bounding {:x1 182.6999969482422, :y1 511.31251525878906, :x2 282.8625183105469, :y2 531.3125152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.6999969482422, :y1 511.31251525878906, :x2 282.8625183105469, :y2 531.3125152587891, :width 911.6666666666666, :height 1138.3333333333333}), :page 130}, :content {:text "继承的方法"}, :properties {:color "yellow"}} {:id #uuid "63bd60af-148b-4768-b597-494f86b19a41", :page 130, :position {:bounding {:x1 0, :y1 524.8000030517578, :x2 827.1526489257812, :y2 616.4124908447266, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 524.8000030517578, :x2 0, :y2 547.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 464.20001220703125, :y1 574.0500030517578, :x2 827.1526489257812, :y2 594.0500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 464.20001220703125, :y1 574.8499908447266, :x2 507.8375244140625, :y2 589.8499908447266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 556.2000122070312, :y1 574.8499908447266, :x2 691.8754272460938, :y2 589.8499908447266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.1875, :y1 596.4124908447266, :x2 356.1204833984375, :y2 616.4124908447266, :width 911.6666666666666, :height 1138.3333333333333}), :page 130}, :content {:text "Date 类型的 toLocaleString()方法返回与浏览器运行的本地环境一致的日期和时间"}, :properties {:color "yellow"}} {:id #uuid "63bd60ba-2f68-4c3f-ba46-d3d95815cab6", :page 130, :position {:bounding {:x1 0, :y1 556.8000030517578, :x2 827.1926879882812, :y2 663.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 483.3999938964844, :y1 621.2500152587891, :x2 827.1926879882812, :y2 636.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.1875, :y1 643.6125030517578, :x2 426.5760803222656, :y2 663.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 130}, :content {:text "toString()方法通常返回带时区信息的日期和时间，而时间也是以 24 小时制（0~23）表示的"}, :properties {:color "yellow"}} {:id #uuid "63bd60c7-b957-485d-b16d-683440657ca6", :page 130, :position {:bounding {:x1 148.1999969482422, :y1 823.5500183105469, :x2 828.7753295898438, :y2 838.75, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.1999969482422, :y1 823.5500183105469, :x2 828.7753295898438, :y2 838.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 130}, :content {:text "Date 类型的 valueOf()方法根本就不返回字符串，这个方法被重写后返回的是日期的毫秒表示。"}, :properties {:color "yellow"}} {:id #uuid "63bd6104-68a8-4f04-a2eb-43c7b50922bc", :page 131, :position {:bounding {:x1 149.60000610351562, :y1 130.11248779296875, :x2 289.82501220703125, :y2 150.11248779296875, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.60000610351562, :y1 130.11248779296875, :x2 289.82501220703125, :y2 150.11248779296875, :width 911.6666666666666, :height 1138.3333333333333}), :page 131}, :content {:text "日期格式化方法"}, :properties {:color "yellow"}} {:id #uuid "63bd6117-1e9b-4b45-9bd3-5a798016310b", :page 131, :position {:bounding {:x1 149.60000610351562, :y1 459.55000019073486, :x2 315.3999938964844, :y2 485.1500062942505, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 189.60000610351562, :y1 459.55000019073486, :x2 197.5500030517578, :y2 485.1500062942505, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.60000610351562, :y1 461.41251850128174, :x2 315.3999938964844, :y2 481.41251850128174, :width 911.6666666666666, :height 1138.3333333333333}), :page 131}, :content {:text "日期/时间组件方法"}, :properties {:color "yellow"}} {:id #uuid "63bd6164-4c6b-47d6-950b-0837a7cdab5d", :page 132, :position {:bounding {:x1 174.10000610351562, :y1 553.4499969482422, :x2 255.24603271484375, :y2 575.8500213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 174.10000610351562, :y1 553.4499969482422, :x2 255.24603271484375, :y2 575.8500213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 132}, :content {:text "RegExp"}, :properties {:color "yellow"}} {:id #uuid "63bd6233-647d-450b-a7c0-f113e829543f", :page 132, :position {:bounding {:x1 149.90000915527344, :y1 1023.2000427246094, :x2 609.26318359375, :y2 1043.2000427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000915527344, :y1 1023.2000427246094, :x2 609.26318359375, :y2 1043.2000427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 132}, :content {:text "与其他语言中的正则表达式类似，所有元字符在模式中也必须转义"}, :properties {:color "yellow"}} {:id #uuid "63bd629a-232c-4b78-aa1d-0d2b6834b66f", :page 133, :position {:bounding {:x1 0, :y1 236.80001068115234, :x2 793.8576049804688, :y2 502.2999954223633, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 236.80001068115234, :x2 0, :y2 259.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 495.29754638671875, :y1 458.6124954223633, :x2 793.8576049804688, :y2 478.6124954223633, :width 911.6666666666666, :height 1138.3333333333333} {:x1 656, :y1 460.6500015258789, :x2 717.6375122070312, :y2 475.6500015258789, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0875015258789, :y1 482.2999954223633, :x2 511.0049514770508, :y2 502.2999954223633, :width 911.6666666666666, :height 1138.3333333333333}), :page 133}, :content {:text "正则表达式也可以使用 RegExp 构造函数来创建，它接收两个参数：模式字符串和（可选的）标记字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd62d4-33c8-458c-ae9e-638849f676e7", :page 133, :position {:bounding {:x1 0, :y1 364.8000030517578, :x2 794.7130126953125, :y2 689.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 364.8000030517578, :x2 0, :y2 387.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 620.8406372070312, :y1 645.3999938964844, :x2 794.7130126953125, :y2 665.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0875015258789, :y1 669.0125122070312, :x2 244.2477798461914, :y2 689.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 133}, :content {:text "所有元字符都必须二次转义，包括转义字符序列"}, :properties {:color "yellow"}} {:id #uuid "63bd62fe-148a-497b-8776-72675bf24cf4", :page 133, :position {:bounding {:x1 164.28753662109375, :y1 877.4000396728516, :x2 734.2178344726562, :y2 897.4000396728516, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 164.28753662109375, :y1 877.4000396728516, :x2 734.2178344726562, :y2 897.4000396728516, :width 911.6666666666666, :height 1138.3333333333333} {:x1 199.8000030517578, :y1 879.4500427246094, :x2 261.4375, :y2 894.4500427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 133}, :content {:text "使用 RegExp 也可以基于已有的正则表达式实例，并可选择性地修改它们的标记："}, :properties {:color "yellow"}} {:id #uuid "63bd6322-68b0-413f-8dc6-150213da96b7", :page 134, :position {:bounding {:x1 164.38299560546875, :y1 128.25000953674316, :x2 337.5375061035156, :y2 153.85000038146973, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 164.38299560546875, :y1 128.25000953674316, :x2 164.3865203857422, :y2 153.85000038146973, :width 911.6666666666666, :height 1138.3333333333333} {:x1 182.6999969482422, :y1 130.7999973297119, :x2 337.5375061035156, :y2 150.00000953674316, :width 911.6666666666666, :height 1138.3333333333333}), :page 134}, :content {:text "RegExp 实例属性"}, :properties {:color "yellow"}} {:id #uuid "63bd6403-0f59-4930-ab58-1ebaaaff423f", :page 134, :position {:bounding {:x1 182.6999969482422, :y1 869.1000366210938, :x2 337.5375061035156, :y2 888.2999877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.6999969482422, :y1 869.1000366210938, :x2 337.5375061035156, :y2 888.2999877929688, :width 911.6666666666666, :height 1138.3333333333333}), :page 134}, :content {:text "RegExp 实例方法"}, :properties {:color "yellow"}} {:id #uuid "63bd6413-93f2-4196-bc7e-a75296d50d5b", :page 134, :position {:bounding {:x1 0, :y1 764.8000030517578, :x2 827.75, :y2 949.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 764.8000030517578, :x2 0, :y2 787.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 148.1999969482422, :y1 907.4500122070312, :x2 827.75, :y2 927.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 202.1999969482422, :y1 908.25, :x2 202.6710968017578, :y2 923.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 337.3999938964844, :y1 908.25, :x2 388.25, :y2 923.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999694824219, :y1 929.8125, :x2 228.62612915039062, :y2 949.8125, :width 911.6666666666666, :height 1138.3333333333333}), :page 134}, :content {:text "RegExp 实例的主要方法是 exec()，主要用于配合捕获组使用。这个方法只接收一个参数，即要应用模式的字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd6493-fbf9-4cd8-ae2c-df77963b1134", :page 135, :position {:bounding {:x1 0, :y1 204.7999973297119, :x2 794.4777221679688, :y2 415.1000003814697, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 204.7999973297119, :x2 0, :y2 227.20000648498535, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.80000305175781, :y1 371.4125003814697, :x2 794.4777221679688, :y2 391.4125003814697, :width 911.6666666666666, :height 1138.3333333333333} {:x1 391.3999938964844, :y1 373.45000648498535, :x2 442.348876953125, :y2 388.45000648498535, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 395.1000003814697, :x2 650.0676879882812, :y2 415.1000003814697, :width 911.6666666666666, :height 1138.3333333333333} {:x1 358.1000061035156, :y1 397.1500186920166, :x2 409.04888916015625, :y2 412.1500186920166, :width 911.6666666666666, :height 1138.3333333333333}), :page 135}, :content {:text "如果模式设置了全局标记，则每次调用 exec()方法会返回一个匹配的信息。如果没有设置全局标记，则无论对同一个字符串调用多少次 exec()，也只会返回第一个匹配的信息。"}, :properties {:color "yellow"}} {:id #uuid "63bd64f1-5131-4966-951e-701a7454ae2e", :page 135, :position {:bounding {:x1 116.78750610351562, :y1 669.0125122070312, :x2 762.66015625, :y2 689.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.78750610351562, :y1 669.0125122070312, :x2 762.66015625, :y2 689.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 135}, :content {:text "如果在这个模式上设置了 g 标记，则每次调用 exec()都会在字符串中向前搜索下一个匹配项"}, :properties {:color "yellow"}} {:id #uuid "63bd653b-f1c2-4e6c-a8dd-6c6eb5d130bd", :page 135, :position {:bounding {:x1 0, :y1 684.8000183105469, :x2 794.34521484375, :y2 1026.3125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 684.8000183105469, :x2 0, :y2 707.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.80000305175781, :y1 982.7000427246094, :x2 794.34521484375, :y2 1002.7000427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 407.3000183105469, :y1 984.7500305175781, :x2 458.1499938964844, :y2 999.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 1006.3125305175781, :x2 180.25552368164062, :y2 1026.3125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 135}, :content {:text "这次模式设置了全局标记，因此每次调用 exec()都会返回字符串中的下一个匹配项，直到搜索到字符串末尾。"}, :properties {:color "yellow"}} {:id #uuid "63bd6544-7206-4ca6-8ec2-f059e9d0cebe", :page 136, :position {:bounding {:x1 149.90000915527344, :y1 128.6999969482422, :x2 780.4119873046875, :y2 148.6999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000915527344, :y1 128.6999969482422, :x2 780.4119873046875, :y2 148.6999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 327.8999938964844, :y1 130.75, :x2 335.4375, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 433, :y1 130.75, :x2 483.8500061035156, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 554.2999877929688, :y1 130.75, :x2 635.7711181640625, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 136}, :content {:text "如果模式设置了粘附标记 y，则每次调用 exec()就只会在 lastIndex 的位置上寻找匹配项"}, :properties {:color "yellow"}} {:id #uuid "63bd65d2-047d-4cc0-80d4-47a579c66cdb", :page 134, :position {:bounding {:x1 0, :y1 796.7999877929688, :x2 826.9325561523438, :y2 997.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 796.7999877929688, :x2 0, :y2 819.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 428.144287109375, :y1 953.3999938964844, :x2 826.9325561523438, :y2 973.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 584.7000122070312, :y1 955.4499816894531, :x2 630.2705688476562, :y2 970.4499816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 654.1000366210938, :y1 955.4499816894531, :x2 696.4703369140625, :y2 970.4499816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 714, :y1 955.4499816894531, :x2 759.4711303710938, :y2 970.4499816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.1875, :y1 977.1000061035156, :x2 468.78326416015625, :y2 997.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 292.3000183105469, :y1 979.1499938964844, :x2 344.9375, :y2 994.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 134}, :content {:text "包含两个额外的属性：index 和 input。index 是字符串中匹配模式的起始位置，input 是要查找的字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd66bf-f9fc-4bb2-af99-799ec906130e", :page 136, :position {:bounding {:x1 0, :y1 505.7000198364258, :x2 827.63525390625, :y2 563.2000198364258, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000915527344, :y1 505.7000198364258, :x2 827.63525390625, :y2 525.7000198364258, :width 911.6666666666666, :height 1138.3333333333333} {:x1 345.3999938964844, :y1 507.75000762939453, :x2 396.25, :y2 522.7500076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999694824219, :y1 529.3125076293945, :x2 331.85113525390625, :y2 549.3125076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 153.8000030517578, :y1 531.3500137329102, :x2 187.70469665527344, :y2 546.3500137329102, :width 911.6666666666666, :height 1138.3333333333333} {:x1 271, :y1 531.3500137329102, :x2 313.3703308105469, :y2 546.3500137329102, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 540.7999954223633, :x2 0, :y2 563.2000198364258, :width 911.6666666666666, :height 1138.3333333333333}), :page 136}, :content {:text "正则表达式的另一个方法是 test()，接收一个字符串参数。如果输入的文本与模式匹配，则参数返回 true，否则返回 false。"}, :properties {:color "yellow"}} {:id #uuid "63bd6711-b721-4cfc-a8a9-b231049b9142", :page 136, :position {:bounding {:x1 213.1875, :y1 908.5, :x2 583.4725952148438, :y2 928.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 213.1875, :y1 908.5, :x2 583.4725952148438, :y2 928.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 312.20001220703125, :y1 910.5500183105469, :x2 388.4750061035156, :y2 925.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 136}, :content {:text "正则表达式的 valueOf()方法返回正则表达式本身。"}, :properties {:color "yellow"}} {:id #uuid "63bd6718-34dd-4f80-b598-767393920bf7", :page 136, :position {:bounding {:x1 182.6999969482422, :y1 969.7000122070312, :x2 377.6000061035156, :y2 988.8999938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.6999969482422, :y1 969.7000122070312, :x2 377.6000061035156, :y2 988.8999938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 136}, :content {:text "RegExp 构造函数属性"}, :properties {:color "yellow"}} {:id #uuid "63bd676b-e44a-4767-bc65-921e9b42ef9a", :page 137, :position {:bounding {:x1 116.78750610351562, :y1 705.3125457763672, :x2 589.9609985351562, :y2 725.3125457763672, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.78750610351562, :y1 705.3125457763672, :x2 589.9609985351562, :y2 725.3125457763672, :width 911.6666666666666, :height 1138.3333333333333}), :page 137}, :content {:text "这些属性名也可以替换成简写形式，只不过要使用中括号语法来访问"}, :properties {:color "yellow"}} {:id #uuid "63bd67aa-2dfc-4afd-8127-b63ef6d2147d", :page 137, :position {:bounding {:x1 0, :y1 652.8000335693359, :x2 790.114501953125, :y2 1027.3375396728516, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 652.8000335693359, :x2 0, :y2 675.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 115.10000610351562, :y1 988.5500335693359, :x2 790.114501953125, :y2 1008.5500335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 169.10000610351562, :y1 989.3500366210938, :x2 169.5710906982422, :y2 1004.3500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 730.7000122070312, :y1 989.3500366210938, :x2 790.114501953125, :y2 1004.3500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 1012.1375427246094, :x2 501.4276123046875, :y2 1027.3375396728516, :width 911.6666666666666, :height 1138.3333333333333}), :page 137}, :content {:text "RegExp 还有其他几个构造函数属性，可以存储最多 9 个捕获组的匹配项。这些属性通过 RegExp.$1~RegExp.$9 来访问，分别包含第 1~9 个捕获组的匹配项"}, :properties {:color "yellow"}} {:id #uuid "63bd67b1-e6ba-4a10-8fa7-8f975400506b", :page 138, :position {:bounding {:x1 182.6999969482422, :y1 428.01251220703125, :x2 262.8374938964844, :y2 448.01251220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.6999969482422, :y1 428.01251220703125, :x2 262.8374938964844, :y2 448.01251220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 138}, :content {:text "模式局限"}, :properties {:color "yellow"}} {:id #uuid "63bd67ba-0a2b-482f-9fd5-09c6cb182d81", :page 138, :position {:bounding {:x1 152.32606506347656, :y1 718, :x2 337.4664001464844, :y2 748.3999938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 152.32606506347656, :y1 718, :x2 152.32908630371094, :y2 748.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 173.97500610351562, :y1 720.4500122070312, :x2 337.4664001464844, :y2 743.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 138}, :content {:text "原始值包装类型"}, :properties {:color "yellow"}} {:id #uuid "63bd6801-621f-408e-959e-d557cbabc10e", :page 139, :position {:bounding {:x1 116.80000305175781, :y1 307.4125061035156, :x2 545.0353546142578, :y2 327.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.80000305175781, :y1 307.4125061035156, :x2 545.0353546142578, :y2 327.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 139}, :content {:text "引用类型与原始值包装类型的主要区别在于对象的生命周期。"}, :properties {:color "yellow"}} {:id #uuid "63bd6999-8a01-481c-a537-94228c590cb1", :page 139, :position {:bounding {:x1 116.80000305175781, :y1 509.7125244140625, :x2 651.9848022460938, :y2 529.7125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.80000305175781, :y1 509.7125244140625, :x2 651.9848022460938, :y2 529.7125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 231.60000610351562, :y1 511.75, :x2 290.9156188964844, :y2 526.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 309.5, :y1 511.75, :x2 363.9710998535156, :y2 526.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 387.8000183105469, :y1 511.75, :x2 449.3374938964844, :y2 526.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 139}, :content {:text "可以显式地使用 Boolean、Number 和 String 构造函数创建原始值包装对象"}, :properties {:color "yellow"}} {:id #uuid "63bd69ac-334b-4451-ba98-a72577a750df", :page 139, :position {:bounding {:x1 0, :y1 332.8000183105469, :x2 794.9029693603516, :y2 624.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 332.8000183105469, :x2 0, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 164.1999969482422, :y1 581.8500366210938, :x2 794.9029693603516, :y2 601.8500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 164.1999969482422, :y1 582.6500244140625, :x2 218.87527465820312, :y2 597.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 604.2125244140625, :x2 116.81303405761719, :y2 624.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 139}, :content {:text "Object 构造函数作为一个工厂方法，能够根据传入值的类型返回相应原始值包装类型的实例。"}, :properties {:color "yellow"}} {:id #uuid "63bd6a04-7d24-4003-accd-e6665b5d00da", :page 139, :position {:bounding {:x1 164.27503967285156, :y1 719.8125457763672, :x2 707.2264404296875, :y2 739.8125457763672, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 164.27503967285156, :y1 719.8125457763672, :x2 707.2264404296875, :y2 739.8125457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 199.8000030517578, :y1 721.8500366210938, :x2 234.4375, :y2 736.8500366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 139}, :content {:text "使用 new 调用原始值包装类型的构造函数，与调用同名的转型函数并不一样。"}, :properties {:color "yellow"}} {:id #uuid "63bd6a0a-dc55-457c-a315-ec5d89622289", :page 139, :position {:bounding {:x1 149.60000610351562, :y1 946.0000305175781, :x2 230.39450073242188, :y2 965.2000427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.60000610351562, :y1 946.0000305175781, :x2 230.39450073242188, :y2 965.2000427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 139}, :content {:text "Boolean"}, :properties {:color "yellow"}} {:id #uuid "63bd6a63-8c6b-4643-aad1-f703c2c085ae", :page 140, :position {:bounding {:x1 149.90000915527344, :y1 586.7000122070312, :x2 728.704833984375, :y2 606.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000915527344, :y1 586.7000122070312, :x2 728.704833984375, :y2 606.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 280.5, :y1 588.75, :x2 351.0375061035156, :y2 603.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 140}, :content {:text "理解原始布尔值和 Boolean 对象之间的区别非常重要，强烈建议永远不要使用后者"}, :properties {:color "yellow"}} {:id #uuid "63bd6a6d-d599-49b1-8609-bafbd724df91", :page 140, :position {:bounding {:x1 0, :y1 129.95000457763672, :x2 826.9376220703125, :y2 259.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.1999969482422, :y1 129.95000457763672, :x2 826.9376220703125, :y2 149.95000457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 211.1999969482422, :y1 130.75, :x2 211.6710968017578, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 314.6000061035156, :y1 130.75, :x2 390.973876953125, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 555.2000122070312, :y1 130.75, :x2 598.7374877929688, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 615.5, :y1 130.75, :x2 657.8703002929688, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 673.5, :y1 130.75, :x2 758.3395385742188, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999694824219, :y1 152.3125, :x2 472.76129150390625, :y2 172.3125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 324, :y1 154.3499984741211, :x2 374.8500061035156, :y2 169.3499984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 393.8000183105469, :y1 154.3499984741211, :x2 453.2145080566406, :y2 169.3499984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 236.8000030517578, :x2 0, :y2 259.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 140}, :content {:text "Boolean 的实例会重写 valueOf()方法，返回一个原始值 true 或 false。toString()方法被调用时也会被覆盖，返回字符串\"true\"或\"false\"。"}, :properties {:color "yellow"}} {:id #uuid "63bd6a7f-15d7-4cc9-a596-b05d2dc03968", :page 140, :position {:bounding {:x1 182.6999969482422, :y1 626.1000366210938, :x2 251.96371459960938, :y2 645.2999877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.6999969482422, :y1 626.1000366210938, :x2 251.96371459960938, :y2 645.2999877929688, :width 911.6666666666666, :height 1138.3333333333333}), :page 140}, :content {:text "Number"}, :properties {:color "yellow"}} {:id #uuid "63bd6ab1-7547-48a2-95b1-24b1c095c160", :page 140, :position {:bounding {:x1 151.3000030517578, :y1 713.2124938964844, :x2 426.19488525390625, :y2 726.5125427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 151.3000030517578, :y1 713.2124938964844, :x2 426.19488525390625, :y2 726.5125427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 140}, :content {:text "let numberObject = new Number(10);"}, :properties {:color "yellow"}} {:id #uuid "63bd6ad1-9fc0-4c28-8865-0c0f13009161", :page 140, :position {:bounding {:x1 0, :y1 668.8000411987305, :x2 821.7406616210938, :y2 805.2000427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 668.8000411987305, :x2 0, :y2 691.2000350952148, :width 911.6666666666666, :height 1138.3333333333333} {:x1 737, :y1 762.8500366210938, :x2 821.7406616210938, :y2 782.8500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 737, :y1 763.6500396728516, :x2 821.7406616210938, :y2 778.6500396728516, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999694824219, :y1 785.2000427246094, :x2 625.7853240966797, :y2 805.2000427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 140}, :content {:text "toString()方法可选地接收一个表示基数的参数，并返回相应基数形式的数值字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd6ae1-44bb-4335-9d78-b47a74738552", :page 140, :position {:bounding {:x1 148.1999969482422, :y1 941.8499984741211, :x2 530.5050048828125, :y2 957.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.1999969482422, :y1 941.8499984741211, :x2 530.5050048828125, :y2 957.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 140}, :content {:text "toFixed()方法返回包含指定小数点位数的数值字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd6af4-65ff-4413-9c42-0a6fe884b999", :page 141, :position {:bounding {:x1 180.10000610351562, :y1 266.84999084472656, :x2 540.5159301757812, :y2 282.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 180.10000610351562, :y1 266.84999084472656, :x2 540.5159301757812, :y2 282.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 141}, :content {:text "toFixed()方法可以表示有 0~20 个小数位的数值。"}, :properties {:color "yellow"}} {:id #uuid "63bd6b15-8aa3-48dd-9365-541dfb537a39", :page 141, :position {:bounding {:x1 0, :y1 124.80000114440918, :x2 794.3352661132812, :y2 375.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 124.80000114440918, :x2 0, :y2 147.20000076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 342.3999938964844, :y1 333.3500061035156, :x2 794.3352661132812, :y2 348.5500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 355.8000183105469, :x2 211.9314727783203, :y2 375.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 141}, :content {:text "toExponential()，返回以科学记数法（也称为指数记数法）表示的数值字符串。"}, :properties {:color "yellow"}} {:id #uuid "63bd6b32-7871-46d2-a66b-bc35154e7ab8", :page 141, :position {:bounding {:x1 360, :y1 357.0500183105469, :x2 780.627685546875, :y2 377.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 360, :y1 357.0500183105469, :x2 780.627685546875, :y2 377.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 360, :y1 357.8500061035156, :x2 487.2098388671875, :y2 372.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 141}, :content {:text "toExponential()也接收一个参数，表示结果中小数的位数"}, :properties {:color "yellow"}} {:id #uuid "63bd6b4b-d86b-472c-8c8e-b310d49c3326", :page 141, :position {:bounding {:x1 0, :y1 236.8000030517578, :x2 794.7817077636719, :y2 538.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 236.8000030517578, :x2 0, :y2 259.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 115.10000610351562, :y1 496.25, :x2 794.7817077636719, :y2 511.45001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0875015258789, :y1 518.6125183105469, :x2 132.67660522460938, :y2 538.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 141}, :content {:text "toPrecision()方法会根据情况返回最合理的输出结果，可能是固定长度，也可能是科学记数法形式。"}, :properties {:color "yellow"}} {:id #uuid "63bd6b52-baf1-4730-8eaa-ffe807fe5cf9", :page 141, :position {:bounding {:x1 196.1078643798828, :y1 518.6125183105469, :x2 599.5988159179688, :y2 538.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 196.1078643798828, :y1 518.6125183105469, :x2 599.5988159179688, :y2 538.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 141}, :content {:text "接收一个参数，表示结果中数字的总位数（不包含指数）。"}, :properties {:color "yellow"}} {:id #uuid "63bd6b60-9df9-4832-862d-f7c178454770", :page 141, :position {:bounding {:x1 180.10000610351562, :y1 759.3500061035156, :x2 557.6351318359375, :y2 774.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 180.10000610351562, :y1 759.3500061035156, :x2 557.6351318359375, :y2 774.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 141}, :content {:text "toPrecision()方法可以表示带 1~21 个小数位的数值"}, :properties {:color "yellow"}} {:id #uuid "63bd6b8a-6d5e-4c3d-9338-974ee41a26b5", :page 141, :position {:bounding {:x1 0, :y1 460.8000183105469, :x2 788.0203247070312, :y2 891.900016784668, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 460.8000183105469, :x2 0, :y2 483.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 417.85894775390625, :y1 848.2000122070312, :x2 788.0203247070312, :y2 868.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 616.4000244140625, :y1 850.2500152587891, :x2 678.0375366210938, :y2 865.2500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 694.7999877929688, :y1 850.2500152587891, :x2 788.0203247070312, :y2 865.2500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 871.900016784668, :x2 259.5699691772461, :y2 891.900016784668, :width 911.6666666666666, :height 1138.3333333333333}), :page 141}, :content {:text "处理原始数值和引用数值时，typeof 和 instacnceof操作符会返回不同的结果"}, :properties {:color "yellow"}} {:id #uuid "63bd6b97-f89a-4c3d-b542-00cf173a604d", :page 142, :position {:bounding {:x1 149.90000915527344, :y1 149.85000610351562, :x2 674.7845458984375, :y2 165.85000610351562, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000915527344, :y1 149.85000610351562, :x2 674.7845458984375, :y2 165.85000610351562, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text "ES6 新增了 Number.isInteger()方法，用于辨别一个数值是否保存为整数"}, :properties {:color "yellow"}} {:id #uuid "63bd6ba9-591b-4b1c-9e94-f8be14b6ff20", :page 142, :position {:bounding {:x1 151.3000030517578, :y1 216.51251220703125, :x2 504.33807373046875, :y2 229.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 151.3000030517578, :y1 216.51251220703125, :x2 504.33807373046875, :y2 229.8125, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text "console.log(Number.isInteger(1.00)); // true"}, :properties {:color "yellow"}} {:id #uuid "63bd6bcd-c4c1-45e8-8f07-e167a57da4bd", :page 142, :position {:bounding {:x1 0, :y1 257.64999771118164, :x2 828.0699310302734, :y2 355.20000076293945, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 157.490966796875, :y1 257.64999771118164, :x2 828.0699310302734, :y2 273.6500129699707, :width 911.6666666666666, :height 1138.3333333333333} {:x1 408.6000061035156, :y1 278.7750129699707, :x2 419.9877624511719, :y2 289.1750068664551, :width 911.6666666666666, :height 1138.3333333333333} {:x1 707.2999877929688, :y1 278.7750129699707, :x2 718.687744140625, :y2 289.1750068664551, :width 911.6666666666666, :height 1138.3333333333333} {:x1 376.20001220703125, :y1 280.70000076293945, :x2 408.63751220703125, :y2 300.70000076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 683.6000366210938, :y1 280.70000076293945, :x2 707.3375244140625, :y2 300.70000076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 720.6000366210938, :y1 280.70000076293945, :x2 764.05517578125, :y2 300.70000076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.1875, :y1 280.7125129699707, :x2 364.5910339355469, :y2 300.7125129699707, :width 911.6666666666666, :height 1138.3333333333333} {:x1 421.88751220703125, :y1 281.2500190734863, :x2 671.9910888671875, :y2 297.2500190734863, :width 911.6666666666666, :height 1138.3333333333333} {:x1 169.60000610351562, :y1 282.7500190734863, :x2 364.5910339355469, :y2 297.7500190734863, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 332.8000068664551, :x2 0, :y2 355.20000076293945, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text "EEE 754 数值格式有一个特殊的数值范围，在这个范围内二进制值可以表示一个整数值。这个数值范围从 Number.MIN_SAFE_INTEGER（253 + 1）到 Number.MAX_SAFE_INTEGER（253  1）。"}, :properties {:color "yellow"}} {:id #uuid "63bd6bd7-f3ca-4a6a-a949-0ffa19c877f6", :page 142, :position {:bounding {:x1 165.76524353027344, :y1 328.0000190734863, :x2 716.0000610351562, :y2 348.01250076293945, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 668.5, :y1 328.0000190734863, :x2 716.0000610351562, :y2 348.0000190734863, :width 911.6666666666666, :height 1138.3333333333333} {:x1 165.76524353027344, :y1 328.01250076293945, :x2 656.9254760742188, :y2 348.01250076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 470.3999938964844, :y1 330.0500068664551, :x2 656.9254760742188, :y2 345.0500068664551, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text "为了鉴别整数是否在这个范围内，可以使用 Number.isSafeInteger()方法："}, :properties {:color "yellow"}} {:id #uuid "63bd6bde-64c7-40df-8ba0-f7cd7dec0499", :page 142, :position {:bounding {:x1 182.6999969482422, :y1 459.5999946594238, :x2 251.96371459960938, :y2 478.8000068664551, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.6999969482422, :y1 459.5999946594238, :x2 251.96371459960938, :y2 478.8000068664551, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text "String"}, :properties {:color "yellow"}} {:id #uuid "63bd6bec-9d16-452b-bce3-5ddf99a15753", :page 142, :position {:bounding {:x1 149.90000915527344, :y1 618.8000183105469, :x2 623.554931640625, :y2 638.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000915527344, :y1 618.8000183105469, :x2 623.554931640625, :y2 638.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 185.5, :y1 620.8500061035156, :x2 247.03750610351562, :y2 635.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 343, :y1 620.8500061035156, :x2 404.5375061035156, :y2 635.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text "每个 String 对象都有一个 length 属性，表示字符串中字符的数量"}, :properties {:color "yellow"}} {:id #uuid "63bd6c20-254d-42d7-8326-db85580185cc", :page 142, :position {:bounding {:x1 169.6743621826172, :y1 764.1125183105469, :x2 276.1790466308594, :y2 784.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 169.6743621826172, :y1 764.1125183105469, :x2 276.1790466308594, :y2 784.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text "avaScript 字符"}, :properties {:color "yellow"}} {:id #uuid "63bd6c28-715e-482f-9088-c5745b3b26dd", :page 142, :position {:bounding {:x1 488.75421142578125, :y1 785.2000122070312, :x2 795.4937744140625, :y2 805.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 488.75421142578125, :y1 785.2000122070312, :x2 795.4937744140625, :y2 805.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text "对多数字符来说，每 16 位码元对应一个字符"}, :properties {:color "yellow"}} {:id #uuid "63bd6c28-27e5-45e0-b681-509202c480ec", :page 142, :position {:bounding {:x1 488.75421142578125, :y1 785.2000122070312, :x2 795.4937744140625, :y2 805.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 488.75421142578125, :y1 785.2000122070312, :x2 795.4937744140625, :y2 805.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text nil}, :properties {:color "yellow"}} {:id #uuid "63bd6c2f-aead-4706-b12c-96aaeba6f4c4", :page 142, :position {:bounding {:x1 197.5869903564453, :y1 893.0000305175781, :x2 684.3098754882812, :y2 913.0000305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 197.5869903564453, :y1 893.0000305175781, :x2 684.3098754882812, :y2 913.0000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 197.60000610351562, :y1 895.0500183105469, :x2 265.49420166015625, :y2 910.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 142}, :content {:text "charAt()方法返回给定索引位置的字符，由传给方法的整数参数指定"}, :properties {:color "yellow"}} {:id #uuid "63bd6c3e-7be3-402a-8ec4-8621a88b3a21", :page 143, :position {:bounding {:x1 152.40000915527344, :y1 280.95001220703125, :x2 496.1414794921875, :y2 296.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 152.40000915527344, :y1 280.95001220703125, :x2 496.1414794921875, :y2 296.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 143}, :content {:text "charCodeAt()方法可以查看指定码元的字符编码"}, :properties {:color "yellow"}} {:id #uuid "63bd6c5a-415c-4b44-b3f0-e20168a19697", :page 143, :position {:bounding {:x1 115.10000610351562, :y1 452.1500244140625, :x2 619.8826293945312, :y2 467.35003662109375, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.10000610351562, :y1 452.1500244140625, :x2 619.8826293945312, :y2 467.35003662109375, :width 911.6666666666666, :height 1138.3333333333333}), :page 143}, :content {:text "fromCharCode()方法用于根据给定的 UTF-16 码元创建字符串中的字符"}, :properties {:color "yellow"}} {:id #uuid "63bd6c61-2370-4f51-a2c1-0024d751bad6", :page 143, :position {:bounding {:x1 0, :y1 204.80001068115234, :x2 794.365234375, :y2 494.5125045776367, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 204.80001068115234, :x2 0, :y2 227.20000457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 730.9067993164062, :y1 450.90001678466797, :x2 794.365234375, :y2 470.90001678466797, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0875015258789, :y1 474.5125045776367, :x2 497.45716094970703, :y2 494.5125045776367, :width 911.6666666666666, :height 1138.3333333333333}), :page 143}, :content {:text "接受任意多个数值，并返回将所有数值对应的字符拼接起来的字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd6caf-6935-46b9-b6de-a0d5b1433de4", :page 143, :position {:bounding {:x1 0, :y1 492.80003356933594, :x2 793.7875366210938, :y2 902.9250335693359, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 492.80003356933594, :x2 0, :y2 515.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 508.80003356933594, :x2 0, :y2 531.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 762.1124877929688, :y1 835.7125396728516, :x2 793.7875366210938, :y2 855.7125396728516, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 859.3250350952148, :x2 793.7410278320312, :y2 879.3250427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 882.9250335693359, :x2 393.125, :y2 902.9250335693359, :width 911.6666666666666, :height 1138.3333333333333}), :page 143}, :content {:text "为了表示更多的字符，Unicode 采用了一个策略，即每个字符使用另外 16 位去选择一个增补平面。这种每个字符使用两个 16 位码元的策略称为代理对。"}, :properties {:color "yellow"}} {:id #uuid "63bd6cd9-655f-4508-b7d1-ef8dd8b1299c", :page 144, :position {:bounding {:x1 0, :y1 346.3500061035156, :x2 827.5429077148438, :y2 419.1999816894531, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 274.3000183105469, :y1 346.3500061035156, :x2 827.5429077148438, :y2 361.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.1875, :y1 368.7124938964844, :x2 281.3593444824219, :y2 388.7124938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 396.8000183105469, :x2 0, :y2 419.1999816894531, :width 911.6666666666666, :height 1138.3333333333333}), :page 144}, :content {:text "fromCharCode()方法仍然返回正确的结果，因为它实际上是基于提供的二进制表示直接组合成字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd6cef-29c4-49eb-aaa3-2b5bb42ff382", :page 144, :position {:bounding {:x1 0, :y1 440.75, :x2 827.2701416015625, :y2 483.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 465.1000061035156, :y1 440.75, :x2 827.2701416015625, :y2 460.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 460.79998779296875, :x2 0, :y2 483.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999694824219, :y1 463.20001220703125, :x2 321.51251220703125, :y2 483.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 144}, :content {:text "codePointAt()接收 16 位码元的索引并返回该索引位置上的码点（code point）。"}, :properties {:color "yellow"}} {:id #uuid "63bd6d4a-a946-4bef-a116-48050f3413ff", :page 144, :position {:bounding {:x1 0, :y1 668.8000411987305, :x2 835.2374877929688, :y2 785.5125045776367, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 668.8000411987305, :x2 0, :y2 691.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 693.9000244140625, :y1 741.900016784668, :x2 835.2374877929688, :y2 761.900016784668, :width 911.6666666666666, :height 1138.3333333333333} {:x1 696.7999877929688, :y1 743.9500045776367, :x2 812.9765625, :y2 758.9500045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.1875, :y1 765.5125045776367, :x2 562.3132934570312, :y2 785.5125045776367, :width 911.6666666666666, :height 1138.3333333333333}), :page 144}, :content {:text " fromCodePoint()。这个方法接收任意数量的码点，返回对应字符拼接起来的字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd6d53-05af-46b3-95ed-22115f33b894", :page 144, :position {:bounding {:x1 167.5, :y1 841.25, :x2 297.779052734375, :y2 856.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.5, :y1 841.25, :x2 297.779052734375, :y2 856.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 144}, :content {:text "normalize()方法"}, :properties {:color "yellow"}} {:id #uuid "63bd6d86-c8c8-415a-8b58-6376112a0160", :page 144, :position {:bounding {:x1 0, :y1 748.8000030517578, :x2 827.2301025390625, :y2 904.6999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 748.8000030517578, :x2 0, :y2 771.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 435.4725036621094, :y1 861.1000061035156, :x2 827.2301025390625, :y2 881.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999694824219, :y1 884.6999969482422, :x2 213.31407165527344, :y2 904.6999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 144}, :content {:text "有的字符既可以通过一个 BMP 字符表示，也可以通过一个代理对表示"}, :properties {:color "yellow"}} {:id #uuid "63bd6dbb-dcb2-48fd-bf49-a1bbfee2bbed", :page 145, :position {:bounding {:x1 116.80000305175781, :y1 128.70001220703125, :x2 402.25404357910156, :y2 148.70001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.80000305175781, :y1 128.70001220703125, :x2 402.25404357910156, :y2 148.70001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 145}, :content {:text "比较操作符不在乎字符看起来是什么样的"}, :properties {:color "yellow"}} {:id #uuid "63bd6dc4-9925-415b-850b-fb7a3efbc526", :page 145, :position {:bounding {:x1 238.48751831054688, :y1 308.4499969482422, :x2 443.6058044433594, :y2 324.4499969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 238.48751831054688, :y1 308.4499969482422, :x2 443.6058044433594, :y2 324.4499969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 145}, :content {:text "Unicode 提供了 4 种规范化形式"}, :properties {:color "yellow"}} {:id #uuid "63bd6dcb-36b0-4ed3-ae50-66e66593a256", :page 145, :position {:bounding {:x1 0, :y1 156.8000030517578, :x2 801.9000244140625, :y2 375.6625213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 156.8000030517578, :x2 0, :y2 179.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 252.886962890625, :y1 331.5124969482422, :x2 801.9000244140625, :y2 351.5124969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0625, :y1 355.6625213623047, :x2 567.3136596679688, :y2 375.6625213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 145}, :content {:text "这 4 种规范化形式是：NFD（Normalization Form D）、NFC（Normalization Form C）、 NFKD（Normalization Form KD）和 NFKC（Normalization Form KC）。"}, :properties {:color "yellow"}} {:id #uuid "63bd6dfc-9983-4888-af4f-eb90fa30c196", :page 145, :position {:bounding {:x1 116.80000305175781, :y1 490.20001220703125, :x2 742.7579956054688, :y2 510.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.80000305175781, :y1 490.20001220703125, :x2 742.7579956054688, :y2 510.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 294.8000183105469, :y1 492.25, :x2 388.11920166015625, :y2 507.25, :width 911.6666666666666, :height 1138.3333333333333}), :page 145}, :content {:text "通过比较字符串与其调用 normalize()的返回值，就可以知道该字符串是否已经规范化了"}, :properties {:color "yellow"}} {:id #uuid "63bd6e09-9c6c-42d9-8ef7-292fedfc5629", :page 145, :position {:bounding {:x1 134.40000915527344, :y1 1010.1499938964844, :x2 244.02731323242188, :y2 1026.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.40000915527344, :y1 1010.1499938964844, :x2 244.02731323242188, :y2 1026.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 145}, :content {:text "字符串操作方法"}, :properties {:color "yellow"}} {:id #uuid "63bd6e17-7faa-4cee-9dd3-b65cd9f72d1c", :page 145, :position {:bounding {:x1 421.3000183105469, :y1 1031.8500137329102, :x2 794.3818359375, :y2 1047.0500106811523, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 421.3000183105469, :y1 1031.8500137329102, :x2 794.3818359375, :y2 1047.0500106811523, :width 911.6666666666666, :height 1138.3333333333333}), :page 145}, :content {:text "concat()，用于将一个或多个字符串拼接成一个新字"}, :properties {:color "yellow"}} {:id #uuid "63bd6e65-1ff3-464a-bab5-f859c16878c2", :page 146, :position {:bounding {:x1 316.8504333496094, :y1 268.1999969482422, :x2 819.27978515625, :y2 288.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 316.8504333496094, :y1 268.1999969482422, :x2 819.27978515625, :y2 288.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 326, :y1 270.25001525878906, :x2 393.7953186035156, :y2 285.25001525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 146}, :content {:text "。concat()方法可以接收任意多个参数，因此可以一次性拼接多个字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd7722-a298-465e-8c99-c8742c9f5a1d", :page 146, :position {:bounding {:x1 539.7999877929688, :y1 479.74999237060547, :x2 596.2938842773438, :y2 494.9500045776367, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 539.7999877929688, :y1 479.74999237060547, :x2 596.2938842773438, :y2 494.9500045776367, :width 911.6666666666666, :height 1138.3333333333333}), :page 146}, :content {:text "slice()"}, :properties {:color "yellow"}} {:id #uuid "63bd7728-e259-483f-945d-c140d6e087a7", :page 146, :position {:bounding {:x1 614.6000366210938, :y1 479.74999237060547, :x2 679.2018432617188, :y2 499.74999237060547, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 614.6000366210938, :y1 479.74999237060547, :x2 679.2018432617188, :y2 499.74999237060547, :width 911.6666666666666, :height 1138.3333333333333}), :page 146}, :content {:text "substr()"}, :properties {:color "yellow"}} {:id #uuid "63bd772e-1e5b-489f-ba2c-583b1abce325", :page 146, :position {:bounding {:x1 698.5, :y1 478.49999237060547, :x2 791.3157958984375, :y2 498.49999237060547, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 698.5, :y1 478.49999237060547, :x2 791.3157958984375, :y2 498.49999237060547, :width 911.6666666666666, :height 1138.3333333333333} {:x1 702.7000122070312, :y1 480.55001068115234, :x2 791.3157958984375, :y2 495.55001068115234, :width 911.6666666666666, :height 1138.3333333333333}), :page 146}, :content {:text " substring()"}, :properties {:color "yellow"}} {:id #uuid "63bd79d1-5d12-4a4a-87ff-ee0c2f4b8035", :page 147, :position {:bounding {:x1 134.40000915527344, :y1 324.34999084472656, :x2 244.02731323242188, :y2 340.34999084472656, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.40000915527344, :y1 324.34999084472656, :x2 244.02731323242188, :y2 340.34999084472656, :width 911.6666666666666, :height 1138.3333333333333}), :page 147}, :content {:text "字符串位置方法"}, :properties {:color "yellow"}} {:id #uuid "63bd79e0-2ef0-48e7-85cb-2071f9ad997f", :page 147, :position {:bounding {:x1 229.90719604492188, :y1 344.81251525878906, :x2 641.7243041992188, :y2 364.81251525878906, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 229.90719604492188, :y1 344.81251525878906, :x2 641.7243041992188, :y2 364.81251525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 423, :y1 346.84999084472656, :x2 500.58013916015625, :y2 361.84999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 529.7000122070312, :y1 346.84999084472656, :x2 641.7243041992188, :y2 361.84999084472656, :width 911.6666666666666, :height 1138.3333333333333}), :page 147}, :content {:text "在字符串中定位子字符串：indexOf()和 lastIndexOf()"}, :properties {:color "yellow"}} {:id #uuid "63bd7a0c-7d13-4289-85f5-faf46e8c0ab7", :page 147, :position {:bounding {:x1 0, :y1 172.8000030517578, :x2 793.5758056640625, :y2 412.11253356933594, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 172.8000030517578, :x2 0, :y2 195.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 678.7999877929688, :y1 369.75001525878906, :x2 793.5758056640625, :y2 384.9499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 392.11253356933594, :x2 715.0555419921875, :y2 412.11253356933594, :width 911.6666666666666, :height 1138.3333333333333} {:x1 341.8999938964844, :y1 394.15000915527344, :x2 454.023193359375, :y2 409.15000915527344, :width 911.6666666666666, :height 1138.3333333333333}), :page 147}, :content {:text "indexOf()方法从字符串开头开始查找子字符串，而 lastIndexOf()方法从字符串末尾开始查找子字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd7a4a-a98d-427f-b2c5-50c70171490b", :page 147, :position {:bounding {:x1 0, :y1 300.8000030517578, :x2 793.9651489257812, :y2 614.4125213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 300.8000030517578, :x2 0, :y2 323.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 316.8000030517578, :x2 0, :y2 339.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 337.2643127441406, :y1 547.1999969482422, :x2 793.8326416015625, :y2 567.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 649.2999877929688, :y1 549.2499847412109, :x2 725.6738891601562, :y2 564.2499847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0875015258789, :y1 570.8124847412109, :x2 793.9651489257812, :y2 590.8124847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 548.7000122070312, :y1 572.8500213623047, :x2 658.7667846679688, :y2 587.8500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 594.4125213623047, :x2 592.6892013549805, :y2 614.4125213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 147}, :content {:text "二个参数，表示开始搜索的位置。这意味着，indexOf()会从这个参数指定的位置开始向字符串末尾搜索，忽略该位置之前的字符；lastIndexOf()则会从这个参数指定的位置开始向字符串开头搜索，忽略该位置之后直到字符串末尾的字符"}, :properties {:color "yellow"}} {:id #uuid "63bd7ae4-32ac-4452-b895-abdc557b3015", :page 147, :position {:bounding {:x1 0, :y1 428.80003356933594, :x2 794.2198486328125, :y2 765.9500427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 428.80003356933594, :x2 0, :y2 451.20003509521484, :width 911.6666666666666, :height 1138.3333333333333} {:x1 568.5383911132812, :y1 725.9000396728516, :x2 794.2198486328125, :y2 745.9000396728516, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0999984741211, :y1 750.7500457763672, :x2 620.1348266601562, :y2 765.9500427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 147}, :content {:text "这样使用第二个参数并循环调用 indexOf()或 lastIndexOf()，就可以在字符串中找到所有的目标子字符串"}, :properties {:color "yellow"}} {:id #uuid "63bd7af0-4b4f-44ca-a540-2fd9b9e58f06", :page 148, :position {:bounding {:x1 167.5, :y1 128.74996948242188, :x2 277.1272888183594, :y2 144.74996948242188, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.5, :y1 128.74996948242188, :x2 277.1272888183594, :y2 144.74996948242188, :width 911.6666666666666, :height 1138.3333333333333}), :page 148}, :content {:text "字符串包含方法"}, :properties {:color "yellow"}} {:id #uuid "63bd7bc6-c59b-455f-8c14-d6bb897aa3ba", :page 148, :position {:bounding {:x1 167.5, :y1 733.8500061035156, :x2 252.779052734375, :y2 749.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.5, :y1 733.8500061035156, :x2 252.779052734375, :y2 749.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 148}, :content {:text "trim()方法"}, :properties {:color "yellow"}} {:id #uuid "63bd7bcd-7768-42df-aebd-5a6d82d3e905", :page 148, :position {:bounding {:x1 167.5, :y1 931.8500366210938, :x2 270.779052734375, :y2 947.050048828125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.5, :y1 931.8500366210938, :x2 270.779052734375, :y2 947.050048828125, :width 911.6666666666666, :height 1138.3333333333333}), :page 148}, :content {:text "repeat()方法"}, :properties {:color "yellow"}} {:id #uuid "63bd7ca6-4499-49e6-88f4-deb48f02348b", :page 149, :position {:bounding {:x1 130.45535278320312, :y1 128.19998168945312, :x2 347.47906494140625, :y2 148.19998168945312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 130.45535278320312, :y1 128.19998168945312, :x2 240.61865234375, :y2 148.19998168945312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 134.40000915527344, :y1 130.24996948242188, :x2 347.47906494140625, :y2 145.24996948242188, :width 911.6666666666666, :height 1138.3333333333333}), :page 149}, :content {:text "padStart()和 padEnd()方法"}, :properties {:color "yellow"}} {:id #uuid "63bd7cac-89a6-4023-8e8a-0d27def4de0e", :page 149, :position {:bounding {:x1 134.40000915527344, :y1 521.8500232696533, :x2 259.6668395996094, :y2 537.8500232696533, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.40000915527344, :y1 521.8500232696533, :x2 259.6668395996094, :y2 537.8500232696533, :width 911.6666666666666, :height 1138.3333333333333}), :page 149}, :content {:text "字符串迭代与解构"}, :properties {:color "yellow"}} {:id #uuid "63bd7cb2-d62d-406d-a6de-c00467ca637d", :page 149, :position {:bounding {:x1 143.1875, :y1 1007.25, :x2 268.36053466796875, :y2 1023.25, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 143.1875, :y1 1007.25, :x2 268.36053466796875, :y2 1023.25, :width 911.6666666666666, :height 1138.3333333333333}), :page 149}, :content {:text "字符串大小写转换"}, :properties {:color "yellow"}} {:id #uuid "63bd7cba-5169-4e17-9405-d279b72e1d3d", :page 150, :position {:bounding {:x1 175.08750915527344, :y1 392.9625129699707, :x2 316.08770751953125, :y2 408.9625129699707, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 175.08750915527344, :y1 392.9625129699707, :x2 316.08770751953125, :y2 408.9625129699707, :width 911.6666666666666, :height 1138.3333333333333}), :page 150}, :content {:text "字符串模式匹配方法"}, :properties {:color "yellow"}} {:id #uuid "63bd7cc4-786d-4f47-8d66-db2d6d8e1140", :page 152, :position {:bounding {:x1 176.3000030517578, :y1 377.8500061035156, :x2 342.5790710449219, :y2 393.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 176.3000030517578, :y1 377.8500061035156, :x2 342.5790710449219, :y2 393.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 152}, :content {:text "localeCompare()方法"}, :properties {:color "yellow"}} {:id #uuid "63bd7ccb-ad4c-4763-acd7-dee7d5cbbe20", :page 153, :position {:bounding {:x1 139.47422790527344, :y1 158.41249084472656, :x2 221.06655883789062, :y2 178.41249084472656, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 139.47422790527344, :y1 158.41249084472656, :x2 221.06655883789062, :y2 178.41249084472656, :width 911.6666666666666, :height 1138.3333333333333}), :page 153}, :content {:text "HTML 方法"}, :properties {:color "yellow"}} {:id #uuid "63bd7cd1-3ee4-40e1-808d-9d20f3a6b150", :page 153, :position {:bounding {:x1 140.8874969482422, :y1 588.6500091552734, :x2 280.9442138671875, :y2 611.8499908447266, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 140.8874969482422, :y1 588.6500091552734, :x2 280.9442138671875, :y2 611.8499908447266, :width 911.6666666666666, :height 1138.3333333333333}), :page 153}, :content {:text "单例内置对象"}, :properties {:color "yellow"}} {:id #uuid "63be2ae9-fdc7-46d9-94f3-7d54480829c2", :page 148, :position {:bounding {:x1 641.0124877989292, :y1 138.1125087738037, :x2 734.4587768614292, :y2 156.51251792907715, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 641.0124877989292, :y1 138.1125087738037, :x2 734.4587768614292, :y2 156.51251792907715, :width 831.9999999999999, :height 1038.8592321755025}), :page 148}, :content {:text "startsWith("}, :properties {:color "yellow"}} {:id #uuid "63be2b4d-1e65-472b-8577-8c5e54fd809a", :page 148, :position {:bounding {:x1 107.86250153183937, :y1 159.64999961853027, :x2 192.72585144639015, :y2 173.2500057220459, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 107.86250153183937, :y1 159.64999961853027, :x2 192.72585144639015, :y2 173.2500057220459, :width 831.9999999999999, :height 1038.8592321755025}), :page 148}, :content {:text "endsWith()"}, :properties {:color "yellow"}} {:id #uuid "63be2b52-3344-4fcf-b748-b76e00a30b7e", :page 148, :position {:bounding {:x1 210.07500305771828, :y1 159.64999961853027, :x2 294.9383606016636, :y2 173.2500057220459, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 210.07500305771828, :y1 159.64999961853027, :x2 294.9383606016636, :y2 173.2500057220459, :width 831.9999999999999, :height 1038.8592321755025}), :page 148}, :content {:text "includes()"}, :properties {:color "yellow"}} {:id #uuid "63be2c17-349a-426d-aa45-6ea7a5fdd7d6", :page 148, :position {:bounding {:x1 0, :y1 796.8000183105469, :x2 755.388647466898, :y2 908.2749938964844, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 0, :y1 796.8000183105469, :x2 0, :y2 819.2000122070312, :width 831.9999999999999, :height 1038.8592321755025} {:x1 682.8853515684605, :y1 868.3250122070312, :x2 755.388647466898, :y2 886.7250061035156, :width 831.9999999999999, :height 1038.8592321755025} {:x1 107.86250153183937, :y1 889.875, :x2 426.511335760355, :y2 908.2749938964844, :width 831.9999999999999, :height 1038.8592321755025}), :page 148}, :content {:text "表示要将字符串复制多少次，然后返回拼接所有副本后的结果"}, :properties {:color "yellow"}} {:id #uuid "63be2c8a-7b23-4d95-8504-41d40f5a3d79", :page 149, :position {:bounding {:x1 0, :y1 28.800003051757812, :x2 725.7097534239292, :y2 175.98751831054688, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 0, :y1 28.800003051757812, :x2 0, :y2 51.19999694824219, :width 831.9999999999999, :height 1038.8592321755025} {:x1 105.03750458359718, :y1 138.11251831054688, :x2 725.7097534239292, :y2 156.51251220703125, :width 831.9999999999999, :height 1038.8592321755025} {:x1 77.65000000596046, :y1 157.58749389648438, :x2 170.30055847764015, :y2 175.98751831054688, :width 831.9999999999999, :height 1038.8592321755025}), :page 149}, :content {:text "padStart()和 padEnd()方法会复制字符串，如果小于指定长度，则在相应一边填充字符，直至满足长度条件"}, :properties {:color "yellow"}} {:id #uuid "63be2c98-0aaf-4d07-aded-27f9f4cc0aa5", :page 149, :position {:bounding {:x1 0, :y1 44.80000305175781, :x2 726.1236938536167, :y2 197.53750610351562, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 0, :y1 44.80000305175781, :x2 0, :y2 67.19999694824219, :width 831.9999999999999, :height 1038.8592321755025} {:x1 278.35275879502296, :y1 157.58749389648438, :x2 726.1236938536167, :y2 175.98751831054688, :width 831.9999999999999, :height 1038.8592321755025} {:x1 70.45000305771828, :y1 179.13751220703125, :x2 146.77500000596046, :y2 197.53750610351562, :width 831.9999999999999, :height 1038.8592321755025}), :page 149}, :content {:text "第一个参数是长度，第二个参数是可选的填充字符串，默认为空格（U+0020）"}, :properties {:color "yellow"}} {:id #uuid "63be2dd2-6e68-416d-990f-c87a9fe48a56", :page 149, :position {:bounding {:x1 106.58750000596046, :y1 494.7875061035156, :x2 624.740209966898, :y2 513.1875, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 106.58750000596046, :y1 494.7875061035156, :x2 624.740209966898, :y2 513.1875, :width 831.9999999999999, :height 1038.8592321755025}), :page 149}, :content {:text "字符串的原型上暴露了一个@@iterator 方法，表示可以迭代字符串的每个字符。"}, :properties {:color "yellow"}} {:id #uuid "63be2e0a-cbd5-4229-aef2-ed270f1e84f3", :page 149, :position {:bounding {:x1 428.46250000596046, :y1 939.8500366210938, :x2 538.8868164122105, :y2 953.4500427246094, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 428.46250000596046, :y1 939.8500366210938, :x2 538.8868164122105, :y2 953.4500427246094, :width 831.9999999999999, :height 1038.8592321755025}), :page 149}, :content {:text "toLowerCase()"}, :properties {:color "yellow"}} {:id #uuid "63be2e19-6739-4df2-8bd6-9715848bfeb4", :page 149, :position {:bounding {:x1 552.487524420023, :y1 939.8500366210938, :x2 705.2444824278355, :y2 953.4500427246094, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 552.487524420023, :y1 939.8500366210938, :x2 705.2444824278355, :y2 953.4500427246094, :width 831.9999999999999, :height 1038.8592321755025}), :page 149}, :content {:text "toLocaleLowerCase("}, :properties {:color "yellow"}} {:id #uuid "63be2e23-4251-4e8e-9769-ee822ef38c75", :page 150, :position {:bounding {:x1 107.86250153183937, :y1 119.3125, :x2 214.39711609482765, :y2 132.9124755859375, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 107.86250153183937, :y1 119.3125, :x2 214.39711609482765, :y2 132.9124755859375, :width 831.9999999999999, :height 1038.8592321755025}), :page 150}, :content {:text "toUpperCase()"}, :properties {:color "yellow"}} {:id #uuid "63be2e2a-86cc-4504-ad30-cf959c4c3f4a", :page 150, :position {:bounding {:x1 225.13750305771828, :y1 117.25, :x2 374.15146484971046, :y2 135.64996337890625, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 225.13750305771828, :y1 117.25, :x2 374.15146484971046, :y2 135.64996337890625, :width 831.9999999999999, :height 1038.8592321755025}), :page 150}, :content {:text " toLocaleUpperCase("}, :properties {:color "yellow"}} {:id #uuid "63be2e88-441b-4bbe-b244-39f3df385e19", :page 150, :position {:bounding {:x1 0, :y1 400.77500915527344, :x2 755.369848638773, :y2 483.1999969482422, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 408.11249390244484, :y1 400.77500915527344, :x2 755.369848638773, :y2 419.1750183105469, :width 831.9999999999999, :height 1038.8592321755025} {:x1 107.86250153183937, :y1 420.2375030517578, :x2 323.9160217344761, :y2 438.6374969482422, :width 831.9999999999999, :height 1038.8592321755025} {:x1 0, :y1 460.8000030517578, :x2 0, :y2 483.1999969482422, :width 831.9999999999999, :height 1038.8592321755025}), :page 150}, :content {:text "match()方法接收一个参数，可以是一个正则表达式字符串，也可以是一个 RegExp 对象"}, :properties {:color "yellow"}} {:id #uuid "63be2eba-e3fa-4ab5-9aea-578a521549f7", :page 150, :position {:bounding {:x1 0, :y1 569.3625030517578, :x2 755.2823242247105, :y2 627.1999969482422, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 639.4119018614292, :y1 569.3625030517578, :x2 755.2823242247105, :y2 587.7624969482422, :width 831.9999999999999, :height 1038.8592321755025} {:x1 107.86250153183937, :y1 590.9000091552734, :x2 556.901472479105, :y2 609.3000030517578, :width 831.9999999999999, :height 1038.8592321755025} {:x1 0, :y1 604.8000030517578, :x2 0, :y2 627.1999969482422, :width 831.9999999999999, :height 1038.8592321755025}), :page 150}, :content {:text "第一个元素是与整个模式匹配的字符串，其余元素则是与表达式中的捕获组匹配的字符串"}, :properties {:color "yellow"}} {:id #uuid "63be2ecc-09ac-475c-bfd3-cce188b7540e", :page 150, :position {:bounding {:x1 339.01251831650734, :y1 612.4375152587891, :x2 410.5686096251011, :y2 630.8375091552734, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 339.01251831650734, :y1 612.4375152587891, :x2 410.5686096251011, :y2 630.8375091552734, :width 831.9999999999999, :height 1038.8592321755025}), :page 150}, :content {:text " search()"}, :properties {:color "yellow"}} {:id #uuid "63be2f00-75f9-4064-a07e-49d3e044fa35", :page 150, :position {:bounding {:x1 334.5344299376011, :y1 634.0625152587891, :x2 678.1999877989292, :y2 652.4625091552734, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 334.5344299376011, :y1 634.0625152587891, :x2 678.1999877989292, :y2 652.4625091552734, :width 831.9999999999999, :height 1038.8592321755025}), :page 150}, :content {:text "返回模式第一个匹配的位置索引，如果没找到则返回1"}, :properties {:color "yellow"}} {:id #uuid "63be2f1d-4a7b-41ca-9942-337cf0d0b9fe", :page 150, :position {:bounding {:x1 435.76251831650734, :y1 756.0500183105469, :x2 538.6477417051792, :y2 774.4500122070312, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 435.76251831650734, :y1 756.0500183105469, :x2 538.6477417051792, :y2 774.4500122070312, :width 831.9999999999999, :height 1038.8592321755025}), :page 150}, :content {:text "replace()方法"}, :properties {:color "yellow"}} {:id #uuid "63be2f5f-3dd0-45d5-9d36-d330c4bb4b3c", :page 150, :position {:bounding {:x1 0, :y1 748.8000183105469, :x2 755.1684936583042, :y2 815.5500183105469, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 0, :y1 748.8000183105469, :x2 0, :y2 771.2000122070312, :width 831.9999999999999, :height 1038.8592321755025} {:x1 711.8468383848667, :y1 753.9750061035156, :x2 755.1684936583042, :y2 772.375, :width 831.9999999999999, :height 1038.8592321755025} {:x1 0, :y1 764.8000183105469, :x2 0, :y2 787.2000122070312, :width 831.9999999999999, :height 1038.8592321755025} {:x1 107.87499848008156, :y1 775.5250244140625, :x2 754.8450683653355, :y2 793.9250183105469, :width 831.9999999999999, :height 1038.8592321755025} {:x1 107.86250153183937, :y1 797.1499938964844, :x2 266.33027496933937, :y2 815.5500183105469, :width 831.9999999999999, :height 1038.8592321755025}), :page 150}, :content {:text "第一个参数可以是一个 RegExp 对象或一个字符串（这个字符串不会转换为正则表达式），第二个参数可以是一个字符串或一个函数。"}, :properties {:color "yellow"}} {:id #uuid "63be2fa0-7593-489b-a1eb-33040b3e84b3", :page 151, :position {:bounding {:x1 366.5375122129917, :y1 937.7875061035156, :x2 421.2613891661167, :y2 956.1875305175781, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 366.5375122129917, :y1 937.7875061035156, :x2 421.2613891661167, :y2 956.1875305175781, :width 831.9999999999999, :height 1038.8592321755025}), :page 151}, :content {:text " split("}, :properties {:color "yellow"}} {:id #uuid "63be2faa-e1d4-41a0-8a46-8d33ba133610", :page 151, :position {:bounding {:x1 507.83600464463234, :y1 937.7750244140625, :x2 710.6668457090855, :y2 956.1750183105469, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 507.83600464463234, :y1 937.7750244140625, :x2 710.6668457090855, :y2 956.1750183105469, :width 831.9999999999999, :height 1038.8592321755025}), :page 151}, :content {:text "根据传入的分隔符将字符串拆分"}, :properties {:color "yellow"}} {:id #uuid "63be30fa-00a8-4d54-925e-78a73ca3417d", :page 152, :position {:bounding {:x1 275.22284546494484, :y1 138.78750610351562, :x2 654.0594238340855, :y2 157.1875, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 275.22284546494484, :y1 138.78750610351562, :x2 654.0594238340855, :y2 157.1875, :width 831.9999999999999, :height 1038.8592321755025}), :page 152}, :content {:text "第二个参数，即数组大小，确保返回的数组不会超过指定大"}, :properties {:color "yellow"}} {:id #uuid "63be310f-5468-4c56-a6e6-8edd906a61ad", :page 152, :position {:bounding {:x1 437.17426148056984, :y1 362.65000915527344, :x2 538.5682739317417, :y2 381.0500030517578, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 437.17426148056984, :y1 362.65000915527344, :x2 538.5682739317417, :y2 381.0500030517578, :width 831.9999999999999, :height 1038.8592321755025}), :page 152}, :content {:text "比较两个字符串"}, :properties {:color "yellow"}} {:id #uuid "63be3147-06d2-48a3-aa8b-512c79f40dc4", :page 152, :position {:bounding {:x1 155.32500305771828, :y1 384.27500915527344, :x2 588.2998565733433, :y2 402.6750030517578, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 155.32500305771828, :y1 384.27500915527344, :x2 588.2998565733433, :y2 402.6750030517578, :width 831.9999999999999, :height 1038.8592321755025}), :page 152}, :content {:text "如果按照字母表顺序，字符串应该排在字符串参数前头，则返回负值"}, :properties {:color "yellow"}} {:id #uuid "63be31c8-f575-42ef-a0a8-c21fe2a3b534", :page 152, :position {:bounding {:x1 0, :y1 892.800048828125, :x2 755.8924316465855, :y2 945.3250122070312, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 0, :y1 892.800048828125, :x2 0, :y2 915.2000122070312, :width 831.9999999999999, :height 1038.8592321755025} {:x1 135.2375091612339, :y1 907.4500122070312, :x2 755.8924316465855, :y2 925.8500366210938, :width 831.9999999999999, :height 1038.8592321755025} {:x1 107.86250153183937, :y1 926.925048828125, :x2 136.08424988389015, :y2 945.3250122070312, :width 831.9999999999999, :height 1038.8592321755025}), :page 152}, :content {:text "localeCompare()的独特之处在于，实现所在的地区（国家和语言）决定了这个方法如何比较字符串"}, :properties {:color "yellow"}} {:id #uuid "63be322b-67ca-4c3e-b71a-ad21f7f4f56f", :page 153, :position {:bounding {:x1 0, :y1 316.79999351501465, :x2 727.3146118223667, :y2 616.8624877929688, :width 831.9999999999999, :height 1038.8592321755025}, :rects ({:x1 0, :y1 316.79999351501465, :x2 0, :y2 339.1999931335449, :width 831.9999999999999, :height 1038.8592321755025} {:x1 321.1292785704136, :y1 576.8374938964844, :x2 727.3146118223667, :y2 595.2375030517578, :width 831.9999999999999, :height 1038.8592321755025} {:x1 77.63750305771828, :y1 598.4624938964844, :x2 267.0056213438511, :y2 616.8624877929688, :width 831.9999999999999, :height 1038.8592321755025}), :page 153}, :content {:text "何由 ECMAScript 实现提供、与宿主环境无关，并在 ECMAScript程序开始执行时就存在的对象"}, :properties {:color "yellow"}} {:id #uuid "63be58df-f3a1-4e5d-9ee5-6514262aeca9", :page 153, :position {:bounding {:x1 305.76080933213234, :y1 619.7875137329102, :x2 584.1302856504917, :y2 638.1875152587891, :width 831.6959064327485, :height 1038.4795321637425}, :rects ({:x1 305.76080933213234, :y1 619.7875137329102, :x2 584.1302856504917, :y2 638.1875152587891, :width 831.6959064327485, :height 1038.4795321637425}), :page 153}, :content {:text "内置对象，包括 Object、Array 和 String"}, :properties {:color "yellow"}} {:id #uuid "63be59e9-4919-4e4a-8dfc-82fb95e63f1d", :page 153, :position {:bounding {:x1 136.47499695420265, :y1 676.6625213623047, :x2 197.97206726670265, :y2 694.2625122070312, :width 831.6959064327485, :height 1038.4795321637425}, :rects ({:x1 136.47499695420265, :y1 676.6625213623047, :x2 197.97206726670265, :y2 694.2625122070312, :width 831.6959064327485, :height 1038.4795321637425}), :page 153}, :content {:text "Global"}, :properties {:color "yellow"}} {:id #uuid "63be5a1c-b75a-432b-bfc7-59702810f4ff", :page 153, :position {:bounding {:x1 172.03396606445312, :y1 787.7625350952148, :x2 594.3560791015625, :y2 806.9625396728516, :width 870, :height 1086.3071297989031}, :rects ({:x1 172.03396606445312, :y1 787.7625350952148, :x2 594.3560791015625, :y2 806.9625396728516, :width 870, :height 1086.3071297989031}), :page 153}, :content {:text "在全局作用域中定义的变量和函数都会变成 Global 对象的属性 "}, :properties {:color "yellow"}} {:id #uuid "63be5a39-18ab-4cb0-86dd-e25d5809ffde", :page 153, :position {:bounding {:x1 0, :y1 428.8000183105469, :x2 764.3621826171875, :y2 829.4875335693359, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 428.8000183105469, :x2 0, :y2 451.2000274658203, :width 870, :height 1086.3071297989031} {:x1 718.9144897460938, :y1 787.7625350952148, :x2 764.3621826171875, :y2 806.9625396728516, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 810.2875366210938, :x2 503.4591369628906, :y2 829.4875335693359, :width 870, :height 1086.3071297989031}), :page 153}, :content {:text "函数，包括 isNaN()、isFinite()、parseInt()和 parseFloat()"}, :properties {:color "yellow"}} {:id #uuid "63be5ad5-2f51-46c4-aca7-771c4c251af6", :page 153, :position {:bounding {:x1 125.78646087646484, :y1 861.2375335693359, :x2 218.87620544433594, :y2 880.4375457763672, :width 870, :height 1086.3071297989031}, :rects ({:x1 125.78646087646484, :y1 861.2375335693359, :x2 218.87620544433594, :y2 880.4375457763672, :width 870, :height 1086.3071297989031}), :page 153}, :content {:text "URL 编码方法"}, :properties {:color "yellow"}} {:id #uuid "63be5af2-9544-48bf-afde-4e44dd9e02fb", :page 153, :position {:bounding {:x1 109.8375015258789, :y1 882.5375366210938, :x2 750.1683959960938, :y2 901.7375335693359, :width 870, :height 1086.3071297989031}, :rects ({:x1 109.8375015258789, :y1 882.5375366210938, :x2 750.1683959960938, :y2 901.7375335693359, :width 870, :height 1086.3071297989031}), :page 153}, :content {:text "encodeURI()和 encodeURIComponent()方法用于编码统一资源标识符（URI），以便传给浏览器"}, :properties {:color "yellow"}} {:id #uuid "63be5b02-3cc1-4f0d-b68c-c5f32fc13fb8", :page 153, :position {:bounding {:x1 109.8375015258789, :y1 950.2000427246094, :x2 413.7823181152344, :y2 969.4000549316406, :width 870, :height 1086.3071297989031}, :rects ({:x1 109.8375015258789, :y1 950.2000427246094, :x2 413.7823181152344, :y2 969.4000549316406, :width 870, :height 1086.3071297989031}), :page 153}, :content {:text "ecnodeURI()方法用于对整个 URI 进行编码"}, :properties {:color "yellow"}} {:id #uuid "63be5b83-86bb-4872-9549-bb333ad15fc5", :page 153, :position {:bounding {:x1 0, :y1 540.8000335693359, :x2 757.3905029296875, :y2 991.9250183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 540.8000335693359, :x2 0, :y2 563.2000350952148, :width 870, :height 1086.3071297989031} {:x1 742.1264038085938, :y1 948.9375305175781, :x2 757.3905029296875, :y2 968.1375427246094, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 972.7250366210938, :x2 755.2149658203125, :y2 991.9250183105469, :width 870, :height 1086.3071297989031}), :page 153}, :content {:text "而 encodeURIComponent()方法用于编码 URI 中单独的组件，比如前面 URL 中的\"illegal value.js\""}, :properties {:color "yellow"}} {:id #uuid "63be5c2c-7742-492a-a077-87954f3a8952", :page 154, :position {:bounding {:x1 0, :y1 285.9875183105469, :x2 791.8678588867188, :y2 371.1999816894531, :width 870, :height 1086.3071297989031}, :rects ({:x1 679.1221313476562, :y1 285.9875183105469, :x2 791.8678588867188, :y2 305.1874694824219, :width 870, :height 1086.3071297989031} {:x1 112.80000305175781, :y1 309.8625183105469, :x2 540.3063201904297, :y2 329.0624694824219, :width 870, :height 1086.3071297989031} {:x1 0, :y1 348.8000183105469, :x2 0, :y2 371.1999816894531, :width 870, :height 1086.3071297989031}), :page 154}, :content {:text "而 encodeURIComponent()方法将所有非字母字符都替换成了相应的编码形式"}, :properties {:color "yellow"}} {:id #uuid "63be5c37-bc4b-4c8d-bfb9-b1b59950fde5", :page 154, :position {:bounding {:x1 0, :y1 373.9750061035156, :x2 749.222412109375, :y2 419.1999816894531, :width 870, :height 1086.3071297989031}, :rects ({:x1 294.2653503417969, :y1 373.9750061035156, :x2 749.222412109375, :y2 393.1750183105469, :width 870, :height 1086.3071297989031} {:x1 158.125, :y1 395.6374816894531, :x2 538.6596069335938, :y2 414.8374938964844, :width 870, :height 1086.3071297989031} {:x1 0, :y1 396.8000183105469, :x2 0, :y2 419.1999816894531, :width 870, :height 1086.3071297989031}), :page 154}, :content {:text "用 encodeURIComponent()应该比使用 encodeURI()的频率更高，这是因为编码查询字符串参数比编码基准 URI 的次数更多"}, :properties {:color "yellow"}} {:id #uuid "63be5d96-1618-4940-a73e-dbbc322046e7", :page 154, :position {:bounding {:x1 499.2875183224678, :y1 438.7000045776367, :x2 762.9540527462959, :y2 457.89998626708984, :width 870, :height 1086.3071297989031}, :rects ({:x1 499.2875183224678, :y1 438.7000045776367, :x2 762.9540527462959, :y2 457.89998626708984, :width 870, :height 1086.3071297989031}), :page 154}, :content {:text "decodeURI()和 decodeURIComponent"}, :properties {:color "yellow"}} {:id #uuid "63be5daf-c659-4aa6-a5e5-195a662dc8fe", :page 154, :position {:bounding {:x1 159.83750915527344, :y1 847.4249877929688, :x2 239.8462677001953, :y2 862.625, :width 870, :height 1086.3071297989031}, :rects ({:x1 159.83750915527344, :y1 847.4249877929688, :x2 239.8462677001953, :y2 862.625, :width 870, :height 1086.3071297989031}), :page 154}, :content {:text "eval()方法"}, :properties {:color "yellow"}} {:id #uuid "63be5dbb-3a95-43e6-8fe1-ea641aa3bca8", :page 154, :position {:bounding {:x1 308.3338317871094, :y1 888.8249816894531, :x2 743.7352905273438, :y2 908.0249938964844, :width 870, :height 1086.3071297989031}, :rects ({:x1 308.3338317871094, :y1 888.8249816894531, :x2 743.7352905273438, :y2 908.0249938964844, :width 870, :height 1086.3071297989031}), :page 154}, :content {:text "接收一个参数，即一个要执行的 ECMAScript（JavaScript）字符串"}, :properties {:color "yellow"}} {:id #uuid "63be5ddc-95d0-4aab-bf99-5f0bd7fa85a8", :page 155, :position {:bounding {:x1 217.38902282714844, :y1 476.27503967285156, :x2 546.5565795898438, :y2 495.47499084472656, :width 870, :height 1086.3071297989031}, :rects ({:x1 217.38902282714844, :y1 476.27503967285156, :x2 546.5565795898438, :y2 495.47499084472656, :width 870, :height 1086.3071297989031}), :page 155}, :content {:text "在 eval()内部创建的变量和函数无法被外部访问"}, :properties {:color "yellow"}} {:id #uuid "63be5de7-4030-436e-bb0d-fc0aebd1384f", :page 155, :position {:bounding {:x1 128.25, :y1 676.4125366210938, :x2 241.01756286621094, :y2 690.8125, :width 870, :height 1086.3071297989031}, :rects ({:x1 128.25, :y1 676.4125366210938, :x2 241.01756286621094, :y2 690.8125, :width 870, :height 1086.3071297989031}), :page 155}, :content {:text "Global 对象属性"}, :properties {:color "yellow"}} {:id #uuid "63be5e2e-0cf3-40a8-ad3e-98adb55884e5", :page 156, :position {:bounding {:x1 159.83750915527344, :y1 440.6999931335449, :x2 244.13377380371094, :y2 455.0999870300293, :width 870, :height 1086.3071297989031}, :rects ({:x1 159.83750915527344, :y1 440.6999931335449, :x2 244.13377380371094, :y2 455.0999870300293, :width 870, :height 1086.3071297989031}), :page 156}, :content {:text "window 对象"}, :properties {:color "yellow"}} {:id #uuid "63be5e36-6b11-4d07-a157-3ec112b076c5", :page 156, :position {:bounding {:x1 0, :y1 459.48749923706055, :x2 790.9077758789062, :y2 501.29999923706055, :width 870, :height 1086.3071297989031}, :rects ({:x1 598.6124877929688, :y1 459.48749923706055, :x2 790.9077758789062, :y2 478.6875114440918, :width 870, :height 1086.3071297989031} {:x1 0, :y1 460.79999923706055, :x2 0, :y2 483.20002365112305, :width 870, :height 1086.3071297989031} {:x1 112.7874984741211, :y1 482.0999870300293, :x2 188.47706604003906, :y2 501.29999923706055, :width 870, :height 1086.3071297989031}), :page 156}, :content {:text " window 对象实现为 Global对象的代理"}, :properties {:color "yellow"}} {:id #uuid "63be5e3d-c43f-4c8d-8c04-73ec445eff13", :page 157, :position {:bounding {:x1 125.2846450805664, :y1 120.71249389648438, :x2 186.84336853027344, :y2 144.71249389648438, :width 870, :height 1086.3071297989031}, :rects ({:x1 125.2846450805664, :y1 120.71249389648438, :x2 125.28816223144531, :y2 144.71249389648438, :width 870, :height 1086.3071297989031} {:x1 142.7624969482422, :y1 122.5, :x2 186.84336853027344, :y2 140.89999389648438, :width 870, :height 1086.3071297989031}), :page 157}, :content {:text "Math"}, :properties {:color "yellow"}} {:id #uuid "63be5e85-9610-45e5-97de-6866f8260090", :page 157, :position {:bounding {:x1 128.25, :y1 314.63751220703125, :x2 223.927978515625, :y2 329.0375061035156, :width 870, :height 1086.3071297989031}, :rects ({:x1 128.25, :y1 314.63751220703125, :x2 223.927978515625, :y2 329.0375061035156, :width 870, :height 1086.3071297989031}), :page 157}, :content {:text "Math 对象属性"}, :properties {:color "yellow"}} {:id #uuid "63be5e97-1aa4-4eb0-80ff-0f66ef1d394e", :page 157, :position {:bounding {:x1 128.25, :y1 617.0500030517578, :x2 261.5087585449219, :y2 632.2499847412109, :width 870, :height 1086.3071297989031}, :rects ({:x1 128.25, :y1 617.0500030517578, :x2 261.5087585449219, :y2 632.2499847412109, :width 870, :height 1086.3071297989031}), :page 157}, :content {:text "min()和 max()方法"}, :properties {:color "yellow"}} {:id #uuid "63be5ea7-d264-4875-81fc-4a66f17afda3", :page 157, :position {:bounding {:x1 0, :y1 460.8000183105469, :x2 565.6405715942383, :y2 890.3500366210938, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 460.8000183105469, :x2 0, :y2 483.2000198364258, :width 870, :height 1086.3071297989031} {:x1 0, :y1 476.8000183105469, :x2 0, :y2 499.2000198364258, :width 870, :height 1086.3071297989031} {:x1 111.4625015258789, :y1 836.7250366210938, :x2 565.6405715942383, :y2 855.9250183105469, :width 870, :height 1086.3071297989031} {:x1 112.7874984741211, :y1 862.4750366210938, :x2 401.0189208984375, :y2 875.2750244140625, :width 870, :height 1086.3071297989031} {:x1 112.7874984741211, :y1 877.5500183105469, :x2 308.3789978027344, :y2 890.3500366210938, :width 870, :height 1086.3071297989031}), :page 157}, :content {:text "要知道数组中的最大值和最小值，可以像下面这样使用扩展操作符： let values = [1, 2, 3, 4, 5, 6, 7, 8]; let max = Math.max(...val);"}, :properties {:color "yellow"}} {:id #uuid "63be5eb3-41cc-4eca-999c-23752957789a", :page 157, :position {:bounding {:x1 128.25, :y1 908.4125366210938, :x2 185.1925506591797, :y2 923.6125183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 128.25, :y1 908.4125366210938, :x2 185.1925506591797, :y2 923.6125183105469, :width 870, :height 1086.3071297989031}), :page 157}, :content {:text "舍入方法"}, :properties {:color "yellow"}} {:id #uuid "63be5ebd-7214-4a97-a64e-c5f463378358", :page 158, :position {:bounding {:x1 159.83750915527344, :y1 526.6875, :x2 257.0212707519531, :y2 541.8875427246094, :width 870, :height 1086.3071297989031}, :rects ({:x1 159.83750915527344, :y1 526.6875, :x2 257.0212707519531, :y2 541.8875427246094, :width 870, :height 1086.3071297989031}), :page 158}, :content {:text "random()方法"}, :properties {:color "yellow"}} {:id #uuid "63be5ec4-1654-4aa3-ba2c-6ce691196fac", :page 159, :position {:bounding {:x1 128.25, :y1 343.75001525878906, :x2 185.1925506591797, :y2 358.9499969482422, :width 870, :height 1086.3071297989031}, :rects ({:x1 128.25, :y1 343.75001525878906, :x2 185.1925506591797, :y2 358.9499969482422, :width 870, :height 1086.3071297989031}), :page 159}, :content {:text "其他方法"}, :properties {:color "yellow"}} {:id #uuid "63be5ed7-72e9-4d66-b495-017a4dcfc916", :page 157, :position {:bounding {:x1 130.8249969482422, :y1 974.2499847412109, :x2 467.4642028808594, :y2 993.4499816894531, :width 870, :height 1086.3071297989031}, :rects ({:x1 130.8249969482422, :y1 974.2499847412109, :x2 467.4642028808594, :y2 993.4499816894531, :width 870, :height 1086.3071297989031}), :page 157}, :content {:text "Math.ceil()方法始终向上舍入为最接近的整数。"}, :properties {:color "yellow"}} {:id #uuid "63be5eea-0dfd-469b-8e88-55937e05c4c4", :page 158, :position {:bounding {:x1 157.72830200195312, :y1 123.32499694824219, :x2 507.7298889160156, :y2 142.52500915527344, :width 870, :height 1086.3071297989031}, :rects ({:x1 157.72830200195312, :y1 123.32499694824219, :x2 507.7298889160156, :y2 142.52500915527344, :width 870, :height 1086.3071297989031}), :page 158}, :content {:text "Math.floor()方法始终向下舍入为最接近的整数。"}, :properties {:color "yellow"}} {:id #uuid "63be5ef2-d47e-484d-9344-55dac5f6db2e", :page 158, :position {:bounding {:x1 162.41250610351562, :y1 146.4875030517578, :x2 386.5369567871094, :y2 165.68751525878906, :width 870, :height 1086.3071297989031}, :rects ({:x1 162.41250610351562, :y1 146.4875030517578, :x2 386.5369567871094, :y2 165.68751525878906, :width 870, :height 1086.3071297989031}), :page 158}, :content {:text "Math.round()方法执行四舍五入"}, :properties {:color "yellow"}} {:id #uuid "63be5ef7-372d-4b4c-91e6-d398edee49a4", :page 158, :position {:bounding {:x1 162.41250610351562, :y1 169.0124969482422, :x2 609.7058715820312, :y2 188.2124786376953, :width 870, :height 1086.3071297989031}, :rects ({:x1 162.41250610351562, :y1 169.0124969482422, :x2 609.7058715820312, :y2 188.2124786376953, :width 870, :height 1086.3071297989031}), :page 158}, :content {:text "Math.fround()方法返回数值最接近的单精度（32 位）浮点值表示"}, :properties {:color "yellow"}} {:id #uuid "63be5fbf-7926-4187-b883-730d523b141e", :page 158, :position {:bounding {:x1 283.35125732421875, :y1 545.5625, :x2 639.6749877929688, :y2 564.7625122070312, :width 870, :height 1086.3071297989031}, :rects ({:x1 283.35125732421875, :y1 545.5625, :x2 639.6749877929688, :y2 564.7625122070312, :width 870, :height 1086.3071297989031}), :page 158}, :content {:text "返回一个 0~1 范围内的随机数，其中包含 0 但不包含 1"}, :properties {:color "yellow"}} {:id #uuid "63be5ffb-0403-4793-a0a9-4df65b6dabc1", :page 161, :position {:bounding {:x1 134.5500030517578, :y1 417.98749923706055, :x2 211.98574829101562, :y2 439.5875053405762, :width 870, :height 1086.3071297989031}, :rects ({:x1 134.5500030517578, :y1 417.98749923706055, :x2 211.98574829101562, :y2 439.5875053405762, :width 870, :height 1086.3071297989031}), :page 161}, :content {:text "Object"}, :properties {:color "green"}} {:id #uuid "63be61ab-f742-4988-884e-2244fdbfb7f0", :page 161, :position {:bounding {:x1 304.2417907714844, :y1 746.5375213623047, :x2 576.7305297851562, :y2 765.7375335693359, :width 870, :height 1086.3071297989031}, :rects ({:x1 304.2417907714844, :y1 746.5375213623047, :x2 576.7305297851562, :y2 765.7375335693359, :width 870, :height 1086.3071297989031}), :page 161}, :content {:text "表达式上下文指的是期待返回值的上下文"}, :properties {:color "yellow"}} {:id #uuid "63be61f0-889b-4835-9c76-54bb2e69091a", :page 161, :position {:bounding {:x1 126.58475494384766, :y1 881.7750091552734, :x2 459.64966583251953, :y2 900.9750061035156, :width 870, :height 1086.3071297989031}, :rects ({:x1 126.58475494384766, :y1 881.7750091552734, :x2 459.64966583251953, :y2 900.9750061035156, :width 870, :height 1086.3071297989031}), :page 161}, :content {:text "对象字面量表示法中，属性名可以是字符串或数值"}, :properties {:color "yellow"}} {:id #uuid "63be6229-c4ba-4ca8-9cb6-c66eb070d130", :page 162, :position {:bounding {:x1 0, :y1 716.8000183105469, :x2 789.5993041992188, :y2 832.4375305175781, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 716.8000183105469, :x2 0, :y2 739.2000427246094, :width 870, :height 1086.3071297989031} {:x1 308.66070556640625, :y1 790.6250305175781, :x2 789.5993041992188, :y2 809.8250427246094, :width 870, :height 1086.3071297989031} {:x1 112.7874984741211, :y1 813.2375183105469, :x2 264.08141326904297, :y2 832.4375305175781, :width 870, :height 1086.3071297989031}), :page 162}, :content {:text "函数内部会使用 typeof 操作符测试每个属性是否存在，然后根据属性有无构造并显示一条消息"}, :properties {:color "yellow"}} {:id #uuid "63be6267-9bbe-4767-abed-355875869d86", :page 163, :position {:bounding {:x1 134.5500030517578, :y1 494.3250184059143, :x2 199.0675811767578, :y2 515.9250245094299, :width 870, :height 1086.3071297989031}, :rects ({:x1 134.5500030517578, :y1 494.3250184059143, :x2 199.0675811767578, :y2 515.9250245094299, :width 870, :height 1086.3071297989031}), :page 163}, :content {:text "Array"}, :properties {:color "green"}} {:id #uuid "63be62c0-c47a-46da-a1e9-bc013b0b9c6b", :page 163, :position {:bounding {:x1 142.7624969482422, :y1 663.1499938964844, :x2 219.2362823486328, :y2 681.5499877929688, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.7624969482422, :y1 663.1499938964844, :x2 219.2362823486328, :y2 681.5499877929688, :width 870, :height 1086.3071297989031}), :page 163}, :content {:text "创建数组"}, :properties {:color "green"}} {:id #uuid "63be6385-8a48-4253-aabf-b893d03e4d9d", :page 164, :position {:bounding {:x1 0, :y1 399.57500648498535, :x2 789.01123046875, :y2 440.0375003814697, :width 870, :height 1086.3071297989031}, :rects ({:x1 692.0499877929688, :y1 399.57500648498535, :x2 789.01123046875, :y2 418.7750186920166, :width 870, :height 1086.3071297989031} {:x1 0, :y1 412.800012588501, :x2 0, :y2 435.20000648498535, :width 870, :height 1086.3071297989031} {:x1 112.7874984741211, :y1 420.8375186920166, :x2 294.44322967529297, :y2 440.0375003814697, :width 870, :height 1086.3071297989031}), :page 164}, :content {:text "from()用于将类数组结构转换为数组实例"}, :properties {:color "yellow"}} {:id #uuid "63be638c-129a-4609-91eb-f5e9b7845b1b", :page 164, :position {:bounding {:x1 328.07501220703125, :y1 422.0875186920166, :x2 574.433837890625, :y2 441.2875003814697, :width 870, :height 1086.3071297989031}, :rects ({:x1 328.07501220703125, :y1 422.0875186920166, :x2 574.433837890625, :y2 441.2875003814697, :width 870, :height 1086.3071297989031}), :page 164}, :content {:text "of()用于将一组参数转换为数组实例"}, :properties {:color "yellow"}} {:id #uuid "63be644d-9337-4d0e-ab21-d834b4a155b8", :page 164, :position {:bounding {:x1 167.28750610351562, :y1 491.72501373291016, :x2 318.85369873046875, :y2 504.5250015258789, :width 870, :height 1086.3071297989031}, :rects ({:x1 167.28750610351562, :y1 491.72501373291016, :x2 318.85369873046875, :y2 504.5250015258789, :width 870, :height 1086.3071297989031}), :page 164}, :content {:text "字符串会被拆分为单字符数组"}, :properties {:color "yellow"}} {:id #uuid "63be6455-ebda-475a-8faf-26e11b1efd6a", :page 164, :position {:bounding {:x1 167.28750610351562, :y1 537.0499954223633, :x2 430.4620056152344, :y2 549.8500137329102, :width 870, :height 1086.3071297989031}, :rects ({:x1 167.28750610351562, :y1 537.0499954223633, :x2 430.4620056152344, :y2 549.8500137329102, :width 870, :height 1086.3071297989031}), :page 164}, :content {:text "可以使用 from()将集合和映射转换为一个新数组"}, :properties {:color "yellow"}} {:id #uuid "63be645c-544b-4f4c-b25d-92a14ca2f754", :page 164, :position {:bounding {:x1 167.28750610351562, :y1 703.2750015258789, :x2 375.55029296875, :y2 716.0749893188477, :width 870, :height 1086.3071297989031}, :rects ({:x1 167.28750610351562, :y1 703.2750015258789, :x2 375.55029296875, :y2 716.0749893188477, :width 870, :height 1086.3071297989031}), :page 164}, :content {:text "Array.from()对现有数组执行浅复制"}, :properties {:color "yellow"}} {:id #uuid "63be6462-4669-4baf-8497-d15634c33d7f", :page 164, :position {:bounding {:x1 167.28750610351562, :y1 824.0750122070312, :x2 295.58856201171875, :y2 836.875, :width 870, :height 1086.3071297989031}, :rects ({:x1 167.28750610351562, :y1 824.0750122070312, :x2 295.58856201171875, :y2 836.875, :width 870, :height 1086.3071297989031}), :page 164}, :content {:text "可以使用任何可迭代对象"}, :properties {:color "yellow"}} {:id #uuid "63be6468-2990-4970-914e-98f5732a0e78", :page 165, :position {:bounding {:x1 135.6999969482422, :y1 121.8375244140625, :x2 359.79119873046875, :y2 134.63751220703125, :width 870, :height 1086.3071297989031}, :rects ({:x1 135.6999969482422, :y1 121.8375244140625, :x2 359.79119873046875, :y2 134.63751220703125, :width 870, :height 1086.3071297989031}), :page 165}, :content {:text "arguments 对象可以被轻松地转换为数组"}, :properties {:color "yellow"}} {:id #uuid "63be6484-ba49-4c2a-854d-9807df101535", :page 165, :position {:bounding {:x1 142.70431518554688, :y1 212.48751831054688, :x2 368.0396423339844, :y2 225.28750610351562, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.70431518554688, :y1 212.48751831054688, :x2 368.0396423339844, :y2 225.28750610351562, :width 870, :height 1086.3071297989031}), :page 165}, :content {:text "rom()也能转换带有必要属性的自定义对象"}, :properties {:color "yellow"}} {:id #uuid "63be64bd-7bba-4547-a690-799f00a62f50", :page 165, :position {:bounding {:x1 142.7624969482422, :y1 617.25, :x2 219.2362823486328, :y2 635.6500091552734, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.7624969482422, :y1 617.25, :x2 219.2362823486328, :y2 635.6500091552734, :width 870, :height 1086.3071297989031}), :page 165}, :content {:text "数组空位"}, :properties {:color "green"}} {:id #uuid "63be64e0-9bc8-4dd1-beac-8b2f4800e640", :page 165, :position {:bounding {:x1 112.7874984741211, :y1 724.0000152587891, :x2 462.0946350097656, :y2 736.8000030517578, :width 870, :height 1086.3071297989031}, :rects ({:x1 112.7874984741211, :y1 724.0000152587891, :x2 462.0946350097656, :y2 736.8000030517578, :width 870, :height 1086.3071297989031}), :page 165}, :content {:text "const options = [,,,,,]; // 创建包含 5 个元素的数组"}, :properties {:color "yellow"}} {:id #uuid "63be64f6-06cf-4ba9-a1a0-f3f2ff2c4301", :page 165, :position {:bounding {:x1 0, :y1 540.7999877929688, :x2 757.7727661132812, :y2 820.3249969482422, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 540.7999877929688, :x2 0, :y2 563.1999855041504, :width 870, :height 1086.3071297989031} {:x1 607.3875122070312, :y1 779.1999969482422, :x2 757.7727661132812, :y2 798.3999938964844, :width 870, :height 1086.3071297989031} {:x1 81.2125015258789, :y1 801.1249847412109, :x2 406.6281433105469, :y2 820.3249969482422, :width 870, :height 1086.3071297989031}), :page 165}, :content {:text "ES6 新增方法普遍将这些空位当成存在的元素，只不过值为 undefined"}, :properties {:color "yellow"}} {:id #uuid "63be65c2-3cef-4a1f-96b7-3e08982f9348", :page 166, :position {:bounding {:x1 174.33750915527344, :y1 643.6875305175781, :x2 250.811279296875, :y2 662.0875244140625, :width 870, :height 1086.3071297989031}, :rects ({:x1 174.33750915527344, :y1 643.6875305175781, :x2 250.811279296875, :y2 662.0875244140625, :width 870, :height 1086.3071297989031}), :page 166}, :content {:text "数组索引"}, :properties {:color "green"}} {:id #uuid "63be65e6-2f5b-468e-b6e9-5885c63f6020", :page 166, :position {:bounding {:x1 143.03750610351562, :y1 975.8500061035156, :x2 474.0401916503906, :y2 995.0500183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 143.03750610351562, :y1 975.8500061035156, :x2 474.0401916503906, :y2 995.0500183105469, :width 870, :height 1086.3071297989031}), :page 166}, :content {:text "数组 length 属性的独特之处在于，它不是只读的"}, :properties {:color "yellow"}} {:id #uuid "63be6612-ae52-49d9-8052-8496625017b1", :page 167, :position {:bounding {:x1 171.8625030517578, :y1 689.8500061035156, :x2 428.9982604980469, :y2 709.0500183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 171.8625030517578, :y1 689.8500061035156, :x2 428.9982604980469, :y2 709.0500183105469, :width 870, :height 1086.3071297989031}), :page 167}, :content {:text "数组最多可以包含 4 294 967 295 个元素"}, :properties {:color "yellow"}} {:id #uuid "63be6619-d53d-47c8-a734-adfa5a858c2a", :page 167, :position {:bounding {:x1 142.7624969482422, :y1 790.9249877929688, :x2 219.2362823486328, :y2 809.3250122070312, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.7624969482422, :y1 790.9249877929688, :x2 219.2362823486328, :y2 809.3250122070312, :width 870, :height 1086.3071297989031}), :page 167}, :content {:text "检测数组"}, :properties {:color "green"}} {:id #uuid "63be67fa-8b8e-4d98-8ed1-a8dfd366eaab", :page 167, :position {:bounding {:x1 0, :y1 492.8000030517578, :x2 758.6627197265625, :y2 868.6125030517578, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.1999969482422, :width 870, :height 1086.3071297989031} {:x1 501.21099853515625, :y1 826.8874969482422, :x2 758.6627197265625, :y2 846.0875091552734, :width 870, :height 1086.3071297989031} {:x1 81.2125015258789, :y1 849.4125061035156, :x2 371.67645263671875, :y2 868.6125030517578, :width 870, :height 1086.3071297989031}), :page 167}, :content {:text "在只有一个网页（因而只有一个全局作用域）的情况下，使用 instanceof 操作符"}, :properties {:color "yellow"}} {:id #uuid "63be680d-867c-45c8-81ae-46116253d9de", :page 168, :position {:bounding {:x1 388.2124938964844, :y1 122.7125244140625, :x2 551.0783081054688, :y2 141.91253662109375, :width 870, :height 1086.3071297989031}, :rects ({:x1 388.2124938964844, :y1 122.7125244140625, :x2 551.0783081054688, :y2 141.91253662109375, :width 870, :height 1086.3071297989031}), :page 168}, :content {:text " Array.isArray()方法"}, :properties {:color "yellow"}} {:id #uuid "63be6819-06c4-40a7-b655-124019baf173", :page 168, :position {:bounding {:x1 174.33750915527344, :y1 237.4375, :x2 269.92974853515625, :y2 255.8375244140625, :width 870, :height 1086.3071297989031}, :rects ({:x1 174.33750915527344, :y1 237.4375, :x2 269.92974853515625, :y2 255.8375244140625, :width 870, :height 1086.3071297989031}), :page 168}, :content {:text "迭代器方法"}, :properties {:color "green"}} {:id #uuid "63be682d-0853-4744-844c-777efbcf076d", :page 168, :position {:bounding {:x1 205.2624969482422, :y1 297.1750183105469, :x2 408.4648742675781, :y2 316.3750305175781, :width 870, :height 1086.3071297989031}, :rects ({:x1 205.2624969482422, :y1 297.1750183105469, :x2 408.4648742675781, :y2 316.3750305175781, :width 870, :height 1086.3071297989031}), :page 168}, :content {:text "keys()返回数组索引的迭代器"}, :properties {:color "yellow"}} {:id #uuid "63be6834-26ad-4fa3-976c-ecbf117e25ac", :page 168, :position {:bounding {:x1 423.2250061035156, :y1 297.1750183105469, :x2 643.8001708984375, :y2 316.3750305175781, :width 870, :height 1086.3071297989031}, :rects ({:x1 423.2250061035156, :y1 297.1750183105469, :x2 643.8001708984375, :y2 316.3750305175781, :width 870, :height 1086.3071297989031}), :page 168}, :content {:text "values()返回数组元素的迭代器"}, :properties {:color "yellow"}} {:id #uuid "63be683a-5110-4b28-b35e-d445c73535ce", :page 168, :position {:bounding {:x1 0, :y1 297.1750183105469, :x2 788.9860229492188, :y2 371.20001220703125, :width 870, :height 1086.3071297989031}, :rects ({:x1 681.3624877929688, :y1 297.1750183105469, :x2 788.9860229492188, :y2 316.3750305175781, :width 870, :height 1086.3071297989031} {:x1 112.80000305175781, :y1 318.4375, :x2 237.97789001464844, :y2 337.63751220703125, :width 870, :height 1086.3071297989031} {:x1 0, :y1 348.8000183105469, :x2 0, :y2 371.20001220703125, :width 870, :height 1086.3071297989031}), :page 168}, :content {:text "entries()返回索引/值对的迭代器"}, :properties {:color "yellow"}} {:id #uuid "63be6848-95a1-4015-9984-14fb9ad436ea", :page 168, :position {:bounding {:x1 143.03750610351562, :y1 519.6999969482422, :x2 496.51983642578125, :y2 538.9000091552734, :width 870, :height 1086.3071297989031}, :rects ({:x1 143.03750610351562, :y1 519.6999969482422, :x2 496.51983642578125, :y2 538.9000091552734, :width 870, :height 1086.3071297989031}), :page 168}, :content {:text "使用 ES6 的解构可以非常容易地在循环中拆分键/值对"}, :properties {:color "yellow"}} {:id #uuid "63be6850-f1bc-44e8-b76e-aedf880a39f0", :page 168, :position {:bounding {:x1 174.33750915527344, :y1 834.1625061035156, :x2 308.1666259765625, :y2 852.5625, :width 870, :height 1086.3071297989031}, :rects ({:x1 174.33750915527344, :y1 834.1625061035156, :x2 308.1666259765625, :y2 852.5625, :width 870, :height 1086.3071297989031}), :page 168}, :content {:text "复制和填充方法"}, :properties {:color "green"}} {:id #uuid "63be6860-a1ff-4428-a389-3026daffae0e", :page 168, :position {:bounding {:x1 173.1999969482422, :y1 937.7875366210938, :x2 593.4703216552734, :y2 956.987548828125, :width 870, :height 1086.3071297989031}, :rects ({:x1 173.1999969482422, :y1 937.7875366210938, :x2 593.4703216552734, :y2 956.987548828125, :width 870, :height 1086.3071297989031}), :page 168}, :content {:text " fill()方法可以向一个已有的数组中插入全部或部分相同的值"}, :properties {:color "yellow"}} {:id #uuid "63be68a3-53ee-422a-b914-dc7c02dca9fe", :page 169, :position {:bounding {:x1 0, :y1 524.8000030517578, :x2 758.3999633789062, :y2 797.1375274658203, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 524.8000030517578, :x2 0, :y2 547.1999969482422, :width 870, :height 1086.3071297989031} {:x1 230.9375, :y1 756.5750274658203, :x2 758.3999633789062, :y2 775.7750396728516, :width 870, :height 1086.3071297989031} {:x1 81.2125015258789, :y1 777.9375152587891, :x2 202.33084106445312, :y2 797.1375274658203, :width 870, :height 1086.3071297989031}), :page 169}, :content {:text "copyWithin()会按照指定范围浅复制数组中的部分内容，然后将它们插入到指定索引开始的位置"}, :properties {:color "yellow"}} {:id #uuid "63be6961-64f7-4980-becc-97b6fb07916a", :page 169, :position {:bounding {:x1 135.6999969482422, :y1 303.13751792907715, :x2 367.25982666015625, :y2 315.9375057220459, :width 870, :height 1086.3071297989031}, :rects ({:x1 135.6999969482422, :y1 303.13751792907715, :x2 367.25982666015625, :y2 315.9375057220459, :width 870, :height 1086.3071297989031}), :page 169}, :content {:text "用 7 填充索引大于等于 1 且小于 3 的元素"}, :properties {:color "yellow"}} {:id #uuid "63be69b1-634e-4812-ab69-303f4d211c69", :page 170, :position {:bounding {:x1 174.33750915527344, :y1 771.3625183105469, :x2 250.811279296875, :y2 789.7625122070312, :width 870, :height 1086.3071297989031}, :rects ({:x1 174.33750915527344, :y1 771.3625183105469, :x2 250.811279296875, :y2 789.7625122070312, :width 870, :height 1086.3071297989031}), :page 170}, :content {:text "转换方法"}, :properties {:color "green"}} {:id #uuid "63be69b9-7167-4a3c-b82c-6db9e4d80646", :page 172, :position {:bounding {:x1 174.33750915527344, :y1 212.0500030517578, :x2 231.69285583496094, :y2 230.4499969482422, :width 870, :height 1086.3071297989031}, :rects ({:x1 174.33750915527344, :y1 212.0500030517578, :x2 231.69285583496094, :y2 230.4499969482422, :width 870, :height 1086.3071297989031}), :page 172}, :content {:text "栈方法"}, :properties {:color "green"}} {:id #uuid "63be69be-cb53-4d8e-b49f-dab7fd687af7", :page 172, :position {:bounding {:x1 174.33750915527344, :y1 861.5499877929688, :x2 250.811279296875, :y2 879.9499816894531, :width 870, :height 1086.3071297989031}, :rects ({:x1 174.33750915527344, :y1 861.5499877929688, :x2 250.811279296875, :y2 879.9499816894531, :width 870, :height 1086.3071297989031}), :page 172}, :content {:text "队列方法"}, :properties {:color "green"}} {:id #uuid "63be69c4-b681-4ad8-b3cc-ab81d331709e", :page 173, :position {:bounding {:x1 153.35000610351562, :y1 631.0874996185303, :x2 229.8237762451172, :y2 649.4875240325928, :width 870, :height 1086.3071297989031}, :rects ({:x1 153.35000610351562, :y1 631.0874996185303, :x2 229.8237762451172, :y2 649.4875240325928, :width 870, :height 1086.3071297989031}), :page 173}, :content {:text "排序方法"}, :properties {:color "green"}} {:id #uuid "63be69d0-436c-4d19-ac9f-87aeb37c7bb4", :page 175, :position {:bounding {:x1 151.91250610351562, :y1 124.16253662109375, :x2 228.3862762451172, :y2 142.5625, :width 870, :height 1086.3071297989031}, :rects ({:x1 151.91250610351562, :y1 124.16253662109375, :x2 228.3862762451172, :y2 142.5625, :width 870, :height 1086.3071297989031}), :page 175}, :content {:text "操作方法"}, :properties {:color "green"}} {:id #uuid "63be69d9-6fe8-4dcd-81d3-208a6b29c739", :page 176, :position {:bounding {:x1 184.9375, :y1 932.8374938964844, :x2 318.7666320800781, :y2 951.2374877929688, :width 870, :height 1086.3071297989031}, :rects ({:x1 184.9375, :y1 932.8374938964844, :x2 318.7666320800781, :y2 951.2374877929688, :width 870, :height 1086.3071297989031}), :page 176}, :content {:text "搜索和位置方法"}, :properties {:color "green"}} {:id #uuid "63be69e1-882f-4190-8326-70212b9e3937", :page 178, :position {:bounding {:x1 184.9375, :y1 400.43750762939453, :x2 261.4112854003906, :y2 418.8375015258789, :width 870, :height 1086.3071297989031}, :rects ({:x1 184.9375, :y1 400.43750762939453, :x2 261.4112854003906, :y2 418.8375015258789, :width 870, :height 1086.3071297989031}), :page 178}, :content {:text "迭代方法"}, :properties {:color "green"}} {:id #uuid "63be69e7-1040-486d-a71d-d579ec3cbdb1", :page 179, :position {:bounding {:x1 135.8495330810547, :y1 538.3125152587891, :x2 229.8237762451172, :y2 562.3125152587891, :width 870, :height 1086.3071297989031}, :rects ({:x1 135.8495330810547, :y1 538.3125152587891, :x2 135.8530731201172, :y2 562.3125152587891, :width 870, :height 1086.3071297989031} {:x1 153.35000610351562, :y1 540.2375030517578, :x2 229.8237762451172, :y2 558.6375274658203, :width 870, :height 1086.3071297989031}), :page 179}, :content {:text "归并方法"}, :properties {:color "green"}} {:id #uuid "63be6a08-fb0d-4102-91dc-de90944e1ae6", :page 180, :position {:bounding {:x1 145.3607635498047, :y1 228.8874969482422, :x2 255.2095489501953, :y2 256.8874969482422, :width 870, :height 1086.3071297989031}, :rects ({:x1 145.3607635498047, :y1 228.8874969482422, :x2 145.36378479003906, :y2 256.8874969482422, :width 870, :height 1086.3071297989031} {:x1 166.03750610351562, :y1 229.81251525878906, :x2 255.2095489501953, :y2 252.21250915527344, :width 870, :height 1086.3071297989031}), :page 180}, :content {:text "定型数组"}, :properties {:color "green"}} {:id #uuid "63be6a22-4b5f-422e-a201-13babab8dd75", :page 188, :position {:bounding {:x1 166.1374969482422, :y1 833.300048828125, :x2 204.9005584716797, :y2 854.9000549316406, :width 870, :height 1086.3071297989031}, :rects ({:x1 166.1374969482422, :y1 833.300048828125, :x2 204.9005584716797, :y2 854.9000549316406, :width 870, :height 1086.3071297989031}), :page 188}, :content {:text "Map"}, :properties {:color "green"}} {:id #uuid "63be6a30-3d34-4f5e-a995-cc8d644c6c67", :page 193, :position {:bounding {:x1 134.5500030517578, :y1 662.9500045776367, :x2 224.8996124267578, :y2 684.5500030517578, :width 870, :height 1086.3071297989031}, :rects ({:x1 134.5500030517578, :y1 662.9500045776367, :x2 224.8996124267578, :y2 684.5500030517578, :width 870, :height 1086.3071297989031}), :page 193}, :content {:text "WeakMap"}, :properties {:color "green"}} {:id #uuid "63be6a3f-9238-435f-b044-c399dd08dc80", :page 198, :position {:bounding {:x1 166.1374969482422, :y1 122.92500305175781, :x2 204.9005584716797, :y2 144.52499389648438, :width 870, :height 1086.3071297989031}, :rects ({:x1 166.1374969482422, :y1 122.92500305175781, :x2 204.9005584716797, :y2 144.52499389648438, :width 870, :height 1086.3071297989031}), :page 198}, :content {:text "Set"}, :properties {:color "green"}} {:id #uuid "63be6a52-728f-428b-a100-de15e47fa9dc", :page 203, :position {:bounding {:x1 134.5500030517578, :y1 248.49998474121094, :x2 224.8996124267578, :y2 270.09999084472656, :width 870, :height 1086.3071297989031}, :rects ({:x1 134.5500030517578, :y1 248.49998474121094, :x2 224.8996124267578, :y2 270.09999084472656, :width 870, :height 1086.3071297989031}), :page 203}, :content {:text "WeakSet"}, :properties {:color "green"}} {:id #uuid "63be6a5d-63a1-415d-8e5d-b58fda46ccaa", :page 205, :position {:bounding {:x1 113.77276611328125, :y1 743.7375183105469, :x2 290.50592041015625, :y2 771.7375183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 113.77276611328125, :y1 743.7375183105469, :x2 113.77579498291016, :y2 771.7375183105469, :width 870, :height 1086.3071297989031} {:x1 134.4375, :y1 744.6500091552734, :x2 290.50592041015625, :y2 767.0500183105469, :width 870, :height 1086.3071297989031}), :page 205}, :content {:text "迭代与扩展操作"}, :properties {:color "green"}} {:id #uuid "63be6c10-625b-4dd3-b909-401a942f2312", :page 171, :position {:bounding {:x1 156.97500610351562, :y1 190.3750057220459, :x2 621.5380249023438, :y2 209.5750026702881, :width 870, :height 1086.3071297989031}, :rects ({:x1 156.97500610351562, :y1 190.3750057220459, :x2 621.5380249023438, :y2 209.5750026702881, :width 870, :height 1086.3071297989031}), :page 171}, :content {:text " toLocaleString()方法时，会得到一个逗号分隔的数组值的字符串"}, :properties {:color "yellow"}} {:id #uuid "63be6c15-490e-4c1d-b7c9-e19afe5338bf", :page 171, :position {:bounding {:x1 370.83062744140625, :y1 212.89999961853027, :x2 693.6815795898438, :y2 232.10001182556152, :width 870, :height 1086.3071297989031}, :rects ({:x1 370.83062744140625, :y1 212.89999961853027, :x2 693.6815795898438, :y2 232.10001182556152, :width 870, :height 1086.3071297989031}), :page 171}, :content {:text "会调用数组每个值的 toLocaleString()方法"}, :properties {:color "yellow"}} {:id #uuid "63be6c1b-0f91-4b35-9917-d648ca947704", :page 171, :position {:bounding {:x1 0, :y1 12.80000114440918, :x2 757.559814453125, :y2 164.4375057220459, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 12.80000114440918, :x2 0, :y2 35.200002670288086, :width 870, :height 1086.3071297989031} {:x1 636.8875122070312, :y1 123.96249961853027, :x2 757.559814453125, :y2 143.16249656677246, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 145.2375087738037, :x2 397.5849914550781, :y2 164.4375057220459, :width 870, :height 1086.3071297989031}), :page 171}, :content {:text "alert()期待字符串，所以会在后台调用数组的 toString()方法"}, :properties {:color "yellow"}} {:id #uuid "63be6c5d-4be7-4e0c-8f34-48d0f4f48a6e", :page 171, :position {:bounding {:x1 0, :y1 524.8000030517578, :x2 758.2365112304688, :y2 810.1124877929688, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 524.8000030517578, :x2 0, :y2 547.1999969482422, :width 870, :height 1086.3071297989031} {:x1 375.88751220703125, :y1 769.5499877929688, :x2 758.2365112304688, :y2 788.7499694824219, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 790.9125061035156, :x2 172.0175018310547, :y2 810.1124877929688, :width 870, :height 1086.3071297989031}), :page 171}, :content {:text "join()方法接收一个参数，即字符串分隔符，返回包含所有项的字符串"}, :properties {:color "yellow"}} {:id #uuid "63be71cd-9d87-4f96-aeea-731b79761aca", :page 172, :position {:bounding {:x1 141.4250030517578, :y1 339.4500198364258, :x2 688.7147064208984, :y2 358.65003204345703, :width 870, :height 1086.3071297989031}, :rects ({:x1 141.4250030517578, :y1 339.4500198364258, :x2 688.7147064208984, :y2 358.65003204345703, :width 870, :height 1086.3071297989031}), :page 172}, :content {:text "push()方法接收任意数量的参数，并将它们添加到数组末尾，返回数组的最新长度"}, :properties {:color "yellow"}} {:id #uuid "63be7332-53b9-4338-a3dd-0c555a2289d6", :page 172, :position {:bounding {:x1 0, :y1 339.4500198364258, :x2 789.1201782226562, :y2 379.91251373291016, :width 870, :height 1086.3071297989031}, :rects ({:x1 700.6375122070312, :y1 339.4500198364258, :x2 789.1201782226562, :y2 358.65003204345703, :width 870, :height 1086.3071297989031} {:x1 0, :y1 348.7999954223633, :x2 0, :y2 371.2000198364258, :width 870, :height 1086.3071297989031} {:x1 112.80000305175781, :y1 360.7125015258789, :x2 595.7228393554688, :y2 379.91251373291016, :width 870, :height 1086.3071297989031}), :page 172}, :content {:text "pop()方法则用于删除数组的最后一项，同时减少数组的 length 值，返回被删除的项"}, :properties {:color "yellow"}} {:id #uuid "63be7366-89d7-4ccd-afc6-fe6769452595", :page 172, :position {:bounding {:x1 0, :y1 780.7999877929688, :x2 789.1129150390625, :y2 984.2749938964844, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 780.7999877929688, :x2 0, :y2 803.2000122070312, :width 870, :height 1086.3071297989031} {:x1 640.5125122070312, :y1 943.7999877929688, :x2 789.1129150390625, :y2 963, :width 870, :height 1086.3071297989031} {:x1 112.7874984741211, :y1 965.0750122070312, :x2 380.875, :y2 984.2749938964844, :width 870, :height 1086.3071297989031}), :page 172}, :content {:text "shift()，它会删除数组的第一项并返回它，然后数组长度减 1"}, :properties {:color "yellow"}} {:id #uuid "63be7372-1c4f-472b-abd5-4716f2fe3942", :page 172, :position {:bounding {:x1 396.04541015625, :y1 965.0749969482422, :x2 757.4395751953125, :y2 984.2749938964844, :width 870, :height 1086.3071297989031}, :rects ({:x1 396.04541015625, :y1 965.0749969482422, :x2 757.4395751953125, :y2 984.2749938964844, :width 870, :height 1086.3071297989031}), :page 172}, :content {:text "使用 shift()和 push()，可以把数组当成队列来使用"}, :properties {:color "yellow"}} {:id #uuid "63be76e5-fa0c-4e5b-a317-77fd39ada962", :page 173, :position {:bounding {:x1 0, :y1 188.79999923706055, :x2 757.5237426757812, :y2 387.2624931335449, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 188.79999923706055, :x2 0, :y2 211.20000839233398, :width 870, :height 1086.3071297989031} {:x1 495.375, :y1 346.6999931335449, :x2 757.5237426757812, :y2 365.9000053405762, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 368.0625114440918, :x2 474.87837982177734, :y2 387.2624931335449, :width 870, :height 1086.3071297989031}), :page 173}, :content {:text "unshift()就是执行跟 shift()相反的操作：在数组开头添加任意多个值，然后返回新的数组长度"}, :properties {:color "yellow"}} {:id #uuid "63be76f2-9861-408c-88c1-dae1053b0d32", :page 173, :position {:bounding {:x1 0, :y1 412.8000183105469, :x2 757.6144409179688, :y2 706.6625366210938, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 412.8000183105469, :x2 0, :y2 435.20001792907715, :width 870, :height 1086.3071297989031} {:x1 634.7875366210938, :y1 666.1000213623047, :x2 757.6144409179688, :y2 685.3000183105469, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 687.4625244140625, :x2 232.58812713623047, :y2 706.6625366210938, :width 870, :height 1086.3071297989031}), :page 173}, :content {:text "reverse()方法就是将数组元素反向排列"}, :properties {:color "yellow"}} {:id #uuid "63be774b-dd42-4a63-b01f-ce071a7f890f", :page 173, :position {:bounding {:x1 201.53750610351562, :y1 812.6875305175781, :x2 449.2281799316406, :y2 831.8875427246094, :width 870, :height 1086.3071297989031}, :rects ({:x1 201.53750610351562, :y1 812.6875305175781, :x2 449.2281799316406, :y2 831.8875427246094, :width 870, :height 1086.3071297989031}), :page 173}, :content {:text "sort()会按照升序重新排列数组元素"}, :properties {:color "yellow"}} {:id #uuid "63be776f-de22-435b-8f39-7bd438fda891", :page 173, :position {:bounding {:x1 277.6000061035156, :y1 981.7875061035156, :x2 506.98004150390625, :y2 1000.9875183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 277.6000061035156, :y1 981.7875061035156, :x2 506.98004150390625, :y2 1000.9875183105469, :width 870, :height 1086.3071297989031}), :page 173}, :content {:text "sort()方法可以接收一个比较函数"}, :properties {:color "yellow"}} {:id #uuid "63be77aa-4eef-41e1-b4d9-341814f7a161", :page 174, :position {:bounding {:x1 143.03750610351562, :y1 122.7125015258789, :x2 669.9712219238281, :y2 141.91251373291016, :width 870, :height 1086.3071297989031}, :rects ({:x1 143.03750610351562, :y1 122.7125015258789, :x2 669.9712219238281, :y2 141.91251373291016, :width 870, :height 1086.3071297989031}), :page 174}, :content {:text "比较函数接收两个参数，如果第一个参数应该排在第二个参数前面，就返回负值"}, :properties {:color "yellow"}} {:id #uuid "63be787a-a0f8-41b7-b5a2-752bbe933c73", :page 175, :position {:bounding {:x1 445.5500183105469, :y1 161.28749656677246, :x2 544.8795776367188, :y2 180.48749351501465, :width 870, :height 1086.3071297989031}, :rects ({:x1 445.5500183105469, :y1 161.28749656677246, :x2 544.8795776367188, :y2 180.48749351501465, :width 870, :height 1086.3071297989031}), :page 175}, :content {:text "concat()方法"}, :properties {:color "yellow"}} {:id #uuid "63be78a5-6759-42cb-81a9-5fb204caba7b", :page 175, :position {:bounding {:x1 0, :y1 204.8000030517578, :x2 762.0772705078125, :y2 442.02500915527344, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 204.8000030517578, :x2 0, :y2 227.2000026702881, :width 870, :height 1086.3071297989031} {:x1 620, :y1 405.1000061035156, :x2 762.0772705078125, :y2 419.5, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 427.625, :x2 169.93931579589844, :y2 442.02500915527344, :width 870, :height 1086.3071297989031}), :page 175}, :content {:text "Symbol.isConcatSpreadable"}, :properties {:color "yellow"}} {:id #uuid "63be7942-cfbc-487e-a1b1-f9bc384307f9", :page 175, :position {:bounding {:x1 168.4250030517578, :y1 784.1375274658203, :x2 625.9984741210938, :y2 803.3375396728516, :width 870, :height 1086.3071297989031}, :rects ({:x1 168.4250030517578, :y1 784.1375274658203, :x2 625.9984741210938, :y2 803.3375396728516, :width 870, :height 1086.3071297989031}), :page 175}, :content {:text "方法 slice()用于创建一个包含原有数组中一个或多个元素的新数组"}, :properties {:color "yellow"}} {:id #uuid "63be7c46-4081-4b5c-8830-9e94ad4dd4ec", :page 177, :position {:bounding {:x1 0, :y1 444.8000030517578, :x2 757.5860595703125, :y2 733.8625183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 444.8000030517578, :x2 0, :y2 467.1999969482422, :width 870, :height 1086.3071297989031} {:x1 675.7250366210938, :y1 693.3999938964844, :x2 757.5860595703125, :y2 712.5999755859375, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 714.6625061035156, :x2 202.26194763183594, :y2 733.8625183105469, :width 870, :height 1086.3071297989031}), :page 177}, :content {:text "find()返回第一个匹配的元素"}, :properties {:color "yellow"}} {:id #uuid "63be7c4e-8b3b-4870-a60d-a0088c3ce20a", :page 177, :position {:bounding {:x1 209.5625, :y1 715.9125061035156, :x2 485.8046569824219, :y2 735.1125183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 209.5625, :y1 715.9125061035156, :x2 485.8046569824219, :y2 735.1125183105469, :width 870, :height 1086.3071297989031}), :page 177}, :content {:text "findIndex()返回第一个匹配元素的索引"}, :properties {:color "yellow"}} {:id #uuid "63be7ca0-5ded-405a-af45-ad5e49dcd4b1", :page 177, :position {:bounding {:x1 112.7874984741211, :y1 929.1500244140625, :x2 598.27197265625, :y2 941.9500427246094, :width 870, :height 1086.3071297989031}, :rects ({:x1 112.7874984741211, :y1 929.1500244140625, :x2 302.18297576904297, :y2 941.9500427246094, :width 870, :height 1086.3071297989031} {:x1 318.8999938964844, :y1 929.1500244140625, :x2 598.27197265625, :y2 941.9500427246094, :width 870, :height 1086.3071297989031}), :page 177}, :content {:text "alert(people.find((element, index, array) => element.age < 28));"}, :properties {:color "yellow"}} {:id #uuid "63be7cb9-6d53-426f-b756-7fa27b50eb36", :page 178, :position {:bounding {:x1 167.28750610351562, :y1 178.7125244140625, :x2 412.1585388183594, :y2 191.51251220703125, :width 870, :height 1086.3071297989031}, :rects ({:x1 167.28750610351562, :y1 178.7125244140625, :x2 412.1585388183594, :y2 191.51251220703125, :width 870, :height 1086.3071297989031}), :page 178}, :content {:text "找到匹配后，永远不会检查数组的最后一个元素"}, :properties {:color "yellow"}} {:id #uuid "63be7cd3-abe0-4e38-9373-2c2c86a34721", :page 178, :position {:bounding {:x1 0, :y1 436.38751220703125, :x2 789.981201171875, :y2 515.2000122070312, :width 870, :height 1086.3071297989031}, :rects ({:x1 426.5537109375, :y1 436.38751220703125, :x2 789.981201171875, :y2 455.5875244140625, :width 870, :height 1086.3071297989031} {:x1 112.7874984741211, :y1 458.9125061035156, :x2 585.5283203125, :y2 478.1125183105469, :width 870, :height 1086.3071297989031} {:x1 0, :y1 492.8000183105469, :x2 0, :y2 515.2000122070312, :width 870, :height 1086.3071297989031}), :page 178}, :content {:text "每个方法接收两个参数：以每一项为参数运行的函数，以及可选的作为函数运行上下文的作用域对象（影响函数中 this 的值"}, :properties {:color "yellow"}} {:id #uuid "63be7cdc-89aa-4c0e-84ca-8019251a531c", :page 178, :position {:bounding {:x1 0, :y1 458.9125061035156, :x2 789.0375366210938, :y2 531.2000122070312, :width 870, :height 1086.3071297989031}, :rects ({:x1 608.1256713867188, :y1 458.9125061035156, :x2 789.0375366210938, :y2 478.1125183105469, :width 870, :height 1086.3071297989031} {:x1 112.7874984741211, :y1 481.4375, :x2 383.82540130615234, :y2 500.63751220703125, :width 870, :height 1086.3071297989031} {:x1 0, :y1 508.8000183105469, :x2 0, :y2 531.2000122070312, :width 870, :height 1086.3071297989031}), :page 178}, :content {:text "传给每个方法的函数接收 3个参数：数组元素、元素索引和数组本身"}, :properties {:color "yellow"}} {:id #uuid "63be7f2d-9234-4923-9654-5a701d25ee23", :page 178, :position {:bounding {:x1 447.6206970214844, :y1 594.2250061035156, :x2 705.0286865234375, :y2 613.4250183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 447.6206970214844, :y1 594.2250061035156, :x2 705.0286865234375, :y2 613.4250183105469, :width 870, :height 1086.3071297989031}), :page 178}, :content {:text "返回由每次函数调用的结果构成的数组"}, :properties {:color "yellow"}} {:id #uuid "63be7fc0-eae6-411a-a490-388ff18ab7fd", :page 179, :position {:bounding {:x1 112.7874984741211, :y1 268.9000244140625, :x2 584.243896484375, :y2 281.70001220703125, :width 870, :height 1086.3071297989031}, :rects ({:x1 112.7874984741211, :y1 268.9000244140625, :x2 361.1998596191406, :y2 281.70001220703125, :width 870, :height 1086.3071297989031} {:x1 372.3374938964844, :y1 268.9000244140625, :x2 584.243896484375, :y2 281.70001220703125, :width 870, :height 1086.3071297989031}), :page 179}, :content {:text "let mapResult = numbers.map((item, index, array) => item * 2);"}, :properties {:color "yellow"}} {:id #uuid "63be7fdf-bc96-4d9a-9932-fea0980a62ba", :page 179, :position {:bounding {:x1 240.375, :y1 369.7999939918518, :x2 713.001708984375, :y2 388.99997568130493, :width 870, :height 1086.3071297989031}, :rects ({:x1 240.375, :y1 369.7999939918518, :x2 713.001708984375, :y2 388.99997568130493, :width 870, :height 1086.3071297989031}), :page 179}, :content {:text "forEach()方法。这个方法只会对每一项运行传入的函数，没有返回值"}, :properties {:color "yellow"}} {:id #uuid "63be800b-f488-4335-8f24-6e0226778428", :page 179, :position {:bounding {:x1 415.3000183105469, :y1 599.9749908447266, :x2 742.8092651367188, :y2 619.1749877929688, :width 870, :height 1086.3071297989031}, :rects ({:x1 415.3000183105469, :y1 599.9749908447266, :x2 742.8092651367188, :y2 619.1749877929688, :width 870, :height 1086.3071297989031}), :page 179}, :content {:text "reduce()方法从数组第一项开始遍历到最后一项"}, :properties {:color "yellow"}} {:id #uuid "63be8010-73b7-439f-9a06-e832ffc2bfba", :page 179, :position {:bounding {:x1 100.0999984741211, :y1 622.5874938964844, :x2 408.4678649902344, :y2 641.7874908447266, :width 870, :height 1086.3071297989031}, :rects ({:x1 100.0999984741211, :y1 622.5874938964844, :x2 408.4678649902344, :y2 641.7874908447266, :width 870, :height 1086.3071297989031}), :page 179}, :content {:text "reduceRight()从最后一项开始遍历至第一项"}, :properties {:color "yellow"}} {:id #uuid "63be8105-562d-431a-a28c-f0d0879fee48", :page 179, :position {:bounding {:x1 0, :y1 364.799991607666, :x2 758.257080078125, :y2 708.1000061035156, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 364.799991607666, :x2 0, :y2 387.1999931335449, :width 870, :height 1086.3071297989031} {:x1 470.520263671875, :y1 666.375, :x2 758.257080078125, :y2 685.5750122070312, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 688.8999938964844, :x2 126.3790283203125, :y2 708.1000061035156, :width 870, :height 1086.3071297989031}), :page 179}, :content {:text "上一个归并值、当前项、当前项的索引和数组本身"}, :properties {:color "yellow"}} {:id #uuid "63bea918-b9a5-494d-8ac1-e1acc48efb6b", :page 180, :position {:bounding {:x1 203.4499969482422, :y1 897.6124877929688, :x2 574.7863159179688, :y2 912.0124816894531, :width 870, :height 1086.3071297989031}, :rects ({:x1 203.4499969482422, :y1 897.6124877929688, :x2 574.7863159179688, :y2 912.0124816894531, :width 870, :height 1086.3071297989031}), :page 180}, :content {:text "ArrayBuffer 是所有定型数组及视图引用的基本单位。"}, :properties {:color "yellow"}} {:id #uuid "63bea92c-62f3-4a5a-b63b-818756fe52da", :page 181, :position {:bounding {:x1 109.8375015258789, :y1 292.1125030517578, :x2 450.3195495605469, :y2 311.31251525878906, :width 870, :height 1086.3071297989031}, :rects ({:x1 109.8375015258789, :y1 292.1125030517578, :x2 450.3195495605469, :y2 311.31251525878906, :width 870, :height 1086.3071297989031}), :page 181}, :content {:text "ArrayBuffer 某种程度上类似于 C++的 malloc()"}, :properties {:color "yellow"}} {:id #uuid "63bea936-f176-410b-84a8-52e29b8146c8", :page 181, :position {:bounding {:x1 0, :y1 172.8000030517578, :x2 760.7604370117188, :y2 377.71253967285156, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 172.8000030517578, :x2 0, :y2 195.1999969482422, :width 870, :height 1086.3071297989031} {:x1 663.0375366210938, :y1 337.1625213623047, :x2 760.7604370117188, :y2 356.3625030517578, :width 870, :height 1086.3071297989031} {:x1 490.7875061035156, :y1 356.75001525878906, :x2 500.742431640625, :y2 366.34999084472656, :width 870, :height 1086.3071297989031} {:x1 130.8249969482422, :y1 358.5125274658203, :x2 490.82501220703125, :y2 377.71253967285156, :width 870, :height 1086.3071297989031} {:x1 504.1499938964844, :y1 358.5125274658203, :x2 584.2691650390625, :y2 377.71253967285156, :width 870, :height 1086.3071297989031}), :page 181}, :content {:text "ArrayBuffer分配的内存不能超过 Number.MAX_SAFE_INTEGER（253  1）字节。"}, :properties {:color "yellow"}} {:id #uuid "63bea9f5-6afa-4353-972e-3f8d28e56a3c", :page 184, :position {:bounding {:x1 0, :y1 748.7999877929688, :x2 790.4165191650391, :y2 878.6499938964844, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 748.7999877929688, :x2 0, :y2 771.2000122070312, :width 870, :height 1086.3071297989031} {:x1 143.0500030517578, :y1 836.8374938964844, :x2 790.4165191650391, :y2 856.0375061035156, :width 870, :height 1086.3071297989031} {:x1 112.8125, :y1 859.4499816894531, :x2 218.7640380859375, :y2 878.6499938964844, :width 870, :height 1086.3071297989031}), :page 184}, :content {:text "创建定型数组的方式包括读取已有的缓冲、使用自有缓冲、填充可迭代结构，以及填充基于任意类型的定型数组。"}, :properties {:color "yellow"}} {:id #uuid "63beac71-af4d-4c45-89c4-66f754545e5f", :page 190, :position {:bounding {:x1 0, :y1 248.38750648498535, :x2 789.409912109375, :y2 339.20000648498535, :width 870, :height 1086.3071297989031}, :rects ({:x1 537.6500244140625, :y1 248.38750648498535, :x2 789.409912109375, :y2 267.5875186920166, :width 870, :height 1086.3071297989031} {:x1 112.80000305175781, :y1 270.925012588501, :x2 127.92041015625, :y2 290.1249942779541, :width 870, :height 1086.3071297989031} {:x1 0, :y1 316.800012588501, :x2 0, :y2 339.20000648498535, :width 870, :height 1086.3071297989031}), :page 190}, :content {:text "可以使用任何 JavaScript 数据类型作为键"}, :properties {:color "yellow"}} {:id #uuid "63beac7e-e044-43cd-8088-6bdbf4d37148", :page 189, :position {:bounding {:x1 142.7624969482422, :y1 124.16250610351562, :x2 214.69717407226562, :y2 148.16250610351562, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.7624969482422, :y1 124.16250610351562, :x2 214.69717407226562, :y2 148.16250610351562, :width 870, :height 1086.3071297989031}), :page 189}, :content {:text "基本 API"}, :properties {:color "green"}} {:id #uuid "63beac8c-49fb-4927-ab83-10deec98e9f1", :page 191, :position {:bounding {:x1 142.7624969482422, :y1 353.4875183105469, :x2 238.354736328125, :y2 371.8875427246094, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.7624969482422, :y1 353.4875183105469, :x2 238.354736328125, :y2 371.8875427246094, :width 870, :height 1086.3071297989031}), :page 191}, :content {:text "顺序与迭代"}, :properties {:color "green"}} {:id #uuid "63beacaa-bd51-4299-be85-fb036e40b3a3", :page 191, :position {:bounding {:x1 0, :y1 156.8000030517578, :x2 758.2279052734375, :y2 431.1624984741211, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 156.8000030517578, :x2 0, :y2 179.1999969482422, :width 870, :height 1086.3071297989031} {:x1 350.88751220703125, :y1 390.7000045776367, :x2 758.2279052734375, :y2 409.90001678466797, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 411.96251678466797, :x2 156.840087890625, :y2 431.1624984741211, :width 870, :height 1086.3071297989031}), :page 191}, :content {:text "Map 实例会维护键值对的插入顺序，因此可以根据插入顺序执行迭代操作"}, :properties {:color "yellow"}} {:id #uuid "63beacc6-cd03-4068-a720-d5564d546571", :page 191, :position {:bounding {:x1 499.2875061035156, :y1 458.3500061035156, :x2 697.7369995117188, :y2 477.5500030517578, :width 870, :height 1086.3071297989031}, :rects ({:x1 499.2875061035156, :y1 458.3500061035156, :x2 697.7369995117188, :y2 477.5500030517578, :width 870, :height 1086.3071297989031}), :page 191}, :content {:text "entries()）取得这个迭代器"}, :properties {:color "yellow"}} {:id #uuid "63beacd4-cd9b-44b1-92a0-3cacc3f37fc1", :page 191, :position {:bounding {:x1 237.7987060546875, :y1 457.1000061035156, :x2 435.1585388183594, :y2 476.3000030517578, :width 870, :height 1086.3071297989031}, :rects ({:x1 237.7987060546875, :y1 457.1000061035156, :x2 435.1585388183594, :y2 476.3000030517578, :width 870, :height 1086.3071297989031}), :page 191}, :content {:text "或者 Symbol.iterator 属性"}, :properties {:color "yellow"}} {:id #uuid "63bead95-c27a-4a33-a6f9-d929b7667259", :page 192, :position {:bounding {:x1 141.4250030517578, :y1 283.4375, :x2 553.00927734375, :y2 302.6374969482422, :width 870, :height 1086.3071297989031}, :rects ({:x1 141.4250030517578, :y1 283.4375, :x2 553.00927734375, :y2 302.6374969482422, :width 870, :height 1086.3071297989031}), :page 192}, :content {:text "keys()和 values()分别返回以插入顺序生成键和值的迭代器"}, :properties {:color "yellow"}} {:id #uuid "63beadaa-b7b6-4a0a-aa95-e1a44fcfed1d", :page 191, :position {:bounding {:x1 0, :y1 620.7999954223633, :x2 765.81591796875, :y2 978.5375061035156, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 620.7999954223633, :x2 0, :y2 643.1999969482422, :width 870, :height 1086.3071297989031} {:x1 426.130126953125, :y1 936.8249969482422, :x2 765.81591796875, :y2 956.0250091552734, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 959.3375091552734, :x2 345.2364807128906, :y2 978.5375061035156, :width 870, :height 1086.3071297989031}), :page 191}, :content {:text "调用映射的 forEach(callback, opt_thisArg)方法并传入回调，依次迭代每个键/值对"}, :properties {:color "yellow"}} {:id #uuid "63beaecf-7965-44bb-9b1f-79aca1ef3b3d", :page 192, :position {:bounding {:x1 143.03750610351562, :y1 598.2375030517578, :x2 594.6914672851562, :y2 617.4375, :width 870, :height 1086.3071297989031}, :rects ({:x1 143.03750610351562, :y1 598.2375030517578, :x2 594.6914672851562, :y2 617.4375, :width 870, :height 1086.3071297989031}), :page 192}, :content {:text "键和值在迭代器遍历时是可以修改的，但映射内部的引用则无法修改"}, :properties {:color "yellow"}} {:id #uuid "63beaefe-542d-4db0-a239-f3f754e03111", :page 193, :position {:bounding {:x1 142.7624969482422, :y1 124.16250419616699, :x2 321.968505859375, :y2 143.24999809265137, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.7624969482422, :y1 124.16250419616699, :x2 321.968505859375, :y2 143.24999809265137, :width 870, :height 1086.3071297989031}), :page 193}, :content {:text "选择 Object 还是 Ma"}, :properties {:color "green"}} {:id #uuid "63beaf0c-e895-4107-80aa-764f72356357", :page 193, :position {:bounding {:x1 262.8290710449219, :y1 276.17499351501465, :x2 720.2262573242188, :y2 295.3750057220459, :width 870, :height 1086.3071297989031}, :rects ({:x1 262.8290710449219, :y1 276.17499351501465, :x2 720.2262573242188, :y2 295.3750057220459, :width 870, :height 1086.3071297989031}), :page 193}, :content {:text "给定固定大小的内存，Map 大约可以比 Object 多存储 50%的键/值对"}, :properties {:color "yellow"}} {:id #uuid "63beafa7-ba78-483f-bac3-4041047eb57d", :page 193, :position {:bounding {:x1 0, :y1 140.80000114440918, :x2 757.9591674804688, :y2 366.36249351501465, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 140.80000114440918, :x2 0, :y2 163.2000026702881, :width 870, :height 1086.3071297989031} {:x1 497.2057189941406, :y1 324.63751792907715, :x2 757.9591674804688, :y2 343.8374996185303, :width 870, :height 1086.3071297989031} {:x1 81.20000457763672, :y1 347.1625118255615, :x2 127.0869369506836, :y2 366.36249351501465, :width 870, :height 1086.3071297989031}), :page 193}, :content {:text "插入 Map 在所有浏览器中一般会稍微快一点儿"}, :properties {:color "yellow"}} {:id #uuid "63beafb7-443a-40f4-bdfb-0791eed57a3e", :page 193, :position {:bounding {:x1 0, :y1 252.8000030517578, :x2 758.6582641601562, :y2 527.550048828125, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 252.8000030517578, :x2 0, :y2 275.20001220703125, :width 870, :height 1086.3071297989031} {:x1 406.6565856933594, :y1 485.82501220703125, :x2 758.6582641601562, :y2 505.0249938964844, :width 870, :height 1086.3071297989031} {:x1 81.2125015258789, :y1 508.3500061035156, :x2 216.38162231445312, :y2 527.550048828125, :width 870, :height 1086.3071297989031}), :page 193}, :content {:text "如果代码涉及大量查找操作，那么某些情况下可能选择 Object 更好一些"}, :properties {:color "yellow"}} {:id #uuid "63beafcc-b7ba-4a9e-998f-b4fd109b716c", :page 193, :position {:bounding {:x1 0, :y1 332.8000183105469, :x2 758.19189453125, :y2 643.6875, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 332.8000183105469, :x2 0, :y2 355.20001220703125, :width 870, :height 1086.3071297989031} {:x1 458.9125061035156, :y1 603.2125244140625, :x2 758.19189453125, :y2 622.4125366210938, :width 870, :height 1086.3071297989031} {:x1 81.2125015258789, :y1 624.4874877929688, :x2 459.1159362792969, :y2 643.6875, :width 870, :height 1086.3071297989031}), :page 193}, :content {:text "Map 的 delete()操作都比插入和查找更快。如果代码涉及大量删除操作，那么毫无疑问应该选择 Map"}, :properties {:color "yellow"}} {:id #uuid "63beafd8-f73f-4426-b8f4-74f44257858a", :page 193, :position {:bounding {:x1 142.7624969482422, :y1 786.7375183105469, :x2 214.69717407226562, :y2 810.7375183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.7624969482422, :y1 786.7375183105469, :x2 214.69717407226562, :y2 810.7375183105469, :width 870, :height 1086.3071297989031}), :page 193}, :content {:text "基本 API"}, :properties {:color "green"}} {:id #uuid "63beb026-805f-4267-b455-f43c5c8180b4", :page 193, :position {:bounding {:x1 112.7874984741211, :y1 848.4500122070312, :x2 297.448974609375, :y2 861.2500305175781, :width 870, :height 1086.3071297989031}, :rects ({:x1 112.7874984741211, :y1 848.4500122070312, :x2 297.448974609375, :y2 861.2500305175781, :width 870, :height 1086.3071297989031}), :page 193}, :content {:text "const wm = new WeakMap();"}, :properties {:color "yellow"}} {:id #uuid "63beb1c7-02b5-4070-aecf-68f0a1e98c6b", :page 195, :position {:bounding {:x1 125.2846450805664, :y1 250.97499084472656, :x2 180.9993896484375, :y2 274.97499084472656, :width 870, :height 1086.3071297989031}, :rects ({:x1 125.2846450805664, :y1 250.97499084472656, :x2 125.28816223144531, :y2 274.97499084472656, :width 870, :height 1086.3071297989031} {:x1 142.7624969482422, :y1 252.90000915527344, :x2 180.9993896484375, :y2 271.3000030517578, :width 870, :height 1086.3071297989031}), :page 195}, :content {:text "弱键"}, :properties {:color "green"}} {:id #uuid "63beb1d5-f29a-42e4-8625-eea2a65aba35", :page 195, :position {:bounding {:x1 0, :y1 108.80000305175781, :x2 737.26513671875, :y2 330.58750915527344, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 108.80000305175781, :x2 0, :y2 131.1999969482422, :width 870, :height 1086.3071297989031} {:x1 287.1061096191406, :y1 288.84999084472656, :x2 737.26513671875, :y2 308.0500030517578, :width 870, :height 1086.3071297989031} {:x1 81.2125015258789, :y1 311.3874969482422, :x2 203.58721923828125, :y2 330.58750915527344, :width 870, :height 1086.3071297989031}), :page 195}, :content {:text "映射的键是“弱弱地拿着”的。意思就是，这些键不属于正式的引用，不会阻止垃圾回收"}, :properties {:color "yellow"}} {:id #uuid "63beb214-e271-49e3-8655-6b42ec2b15f8", :page 195, :position {:bounding {:x1 142.7624969482422, :y1 811.9249877929688, :x2 238.354736328125, :y2 830.3249893188477, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.7624969482422, :y1 811.9249877929688, :x2 238.354736328125, :y2 830.3249893188477, :width 870, :height 1086.3071297989031}), :page 195}, :content {:text "不可迭代键"}, :properties {:color "green"}} {:id #uuid "63beb294-8369-4334-8bb2-5b932d743636", :page 196, :position {:bounding {:x1 174.33750915527344, :y1 124.16250610351562, :x2 269.92974853515625, :y2 142.5625, :width 870, :height 1086.3071297989031}, :rects ({:x1 174.33750915527344, :y1 124.16250610351562, :x2 269.92974853515625, :y2 142.5625, :width 870, :height 1086.3071297989031}), :page 196}, :content {:text "使用弱映射"}, :properties {:color "green"}} {:id #uuid "63beb2da-e319-4684-a191-ab8daa677169", :page 195, :position {:bounding {:x1 109.8375015258789, :y1 939.3249969482422, :x2 715.737548828125, :y2 953.7249908447266, :width 870, :height 1086.3071297989031}, :rects ({:x1 109.8375015258789, :y1 939.3249969482422, :x2 715.737548828125, :y2 953.7249908447266, :width 870, :height 1086.3071297989031}), :page 195}, :content {:text "WeakMap 实例之所以限制只能用对象作为键，是为了保证只有通过键对象的引用才能取得值"}, :properties {:color "yellow"}} {:id #uuid "63beb368-5074-47f1-90ad-114328dda759", :page 198, :position {:bounding {:x1 174.33750915527344, :y1 224.07498168945312, :x2 246.28466796875, :y2 248.07498168945312, :width 870, :height 1086.3071297989031}, :rects ({:x1 174.33750915527344, :y1 224.07498168945312, :x2 246.28466796875, :y2 248.07498168945312, :width 870, :height 1086.3071297989031}), :page 198}, :content {:text "基本 API"}, :properties {:color "green"}} {:id #uuid "63beb37c-f64b-4174-8555-a667080690fa", :page 198, :position {:bounding {:x1 144.375, :y1 285.7875061035156, :x2 293.34283447265625, :y2 298.5874938964844, :width 870, :height 1086.3071297989031}, :rects ({:x1 144.375, :y1 285.7875061035156, :x2 293.34283447265625, :y2 298.5874938964844, :width 870, :height 1086.3071297989031}), :page 198}, :content {:text "const m = new Set();"}, :properties {:color "yellow"}} {:id #uuid "63beb534-1098-42e1-a16b-c595426f301d", :page 200, :position {:bounding {:x1 174.33750915527344, :y1 124.16250610351562, :x2 269.92974853515625, :y2 142.5625, :width 870, :height 1086.3071297989031}, :rects ({:x1 174.33750915527344, :y1 124.16250610351562, :x2 269.92974853515625, :y2 142.5625, :width 870, :height 1086.3071297989031}), :page 200}, :content {:text "顺序与迭代"}, :properties {:color "green"}} {:id #uuid "63beb573-943c-425c-92c6-a7651807ee96", :page 200, :position {:bounding {:x1 141.4250030517578, :y1 161.28750610351562, :x2 474.2387390136719, :y2 175.6875, :width 870, :height 1086.3071297989031}, :rects ({:x1 141.4250030517578, :y1 161.28750610351562, :x2 474.2387390136719, :y2 175.6875, :width 870, :height 1086.3071297989031}), :page 200}, :content {:text "Set 会维护值插入时的顺序，因此支持按顺序迭代"}, :properties {:color "yellow"}} {:id #uuid "63beb591-e55e-4009-8e29-9944a11aa44f", :page 200, :position {:bounding {:x1 0, :y1 588.8000183105469, :x2 790.357177734375, :y2 634.2375183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 588.8000183105469, :x2 0, :y2 611.2000122070312, :width 870, :height 1086.3071297989031} {:x1 143.03750610351562, :y1 592.5125122070312, :x2 790.357177734375, :y2 611.7125244140625, :width 870, :height 1086.3071297989031} {:x1 112.80000305175781, :y1 615.0375061035156, :x2 309.6020812988281, :y2 634.2375183105469, :width 870, :height 1086.3071297989031}), :page 200}, :content {:text "集合的 entries()方法返回一个迭代器，可以按照插入顺序产生包含两个元素的数组，这两个元素是集合中每个值的重复出现"}, :properties {:color "yellow"}} {:id #uuid "63beb5b3-db3a-4018-9837-3159c0a42b7b", :page 200, :position {:bounding {:x1 173.1999969482422, :y1 512.1625213623047, :x2 745.3912963867188, :y2 531.3625183105469, :width 870, :height 1086.3071297989031}, :rects ({:x1 173.1999969482422, :y1 512.1625213623047, :x2 745.3912963867188, :y2 531.3625183105469, :width 870, :height 1086.3071297989031}), :page 200}, :content {:text " values()是默认迭代器，所以可以直接对集合实例使用扩展操作，把集合转换为数组"}, :properties {:color "yellow"}} {:id #uuid "63beb602-dcb6-45b2-bf6e-ed79df318abe", :page 201, :position {:bounding {:x1 142.7624969482422, :y1 388.8875274658203, :x2 295.7100830078125, :y2 407.28749084472656, :width 870, :height 1086.3071297989031}, :rects ({:x1 142.7624969482422, :y1 388.8875274658203, :x2 295.7100830078125, :y2 407.28749084472656, :width 870, :height 1086.3071297989031}), :page 201}, :content {:text "定义正式集合操作"}, :properties {:color "green"}} {:id #uuid "63beb6bf-7356-4f24-8af1-16524da3c8c7", :page 203, :position {:bounding {:x1 111.45000457763672, :y1 454.2375183105469, :x2 488.927001953125, :y2 473.4375, :width 870, :height 1086.3071297989031}, :rects ({:x1 111.45000457763672, :y1 454.2375183105469, :x2 488.927001953125, :y2 473.4375, :width 870, :height 1086.3071297989031}), :page 203}, :content {:text "弱集合中的值只能是 Object 或者继承自 Object 的类型，"}, :properties {:color "yellow"}} {:id #uuid "63beb7de-9134-46b7-90c6-c1239c0959ca", :page 204, :position {:bounding {:x1 0, :y1 780.8000335693359, :x2 790.2723388671875, :y2 960.0375366210938, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 780.8000335693359, :x2 0, :y2 803.2000427246094, :width 870, :height 1086.3071297989031} {:x1 188.5073699951172, :y1 918.3125305175781, :x2 790.2723388671875, :y2 937.5125427246094, :width 870, :height 1086.3071297989031} {:x1 112.7874984741211, :y1 940.8375549316406, :x2 127.8111343383789, :y2 960.0375366210938, :width 870, :height 1086.3071297989031}), :page 204}, :content {:text "，container 对象维护着一个对弱集合值的引用，因此这个对象值不会成为垃圾回收的目标"}, :properties {:color "yellow"}} {:id #uuid "63beb83d-ee81-472f-adbe-8ce629cf4acd", :page 205, :position {:bounding {:x1 0, :y1 364.8000068664551, :x2 758.2150268554688, :y2 724.4250373840332, :width 870, :height 1086.3071297989031}, :rects ({:x1 0, :y1 364.8000068664551, :x2 0, :y2 387.20000076293945, :width 870, :height 1086.3071297989031} {:x1 156.82810974121094, :y1 682.6874885559082, :x2 758.2150268554688, :y2 701.8875007629395, :width 870, :height 1086.3071297989031} {:x1 81.2249984741211, :y1 705.225025177002, :x2 405.9750061035156, :y2 724.4250373840332, :width 870, :height 1086.3071297989031}), :page 205}, :content {:text "只要 WeakSet 中任何元素从 DOM 树中被删除，垃圾回收程序就可以忽略其存在，而立即释放其内存（假设没有其他地方引用这个对象）。"}, :properties {:color "yellow"}} {:id #uuid "63beb8b9-8bc8-406c-b3e5-617884384140", :page 206, :position {:bounding {:x1 294.42266845703125, :y1 122.71250915527344, :x2 640.8783569335938, :y2 141.91250610351562, :width 870, :height 1086.3071297989031}, :rects ({:x1 294.42266845703125, :y1 122.71250915527344, :x2 640.8783569335938, :y2 141.91250610351562, :width 870, :height 1086.3071297989031}), :page 206}, :content {:text "所有类型都支持顺序迭代，都可以传入 for-of 循环"}, :properties {:color "yellow"}} {:id #uuid "63beb8fa-a0bd-4313-9aa1-9734ff48394e", :page 206, :position {:bounding {:x1 143.03750610351562, :y1 623.2375030517578, :x2 642.6156616210938, :y2 642.4375152587891, :width 870, :height 1086.3071297989031}, :rects ({:x1 143.03750610351562, :y1 623.2375030517578, :x2 642.6156616210938, :y2 642.4375152587891, :width 870, :height 1086.3071297989031}), :page 206}, :content {:text "对于期待可迭代对象的构造函数，只要传入一个可迭代对象就可以实现复制"}, :properties {:color "yellow"}} {:id #uuid "63c7b6f7-8409-4620-999e-f6a0cdfa2c98", :page 208, :position {:bounding {:x1 173.98749685287476, :y1 505.0500030517578, :x2 266.88036489486694, :y2 538.6500091552734, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 173.98749685287476, :y1 505.0500030517578, :x2 266.88036489486694, :y2 538.6500091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 208}, :content {:text "理解迭代"}, :properties {:color "green"}} {:id #uuid "63c7d77d-5947-49c4-8a94-fd1508cc8d46", :page 208, :position {:bounding {:x1 149.90000295639038, :y1 552.8000183105469, :x2 495.2394652366638, :y2 575.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000295639038, :y1 552.8000183105469, :x2 495.2394652366638, :y2 575.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 165.7000060081482, :y1 556.8000183105469, :x2 238.73749685287476, :y2 572.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 208}, :content {:text "在 JavaScript 中，计数循环就是一种最简单的迭代"}, :properties {:color "yellow"}} {:id #uuid "63c7d840-cf6f-44ac-80b6-40423bb0226b", :page 208, :position {:bounding {:x1 149.90000295639038, :y1 637, :x2 771.5496611595154, :y2 659.3999938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000295639038, :y1 637, :x2 771.5496611595154, :y2 659.3999938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 208}, :content {:text "循环是迭代机制的基础，这是因为它可以指定迭代的次数，以及每次迭代要执行什么操作"}, :properties {:color "yellow"}} {:id #uuid "63c7d8d9-52be-4e94-84f7-298891427021", :page 208, :position {:bounding {:x1 149.8875060081482, :y1 964.4625244140625, :x2 691.1716551780701, :y2 987.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8875060081482, :y1 964.4625244140625, :x2 409.3953185081482, :y2 986.8625183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 455.90001821517944, :y1 965.5000305175781, :x2 691.1716551780701, :y2 987.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 455.90001821517944, :y1 969.5000305175781, :x2 691.1716551780701, :y2 985.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 179.48749685287476, :y1 969.5125427246094, :x2 409.3953185081482, :y2 985.3125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 208}, :content {:text "ES5 新增了 Array.prototype.forEach()方法，向通用迭代需求迈进了一步"}, :properties {:color "yellow"}} {:id #uuid "63c7d934-edb4-4ff8-9d6f-8dc32ff49123", :page 209, :position {:bounding {:x1 597.7380614280701, :y1 183.29998779296875, :x2 774.0819945335388, :y2 205.70001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 597.7380614280701, :y1 183.29998779296875, :x2 774.0819945335388, :y2 205.70001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 209}, :content {:text "没有办法标识迭代何时终"}, :properties {:color "yellow"}} {:id #uuid "63c7d947-e12a-4d13-b77e-d044beacf856", :page 209, :position {:bounding {:x1 118.67588949203491, :y1 339.5500183105469, :x2 256.96642446517944, :y2 374.6999816894531, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 140.8875060081482, :y1 339.5500183105469, :x2 256.96642446517944, :y2 373.1499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.67588949203491, :y1 341.1000061035156, :x2 118.67891836166382, :y2 374.6999816894531, :width 911.6666666666666, :height 1138.3333333333333}), :page 209}, :content {:text "迭代器模式"}, :properties {:color "green"}} {:id #uuid "63c7db27-2ba2-446e-a723-e7eab2540167", :page 209, :position {:bounding {:x1 117.15960836410522, :y1 458.1125183105469, :x2 517.9047560691833, :y2 480.5125274658203, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 117.15960836410522, :y1 458.1125183105469, :x2 517.9047560691833, :y2 480.5125274658203, :width 911.6666666666666, :height 1138.3333333333333}), :page 209}, :content {:text "它们包含的元素都是有限的，而且都具有无歧义的遍历顺"}, :properties {:color "yellow"}} {:id #uuid "63c7db97-e0ef-4c59-922b-ca268a8205d5", :page 209, :position {:bounding {:x1 130.73789358139038, :y1 846.6125183105469, :x2 249.59999990463257, :y2 876.75, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 846.6125183105469, :x2 249.59999990463257, :y2 875.4125366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 130.73789358139038, :y1 847.9500122070312, :x2 130.73789358139038, :y2 876.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 209}, :content {:text "可迭代协议"}, :properties {:color "green"}} {:id #uuid "63c7dbdd-45f5-486f-98ef-c85b7e04051b", :page 209, :position {:bounding {:x1 0, :y1 476.8000030517578, :x2 800.8844237327576, :y2 932.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 476.8000030517578, :x2 0, :y2 499.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 530.7806639671326, :y1 887.6000366210938, :x2 800.8844237327576, :y2 910, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999990463257, :y1 910.8500366210938, :x2 137.59531545639038, :y2 932.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 157.09999990463257, :y1 910.8500366210938, :x2 288.78090810775757, :y2 932.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999990463257, :y1 914.8500366210938, :x2 137.59531545639038, :y2 929.8500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 157.09999990463257, :y1 914.8500366210938, :x2 157.28749990463257, :y2 929.8500366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 209}, :content {:text "：支持迭代的自我识别能力和创建实现 Iterator 接口的对象的能力"}, :properties {:color "yellow"}} {:id #uuid "63c7dbf5-36a1-4d12-b509-48c35dc05528", :page 209, :position {:bounding {:x1 0, :y1 492.8000183105469, :x2 793.9856810569763, :y2 957.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 492.8000183105469, :x2 0, :y2 515.2000198364258, :width 911.6666666666666, :height 1138.3333333333333} {:x1 504.9410033226013, :y1 911.2000122070312, :x2 793.9856810569763, :y2 933.6000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 763.2000365257263, :y1 915.2000122070312, :x2 793.9856810569763, :y2 931.0000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 414.09999990463257, :y1 934.4500122070312, :x2 466.6000609397888, :y2 956.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750295639038, :y1 934.8125305175781, :x2 389.18126821517944, :y2 957.2125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 414.09999990463257, :y1 938.4500122070312, :x2 414.28749990463257, :y2 953.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750295639038, :y1 938.8125305175781, :x2 389.18126821517944, :y2 954.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 209}, :content {:text "必须暴露一个属性作为“默认迭代器”，而且这个属性必须使用特殊的 Symbol.iterator 作为键"}, :properties {:color "yellow"}} {:id #uuid "63c7dc37-bbe2-400f-aa81-a622b9c9cbd4", :page 210, :position {:bounding {:x1 0, :y1 668.7999877929688, :x2 835.4045042991638, :y2 716.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 668.7999877929688, :x2 0, :y2 691.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 596.2750487327576, :y1 670, :x2 835.4045042991638, :y2 692.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 693.6124877929688, :x2 406.7282271385193, :y2 716.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 210}, :content {:text "。实现可迭代协议的所有类型都会自动兼容接收可迭代对象的任何语言特性"}, :properties {:color "yellow"}} {:id #uuid "63c7dc3f-1ccb-40e0-b49d-5ffd60051e9e", :page 210, :position {:bounding {:x1 149.8875060081482, :y1 926.3999938964844, :x2 758.9823546409607, :y2 948.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8875060081482, :y1 926.3999938964844, :x2 758.9823546409607, :y2 948.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 210}, :content {:text "这些原生语言结构会在后台调用提供的可迭代对象的这个工厂函数，从而创建一个迭代"}, :properties {:color "yellow"}} {:id #uuid "63c7dc4f-7e8b-4559-91f1-222929027339", :page 210, :position {:bounding {:x1 422.75756216049194, :y1 693.6124877929688, :x2 695.2564330101013, :y2 716.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 422.75756216049194, :y1 693.6124877929688, :x2 695.2564330101013, :y2 716.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 210}, :content {:text "接收可迭代对象的原生语言特性包括："}, :properties {:color "yellow"}} {:id #uuid "63c7dca8-0715-45aa-a45d-1d89c0a2046a", :page 211, :position {:bounding {:x1 149.59999990463257, :y1 724.4125061035156, :x2 249.59999990463257, :y2 753.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 724.4125061035156, :x2 249.59999990463257, :y2 753.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 211}, :content {:text "迭代器协议"}, :properties {:color "green"}} {:id #uuid "63c7dcb9-333e-459c-a3ff-b83c489aa07a", :page 211, :position {:bounding {:x1 0, :y1 492.8000144958496, :x2 795.2641234397888, :y2 835.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 492.8000144958496, :x2 0, :y2 515.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 508.80001068115234, :x2 0, :y2 531.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 581.6440062522888, :y1 765.4000244140625, :x2 748.9422240257263, :y2 787.800048828125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 762.3000121116638, :y1 765.4000244140625, :x2 794.3000731468201, :y2 787.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 643.5999999046326, :y1 768.3500061035156, :x2 748.9422240257263, :y2 784.1500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 762.3000121116638, :y1 769.4000244140625, :x2 794.3000731468201, :y2 785.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 664.7000365257263, :y1 788.6500244140625, :x2 795.2641234397888, :y2 810.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 425.99999380111694, :y1 789.0000305175781, :x2 635.2336058616638, :y2 811.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750295639038, :y1 789.0125122070312, :x2 412.5421996116638, :y2 811.4125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 664.7000365257263, :y1 792.6500244140625, :x2 795.2641234397888, :y2 807.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 425.99999380111694, :y1 793.0000305175781, :x2 635.2336058616638, :y2 808.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750295639038, :y1 793.0125122070312, :x2 412.5421996116638, :y2 808.8125305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999990463257, :y1 812.6125183105469, :x2 229.3469786643982, :y2 835.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 211}, :content {:text "。迭代器 API 使用 next()方法在可迭代对象中遍历数据。每次成功调用 next()，都会返回一个 IteratorResult 对象，其中包含迭代器返回的下一个值"}, :properties {:color "yellow"}} {:id #uuid "63c7dd43-ec40-46f1-b128-c5617af7181f", :page 212, :position {:bounding {:x1 0, :y1 269.9500045776367, :x2 834.7000365257263, :y2 371.2000045776367, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 782.2000365257263, :y1 269.9500045776367, :x2 834.7000365257263, :y2 291.55001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 583.0510497093201, :y1 270.31250762939453, :x2 765.0015501976013, :y2 292.7125015258789, :width 911.6666666666666, :height 1138.3333333333333} {:x1 692.2000365257263, :y1 273.9500045776367, :x2 765.0015501976013, :y2 288.9500045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 782.2000365257263, :y1 273.9500045776367, :x2 834.7000365257263, :y2 288.9500045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 239.500009059906, :y1 293.9000015258789, :x2 399.76195669174194, :y2 316.30001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 293.91251373291016, :x2 226.02102041244507, :y2 316.31250762939453, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 297.91251373291016, :x2 226.02102041244507, :y2 313.7125015258789, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 348.80001068115234, :x2 0, :y2 371.2000045776367, :width 911.6666666666666, :height 1138.3333333333333}), :page 212}, :content {:text "只要迭代器到达 done: true 状态，后续调用 next()就一直返回同样的值了"}, :properties {:color "yellow"}} {:id #uuid "63c7dd92-4138-41c7-a004-13b908e543a9", :page 212, :position {:bounding {:x1 0, :y1 425.6000061035156, :x2 835.4045042991638, :y2 499.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 516.5652709007263, :y1 425.6000061035156, :x2 835.4045042991638, :y2 448, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 449.21250915527344, :x2 262.3729109764099, :y2 471.6125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 476.8000030517578, :x2 0, :y2 499.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 212}, :content {:text "不同迭代器的实例相互之间没有联系，只会独立地遍历可迭代对象"}, :properties {:color "yellow"}} {:id #uuid "63c7ddca-417e-4858-a800-59e07590aa64", :page 212, :position {:bounding {:x1 118.19999837875366, :y1 636.2125091552734, :x2 615.1303877830505, :y2 658.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 118.19999837875366, :y1 636.2125091552734, :x2 615.1303877830505, :y2 658.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 212}, :content {:text "如果可迭代对象在迭代期间被修改了，那么迭代器也会反映相应的变化"}, :properties {:color "yellow"}} {:id #uuid "63c7ddeb-dc9e-42f0-8c9b-606cd5f783a8", :page 212, :position {:bounding {:x1 0, :y1 780.8000183105469, :x2 782.6302123069763, :y2 913.5000305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 780.8000183105469, :x2 0, :y2 803.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 213.187509059906, :y1 868.4000244140625, :x2 782.6302123069763, :y2 890.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 510.1499876976013, :y1 872.4000244140625, :x2 782.6302123069763, :y2 888.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 165.7000060081482, :y1 891.1000061035156, :x2 229.776864528656, :y2 913.5000305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 212}, :content {:text "迭代器维护着一个指向可迭代对象的引用，因此迭代器会阻止垃圾回收程序回收可迭代对象"}, :properties {:color "yellow"}} {:id #uuid "63c7de4b-4e64-4ceb-a3fe-6107134c2421", :page 213, :position {:bounding {:x1 149.59999990463257, :y1 466.0124969482422, :x2 269.59999990463257, :y2 494.81251525878906, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 466.0124969482422, :x2 269.59999990463257, :y2 494.81251525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 213}, :content {:text "自定义迭代器"}, :properties {:color "green"}} {:id #uuid "63c7df22-4bf9-4f2a-b053-617c633522b4", :page 213, :position {:bounding {:x1 436.5659728050232, :y1 985.8000183105469, :x2 693.0387816429138, :y2 1008.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 436.5659728050232, :y1 985.8000183105469, :x2 693.0387816429138, :y2 1008.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 213}, :content {:text "是因为它的每个实例只能被迭代一次"}, :properties {:color "yellow"}} {:id #uuid "63c7df6f-a42a-421f-b01b-b3a469a80d74", :page 214, :position {:bounding {:x1 0, :y1 876.8000030517578, :x2 832.2243285179138, :y2 998.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 876.8000030517578, :x2 0, :y2 899.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 404.7000060081482, :y1 952.8500061035156, :x2 832.2243285179138, :y2 974.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000295639038, :y1 953.2000122070312, :x2 386.95311880111694, :y2 975.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 332.7000060081482, :y1 956.8500061035156, :x2 386.95311880111694, :y2 971.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 404.7000060081482, :y1 956.8500061035156, :x2 832.2243285179138, :y2 971.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 976.4500122070312, :x2 156.85781240463257, :y2 998.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 172.2000060081482, :y1 976.4500122070312, :x2 208.76401662826538, :y2 998.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 980.4500122070312, :x2 156.85781240463257, :y2 995.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 172.2000060081482, :y1 980.4500122070312, :x2 172.3875060081482, :y2 995.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 214}, :content {:text "因为每个迭代器也实现了 Iterable 接口，所以它们可以用在任何期待可迭代对象的地方，比如 for-of 循环"}, :properties {:color "yellow"}} {:id #uuid "63c7dfda-af10-486a-8bdd-57511caf6895", :page 215, :position {:bounding {:x1 149.59999990463257, :y1 291.81251335144043, :x2 289.59999990463257, :y2 320.6125011444092, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 291.81251335144043, :x2 289.59999990463257, :y2 320.6125011444092, :width 911.6666666666666, :height 1138.3333333333333}), :page 215}, :content {:text "提前终止迭代器"}, :properties {:color "green"}} {:id #uuid "63c7dfe6-1cba-4007-83d2-67f3c6139cc1", :page 215, :position {:bounding {:x1 116.80000448226929, :y1 332.8000183105469, :x2 576.5690398216248, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.80000448226929, :y1 332.8000183105469, :x2 222.36325979232788, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 240.29999685287476, :y1 332.8000183105469, :x2 576.5690398216248, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 168.2000060081482, :y1 336.45001220703125, :x2 222.36325979232788, :y2 351.45001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 215}, :content {:text "可选的 return()方法用于指定在迭代器提前关闭时执行的逻辑。"}, :properties {:color "yellow"}} {:id #uuid "63c7e01f-63b5-45a0-b581-45f8b65d354b", :page 215, :position {:bounding {:x1 115.09999990463257, :y1 426.9500274658203, :x2 802.0999999046326, :y2 449.7000274658203, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999990463257, :y1 426.9500274658203, :x2 166.10944509506226, :y2 448.5500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 470.41249990463257, :y1 426.9500274658203, :x2 756.5262694358826, :y2 448.5500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 182.40000295639038, :y1 427.3000030517578, :x2 442.97716665267944, :y2 449.7000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 786.0999999046326, :y1 427.3000030517578, :x2 802.0999999046326, :y2 449.7000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 470.41249990463257, :y1 430.9500274658203, :x2 756.5262694358826, :y2 445.9500274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 182.40000295639038, :y1 431.3000030517578, :x2 442.97716665267944, :y2 447.1000213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 215}, :content {:text "return()方法必须返回一个有效的 IteratorResult 对象。简单情况下，可以只返回{ done: true }。"}, :properties {:color "yellow"}} {:id #uuid "63c7e0bb-57bc-4c1d-b549-d7df7d4fd96f", :page 216, :position {:bounding {:x1 421.53295278549194, :y1 902.4000244140625, :x2 735.0285887718201, :y2 924.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 526.7000365257263, :y1 902.4000244140625, :x2 735.0285887718201, :y2 924.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 421.53295278549194, :y1 902.4125366210938, :x2 508.7632689476013, :y2 924.8125305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 450.5750060081482, :y1 906.4125366210938, :x2 508.7632689476013, :y2 922.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 216}, :content {:text "调用 return()不会强制迭代器进入关闭状态"}, :properties {:color "yellow"}} {:id #uuid "63c7e0d5-25a0-4970-a940-a306aee2fc32", :page 217, :position {:bounding {:x1 140.8875060081482, :y1 435.25, :x2 210.58034658432007, :y2 468.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 140.8875060081482, :y1 435.25, :x2 210.58034658432007, :y2 468.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 217}, :content {:text "生成器"}, :properties {:color "green"}} {:id #uuid "63c7e0f6-5840-4f36-83f8-c365e3f1e48c", :page 217, :position {:bounding {:x1 0, :y1 284.8000183105469, :x2 800.0439085960388, :y2 529.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 284.8000183105469, :x2 0, :y2 307.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 495.41665029525757, :y1 483, :x2 800.0439085960388, :y2 505.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999990463257, :y1 506.61248779296875, :x2 117.16066122055054, :y2 529.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 217}, :content {:text "拥有在一个函数块内暂停和恢复代码执行的能力"}, :properties {:color "yellow"}} {:id #uuid "63c7e0fe-a75f-46f0-98d2-0de4352004be", :page 217, :position {:bounding {:x1 389.67626333236694, :y1 506.61248779296875, :x2 678.2221312522888, :y2 529.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 389.67626333236694, :y1 506.61248779296875, :x2 678.2221312522888, :y2 529.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 217}, :content {:text "使用生成器可以自定义迭代器和实现协程"}, :properties {:color "yellow"}} {:id #uuid "63c7e1ec-785e-4e9b-96d6-36d26f0f5afb", :page 217, :position {:bounding {:x1 130.73789358139038, :y1 543.712516784668, :x2 249.59999990463257, :y2 573.8499984741211, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 543.712516784668, :x2 249.59999990463257, :y2 572.5125045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 130.73789358139038, :y1 545.0500106811523, :x2 130.73789358139038, :y2 573.8499984741211, :width 911.6666666666666, :height 1138.3333333333333}), :page 217}, :content {:text "生成器基础"}, :properties {:color "green"}} {:id #uuid "63c7e1ff-bdbb-4129-9ae6-a6ffbf899c41", :page 217, :position {:bounding {:x1 0, :y1 332.7999954223633, :x2 797.3098387718201, :y2 630.8000106811523, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 332.7999954223633, :x2 0, :y2 355.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 684.6060423851013, :y1 584.7000045776367, :x2 797.3098387718201, :y2 607.0999984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999990463257, :y1 608.400016784668, :x2 309.4585814476013, :y2 630.8000106811523, :width 911.6666666666666, :height 1138.3333333333333}), :page 217}, :content {:text "只要是可以定义函数的地方，就可以定义生成器"}, :properties {:color "yellow"}} {:id #uuid "63c7e21e-6c04-45af-956f-2c435b31bdb0", :page 218, :position {:bounding {:x1 149.90000295639038, :y1 289.2000198364258, :x2 797.0555663108826, :y2 311.60001373291016, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000295639038, :y1 289.2000198364258, :x2 797.0555663108826, :y2 311.60001373291016, :width 911.6666666666666, :height 1138.3333333333333} {:x1 339.8875060081482, :y1 292.1500015258789, :x2 735.4894042015076, :y2 307.9500198364258, :width 911.6666666666666, :height 1138.3333333333333}), :page 218}, :content {:text "调用生成器函数会产生一个生成器对象。生成器对象一开始处于暂停执行（suspended）的状态"}, :properties {:color "yellow"}} {:id #uuid "63c7e224-8e7e-445e-b0af-0cfbae4512cf", :page 218, :position {:bounding {:x1 148.2000060081482, :y1 467.75003814697266, :x2 668.8640379905701, :y2 490.50003814697266, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.2000060081482, :y1 467.75003814697266, :x2 188.742196559906, :y2 489.35001373291016, :width 911.6666666666666, :height 1138.3333333333333} {:x1 202.2000060081482, :y1 468.10001373291016, :x2 668.8640379905701, :y2 490.50003814697266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 202.2000060081482, :y1 472.10001373291016, :x2 634.0000243186951, :y2 487.9000015258789, :width 911.6666666666666, :height 1138.3333333333333}), :page 218}, :content {:text "next()方法的返回值类似于迭代器，有一个 done 属性和一个 value 属性"}, :properties {:color "yellow"}} {:id #uuid "63c7e307-ecf5-401d-b30b-22aaf0010079", :page 218, :position {:bounding {:x1 149.90000295639038, :y1 783.8000183105469, :x2 510.05520009994507, :y2 806.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000295639038, :y1 783.8000183105469, :x2 384.4421935081482, :y2 806.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 397.90001821517944, :y1 783.8000183105469, :x2 510.05520009994507, :y2 806.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 343.90001821517944, :y1 787.4500122070312, :x2 384.4421935081482, :y2 802.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 218}, :content {:text "生成器函数只会在初次调用 next()方法后开始执行"}, :properties {:color "yellow"}} {:id #uuid "63c7e3b8-85b5-4de3-9488-e5232b70fbd3", :page 218, :position {:bounding {:x1 149.90000295639038, :y1 942.8500061035156, :x2 613.4519896507263, :y2 965.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 352.49999380111694, :y1 942.8500061035156, :x2 613.4519896507263, :y2 964.4499816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000295639038, :y1 943.1999816894531, :x2 334.7531371116638, :y2 965.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 280.49999380111694, :y1 946.8500061035156, :x2 334.7531371116638, :y2 961.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 352.49999380111694, :y1 946.8500061035156, :x2 355.49999380111694, :y2 961.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 218}, :content {:text "生成器对象实现了 Iterable 接口，它们默认的迭代器是自引用的"}, :properties {:color "yellow"}} {:id #uuid "63c7e460-596c-47ca-b4ec-1803eb4c8a63", :page 219, :position {:bounding {:x1 149.59999990463257, :y1 298.21249771118164, :x2 337.8000121116638, :y2 327.0125160217285, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 298.21249771118164, :x2 241.08298635482788, :y2 327.0125160217285, :width 911.6666666666666, :height 1138.3333333333333} {:x1 252.11251211166382, :y1 298.89999771118164, :x2 337.8000121116638, :y2 326.89999771118164, :width 911.6666666666666, :height 1138.3333333333333} {:x1 189.59999990463257, :y1 303.0125160217285, :x2 241.08298635482788, :y2 323.0125160217285, :width 911.6666666666666, :height 1138.3333333333333} {:x1 252.11251211166382, :y1 303.7000160217285, :x2 252.31014394760132, :y2 322.89999771118164, :width 911.6666666666666, :height 1138.3333333333333}), :page 219}, :content {:text "通过 yield 中断执行"}, :properties {:color "green"}} {:id #uuid "63c7e487-d662-41d5-a48e-54e446be2188", :page 219, :position {:bounding {:x1 0, :y1 156.80000686645508, :x2 782.8670287132263, :y2 385.299991607666, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 156.80000686645508, :x2 0, :y2 179.20000076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 624.9886717796326, :y1 339.2000160217285, :x2 782.8670287132263, :y2 361.6000099182129, :width 911.6666666666666, :height 1138.3333333333333} {:x1 748.7000365257263, :y1 342.8500099182129, :x2 782.8670287132263, :y2 357.8500099182129, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999990463257, :y1 362.89999771118164, :x2 690.9117064476013, :y2 385.299991607666, :width 911.6666666666666, :height 1138.3333333333333}), :page 219}, :content {:text "生成器函数在遇到 yield关键字之前会正常执行。遇到这个关键字后，执行会停止，函数作用域的状态会被保留"}, :properties {:color "yellow"}} {:id #uuid "63c7e4d0-ebeb-409d-baf5-5b4dc60e55aa", :page 220, :position {:bounding {:x1 148.2000060081482, :y1 167.14999389648438, :x2 637.7591185569763, :y2 189.54995727539062, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.2000060081482, :y1 167.14999389648438, :x2 182.28749990463257, :y2 188.75003051757812, :width 911.6666666666666, :height 1138.3333333333333} {:x1 193.2000060081482, :y1 167.14999389648438, :x2 637.7591185569763, :y2 189.54995727539062, :width 911.6666666666666, :height 1138.3333333333333} {:x1 193.2000060081482, :y1 171.14999389648438, :x2 637.7591185569763, :y2 186.94998168945312, :width 911.6666666666666, :height 1138.3333333333333}), :page 220}, :content {:text "yield 关键字只能在生成器函数内部使用，用在其他地方会抛出错误。"}, :properties {:color "yellow"}} {:id #uuid "63c7e50d-74cd-420a-ac96-7d3c4e7d2d07", :page 220, :position {:bounding {:x1 456.23192739486694, :y1 191.10001373291016, :x2 760.7933592796326, :y2 213.50000762939453, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 456.23192739486694, :y1 191.10001373291016, :x2 760.7933592796326, :y2 213.50000762939453, :width 911.6666666666666, :height 1138.3333333333333}), :page 220}, :content {:text "出现在嵌套的非生成器函数中会抛出语法错"}, :properties {:color "yellow"}} {:id #uuid "63c7e521-748d-48db-9203-2b281fbfc354", :page 220, :position {:bounding {:x1 167.500009059906, :y1 628.75, :x2 357.4792113304138, :y2 651.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.500009059906, :y1 628.75, :x2 357.4792113304138, :y2 651.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 220}, :content {:text "生成器对象作为可迭代对象"}, :properties {:color "yellow"}} {:id #uuid "63c7e5b8-68be-47bb-b0ba-718a0467ccd7", :page 221, :position {:bounding {:x1 134.3875060081482, :y1 283.1500015258789, :x2 330.2896056175232, :y2 305.5499954223633, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3875060081482, :y1 283.1500015258789, :x2 204.08750295639038, :y2 305.5499954223633, :width 911.6666666666666, :height 1138.3333333333333} {:x1 215.000009059906, :y1 283.85001373291016, :x2 330.2896056175232, :y2 305.44998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 165.98749685287476, :y1 287.1500015258789, :x2 204.08750295639038, :y2 302.94998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 215.000009059906, :y1 287.85001373291016, :x2 215.187509059906, :y2 302.85001373291016, :width 911.6666666666666, :height 1138.3333333333333}), :page 221}, :content {:text "使用 yield 实现输入和输出"}, :properties {:color "yellow"}} {:id #uuid "63c7e611-e7f1-4771-9530-edd7b463a16e", :page 221, :position {:bounding {:x1 288.6160216331482, :y1 743.6500244140625, :x2 730.8320555686951, :y2 766.4000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 693.7000365257263, :y1 743.6500244140625, :x2 730.8320555686951, :y2 765.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 288.6160216331482, :y1 744, :x2 412.14220571517944, :y2 766.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 425.59999990463257, :y1 744, :x2 682.7670531272888, :y2 766.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 371.59999990463257, :y1 747.6500244140625, :x2 412.14220571517944, :y2 762.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 693.7000365257263, :y1 747.6500244140625, :x2 693.9123167991638, :y2 762.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 425.59999990463257, :y1 748, :x2 682.7670531272888, :y2 763.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 221}, :content {:text "下一次调用 next()传入了\"bar\"，作为交给同一个 yield 的值"}, :properties {:color "yellow"}} {:id #uuid "63c7e6db-64b9-41cc-9e49-ca9ef98fafc4", :page 222, :position {:bounding {:x1 0, :y1 127.10000610351562, :x2 835.4045042991638, :y2 259.1999816894531, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 389.0295042991638, :y1 127.10000610351562, :x2 835.4045042991638, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 150.71249389648438, :x2 550.9409346580505, :y2 173.11251831054688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 236.80001831054688, :x2 0, :y2 259.1999816894531, :width 911.6666666666666, :height 1138.3333333333333}), :page 222}, :content {:text "它会根据配置的值迭代相应次数并产生迭代的索引。初始化一个新数组可以实现这个需求，但不用数组也可以实现同样的行为"}, :properties {:color "yellow"}} {:id #uuid "63c7e706-91c4-4030-878d-947e2e5a700a", :page 222, :position {:bounding {:x1 167.500009059906, :y1 978.3500061035156, :x2 278.2896056175232, :y2 1000.75, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.500009059906, :y1 978.3500061035156, :x2 278.2896056175232, :y2 1000.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 222}, :content {:text "产生可迭代对象"}, :properties {:color "yellow"}} {:id #uuid "63c7e773-14db-47a6-ac7b-1bf2e5c56dea", :page 222, :position {:bounding {:x1 181.94802236557007, :y1 1000.1500244140625, :x2 762.8335204124451, :y2 1022.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 325.49999380111694, :y1 1000.1500244140625, :x2 762.8335204124451, :y2 1021.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 181.94802236557007, :y1 1000.5000305175781, :x2 314.58751821517944, :y2 1022.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 280.49999380111694, :y1 1004.1500244140625, :x2 314.58751821517944, :y2 1019.1500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 325.49999380111694, :y1 1004.1500244140625, :x2 328.49999380111694, :y2 1019.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 222}, :content {:text "使用星号增强 yield 的行为，让它能够迭代一个可迭代对象，从而一次产出一个值"}, :properties {:color "yellow"}} {:id #uuid "63c7e7a6-a6e5-4fc5-849c-99720e501d3e", :page 224, :position {:bounding {:x1 167.500009059906, :y1 665.4500122070312, :x2 352.08959341049194, :y2 687.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.500009059906, :y1 665.4500122070312, :x2 244.2468810081482, :y2 687.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 257.09999990463257, :y1 665.4500122070312, :x2 352.08959341049194, :y2 687.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 199.09999990463257, :y1 669.4500122070312, :x2 244.2468810081482, :y2 685.25, :width 911.6666666666666, :height 1138.3333333333333}), :page 224}, :content {:text "使用 yield*实现递归算法"}, :properties {:color "yellow"}} {:id #uuid "63c7e876-91d0-4635-97f1-e2e84e9109c2", :page 226, :position {:bounding {:x1 182.7000060081482, :y1 865.9125061035156, :x2 382.7000060081482, :y2 894.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.7000060081482, :y1 865.9125061035156, :x2 382.7000060081482, :y2 894.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 226}, :content {:text "生成器作为默认迭代器"}, :properties {:color "green"}} {:id #uuid "63c7e87f-d1cd-4c56-928a-0f8438ce76fa", :page 227, :position {:bounding {:x1 149.59999990463257, :y1 386.6124954223633, :x2 289.59999990463257, :y2 415.41251373291016, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 386.6124954223633, :x2 289.59999990463257, :y2 415.41251373291016, :width 911.6666666666666, :height 1138.3333333333333}), :page 227}, :content {:text "提前终止生成器"}, :properties {:color "green"}} {:id #uuid "63c7e894-4930-47d3-9a70-4541a97302e0", :page 227, :position {:bounding {:x1 115.09999990463257, :y1 637.8500061035156, :x2 558.3550047874451, :y2 660.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999990463257, :y1 637.8500061035156, :x2 169.1843810081482, :y2 659.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 187.09999990463257, :y1 638.2000122070312, :x2 258.9171996116638, :y2 660.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 269.90001821517944, :y1 638.2000122070312, :x2 558.3550047874451, :y2 660.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 187.09999990463257, :y1 642.2000122070312, :x2 258.9171996116638, :y2 658, :width 911.6666666666666, :height 1138.3333333333333}), :page 227}, :content {:text "return()和 throw()方法都可以用于强制生成器进入关闭状态"}, :properties {:color "yellow"}} {:id #uuid "63c7e937-c50a-4255-935e-7f44e3e34ae0", :page 228, :position {:bounding {:x1 0, :y1 561.150016784668, :x2 834.6245665550232, :y2 611.2000045776367, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.2000060081482, :y1 561.150016784668, :x2 200.21718740463257, :y2 582.7500228881836, :width 911.6666666666666, :height 1138.3333333333333} {:x1 211.2000060081482, :y1 561.5000228881836, :x2 834.6245665550232, :y2 583.900016784668, :width 911.6666666666666, :height 1138.3333333333333} {:x1 211.2000060081482, :y1 565.5000228881836, :x2 834.6245665550232, :y2 581.3000106811523, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 585.1125106811523, :x2 198.29604482650757, :y2 607.5125045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 588.8000106811523, :x2 0, :y2 611.2000045776367, :width 911.6666666666666, :height 1138.3333333333333}), :page 228}, :content {:text "throw()方法会在暂停的时候将一个提供的错误注入到生成器对象中。如果错误未被处理，生成器就会关闭："}, :properties {:color "yellow"}} {:id #uuid "63c7e9fb-fd45-41cc-a9e4-5cbeedbb9a54", :page 230, :position {:bounding {:x1 151.77578115463257, :y1 552.3500213623047, :x2 266.88036489486694, :y2 587.5000152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 173.98749685287476, :y1 552.3500213623047, :x2 266.88036489486694, :y2 585.9500274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 151.77578115463257, :y1 553.9000244140625, :x2 151.778817653656, :y2 587.5000152587891, :width 911.6666666666666, :height 1138.3333333333333}), :page 230}, :content {:text "理解对象"}, :properties {:color "green"}} {:id #uuid "63c7ea13-cfc3-4ecd-923f-93977ada5bed", :page 231, :position {:bounding {:x1 116.80000448226929, :y1 237.11250019073486, :x2 389.28019857406616, :y2 259.51249408721924, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.80000448226929, :y1 237.11250019073486, :x2 389.28019857406616, :y2 259.51249408721924, :width 911.6666666666666, :height 1138.3333333333333}), :page 231}, :content {:text "属性分两种：数据属性和访问器属性。"}, :properties {:color "yellow"}} {:id #uuid "63c7ea96-b811-431d-b225-f18bed68e8a4", :page 231, :position {:bounding {:x1 137.09999990463257, :y1 334.85001850128174, :x2 636.7977538108826, :y2 357.60001850128174, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.09999990463257, :y1 334.85001850128174, :x2 248.320321559906, :y2 356.44999408721924, :width 911.6666666666666, :height 1138.3333333333333} {:x1 281.09999990463257, :y1 335.19999408721924, :x2 636.7977538108826, :y2 357.60001850128174, :width 911.6666666666666, :height 1138.3333333333333} {:x1 281.09999990463257, :y1 339.19999408721924, :x2 516.6458373069763, :y2 355.0000123977661, :width 911.6666666666666, :height 1138.3333333333333}), :page 231}, :content {:text "[[Configurable]]：表示属性是否可以通过 delete 删除并重新定义"}, :properties {:color "yellow"}} {:id #uuid "63c7eaa5-2e31-49da-a8ca-caac905e8d94", :page 231, :position {:bounding {:x1 137.09999990463257, :y1 405.6500062942505, :x2 560.6175169944763, :y2 428.4000062942505, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.09999990463257, :y1 405.6500062942505, :x2 243.187509059906, :y2 427.2500123977661, :width 911.6666666666666, :height 1138.3333333333333} {:x1 492.99999380111694, :y1 405.6500062942505, :x2 560.6175169944763, :y2 427.2500123977661, :width 911.6666666666666, :height 1138.3333333333333} {:x1 263.09999990463257, :y1 406.0000123977661, :x2 477.0109496116638, :y2 428.4000062942505, :width 911.6666666666666, :height 1138.3333333333333} {:x1 492.99999380111694, :y1 409.6500062942505, :x2 493.18749380111694, :y2 424.6500062942505, :width 911.6666666666666, :height 1138.3333333333333} {:x1 263.09999990463257, :y1 410.0000123977661, :x2 477.0109496116638, :y2 425.80000019073486, :width 911.6666666666666, :height 1138.3333333333333}), :page 231}, :content {:text "[[Enumerable]]：表示属性是否可以通过 for-in 循环返回"}, :properties {:color "yellow"}} {:id #uuid "63c7eaf8-21f1-4377-864a-1cd308187ba9", :page 231, :position {:bounding {:x1 142.20469045639038, :y1 452.94999408721924, :x2 467.3337950706482, :y2 475.69999408721924, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 142.20469045639038, :y1 452.94999408721924, :x2 216.7078185081482, :y2 474.55000019073486, :width 911.6666666666666, :height 1138.3333333333333} {:x1 245.09999990463257, :y1 453.30000019073486, :x2 467.3337950706482, :y2 475.69999408721924, :width 911.6666666666666, :height 1138.3333333333333}), :page 231}, :content {:text "[Writable]]：表示属性的值是否可以被修改"}, :properties {:color "yellow"}} {:id #uuid "63c7eb04-a564-4e20-bb2d-7d73734609ef", :page 231, :position {:bounding {:x1 137.09999990463257, :y1 500.15001678466797, :x2 363.9821105003357, :y2 522.900016784668, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.09999990463257, :y1 500.15001678466797, :x2 196.23281240463257, :y2 521.7499923706055, :width 911.6666666666666, :height 1138.3333333333333} {:x1 218.29999685287476, :y1 500.49999237060547, :x2 363.9821105003357, :y2 522.900016784668, :width 911.6666666666666, :height 1138.3333333333333}), :page 231}, :content {:text "[[Value]]：包含属性实际的值"}, :properties {:color "yellow"}} {:id #uuid "63c7eb9f-04db-44ac-ba0f-ee6c502b8071", :page 232, :position {:bounding {:x1 165.91921377182007, :y1 262.15000915527344, :x2 703.4121947288513, :y2 284.90000915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 342.49999380111694, :y1 262.15000915527344, :x2 434.72667837142944, :y2 284.5500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 165.91921377182007, :y1 262.50001525878906, :x2 322.9532103538513, :y2 284.90000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 446.90001821517944, :y1 262.50001525878906, :x2 703.4121947288513, :y2 284.90000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 234.40000295639038, :y1 266.15000915527344, :x2 322.9532103538513, :y2 281.15000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 342.49999380111694, :y1 266.15000915527344, :x2 434.72667837142944, :y2 281.15000915527344, :width 911.6666666666666, :height 1138.3333333333333}), :page 232}, :content {:text "个例子把 configurable 设置为 false，意味着这个属性不能从对象上删除"}, :properties {:color "yellow"}} {:id #uuid "63c7ed25-8d22-4213-baa9-0744131e61bd", :page 232, :position {:bounding {:x1 424.6667113304138, :y1 689.5125122070312, :x2 795.6725096702576, :y2 711.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 424.6667113304138, :y1 689.5125122070312, :x2 795.6725096702576, :y2 711.9125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 533.1624999046326, :y1 692.4500122070312, :x2 739.9135985374451, :y2 708.2500305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 232}, :content {:text "包含一个获取（getter）函数和一个设置（setter）函数"}, :properties {:color "yellow"}} {:id #uuid "63c7ed30-998c-4ccb-93bc-555709003ddd", :page 232, :position {:bounding {:x1 0, :y1 748.8000183105469, :x2 830.1802000999451, :y2 830.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 748.8000183105469, :x2 0, :y2 771.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 170.2000060081482, :y1 783.6500244140625, :x2 281.42031240463257, :y2 805.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 314.2000060081482, :y1 784.0000305175781, :x2 830.1802000999451, :y2 806.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 314.2000060081482, :y1 788.0000305175781, :x2 830.1802000999451, :y2 803.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 170.2000060081482, :y1 807.6125183105469, :x2 429.6343321800232, :y2 830.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 232}, :content {:text "[[Configurable]]：表示属性是否可以通过 delete 删除并重新定义，是否可以修改它的特性，以及是否可以把它改为数据属性"}, :properties {:color "yellow"}} {:id #uuid "63c7ed38-2b4c-4ee7-b58b-86e749a205fc", :page 232, :position {:bounding {:x1 170.2000060081482, :y1 854.5500183105469, :x2 593.7175536155701, :y2 877.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 170.2000060081482, :y1 854.5500183105469, :x2 276.28749990463257, :y2 876.1500091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 526.0999999046326, :y1 854.5500183105469, :x2 593.7175536155701, :y2 876.1500091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 296.2000060081482, :y1 854.9000091552734, :x2 510.1109251976013, :y2 877.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 526.0999999046326, :y1 858.5500183105469, :x2 526.2874999046326, :y2 873.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 296.2000060081482, :y1 858.9000091552734, :x2 510.1109251976013, :y2 874.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 232}, :content {:text "[[Enumerable]]：表示属性是否可以通过 for-in 循环返回"}, :properties {:color "yellow"}} {:id #uuid "63c7ed42-9895-4d6b-b124-f6776353c15e", :page 232, :position {:bounding {:x1 170.2000060081482, :y1 901.7500152587891, :x2 635.0000243186951, :y2 924.5000152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 170.2000060081482, :y1 901.7500152587891, :x2 214.97499990463257, :y2 923.3500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 233.2000060081482, :y1 902.1000213623047, :x2 635.0000243186951, :y2 924.5000152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 233.2000060081482, :y1 906.1000213623047, :x2 610.1763548851013, :y2 921.9000091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 232}, :content {:text "[[Get]]：获取函数，在读取属性时调用。默认值为 undefined。"}, :properties {:color "yellow"}} {:id #uuid "63c7ed4d-f416-427d-8524-e64f3cb70279", :page 232, :position {:bounding {:x1 170.2000060081482, :y1 925.4500122070312, :x2 635.0000243186951, :y2 948.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 170.2000060081482, :y1 925.4500122070312, :x2 213.56874990463257, :y2 947.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 233.2000060081482, :y1 925.8000183105469, :x2 635.0000243186951, :y2 948.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 233.2000060081482, :y1 929.8000183105469, :x2 610.1763548851013, :y2 945.6000213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 232}, :content {:text "[[Set]]：设置函数，在写入属性时调用。默认值为 undefined。"}, :properties {:color "yellow"}} {:id #uuid "63c7eda1-1209-4c0f-bec2-74970771d713", :page 233, :position {:bounding {:x1 0, :y1 236.8000030517578, :x2 795.8881468772888, :y2 419.3999786376953, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 236.8000030517578, :x2 0, :y2 259.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 574.5999999046326, :y1 372.9500274658203, :x2 795.8881468772888, :y2 394.5500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 619.5999999046326, :y1 377.3000030517578, :x2 795.8881468772888, :y2 393.09999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999990463257, :y1 397.00001525878906, :x2 357.2303099632263, :y2 419.3999786376953, :width 911.6666666666666, :height 1138.3333333333333}), :page 233}, :content {:text "year_中的下划线常用来表示该属性并不希望在对象方法的外部被访问"}, :properties {:color "yellow"}} {:id #uuid "63c7ee31-e7fe-4138-87f5-9dff19f27c2d", :page 233, :position {:bounding {:x1 149.59999990463257, :y1 709.8125305175781, :x2 269.59999990463257, :y2 738.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 709.8125305175781, :x2 269.59999990463257, :y2 738.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 233}, :content {:text "定义多个属性"}, :properties {:color "green"}} {:id #uuid "63c7eea0-1bee-482b-979d-2b2343ef723d", :page 233, :position {:bounding {:x1 0, :y1 284.8000030517578, :x2 798.1477904319763, :y2 490.2124786376953, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 284.8000030517578, :x2 0, :y2 307.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 445.99450063705444, :y1 444.2000274658203, :x2 798.1477904319763, :y2 466.59999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750295639038, :y1 467.81251525878906, :x2 293.47167348861694, :y2 490.2124786376953, :width 911.6666666666666, :height 1138.3333333333333}), :page 233}, :content {:text "这是访问器属性的典型使用场景，即设置一个属性值会导致一些其他变化发生。"}, :properties {:color "yellow"}} {:id #uuid "63c7ef09-5664-46cc-a5cb-ce5057241c5e", :page 234, :position {:bounding {:x1 182.7000060081482, :y1 362.7125244140625, :x2 322.7000060081482, :y2 391.51251220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.7000060081482, :y1 362.7125244140625, :x2 322.7000060081482, :y2 391.51251220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 234}, :content {:text "读取属性的特性"}, :properties {:color "green"}} {:id #uuid "63c7ef54-bbd4-438b-a5a3-35ca1cb49dfd", :page 234, :position {:bounding {:x1 149.90000295639038, :y1 403.70001220703125, :x2 738.9519896507263, :y2 426.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000295639038, :y1 403.70001220703125, :x2 435.74218130111694, :y2 426.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 482.49999380111694, :y1 403.70001220703125, :x2 738.9519896507263, :y2 426.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 185.500009059906, :y1 407.3500061035156, :x2 435.74218130111694, :y2 422.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 234}, :content {:text "使用 Object.getOwnPropertyDescriptor()方法可以取得指定属性的属性描述符"}, :properties {:color "yellow"}} {:id #uuid "63c7efc4-843d-47ad-9bb4-de91278230dd", :page 235, :position {:bounding {:x1 297.7000060081482, :y1 126.75, :x2 667.8960814476013, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 297.7000060081482, :y1 126.75, :x2 555.0335936546326, :y2 148.3499755859375, :width 911.6666666666666, :height 1138.3333333333333} {:x1 603.8000121116638, :y1 127.0999755859375, :x2 667.8960814476013, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333}), :page 235}, :content {:text "Object.getOwnPropertyDescriptors()静态方法"}, :properties {:color "yellow"}} {:id #uuid "63c7f060-3b20-4c4a-a4c6-dea47a34148c", :page 235, :position {:bounding {:x1 149.59999990463257, :y1 937.0125122070312, :x2 229.59999990463257, :y2 965.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 937.0125122070312, :x2 229.59999990463257, :y2 965.8125, :width 911.6666666666666, :height 1138.3333333333333}), :page 235}, :content {:text "合并对象"}, :properties {:color "green"}} {:id #uuid "63c7f070-b079-4030-a514-9f3a13fefff9", :page 235, :position {:bounding {:x1 0, :y1 732.800036907196, :x2 798.4981932640076, :y2 1024.1000366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 732.800036907196, :x2 0, :y2 755.2000365257263, :width 911.6666666666666, :height 1138.3333333333333} {:x1 653.4067015647888, :y1 978.0000457763672, :x2 798.4981932640076, :y2 1000.4000549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750295639038, :y1 1001.7000427246094, :x2 311.65844106674194, :y2 1024.1000366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 235}, :content {:text "就是把源对象所有的本地属性一起复制到目标对象上"}, :properties {:color "yellow"}} {:id #uuid "63c7f097-3717-46a2-848c-1db9c31c2a5d", :page 236, :position {:bounding {:x1 149.90000295639038, :y1 126.04999732971191, :x2 576.7049193382263, :y2 149.50000953674316, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000295639038, :y1 126.04999732971191, :x2 515.3804564476013, :y2 148.45000648498535, :width 911.6666666666666, :height 1138.3333333333333} {:x1 545.0000243186951, :y1 127.10000038146973, :x2 576.7049193382263, :y2 149.50000953674316, :width 911.6666666666666, :height 1138.3333333333333} {:x1 244.500009059906, :y1 130.0499973297119, :x2 515.3804564476013, :y2 145.85000038146973, :width 911.6666666666666, :height 1138.3333333333333}), :page 236}, :content {:text "ECMAScript 6 专门为合并对象提供了 Object.assign()方法"}, :properties {:color "yellow"}} {:id #uuid "63c7f0bb-53b5-48bc-89e2-02106f01e8c3", :page 237, :position {:bounding {:x1 0, :y1 12.800003051757812, :x2 800.6220335960388, :y2 173.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 12.800003051757812, :x2 0, :y2 35.19999694824219, :width 911.6666666666666, :height 1138.3333333333333} {:x1 115.09999990463257, :y1 126.75001525878906, :x2 220.49843740463257, :y2 148.34999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 250.30001211166382, :y1 127.09999084472656, :x2 800.6220335960388, :y2 149.50001525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 250.30001211166382, :y1 131.09999084472656, :x2 800.6220335960388, :y2 146.90000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750295639038, :y1 150.71250915527344, :x2 244.51162099838257, :y2 173.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 237}, :content {:text "Object.assign()实际上对每个源对象执行的是浅复制。如果多个源对象都有相同的属性，则使用最后一个复制的值。"}, :properties {:color "yellow"}} {:id #uuid "63c7f19f-3c83-4260-b87d-a51ac2ed6ae7", :page 237, :position {:bounding {:x1 0, :y1 492.8000068664551, :x2 776.6080565452576, :y2 842.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 492.8000068664551, :x2 0, :y2 515.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.80000448226929, :y1 796.9000244140625, :x2 636.4804320335388, :y2 819.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 666.2000365257263, :y1 796.9000244140625, :x2 776.6080565452576, :y2 819.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 531.0000243186951, :y1 800.5500183105469, :x2 636.4804320335388, :y2 815.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 666.2000365257263, :y1 800.9000244140625, :x2 776.6080565452576, :y2 816.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750295639038, :y1 820.5125122070312, :x2 582.0479521751404, :y2 842.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 237}, :content {:text "如果赋值期间出错，则操作会中止并退出，同时抛出错误。Object.assign()没有“回滚”之前赋值的概念，因此它是一个尽力而为、可能只会完成部分复制的方法。"}, :properties {:color "yellow"}} {:id #uuid "63c7f1ab-76aa-4a71-acc7-54fee3880cc6", :page 238, :position {:bounding {:x1 182.7000060081482, :y1 307.7124938964844, :x2 362.7000060081482, :y2 336.5124816894531, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.7000060081482, :y1 307.7124938964844, :x2 362.7000060081482, :y2 336.5124816894531, :width 911.6666666666666, :height 1138.3333333333333}), :page 238}, :content {:text "对象标识及相等判定"}, :properties {:color "green"}} {:id #uuid "63c7f2c4-8707-4222-82eb-c917cad7ea7c", :page 238, :position {:bounding {:x1 463.3000121116638, :y1 590.8500213623047, :x2 716.2889037132263, :y2 613.6000213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 463.3000121116638, :y1 590.8500213623047, :x2 535.3843626976013, :y2 612.4500274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 562.3000121116638, :y1 591.2000274658203, :x2 716.2889037132263, :y2 613.6000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 562.3000121116638, :y1 595.2000274658203, :x2 682.3719115257263, :y2 611.0000152587891, :width 911.6666666666666, :height 1138.3333333333333}), :page 238}, :content {:text "Object.is()，这个方法与===很像"}, :properties {:color "yellow"}} {:id #uuid "63c7f32e-e1fa-43bd-81e0-f0eda9e17bc7", :page 238, :position {:bounding {:x1 149.90000295639038, :y1 825.7000122070312, :x2 502.4762969017029, :y2 848.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000295639038, :y1 825.7000122070312, :x2 502.4762969017029, :y2 848.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 238}, :content {:text "要检查超过两个值，递归地利用相等性传递即可："}, :properties {:color "yellow"}} {:id #uuid "63c7f335-22de-4d85-9320-4f570779a814", :page 238, :position {:bounding {:x1 182.7000060081482, :y1 939.2125244140625, :x2 322.7000060081482, :y2 968.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.7000060081482, :y1 939.2125244140625, :x2 322.7000060081482, :y2 968.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 238}, :content {:text "增强的对象语法"}, :properties {:color "green"}} {:id #uuid "63c7f409-a9d3-499c-8299-45a88003fe83", :page 239, :position {:bounding {:x1 134.40000295639038, :y1 208.95001220703125, :x2 213.4948058128357, :y2 231.35000610351562, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.40000295639038, :y1 208.95001220703125, :x2 213.4948058128357, :y2 231.35000610351562, :width 911.6666666666666, :height 1138.3333333333333}), :page 239}, :content {:text "属性值简写"}, :properties {:color "yellow"}} {:id #uuid "63c7f430-3f34-4695-8145-913c60026db8", :page 239, :position {:bounding {:x1 129.98749685287476, :y1 946.7000427246094, :x2 213.4948058128357, :y2 969.1000366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 129.98749685287476, :y1 946.7000427246094, :x2 213.4948058128357, :y2 969.1000366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 239}, :content {:text " 可计算属性"}, :properties {:color "yellow"}} {:id #uuid "63c7f437-8de1-4bee-8a9f-449473c0543e", :page 240, :position {:bounding {:x1 167.500009059906, :y1 879.9500427246094, :x2 246.59479665756226, :y2 902.3500366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.500009059906, :y1 879.9500427246094, :x2 246.59479665756226, :y2 902.3500366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 240}, :content {:text "简写方法名"}, :properties {:color "yellow"}} {:id #uuid "63c7f462-70cc-45e5-acf0-cf6c284b761c", :page 239, :position {:bounding {:x1 213.33283376693726, :y1 991.4000244140625, :x2 549.9439787864685, :y2 1013.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 213.33283376693726, :y1 991.4000244140625, :x2 549.9439787864685, :y2 1013.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 239}, :content {:text "句话说，不能在对象字面量中直接动态命名属性"}, :properties {:color "yellow"}} {:id #uuid "63c7f4c0-8b06-4a2f-843d-ea7a9d6cbc3a", :page 240, :position {:bounding {:x1 0, :y1 262.5, :x2 835.4045042991638, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 580.3330931663513, :y1 262.5, :x2 835.4045042991638, :y2 284.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 286.11248779296875, :x2 462.88817739486694, :y2 308.51251220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.19999837875366, :y1 290.11248779296875, :x2 254.53749990463257, :y2 305.91253662109375, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 332.79998779296875, :x2 0, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 240}, :content {:text "中括号包围的对象属性键告诉运行时将其作为 JavaScript 表达式而不是字符串来求值："}, :properties {:color "yellow"}} {:id #uuid "63c7f4d1-2bf3-491e-b0fa-e5ea9508efb3", :page 241, :position {:bounding {:x1 130.73789358139038, :y1 847.5125122070312, :x2 229.59999990463257, :y2 877.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.59999990463257, :y1 847.5125122070312, :x2 229.59999990463257, :y2 876.3125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 130.73789358139038, :y1 848.8500061035156, :x2 130.73789358139038, :y2 877.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 241}, :content {:text "对象解构"}, :properties {:color "green"}} {:id #uuid "63c7f50a-5a57-4e0d-bf87-700a14aa05f0", :page 245, :position {:bounding {:x1 118.67578268051147, :y1 526.5500183105469, :x2 233.78034353256226, :y2 561.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 140.8875060081482, :y1 526.5500183105469, :x2 233.78034353256226, :y2 560.1500091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.67578268051147, :y1 528.1000213623047, :x2 118.67881155014038, :y2 561.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 245}, :content {:text "创建对象"}, :properties {:color "green"}} {:id #uuid "63c7f53b-719b-4b73-8bc0-5da06313733e", :page 241, :position {:bounding {:x1 374.88750606775284, :y1 901.5625152587891, :x2 775.7452636361122, :y2 924.7625122070312, :width 924.9999999999999, :height 1154.981718464351}, :rects ({:x1 374.88750606775284, :y1 901.5625152587891, :x2 775.7452636361122, :y2 924.7625122070312, :width 924.9999999999999, :height 1154.981718464351}), :page 241}, :content {:text "可以在一条语句中使用嵌套数据实现一个或多个赋值操作"}, :properties {:color "yellow"}} {:id #uuid "63c7f5e3-008b-4a22-b9ea-3d98b960ef18", :page 242, :position {:bounding {:x1 152.08750301599503, :y1 432.1875190734863, :x2 789.733987390995, :y2 455.38750076293945, :width 924.9999999999999, :height 1154.981718464351}, :rects ({:x1 152.08750301599503, :y1 432.1875190734863, :x2 789.733987390995, :y2 455.38750076293945, :width 924.9999999999999, :height 1154.981718464351}), :page 242}, :content {:text "使用解构，可以在一个类似对象字面量的结构中，声明多个变量，同时执行多个赋值操作。"}, :properties {:color "yellow"}} {:id #uuid "63c7f6ad-c781-4e06-8d88-82d50aa5f359", :page 242, :position {:bounding {:x1 0, :y1 732.8000240325928, :x2 837.1137939095497, :y2 890.9750213623047, :width 924.9999999999999, :height 1154.981718464351}, :rects ({:x1 0, :y1 732.8000240325928, :x2 0, :y2 755.200023651123, :width 924.9999999999999, :height 1154.981718464351} {:x1 153.0999999642372, :y1 843.7250213623047, :x2 837.1137939095497, :y2 866.9250335693359, :width 924.9999999999999, :height 1154.981718464351} {:x1 119.91249996423721, :y1 867.7750244140625, :x2 152.58883053064346, :y2 890.9750213623047, :width 924.9999999999999, :height 1154.981718464351}), :page 242}, :content {:text "也可以在解构赋值的同时定义默认值，这适用于前面刚提到的引用的属性不存在于源对象中的情况"}, :properties {:color "yellow"}} {:id #uuid "63c9300c-7ca9-46f0-927e-4295c0bd0e6d", :page 245, :position {:bounding {:x1 146.70000609755516, :y1 922.1875, :x2 226.70990905165672, :y2 950.1875, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.70000609755516, :y1 922.1875, :x2 226.70990905165672, :y2 950.1875, :width 894, :height 1116.2742230347349}), :page 245}, :content {:text "工厂模式"}, :properties {:color "green"}} {:id #uuid "63c93021-f848-4d67-b215-d0865dca82ae", :page 246, :position {:bounding {:x1 177.39502868056297, :y1 335.00000762939453, :x2 801.5573364198208, :y2 357.4000015258789, :width 894, :height 1116.2742230347349}, :rects ({:x1 177.39502868056297, :y1 335.00000762939453, :x2 320.5483337342739, :y2 357.4000015258789, :width 894, :height 1116.2742230347349} {:x1 345.4625183045864, :y1 335.00000762939453, :x2 801.5573364198208, :y2 357.4000015258789, :width 894, :height 1116.2742230347349} {:x1 186.90000304579735, :y1 339.00000762939453, :x2 320.5483337342739, :y2 354.50000762939453, :width 894, :height 1116.2742230347349} {:x1 345.4625183045864, :y1 339.00000762939453, :x2 721.2306152284145, :y2 354.50000762939453, :width 894, :height 1116.2742230347349}), :page 246}, :content {:text "，函数 createPerson()接收 3 个参数，根据这几个参数构建了一个包含 Person 信息的对象"}, :properties {:color "yellow"}} {:id #uuid "63c93027-c768-4611-83e2-04f923d95250", :page 246, :position {:bounding {:x1 374.8063903748989, :y1 381.2999954223633, :x2 755.6062866151333, :y2 403.7000198364258, :width 894, :height 1116.2742230347349}, :rects ({:x1 374.8063903748989, :y1 381.2999954223633, :x2 755.6062866151333, :y2 403.7000198364258, :width 894, :height 1116.2742230347349}), :page 246}, :content {:text "但没有解决对象标识问题（即新创建的对象是什么类型）"}, :properties {:color "yellow"}} {:id #uuid "63c9302b-994a-47f6-9438-445a1503dc0c", :page 246, :position {:bounding {:x1 179.15000304579735, :y1 417.6625061035156, :x2 299.1648803651333, :y2 445.6625213623047, :width 894, :height 1116.2742230347349}, :rects ({:x1 179.15000304579735, :y1 417.6625061035156, :x2 299.1648803651333, :y2 445.6625213623047, :width 894, :height 1116.2742230347349}), :page 246}, :content {:text "构造函数模式"}, :properties {:color "green"}} {:id #uuid "63c930bd-717e-454c-800c-6ceb56e0c40d", :page 246, :position {:bounding {:x1 166.90000304579735, :y1 822.5750122070312, :x2 319.12005004286766, :y2 844.9750061035156, :width 894, :height 1116.2742230347349}, :rects ({:x1 166.90000304579735, :y1 822.5750122070312, :x2 319.12005004286766, :y2 844.9750061035156, :width 894, :height 1116.2742230347349}), :page 246}, :content {:text "没有显式地创建对象。"}, :properties {:color "yellow"}} {:id #uuid "63c930c0-87f7-424f-84c4-5e5e388786ff", :page 246, :position {:bounding {:x1 166.90000304579735, :y1 845.7124938964844, :x2 392.0500122010708, :y2 868.1125183105469, :width 894, :height 1116.2742230347349}, :rects ({:x1 166.90000304579735, :y1 845.7124938964844, :x2 366.63482055068016, :y2 868.1125183105469, :width 894, :height 1116.2742230347349} {:x1 376.84999999403954, :y1 845.7124938964844, :x2 392.0500122010708, :y2 868.1125183105469, :width 894, :height 1116.2742230347349} {:x1 337.51250609755516, :y1 849.7124938964844, :x2 366.63482055068016, :y2 865.2124938964844, :width 894, :height 1116.2742230347349}), :page 246}, :content {:text "属性和方法直接赋值给了 this。"}, :properties {:color "yellow"}} {:id #uuid "63c930c7-74d7-451b-8322-40ea6c3274d4", :page 246, :position {:bounding {:x1 166.90000304579735, :y1 868.8500061035156, :x2 269.9625183045864, :y2 891.25, :width 894, :height 1116.2742230347349}, :rects ({:x1 166.90000304579735, :y1 868.8500061035156, :x2 243.96979674696922, :y2 891.25, :width 894, :height 1116.2742230347349} {:x1 254.76250609755516, :y1 868.8500061035156, :x2 269.9625183045864, :y2 891.25, :width 894, :height 1116.2742230347349} {:x1 197.88750609755516, :y1 872.8500061035156, :x2 243.96979674696922, :y2 888.3500061035156, :width 894, :height 1116.2742230347349}), :page 246}, :content {:text "没有 return。"}, :properties {:color "yellow"}} {:id #uuid "63c93108-6590-4dc4-a935-336da9f23025", :page 247, :position {:bounding {:x1 112.86250457167625, :y1 284.75, :x2 413.0828796327114, :y2 305.5500030517578, :width 894, :height 1116.2742230347349}, :rects ({:x1 112.86250457167625, :y1 284.75, :x2 190.91384276747704, :y2 305.5500030517578, :width 894, :height 1116.2742230347349} {:x1 209.95000609755516, :y1 284.75, :x2 413.0828796327114, :y2 305.5500030517578, :width 894, :height 1116.2742230347349} {:x1 209.95000609755516, :y1 287.9499969482422, :x2 210.16294249892235, :y2 302.6625061035156, :width 894, :height 1116.2742230347349}), :page 247}, :content {:text "constructor 本来是用于标识对象类型的。"}, :properties {:color "yellow"}} {:id #uuid "63c9310c-aa00-4634-b650-261f49ac93d8", :page 247, :position {:bounding {:x1 190.07796630263329, :y1 307.4499969482422, :x2 684.2774902284145, :y2 329.8500061035156, :width 894, :height 1116.2742230347349}, :rects ({:x1 190.07796630263329, :y1 307.4499969482422, :x2 684.2774902284145, :y2 329.8500061035156, :width 894, :height 1116.2742230347349} {:x1 378.38750609755516, :y1 311.4499969482422, :x2 630.866967767477, :y2 326.9499969482422, :width 894, :height 1116.2742230347349}), :page 247}, :content {:text "前面例子中的每个对象都是 Object 的实例，同时也是 Person 的实例"}, :properties {:color "yellow"}} {:id #uuid "63c93158-dafa-44bf-9eec-6545b74424f1", :page 248, :position {:bounding {:x1 146.98749694228172, :y1 264.9874954223633, :x2 707.407235711813, :y2 287.38748931884766, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.98749694228172, :y1 264.9874954223633, :x2 707.407235711813, :y2 287.38748931884766, :width 894, :height 1116.2742230347349}), :page 248}, :content {:text "构造函数与普通函数唯一的区别就是调用方式不同。除此之外，构造函数也是函数。"}, :properties {:color "yellow"}} {:id #uuid "63c931d7-0e29-4215-9506-ce2a665eef72", :page 248, :position {:bounding {:x1 0, :y1 527.8000183105469, :x2 810.4749999940395, :y2 596.4875183105469, :width 894, :height 1116.2742230347349}, :rects ({:x1 778.9082885682583, :y1 527.8000183105469, :x2 809.3887573182583, :y2 550.2000122070312, :width 894, :height 1116.2742230347349} {:x1 115.91249999403954, :y1 550.9375, :x2 520.024682611227, :y2 573.3374938964844, :width 894, :height 1116.2742230347349} {:x1 533.937524408102, :y1 550.9375, :x2 810.4749999940395, :y2 573.3374938964844, :width 894, :height 1116.2742230347349} {:x1 115.91249999403954, :y1 554.9375, :x2 520.024682611227, :y2 570.4375, :width 894, :height 1116.2742230347349} {:x1 533.937524408102, :y1 554.9375, :x2 810.4749999940395, :y2 570.4375, :width 894, :height 1116.2742230347349} {:x1 0, :y1 556.8000183105469, :x2 0, :y2 579.2000122070312, :width 894, :height 1116.2742230347349} {:x1 0, :y1 572.8000183105469, :x2 0, :y2 595.2000122070312, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 574.0874938964844, :x2 146.32134398818016, :y2 596.4875183105469, :width 894, :height 1116.2742230347349}), :page 248}, :content {:text "普通函数的调用方式，这时候没有使用 new 操作符调用 Person()，结果会将属性和方法添加到 window 对象。"}, :properties {:color "yellow"}} {:id #uuid "63c9323d-443a-4041-9604-10fba69c6720", :page 249, :position {:bounding {:x1 0, :y1 12.800003051757812, :x2 776.3712402284145, :y2 170.1125030517578, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 12.800003051757812, :x2 0, :y2 35.20001220703125, :width 894, :height 1116.2742230347349} {:x1 114.52500304579735, :y1 124.56251525878906, :x2 520.1358276307583, :y2 146.96250915527344, :width 894, :height 1116.2742230347349} {:x1 530.9124999940395, :y1 125.01249694824219, :x2 654.2740722596645, :y2 145.81251525878906, :width 894, :height 1116.2742230347349} {:x1 664.4624877870083, :y1 125.01249694824219, :x2 776.3712402284145, :y2 145.81251525878906, :width 894, :height 1116.2742230347349} {:x1 530.9124999940395, :y1 128.21250915527344, :x2 654.2740722596645, :y2 142.9250030517578, :width 894, :height 1116.2742230347349} {:x1 664.4624877870083, :y1 128.21250915527344, :x2 776.3712402284145, :y2 142.9250030517578, :width 894, :height 1116.2742230347349} {:x1 456.0500122010708, :y1 128.56251525878906, :x2 520.1358276307583, :y2 144.06251525878906, :width 894, :height 1116.2742230347349} {:x1 83.43750151991844, :y1 147.71250915527344, :x2 281.4512649476528, :y2 170.1125030517578, :width 894, :height 1116.2742230347349}), :page 249}, :content {:text "因为都是做一样的事，所以没必要定义两个不同的 Function 实例。况且，this 对象可以把函数与对象的绑定推迟到运行时。"}, :properties {:color "yellow"}} {:id #uuid "63c9326e-44bd-4e80-9d27-01eed3044446", :page 249, :position {:bounding {:x1 146.70000609755516, :y1 607.5125122070312, :x2 226.70990905165672, :y2 635.5125122070312, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.70000609755516, :y1 607.5125122070312, :x2 226.70990905165672, :y2 635.5125122070312, :width 894, :height 1116.2742230347349}), :page 249}, :content {:text "原型模式"}, :properties {:color "green"}} {:id #uuid "63c932ba-ad74-44d0-9d7e-63aab15d7a99", :page 249, :position {:bounding {:x1 0, :y1 380.80001068115234, :x2 770.5225463807583, :y2 693.2750091552734, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 380.80001068115234, :x2 0, :y2 403.20001220703125, :width 894, :height 1116.2742230347349} {:x1 114.52500304579735, :y1 647.7250213623047, :x2 341.1293579041958, :y2 670.1250152587891, :width 894, :height 1116.2742230347349} {:x1 353.7125183045864, :y1 648.1750183105469, :x2 770.5225463807583, :y2 668.9750213623047, :width 894, :height 1116.2742230347349} {:x1 353.7125183045864, :y1 651.3750152587891, :x2 770.5225463807583, :y2 666.0875091552734, :width 894, :height 1116.2742230347349} {:x1 269.7499938905239, :y1 651.7250213623047, :x2 341.1293579041958, :y2 667.2250213623047, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 670.8750152587891, :x2 219.79124602675438, :y2 693.2750091552734, :width 894, :height 1116.2742230347349}), :page 249}, :content {:text "每个函数都会创建一个 prototype 属性，这个属性是一个对象，包含应该由特定引用类型的实例共享的属性和方法。"}, :properties {:color "yellow"}} {:id #uuid "63c932c1-5e01-4507-ba09-680e029bbabf", :page 249, :position {:bounding {:x1 113.74804839491844, :y1 694.1125183105469, :x2 431.87759551405907, :y2 716.5125122070312, :width 894, :height 1116.2742230347349}, :rects ({:x1 113.74804839491844, :y1 694.1125183105469, :x2 431.87759551405907, :y2 716.5125122070312, :width 894, :height 1116.2742230347349}), :page 249}, :content {:text "在它上面定义的属性和方法可以被对象实例共享"}, :properties {:color "yellow"}} {:id #uuid "63c93450-b3ac-4a51-8da2-09d074116dd9", :page 250, :position {:bounding {:x1 0, :y1 427.87501525878906, :x2 809.8987670838833, :y2 483.1999969482422, :width 894, :height 1116.2742230347349}, :rects ({:x1 176.32354125380516, :y1 427.87501525878906, :x2 809.8987670838833, :y2 450.27500915527344, :width 894, :height 1116.2742230347349} {:x1 608.5125366151333, :y1 431.87501525878906, :x2 809.8987670838833, :y2 447.37501525878906, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 451.0124969482422, :x2 400.4520202577114, :y2 473.41249084472656, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 455.0124969482422, :x2 363.09319457411766, :y2 470.5124969482422, :width 894, :height 1116.2742230347349} {:x1 0, :y1 460.8000030517578, :x2 0, :y2 483.1999969482422, :width 894, :height 1116.2742230347349}), :page 250}, :content {:text "使用这种原型模式定义的属性和方法是由所有实例共享的。因此 person1 和 person2 访问的都是相同的属性和相同的 sayName()函数"}, :properties {:color "yellow"}} {:id #uuid "63c934b6-3bae-43b1-a868-386f4db7079c", :page 250, :position {:bounding {:x1 0, :y1 604.8000183105469, :x2 814.091577142477, :y2 685.4250183105469, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 604.8000183105469, :x2 0, :y2 627.2000122070312, :width 894, :height 1116.2742230347349} {:x1 614.8916870057583, :y1 639.8750305175781, :x2 680.833520501852, :y2 662.2750244140625, :width 894, :height 1116.2742230347349} {:x1 691.2375122010708, :y1 639.8750305175781, :x2 814.091577142477, :y2 662.2750244140625, :width 894, :height 1116.2742230347349} {:x1 624.9500366151333, :y1 643.8750305175781, :x2 680.833520501852, :y2 659.3750305175781, :width 894, :height 1116.2742230347349} {:x1 691.2375122010708, :y1 643.8750305175781, :x2 814.091577142477, :y2 659.3750305175781, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 663.0250244140625, :x2 328.18670043349266, :y2 685.4250183105469, :width 894, :height 1116.2742230347349} {:x1 338.59999999403954, :y1 663.0250244140625, :x2 616.5277343690395, :y2 685.4250183105469, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 667.0250244140625, :x2 328.18670043349266, :y2 682.5250244140625, :width 894, :height 1116.2742230347349}), :page 250}, :content {:text "，但 Firefox、Safari 和 Chrome会在每个对象上暴露__proto__属性，通过这个属性可以访问对象的原型"}, :properties {:color "yellow"}} {:id #uuid "63c9354e-e866-46fb-b419-79fd8583d3d0", :page 252, :position {:bounding {:x1 115.90000304579735, :y1 602.2750244140625, :x2 352.82573851943016, :y2 623.0750274658203, :width 894, :height 1116.2742230347349}, :rects ({:x1 115.90000304579735, :y1 602.2750244140625, :x2 233.68032225966454, :y2 623.0750274658203, :width 894, :height 1116.2742230347349} {:x1 257.1125122010708, :y1 602.2750244140625, :x2 352.82573851943016, :y2 623.0750274658203, :width 894, :height 1116.2742230347349} {:x1 257.1125122010708, :y1 605.4750213623047, :x2 257.2933288514614, :y2 620.1875152587891, :width 894, :height 1116.2742230347349}), :page 252}, :content {:text "Person.prototype 指向原型对象"}, :properties {:color "yellow"}} {:id #uuid "63c93556-5b0b-4ab5-9741-da59b26184cf", :page 252, :position {:bounding {:x1 386.0624938905239, :y1 602.2750244140625, :x2 782.0255371034145, :y2 623.0750274658203, :width 894, :height 1116.2742230347349}, :rects ({:x1 386.0624938905239, :y1 602.2750244140625, :x2 579.343774408102, :y2 623.0750274658203, :width 894, :height 1116.2742230347349} {:x1 624.4624877870083, :y1 602.2750244140625, :x2 782.0255371034145, :y2 623.0750274658203, :width 894, :height 1116.2742230347349} {:x1 624.4624877870083, :y1 605.4750213623047, :x2 719.6750122010708, :y2 620.1875152587891, :width 894, :height 1116.2742230347349}), :page 252}, :content {:text "Person.prototype.contructor 指回 Person 构造函数"}, :properties {:color "yellow"}} {:id #uuid "63c93563-ad79-4a17-bb11-95d2b7f1cd5d", :page 252, :position {:bounding {:x1 0, :y1 396.8000183105469, :x2 810.5853515565395, :y2 670.6250152587891, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 396.8000183105469, :x2 0, :y2 419.20001792907715, :width 894, :height 1116.2742230347349} {:x1 493.1500183045864, :y1 625.5250244140625, :x2 810.5853515565395, :y2 646.3250274658203, :width 894, :height 1116.2742230347349} {:x1 544.625024408102, :y1 628.7250213623047, :x2 810.5853515565395, :y2 643.4375152587891, :width 894, :height 1116.2742230347349} {:x1 392.4374938905239, :y1 648.2125244140625, :x2 641.845971673727, :y2 670.6125183105469, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 648.2250213623047, :x2 370.1952758729458, :y2 670.6250152587891, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 652.2250213623047, :x2 370.1952758729458, :y2 667.7250213623047, :width 894, :height 1116.2742230347349}), :page 252}, :content {:text "Person 的两个实例 person1 和 person2 都只有一个内部属性指回 Person.prototype，而且两者都与构造函数没有直接联系"}, :properties {:color "yellow"}} {:id #uuid "63c93589-66e7-43e8-9daa-0102b9864c1e", :page 253, :position {:bounding {:x1 0, :y1 12.80000114440918, :x2 777.5362792909145, :y2 170.11250495910645, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 12.80000114440918, :x2 0, :y2 35.19999885559082, :width 894, :height 1116.2742230347349} {:x1 415.28749999403954, :y1 124.56250190734863, :x2 703.875512689352, :y2 146.962495803833, :width 894, :height 1116.2742230347349} {:x1 731.9250122010708, :y1 124.56250190734863, :x2 777.5362792909145, :y2 146.962495803833, :width 894, :height 1116.2742230347349} {:x1 112.86250457167625, :y1 125.01249885559082, :x2 386.5971618592739, :y2 145.81250190734863, :width 894, :height 1116.2742230347349} {:x1 165.81250914931297, :y1 128.212495803833, :x2 386.5971618592739, :y2 142.92500495910645, :width 894, :height 1116.2742230347349} {:x1 415.28749999403954, :y1 128.56250190734863, :x2 703.875512689352, :y2 144.06250190734863, :width 894, :height 1116.2742230347349} {:x1 731.9250122010708, :y1 128.56250190734863, :x2 777.5362792909145, :y2 144.06250190734863, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 147.712495803833, :x2 433.7750106751919, :y2 170.11250495910645, :width 894, :height 1116.2742230347349}), :page 253}, :content {:text "Object 类型还有一个 setPrototypeOf()方法，可以向实例的私有特性[[Prototype]]写入一个新值。这样就可以重写一个对象的原型继承关系："}, :properties {:color "yellow"}} {:id #uuid "63c935a5-27ad-4930-949f-e21cc4ede20f", :page 253, :position {:bounding {:x1 0, :y1 268.80000495910645, :x2 777.7325073182583, :y2 537.1500110626221, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 268.80000495910645, :x2 0, :y2 291.1999988555908, :width 894, :height 1116.2742230347349} {:x1 114.52500304579735, :y1 491.5124988555908, :x2 357.2117858827114, :y2 513.9125232696533, :width 894, :height 1116.2742230347349} {:x1 399.01250609755516, :y1 491.5124988555908, :x2 715.1907592713833, :y2 513.9125232696533, :width 894, :height 1116.2742230347349} {:x1 747.3250366151333, :y1 491.5124988555908, :x2 777.7325073182583, :y2 513.9125232696533, :width 894, :height 1116.2742230347349} {:x1 192.00000914931297, :y1 495.5124988555908, :x2 357.2117858827114, :y2 511.0124988555908, :width 894, :height 1116.2742230347349} {:x1 399.01250609755516, :y1 495.5124988555908, :x2 715.1907592713833, :y2 511.0124988555908, :width 894, :height 1116.2742230347349} {:x1 747.3250366151333, :y1 495.5124988555908, :x2 777.7325073182583, :y2 511.0124988555908, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 514.7499866485596, :x2 311.84846648573875, :y2 537.1500110626221, :width 894, :height 1116.2742230347349}), :page 253}, :content {:text "为避免使用 Object.setPrototypeOf()可能造成的性能下降，可以通过 Object.create()来创建一个新对象，同时为其指定原型"}, :properties {:color "yellow"}} {:id #uuid "63c9363e-391d-4412-a4a8-13d0bf863473", :page 253, :position {:bounding {:x1 0, :y1 556.8000183105469, :x2 724.6297241151333, :y2 942.5375366210938, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 556.8000183105469, :x2 0, :y2 579.2000198364258, :width 894, :height 1116.2742230347349} {:x1 191.80376586318016, :y1 897.8875122070312, :x2 336.1341491639614, :y2 920.2875366210938, :width 894, :height 1116.2742230347349} {:x1 355.1750122010708, :y1 898.3250122070312, :x2 724.6297241151333, :y2 919.1250305175781, :width 894, :height 1116.2742230347349} {:x1 355.1750122010708, :y1 901.5250244140625, :x2 724.6297241151333, :y2 916.2375183105469, :width 894, :height 1116.2742230347349} {:x1 254.06250914931297, :y1 901.8875122070312, :x2 336.1341491639614, :y2 917.3875122070312, :width 894, :height 1116.2742230347349} {:x1 130.02500304579735, :y1 920.1375122070312, :x2 175.63628539443016, :y2 942.5375366210938, :width 894, :height 1116.2742230347349}), :page 253}, :content {:text "面提到的 constructor 属性只存在于原型对象，因此通过实例对象也是可以访问到的"}, :properties {:color "yellow"}} {:id #uuid "63c93656-000c-4918-9d32-993945caba05", :page 253, :position {:bounding {:x1 0, :y1 588.8000030517578, :x2 765.9148803651333, :y2 1006.4875183105469, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 588.8000030517578, :x2 0, :y2 611.2000122070312, :width 894, :height 1116.2742230347349} {:x1 614.4288574159145, :y1 960.9375152587891, :x2 765.9148803651333, :y2 983.3375091552734, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 984.0875091552734, :x2 719.7090927064419, :y2 1006.4875183105469, :width 894, :height 1116.2742230347349}), :page 253}, :content {:text "果在实例上添加了一个与原型对象中同名的属性，那就会在实例上创建这个属性，这个属性会遮住原型对象上的属性。"}, :properties {:color "yellow"}} {:id #uuid "63c9367d-b6f5-4837-9a94-d51be252feea", :page 254, :position {:bounding {:x1 0, :y1 528.1875152587891, :x2 800.7697082459927, :y2 573.7375030517578, :width 894, :height 1116.2742230347349}, :rects ({:x1 190.6807800233364, :y1 528.1875152587891, :x2 268.8891540467739, :y2 550.5875091552734, :width 894, :height 1116.2742230347349} {:x1 279.47499999403954, :y1 528.6374969482422, :x2 800.7697082459927, :y2 549.4375152587891, :width 894, :height 1116.2742230347349} {:x1 279.47499999403954, :y1 531.8375091552734, :x2 800.7697082459927, :y2 546.5500030517578, :width 894, :height 1116.2742230347349} {:x1 222.59999999403954, :y1 532.1875152587891, :x2 268.8891540467739, :y2 547.6875152587891, :width 894, :height 1116.2742230347349} {:x1 0, :y1 540.8000030517578, :x2 0, :y2 563.1999969482422, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 551.3375091552734, :x2 176.78801879286766, :y2 573.7375030517578, :width 894, :height 1116.2742230347349}), :page 254}, :content {:text "使用 delete 操作符可以完全删除实例上的这个属性，从而让标识符解析过程能够继续搜索原型对象"}, :properties {:color "yellow"}} {:id #uuid "63c936d5-3552-4d5e-ba59-2641d7919a14", :page 255, :position {:bounding {:x1 221.61890563368797, :y1 433.8500003814697, :x2 771.964135736227, :y2 456.2499942779541, :width 894, :height 1116.2742230347349}, :rects ({:x1 221.61890563368797, :y1 433.8500003814697, :x2 418.10170897841454, :y2 456.2499942779541, :width 894, :height 1116.2742230347349} {:x1 435.28749999403954, :y1 433.8500003814697, :x2 771.964135736227, :y2 456.2499942779541, :width 894, :height 1116.2742230347349} {:x1 286.03749999403954, :y1 437.8500003814697, :x2 418.10170897841454, :y2 453.3500003814697, :width 894, :height 1116.2742230347349}), :page 255}, :content {:text "通过调用 hasOwnProperty()能够清楚地看到访问的是实例属性还是原型属性。"}, :properties {:color "yellow"}} {:id #uuid "63c936f2-7e07-4976-b34d-3515ef9510b0", :page 256, :position {:bounding {:x1 0, :y1 248.61251831054688, :x2 809.0174804627895, :y2 323.20001220703125, :width 894, :height 1116.2742230347349}, :rects ({:x1 587.3572631776333, :y1 248.61251831054688, :x2 809.0174804627895, :y2 271.01251220703125, :width 894, :height 1116.2742230347349} {:x1 695.5500122010708, :y1 252.26251220703125, :x2 809.0174804627895, :y2 266.9750061035156, :width 894, :height 1116.2742230347349} {:x1 115.91249999403954, :y1 271.76251220703125, :x2 646.6735473573208, :y2 294.1625061035156, :width 894, :height 1116.2742230347349} {:x1 115.91249999403954, :y1 275.76251220703125, :x2 365.1311889588833, :y2 291.26251220703125, :width 894, :height 1116.2742230347349} {:x1 0, :y1 300.8000183105469, :x2 0, :y2 323.20001220703125, :width 894, :height 1116.2742230347349}), :page 256}, :content {:text "在单独使用时，in 操作符会在可以通过对象访问指定属性时返回 true，无论该属性是在实例上还是在原型上。"}, :properties {:color "yellow"}} {:id #uuid "63c93798-2d46-4a20-a725-3130ce773ff2", :page 257, :position {:bounding {:x1 0, :y1 220.80001068115234, :x2 774.2300659120083, :y2 457.4375, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 220.80001068115234, :x2 0, :y2 243.20000457763672, :width 894, :height 1116.2742230347349} {:x1 114.53749999403954, :y1 411.88751220703125, :x2 534.9932495057583, :y2 434.2875061035156, :width 894, :height 1116.2742230347349} {:x1 561.0125366151333, :y1 411.88751220703125, :x2 774.2300659120083, :y2 434.2875061035156, :width 894, :height 1116.2742230347349} {:x1 440.4625183045864, :y1 415.88751220703125, :x2 534.9932495057583, :y2 431.38751220703125, :width 894, :height 1116.2742230347349} {:x1 561.0125366151333, :y1 415.88751220703125, :x2 774.2300659120083, :y2 431.38751220703125, :width 894, :height 1116.2742230347349} {:x1 83.43750151991844, :y1 435.0375061035156, :x2 494.67788848280907, :y2 457.4375, :width 894, :height 1116.2742230347349}), :page 257}, :content {:text "要获得对象上所有可枚举的实例属性，可以使用 Object.keys()方法。这个方法接收一个对象作为参数，返回包含该对象所有可枚举属性名称的字符串数组。"}, :properties {:color "yellow"}} {:id #uuid "63c937e0-ad74-4f60-929e-9865bf8b3341", :page 257, :position {:bounding {:x1 114.53749999403954, :y1 788.9375305175781, :x2 784.3875366151333, :y2 811.3375549316406, :width 894, :height 1116.2742230347349}, :rects ({:x1 114.53749999403954, :y1 788.9375305175781, :x2 739.3363281190395, :y2 811.3375549316406, :width 894, :height 1116.2742230347349} {:x1 769.187524408102, :y1 788.9375305175781, :x2 784.3875366151333, :y2 811.3375549316406, :width 894, :height 1116.2742230347349} {:x1 518.125024408102, :y1 792.9375305175781, :x2 739.3363281190395, :y2 808.4375305175781, :width 894, :height 1116.2742230347349}), :page 257}, :content {:text "如果想列出所有实例属性，无论是否可以枚举，都可以使用 Object.getOwnPropertyNames()："}, :properties {:color "yellow"}} {:id #uuid "63c937f0-c415-40c8-8e2a-2dd465b7a5ed", :page 257, :position {:bounding {:x1 0, :y1 604.8000411987305, :x2 748.5613647401333, :y2 947.9375305175781, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 604.8000411987305, :x2 0, :y2 627.2000350952148, :width 894, :height 1116.2742230347349} {:x1 229.36249694228172, :y1 901.2625427246094, :x2 748.5613647401333, :y2 923.6625366210938, :width 894, :height 1116.2742230347349} {:x1 114.52500304579735, :y1 902.300048828125, :x2 219.00261840224266, :y2 924.7000427246094, :width 894, :height 1116.2742230347349} {:x1 229.36249694228172, :y1 905.2625427246094, :x2 748.5613647401333, :y2 920.7625427246094, :width 894, :height 1116.2742230347349} {:x1 130.02500304579735, :y1 906.300048828125, :x2 219.00261840224266, :y2 921.800048828125, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 925.5375366210938, :x2 230.43278655409813, :y2 947.9375305175781, :width 894, :height 1116.2742230347349}), :page 257}, :content {:text "在 ECMAScript 6 新增符号类型之后，相应地出现了增加一个 Object.getOwnPropertyNames()的兄弟方法的需求，"}, :properties {:color "yellow"}} {:id #uuid "63c93863-d77f-48e1-89c0-360d58ad9733", :page 258, :position {:bounding {:x1 0, :y1 292.11251068115234, :x2 784.8760620057583, :y2 387.20001220703125, :width 894, :height 1116.2742230347349}, :rects ({:x1 588.1750122010708, :y1 292.11251068115234, :x2 624.789575189352, :y2 314.51251220703125, :width 894, :height 1116.2742230347349} {:x1 641.2249999940395, :y1 292.11251068115234, :x2 784.8760620057583, :y2 312.9125061035156, :width 894, :height 1116.2742230347349} {:x1 588.1750122010708, :y1 295.31250762939453, :x2 624.789575189352, :y2 310.02500915527344, :width 894, :height 1116.2742230347349} {:x1 641.2249999940395, :y1 295.31250762939453, :x2 784.8760620057583, :y2 310.02500915527344, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 314.80001068115234, :x2 587.7062622010708, :y2 337.20001220703125, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 318.80001068115234, :x2 404.9374938905239, :y2 334.3000030517578, :width 894, :height 1116.2742230347349} {:x1 0, :y1 364.8000030517578, :x2 0, :y2 387.20001220703125, :width 894, :height 1116.2742230347349}), :page 258}, :content {:text "for-in 循环和 Object.keys()的枚举顺序是不确定的，取决于 JavaScript 引擎，可能因浏览器而异。"}, :properties {:color "yellow"}} {:id #uuid "63c9386b-be2e-4453-a7e9-d7d90f2c01dc", :page 258, :position {:bounding {:x1 0, :y1 337.95001220703125, :x2 797.6061798036098, :y2 435.20001220703125, :width 894, :height 1116.2742230347349}, :rects ({:x1 387.63750609755516, :y1 337.95001220703125, :x2 626.6075683534145, :y2 360.3500061035156, :width 894, :height 1116.2742230347349} {:x1 661.812524408102, :y1 337.95001220703125, :x2 780.5716796815395, :y2 360.3500061035156, :width 894, :height 1116.2742230347349} {:x1 145.02500304579735, :y1 338.40000915527344, :x2 358.45708617568016, :y2 359.20001220703125, :width 894, :height 1116.2742230347349} {:x1 387.63750609755516, :y1 341.95001220703125, :x2 626.6075683534145, :y2 357.45001220703125, :width 894, :height 1116.2742230347349} {:x1 661.812524408102, :y1 341.95001220703125, :x2 780.5716796815395, :y2 357.45001220703125, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 361.08750915527344, :x2 797.6061798036098, :y2 383.4875030517578, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 365.08750915527344, :x2 797.6061798036098, :y2 380.58750915527344, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 384.32501220703125, :x2 374.82004699110985, :y2 406.7250061035156, :width 894, :height 1116.2742230347349} {:x1 0, :y1 396.8000030517578, :x2 0, :y2 419.20001220703125, :width 894, :height 1116.2742230347349} {:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.20001220703125, :width 894, :height 1116.2742230347349}), :page 258}, :content {:text "Object.getOwnPropertyNames()、Object.getOwnPropertySymbols()和 Object.assign()的枚举顺序是确定性的。先以升序枚举数值键，然后以插入顺序枚举字符串和符号键。在对象字面量中定义的键以它们逗号分隔的顺序插入。"}, :properties {:color "yellow"}} {:id #uuid "63c93874-505f-4318-874e-548784a873a9", :page 258, :position {:bounding {:x1 179.15000304579735, :y1 759.6000061035156, :x2 259.1599059998989, :y2 787.6000061035156, :width 894, :height 1116.2742230347349}, :rects ({:x1 179.15000304579735, :y1 759.6000061035156, :x2 259.1599059998989, :y2 787.6000061035156, :width 894, :height 1116.2742230347349}), :page 258}, :content {:text "对象迭代"}, :properties {:color "green"}} {:id #uuid "63c93886-dc4d-4e00-80eb-bad55ec1cf64", :page 258, :position {:bounding {:x1 0, :y1 764.800012588501, :x2 779.5508666932583, :y2 891.6500091552734, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 764.800012588501, :x2 0, :y2 787.2000122070312, :width 894, :height 1116.2742230347349} {:x1 678.3875366151333, :y1 846.5500106811523, :x2 779.5508666932583, :y2 867.3500213623047, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 869.2500152587891, :x2 237.69223937392235, :y2 891.6500091552734, :width 894, :height 1116.2742230347349}), :page 258}, :content {:text "Object.values()返回对象值的数组"}, :properties {:color "yellow"}} {:id #uuid "63c9388d-ee81-4cfd-ac63-ea4af3a28e9a", :page 258, :position {:bounding {:x1 255.53749999403954, :y1 869.2500152587891, :x2 523.8273559510708, :y2 891.6500091552734, :width 894, :height 1116.2742230347349}, :rects ({:x1 396.84999999403954, :y1 869.2500152587891, :x2 523.8273559510708, :y2 891.6500091552734, :width 894, :height 1116.2742230347349} {:x1 255.53749999403954, :y1 869.7000122070312, :x2 360.80425414443016, :y2 890.5000152587891, :width 894, :height 1116.2742230347349} {:x1 396.84999999403954, :y1 873.2500152587891, :x2 448.76250609755516, :y2 888.7500152587891, :width 894, :height 1116.2742230347349}), :page 258}, :content {:text "Object.entries()返回键/值对的数组"}, :properties {:color "yellow"}} {:id #uuid "63c938f7-b463-4f86-a76e-974d6a55f97e", :page 259, :position {:bounding {:x1 0, :y1 364.80001068115234, :x2 765.1561523377895, :y2 657.5875244140625, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 364.80001068115234, :x2 0, :y2 387.2000045776367, :width 894, :height 1116.2742230347349} {:x1 537.9207397401333, :y1 612.0375061035156, :x2 765.1561523377895, :y2 634.4375, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 635.1875, :x2 403.3469100892544, :y2 657.5875244140625, :width 894, :height 1116.2742230347349}), :page 259}, :content {:text "直接通过一个包含所有属性和方法的对象字面量来重写原型成为了一种常见的做法"}, :properties {:color "yellow"}} {:id #uuid "63c93940-e7c7-49d8-80c3-3fb892f79c7e", :page 260, :position {:bounding {:x1 0, :y1 164.17498779296875, :x2 803.0076538026333, :y2 307.1999816894531, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.98749694228172, :y1 164.17498779296875, :x2 255.9427429139614, :y2 186.57501220703125, :width 894, :height 1116.2742230347349} {:x1 274.0875183045864, :y1 164.625, :x2 641.213891595602, :y2 187.0250244140625, :width 894, :height 1116.2742230347349} {:x1 660.250024408102, :y1 164.625, :x2 802.4265991151333, :y2 187.0250244140625, :width 894, :height 1116.2742230347349} {:x1 185.72499999403954, :y1 167.82501220703125, :x2 255.9427429139614, :y2 182.53750610351562, :width 894, :height 1116.2742230347349} {:x1 274.0875183045864, :y1 167.82501220703125, :x2 641.213891595602, :y2 182.53750610351562, :width 894, :height 1116.2742230347349} {:x1 660.250024408102, :y1 167.82501220703125, :x2 802.4265991151333, :y2 183.32501220703125, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 187.32501220703125, :x2 368.1966491639614, :y2 209.72500610351562, :width 894, :height 1116.2742230347349} {:x1 387.2499938905239, :y1 187.77499389648438, :x2 803.0076538026333, :y2 208.57498168945312, :width 894, :height 1116.2742230347349} {:x1 387.2499938905239, :y1 190.97500610351562, :x2 803.0076538026333, :y2 205.68753051757812, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 191.32501220703125, :x2 368.1966491639614, :y2 206.82498168945312, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 210.47500610351562, :x2 176.78801879286766, :y2 232.87503051757812, :width 894, :height 1116.2742230347349} {:x1 0, :y1 268.8000183105469, :x2 0, :y2 291.1999816894531, :width 894, :height 1116.2742230347349} {:x1 0, :y1 284.8000183105469, :x2 0, :y2 307.1999816894531, :width 894, :height 1116.2742230347349}), :page 260}, :content {:text "这里，instanceof 仍然对 Object 和 Person 都返回 true。但 constructor 属性现在等于 Object而不是 Person 了。如果 constructor 的值很重要，则可以像下面这样在重写原型对象时专门设置一下它的值"}, :properties {:color "yellow"}} {:id #uuid "63c93952-5d08-4772-ab7a-686b29db09f8", :page 260, :position {:bounding {:x1 223.13282164931297, :y1 473.2750015258789, :x2 778.8660522401333, :y2 495.68750762939453, :width 894, :height 1116.2742230347349}, :rects ({:x1 672.500024408102, :y1 473.2750015258789, :x2 778.8660522401333, :y2 495.6749954223633, :width 894, :height 1116.2742230347349} {:x1 223.13282164931297, :y1 473.28751373291016, :x2 415.7763610780239, :y2 495.68750762939453, :width 894, :height 1116.2742230347349} {:x1 434.8000122010708, :y1 473.72501373291016, :x2 650.9119506776333, :y2 494.5250015258789, :width 894, :height 1116.2742230347349} {:x1 434.8000122010708, :y1 476.9249954223633, :x2 650.9119506776333, :y2 491.6375198364258, :width 894, :height 1116.2742230347349} {:x1 672.500024408102, :y1 477.2750015258789, :x2 730.6624999940395, :y2 492.7750015258789, :width 894, :height 1116.2742230347349} {:x1 333.20000609755516, :y1 477.28751373291016, :x2 415.7763610780239, :y2 492.78751373291016, :width 894, :height 1116.2742230347349}), :page 260}, :content {:text "以这种方式恢复 constructor 属性会创建一个[[Enumerable]]为 true 的属性"}, :properties {:color "yellow"}} {:id #uuid "63c93974-f787-49bd-9c88-b84ded4a10c1", :page 260, :position {:bounding {:x1 0, :y1 496.41251373291016, :x2 817.6487670838833, :y2 563.2000198364258, :width 894, :height 1116.2742230347349}, :rects ({:x1 456.0624938905239, :y1 496.41251373291016, :x2 817.6487670838833, :y2 518.8125076293945, :width 894, :height 1116.2742230347349} {:x1 595.7874999940395, :y1 500.41251373291016, :x2 817.6487670838833, :y2 515.9125137329102, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 519.5625076293945, :x2 404.1319518983364, :y2 541.9625015258789, :width 894, :height 1116.2742230347349} {:x1 446.9625183045864, :y1 519.5625076293945, :x2 606.5013671815395, :y2 541.9625015258789, :width 894, :height 1116.2742230347349} {:x1 625.5374999940395, :y1 520.0000076293945, :x2 660.3575073182583, :y2 540.7999954223633, :width 894, :height 1116.2742230347349} {:x1 625.5374999940395, :y1 523.2000198364258, :x2 625.7183471620083, :y2 537.9125137329102, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 523.5625076293945, :x2 404.1319518983364, :y2 539.0625076293945, :width 894, :height 1116.2742230347349} {:x1 446.9625183045864, :y1 523.5625076293945, :x2 606.5013671815395, :y2 539.0625076293945, :width 894, :height 1116.2742230347349} {:x1 0, :y1 540.7999954223633, :x2 0, :y2 563.2000198364258, :width 894, :height 1116.2742230347349}), :page 260}, :content {:text "如果你使用的是兼容 ECMAScript 的 JavaScript 引擎，那可能会改为使用 Object.defineProperty()方法来定义 constructor 属性"}, :properties {:color "yellow"}} {:id #uuid "63c939ec-e29e-43f6-9884-c35a1b1e1837", :page 261, :position {:bounding {:x1 0, :y1 76.80000305175781, :x2 765.9273315370083, :y2 262.7875213623047, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 76.80000305175781, :x2 0, :y2 99.19999694824219, :width 894, :height 1116.2742230347349} {:x1 114.53749999403954, :y1 217.2375030517578, :x2 765.9273315370083, :y2 239.6374969482422, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 240.3874969482422, :x2 114.17933806777, :y2 262.7875213623047, :width 894, :height 1116.2742230347349}), :page 261}, :content {:text "虽然随时能给原型添加属性和方法，并能够立即反映在所有对象实例上，但这跟重写整个原型是两回事"}, :properties {:color "yellow"}} {:id #uuid "63c939f5-2c7d-40c5-95ba-a99a4886490f", :page 261, :position {:bounding {:x1 83.44999846816063, :y1 286.6750030517578, :x2 494.7255721986294, :y2 309.0749969482422, :width 894, :height 1116.2742230347349}, :rects ({:x1 83.44999846816063, :y1 286.6750030517578, :x2 494.7255721986294, :y2 309.0749969482422, :width 894, :height 1116.2742230347349}), :page 261}, :content {:text "记住，实例只有指向原型的指针，没有指向构造函数的指针。"}, :properties {:color "yellow"}} {:id #uuid "63c93a0f-bf0e-434d-9534-e83ecf56e78a", :page 261, :position {:bounding {:x1 205.30710753798485, :y1 263.5250015258789, :x2 768.8963409364223, :y2 285.92501068115234, :width 894, :height 1116.2742230347349}, :rects ({:x1 205.30710753798485, :y1 263.5250015258789, :x2 768.8963409364223, :y2 285.92501068115234, :width 894, :height 1116.2742230347349}), :page 261}, :content {:text "重写整个原型会切断最初原型与构造函数的联系，但实例引用的仍然是最初的原型。"}, :properties {:color "yellow"}} {:id #uuid "63c93a4b-b06f-424b-a3ee-689ec99de5a2", :page 262, :position {:bounding {:x1 115.90000304579735, :y1 243.81250762939453, :x2 514.0255371034145, :y2 266.2125015258789, :width 894, :height 1116.2742230347349}, :rects ({:x1 115.90000304579735, :y1 243.81250762939453, :x2 233.91452941298485, :y2 266.2125015258789, :width 894, :height 1116.2742230347349} {:x1 250.34999999403954, :y1 243.81250762939453, :x2 422.10674437880516, :y2 266.2125015258789, :width 894, :height 1116.2742230347349} {:x1 448.72499999403954, :y1 244.25000762939453, :x2 514.0255371034145, :y2 265.0499954223633, :width 894, :height 1116.2742230347349} {:x1 448.72499999403954, :y1 247.44998931884766, :x2 451.6750122010708, :y2 262.16251373291016, :width 894, :height 1116.2742230347349} {:x1 193.37500914931297, :y1 247.81250762939453, :x2 233.91452941298485, :y2 263.31250762939453, :width 894, :height 1116.2742230347349} {:x1 250.34999999403954, :y1 247.81250762939453, :x2 422.10674437880516, :y2 263.31250762939453, :width 894, :height 1116.2742230347349}), :page 262}, :content {:text "数组实例的 sort()方法就是 Array.prototype 上定义的"}, :properties {:color "yellow"}} {:id #uuid "63c93a4f-d758-4c6c-b30d-524d94b9543c", :page 262, :position {:bounding {:x1 0, :y1 243.81250762939453, :x2 809.8987670838833, :y2 339.19998931884766, :width 894, :height 1116.2742230347349}, :rects ({:x1 538.7615600526333, :y1 243.81250762939453, :x2 740.2442871034145, :y2 266.2125015258789, :width 894, :height 1116.2742230347349} {:x1 764.2874999940395, :y1 243.81250762939453, :x2 809.8987670838833, :y2 266.2125015258789, :width 894, :height 1116.2742230347349} {:x1 663.1750122010708, :y1 247.81250762939453, :x2 740.2442871034145, :y2 263.31250762939453, :width 894, :height 1116.2742230347349} {:x1 764.2874999940395, :y1 247.81250762939453, :x2 809.8987670838833, :y2 263.31250762939453, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 267.0499954223633, :x2 262.16668090224266, :y2 289.44998931884766, :width 894, :height 1116.2742230347349} {:x1 292.0250183045864, :y1 267.50000762939453, :x2 357.3255248963833, :y2 288.2999954223633, :width 894, :height 1116.2742230347349} {:x1 292.0250183045864, :y1 270.69998931884766, :x2 292.2058044373989, :y2 285.41251373291016, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 271.0499954223633, :x2 262.16668090224266, :y2 286.5499954223633, :width 894, :height 1116.2742230347349} {:x1 0, :y1 316.7999954223633, :x2 0, :y2 339.19998931884766, :width 894, :height 1116.2742230347349}), :page 262}, :content {:text "字符串包装对象的 substring()方法也是在 String.prototype 上定义的"}, :properties {:color "yellow"}} {:id #uuid "63c93b03-d859-4d98-9d6b-b90285b92acf", :page 263, :position {:bounding {:x1 144.36605224013329, :y1 427.67499923706055, :x2 768.883813470602, :y2 450.0749931335449, :width 894, :height 1116.2742230347349}, :rects ({:x1 144.36605224013329, :y1 427.67499923706055, :x2 768.883813470602, :y2 450.0749931335449, :width 894, :height 1116.2742230347349}), :page 263}, :content {:text "不同的实例应该有属于自己的属性副本。这就是实际开发中通常不单独使用原型模式的原因。"}, :properties {:color "yellow"}} {:id #uuid "63c93b09-077e-425f-9edc-1f0d649a740e", :page 263, :position {:bounding {:x1 138.15000304579735, :y1 465.75000762939453, :x2 184.56723937392235, :y2 497.75000762939453, :width 894, :height 1116.2742230347349}, :rects ({:x1 138.15000304579735, :y1 465.75000762939453, :x2 184.56723937392235, :y2 497.75000762939453, :width 894, :height 1116.2742230347349}), :page 263}, :content {:text "继承"}, :properties {:color "green"}} {:id #uuid "63c93b34-883e-4bd3-bede-3b881d90fcbb", :page 263, :position {:bounding {:x1 418.5104614198208, :y1 727.3625030517578, :x2 601.2775512635708, :y2 749.7625122070312, :width 894, :height 1116.2742230347349}, :rects ({:x1 418.5104614198208, :y1 727.3625030517578, :x2 601.2775512635708, :y2 749.7625122070312, :width 894, :height 1116.2742230347349}), :page 263}, :content {:text "这就是原型链的基本构想。"}, :properties {:color "yellow"}} {:id #uuid "63c93c26-f816-4518-991d-45c7dc1b6d4f", :page 264, :position {:bounding {:x1 0, :y1 540.8000183105469, :x2 808.3086791932583, :y2 908.2500305175781, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 540.8000183105469, :x2 0, :y2 563.2000274658203, :width 894, :height 1116.2742230347349} {:x1 342.1623474061489, :y1 863.7625122070312, :x2 517.525903314352, :y2 886.1625366210938, :width 894, :height 1116.2742230347349} {:x1 538.3625122010708, :y1 864.2000122070312, :x2 650.526391595602, :y2 885.0000305175781, :width 894, :height 1116.2742230347349} {:x1 669.562524408102, :y1 864.2000122070312, :x2 808.3086791932583, :y2 885.0000305175781, :width 894, :height 1116.2742230347349} {:x1 538.3625122010708, :y1 867.4000244140625, :x2 650.526391595602, :y2 882.1125183105469, :width 894, :height 1116.2742230347349} {:x1 669.562524408102, :y1 867.4000244140625, :x2 808.3086791932583, :y2 882.1125183105469, :width 894, :height 1116.2742230347349} {:x1 379.4250122010708, :y1 867.7625122070312, :x2 517.525903314352, :y2 883.2625122070312, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 887.4500122070312, :x2 384.28554686903954, :y2 908.2500305175781, :width 894, :height 1116.2742230347349} {:x1 422.2499938905239, :y1 887.4500122070312, :x2 550.1199584901333, :y2 908.2500305175781, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 890.6500244140625, :x2 384.28554686903954, :y2 905.3625183105469, :width 894, :height 1116.2742230347349} {:x1 422.2499938905239, :y1 890.6500244140625, :x2 473.4173522889614, :y2 905.3625183105469, :width 894, :height 1116.2742230347349}), :page 264}, :content {:text "由于 SubType.prototype 的 constructor 属性被重写为指向 SuperType，所以 instance.constructor 也指向 SuperType"}, :properties {:color "yellow"}} {:id #uuid "63c93cae-da86-48f3-9da6-c4e04b5e115a", :page 266, :position {:bounding {:x1 0, :y1 764.8000183105469, :x2 798.3773437440395, :y2 851.4500122070312, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 764.8000183105469, :x2 0, :y2 787.2000122070312, :width 894, :height 1116.2742230347349} {:x1 313.62212523818016, :y1 805.9000244140625, :x2 798.3773437440395, :y2 828.3000183105469, :width 894, :height 1116.2742230347349} {:x1 115.91249999403954, :y1 829.0500183105469, :x2 176.83980712294579, :y2 851.4500122070312, :width 894, :height 1116.2742230347349}), :page 266}, :content {:text "以对象字面量方式创建原型方法会破坏之前的原型链，因为这相当于重写了原型链"}, :properties {:color "yellow"}} {:id #uuid "63c93cd0-fba3-42c8-ade3-4442c7bea2dd", :page 267, :position {:bounding {:x1 0, :y1 220.79998779296875, :x2 772.4724975526333, :y2 437.1249694824219, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 220.79998779296875, :x2 0, :y2 243.19998168945312, :width 894, :height 1116.2742230347349} {:x1 114.52500304579735, :y1 391.4875183105469, :x2 772.4724975526333, :y2 413.8874816894531, :width 894, :height 1116.2742230347349} {:x1 378.38750609755516, :y1 395.4875183105469, :x2 772.4724975526333, :y2 410.9875183105469, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 414.7250061035156, :x2 529.0665527284145, :y2 437.1249694824219, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 418.7250061035156, :x2 465.70000609755516, :y2 434.2250061035156, :width 894, :height 1116.2742230347349}), :page 267}, :content {:text "在这段代码中，子类的原型在被赋值为 SuperType 的实例后，又被一个对象字面量覆盖了。覆盖后的原型是一个 Object 的实例，而不再是 SuperType 的实例。"}, :properties {:color "yellow"}} {:id #uuid "63c93cde-4aa7-45bc-8e14-0c3d482c3921", :page 267, :position {:bounding {:x1 0, :y1 316.8000030517578, :x2 765.2473998963833, :y2 579.5250091552734, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 316.8000030517578, :x2 0, :y2 339.2000045776367, :width 894, :height 1116.2742230347349} {:x1 416.7731567323208, :y1 533.9750213623047, :x2 765.2473998963833, :y2 556.3750152587891, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 557.1250152587891, :x2 479.45927581191063, :y2 579.5250091552734, :width 894, :height 1116.2742230347349}), :page 267}, :content {:text "使用原型实现继承时，原型实际上变成了另一个类型的实例。这意味着原先的实例属性摇身一变成为了原型属性"}, :properties {:color "yellow"}} {:id #uuid "63c93d6a-c1ee-4b4c-9c17-72dbb96b86ba", :page 267, :position {:bounding {:x1 281.13628539443016, :y1 957.7000122070312, :x2 614.3588500916958, :y2 980.1000061035156, :width 894, :height 1116.2742230347349}, :rects ({:x1 281.13628539443016, :y1 957.7000122070312, :x2 614.3588500916958, :y2 980.1000061035156, :width 894, :height 1116.2742230347349}), :page 267}, :content {:text "子类型在实例化时不能给父类型的构造函数传参。"}, :properties {:color "yellow"}} {:id #uuid "63c93d7c-c18c-41ff-8682-474ecb8a1ef9", :page 268, :position {:bounding {:x1 179.15000304579735, :y1 122.78749084472656, :x2 299.1648803651333, :y2 150.78749084472656, :width 894, :height 1116.2742230347349}, :rects ({:x1 179.15000304579735, :y1 122.78749084472656, :x2 299.1648803651333, :y2 150.78749084472656, :width 894, :height 1116.2742230347349}), :page 268}, :content {:text "盗用构造函数"}, :properties {:color "green"}} {:id #uuid "63c93d91-3a2d-45ea-9d9c-eb65e4da5d04", :page 268, :position {:bounding {:x1 0, :y1 186.15000915527344, :x2 807.3294921815395, :y2 291.1999969482422, :width 894, :height 1116.2742230347349}, :rects ({:x1 761.9158569276333, :y1 186.15000915527344, :x2 807.3294921815395, :y2 208.5500030517578, :width 894, :height 1116.2742230347349} {:x1 115.88749846816063, :y1 209.3000030517578, :x2 312.8511825501919, :y2 231.6999969482422, :width 894, :height 1116.2742230347349} {:x1 0, :y1 268.8000030517578, :x2 0, :y2 291.1999969482422, :width 894, :height 1116.2742230347349}), :page 268}, :content {:text "在子类构造函数中调用父类构造函数"}, :properties {:color "yellow"}} {:id #uuid "63c93dd7-96df-496a-bf1a-6c184350ca19", :page 268, :position {:bounding {:x1 0, :y1 209.3000030517578, :x2 797.6848998963833, :y2 307.1999969482422, :width 894, :height 1116.2742230347349}, :rects ({:x1 752.231713861227, :y1 209.3000030517578, :x2 797.6848998963833, :y2 231.6999969482422, :width 894, :height 1116.2742230347349} {:x1 177.68750914931297, :y1 232.43751525878906, :x2 230.62346801161766, :y2 254.83750915527344, :width 894, :height 1116.2742230347349} {:x1 250.04999694228172, :y1 232.43751525878906, :x2 539.4166351258755, :y2 254.83750915527344, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 232.87501525878906, :x2 163.62716063857079, :y2 253.6750030517578, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 236.0749969482422, :x2 163.62716063857079, :y2 250.78749084472656, :width 894, :height 1116.2742230347349} {:x1 177.68750914931297, :y1 236.43751525878906, :x2 230.62346801161766, :y2 251.93751525878906, :width 894, :height 1116.2742230347349} {:x1 0, :y1 284.8000030517578, :x2 0, :y2 307.1999969482422, :width 894, :height 1116.2742230347349}), :page 268}, :content {:text "以使用 apply()和 call()方法以新创建的对象为上下文执行构造函数"}, :properties {:color "yellow"}} {:id #uuid "63c93de4-0dc9-4c70-a144-b04e221bc27a", :page 268, :position {:bounding {:x1 495.40532836318016, :y1 597.5124969482422, :x2 783.228784173727, :y2 619.9124908447266, :width 894, :height 1116.2742230347349}, :rects ({:x1 495.40532836318016, :y1 597.5124969482422, :x2 783.228784173727, :y2 619.9124908447266, :width 894, :height 1116.2742230347349}), :page 268}, :content {:text "以在子类构造函数中向父类构造函数传参。"}, :properties {:color "yellow"}} {:id #uuid "63c93df5-2f34-489a-930e-b9a6568dde33", :page 268, :position {:bounding {:x1 616.6624999940395, :y1 1008.8875427246094, :x2 799.4444213807583, :y2 1031.2875061035156, :width 894, :height 1116.2742230347349}, :rects ({:x1 616.6624999940395, :y1 1008.8875427246094, :x2 799.4444213807583, :y2 1031.2875061035156, :width 894, :height 1116.2742230347349}), :page 268}, :content {:text "必须在构造函数中定义方法"}, :properties {:color "yellow"}} {:id #uuid "63c93ea9-bb47-43de-a373-9efa13519b82", :page 269, :position {:bounding {:x1 128.20090636610985, :y1 184.07501220703125, :x2 226.70990905165672, :y2 213.38751220703125, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.70000609755516, :y1 184.07501220703125, :x2 226.70990905165672, :y2 212.07501220703125, :width 894, :height 1116.2742230347349} {:x1 128.20090636610985, :y1 185.38751220703125, :x2 128.20441588759422, :y2 213.38751220703125, :width 894, :height 1116.2742230347349}), :page 269}, :content {:text "组合继承"}, :properties {:color "green"}} {:id #uuid "63c93eba-a514-4030-8527-4a70497d0107", :page 269, :position {:bounding {:x1 0, :y1 60.79999923706055, :x2 766.9751830995083, :y2 269.9375, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 60.79999923706055, :x2 0, :y2 83.20000457763672, :width 894, :height 1116.2742230347349} {:x1 751.8123413026333, :y1 224.28750610351562, :x2 766.9751830995083, :y2 246.6875, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 247.53750610351562, :x2 659.1900497376919, :y2 269.9375, :width 894, :height 1116.2742230347349}), :page 269}, :content {:text "基本的思路是使用原型链继承原型上的属性和方法，而通过盗用构造函数继承实例属性。"}, :properties {:color "yellow"}} {:id #uuid "63c93ee2-fb44-451d-a025-db30c3d8e071", :page 269, :position {:bounding {:x1 0, :y1 604.8000030517578, :x2 773.6412597596645, :y2 980.4000244140625, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 604.8000030517578, :x2 0, :y2 627.1999969482422, :width 894, :height 1116.2742230347349} {:x1 727.9444213807583, :y1 934.8624877929688, :x2 773.6412597596645, :y2 957.2625122070312, :width 894, :height 1116.2742230347349} {:x1 83.43750151991844, :y1 958, :x2 235.05523070693016, :y2 980.4000244140625, :width 894, :height 1116.2742230347349} {:x1 455.9875122010708, :y1 958, :x2 623.4796997010708, :y2 980.4000244140625, :width 894, :height 1116.2742230347349} {:x1 253.20000609755516, :y1 958.4375, :x2 426.7707458436489, :y2 979.2374877929688, :width 894, :height 1116.2742230347349} {:x1 253.20000609755516, :y1 961.6375122070312, :x2 426.7707458436489, :y2 976.3500366210938, :width 894, :height 1116.2742230347349} {:x1 83.43750151991844, :y1 962, :x2 235.05523070693016, :y2 977.5, :width 894, :height 1116.2742230347349}), :page 269}, :content {:text "组合继承也保留了 instanceof 操作符和 isPrototypeOf()方法识别合成对象的能力"}, :properties {:color "yellow"}} {:id #uuid "63c93efc-604b-41a0-a784-da4555f4df7f", :page 270, :position {:bounding {:x1 179.15000304579735, :y1 122.78750610351562, :x2 279.16240844130516, :y2 150.78750610351562, :width 894, :height 1116.2742230347349}, :rects ({:x1 179.15000304579735, :y1 122.78750610351562, :x2 279.16240844130516, :y2 150.78750610351562, :width 894, :height 1116.2742230347349}), :page 270}, :content {:text "原型式继承"}, :properties {:color "green"}} {:id #uuid "63c93f54-ac8e-4414-b462-5ebae069680b", :page 270, :position {:bounding {:x1 0, :y1 322.9375190734863, :x2 800.3522430360317, :y2 403.20000076293945, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.98749694228172, :y1 322.9375190734863, :x2 234.27439269423485, :y2 345.3375129699707, :width 894, :height 1116.2742230347349} {:x1 252.50000914931297, :y1 322.9375190734863, :x2 800.3522430360317, :y2 345.3375129699707, :width 894, :height 1116.2742230347349} {:x1 177.97499999403954, :y1 326.9375190734863, :x2 234.27439269423485, :y2 342.4375190734863, :width 894, :height 1116.2742230347349} {:x1 252.50000914931297, :y1 326.9375190734863, :x2 800.3522430360317, :y2 342.4375190734863, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 346.0875129699707, :x2 312.7233825623989, :y2 368.4875068664551, :width 894, :height 1116.2742230347349} {:x1 0, :y1 380.8000068664551, :x2 0, :y2 403.20000076293945, :width 894, :height 1116.2742230347349}), :page 270}, :content {:text "这个 object()函数会创建一个临时构造函数，将传入的对象赋值给这个构造函数的原型，然后返回这个临时类型的一个实例。"}, :properties {:color "yellow"}} {:id #uuid "63c93f57-86dc-4b9b-9daf-0a58282947a6", :page 270, :position {:bounding {:x1 599.151879876852, :y1 346.0875129699707, :x2 690.1729370057583, :y2 368.4875068664551, :width 894, :height 1116.2742230347349}, :rects ({:x1 599.151879876852, :y1 346.0875129699707, :x2 690.1729370057583, :y2 368.4875068664551, :width 894, :height 1116.2742230347349}), :page 270}, :content {:text "一次浅复制。"}, :properties {:color "yellow"}} {:id #uuid "63c93f71-88db-4bdc-a990-bd5dacce165c", :page 270, :position {:bounding {:x1 229.07717284560204, :y1 599.4750061035156, :x2 807.2348266541958, :y2 621.8750305175781, :width 894, :height 1116.2742230347349}, :rects ({:x1 229.07717284560204, :y1 599.4750061035156, :x2 807.2348266541958, :y2 621.8750305175781, :width 894, :height 1116.2742230347349}), :page 270}, :content {:text "荐的原型式继承适用于这种情况：你有一个对象，想在它的基础上再创建一个新对象。"}, :properties {:color "yellow"}} {:id #uuid "63c93fb9-4f9f-4571-9923-4c410d13a7a1", :page 270, :position {:bounding {:x1 0, :y1 668.8000183105469, :x2 803.915063470602, :y2 760.8375244140625, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 668.8000183105469, :x2 0, :y2 691.2000122070312, :width 894, :height 1116.2742230347349} {:x1 441.2750183045864, :y1 715.2875061035156, :x2 803.915063470602, :y2 737.6875305175781, :width 894, :height 1116.2742230347349} {:x1 258.0912719666958, :y1 715.3000183105469, :x2 409.11870726943016, :y2 737.7000122070312, :width 894, :height 1116.2742230347349} {:x1 441.2750183045864, :y1 719.2875061035156, :x2 803.915063470602, :y2 734.7875061035156, :width 894, :height 1116.2742230347349} {:x1 304.8625122010708, :y1 719.3000183105469, :x2 409.11870726943016, :y2 734.8000183105469, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 738.4375305175781, :x2 661.3652740418911, :y2 760.8375244140625, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 742.4375305175781, :x2 661.3652740418911, :y2 757.9375305175781, :width 894, :height 1116.2742230347349}), :page 270}, :content {:text "过增加 Object.create()方法将原型式继承的概念规范化了。这个方法接收两个参数：作为新对象原型的对象，以及给新对象定义额外属性的对象（第二个可选）"}, :properties {:color "yellow"}} {:id #uuid "63c93fc1-5ee6-45d0-9512-db007023d377", :page 271, :position {:bounding {:x1 146.70000609755516, :y1 414.0375061035156, :x2 246.71241149306297, :y2 442.0375061035156, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.70000609755516, :y1 414.0375061035156, :x2 246.71241149306297, :y2 442.0375061035156, :width 894, :height 1116.2742230347349}), :page 271}, :content {:text "寄生式继承"}, :properties {:color "green"}} {:id #uuid "63c93fe5-7c09-4bea-a6cb-e136f28385e6", :page 272, :position {:bounding {:x1 179.15000304579735, :y1 122.7874755859375, :x2 319.1673522889614, :y2 150.7874755859375, :width 894, :height 1116.2742230347349}, :rects ({:x1 179.15000304579735, :y1 122.7874755859375, :x2 319.1673522889614, :y2 150.7874755859375, :width 894, :height 1116.2742230347349}), :page 272}, :content {:text "寄生式组合继承"}, :properties {:color "green"}} {:id #uuid "63c93ff3-113c-41b4-a9fa-02953691ed57", :page 272, :position {:bounding {:x1 374.2165161073208, :y1 162.89999389648438, :x2 737.782983392477, :y2 185.30001831054688, :width 894, :height 1116.2742230347349}, :rects ({:x1 374.2165161073208, :y1 162.89999389648438, :x2 737.782983392477, :y2 185.30001831054688, :width 894, :height 1116.2742230347349}), :page 272}, :content {:text "主要的效率问题就是父类构造函数始终会被调用两次："}, :properties {:color "green"}} {:id #uuid "63c94048-8bf8-4a06-b6b5-440735a1b003", :page 273, :position {:bounding {:x1 114.52500304579735, :y1 551.1375370025635, :x2 629.5774932801723, :y2 573.5375003814697, :width 894, :height 1116.2742230347349}, :rects ({:x1 114.52500304579735, :y1 551.1375370025635, :x2 629.5774932801723, :y2 573.5375003814697, :width 894, :height 1116.2742230347349}), :page 273}, :content {:text "寄生式组合继承通过盗用构造函数继承属性，但使用混合式原型链继承方法。"}, :properties {:color "yellow"}} {:id #uuid "63c94051-0f11-4e12-8e92-6a067ca52650", :page 273, :position {:bounding {:x1 0, :y1 76.80000114440918, :x2 765.234887689352, :y2 619.925012588501, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 76.80000114440918, :x2 0, :y2 99.19999885559082, :width 894, :height 1116.2742230347349} {:x1 613.7243286073208, :y1 574.3750247955322, :x2 765.234887689352, :y2 596.7749881744385, :width 894, :height 1116.2742230347349} {:x1 83.43750151991844, :y1 597.5249881744385, :x2 403.32141265273094, :y2 619.925012588501, :width 894, :height 1116.2742230347349}), :page 273}, :content {:text "用寄生式继承来继承父类原型，然后将返回的新对象赋值给子类原型。"}, :properties {:color "yellow"}} {:id #uuid "63c94062-caa4-435b-95d3-515785d7bfcb", :page 273, :position {:bounding {:x1 380.14910277724266, :y1 757.4624938964844, :x2 746.4012695252895, :y2 779.8625183105469, :width 894, :height 1116.2742230347349}, :rects ({:x1 380.14910277724266, :y1 757.4624938964844, :x2 647.9764038026333, :y2 779.8625183105469, :width 894, :height 1116.2742230347349} {:x1 667.0125366151333, :y1 757.8999938964844, :x2 746.4012695252895, :y2 778.7000122070312, :width 894, :height 1116.2742230347349} {:x1 667.0125366151333, :y1 761.1000061035156, :x2 667.1933227479458, :y2 775.8125, :width 894, :height 1116.2742230347349} {:x1 565.9749999940395, :y1 761.4624938964844, :x2 647.9764038026333, :y2 776.9624938964844, :width 894, :height 1116.2742230347349}), :page 273}, :content {:text "解决由于重写原型导致默认 constructor 丢失的问题"}, :properties {:color "yellow"}} {:id #uuid "63c9409d-8fda-4a67-b3ee-3b3e42ba8524", :page 274, :position {:bounding {:x1 148.83001098036766, :y1 341.79998779296875, :x2 193.81250914931297, :y2 375.3249816894531, :width 894, :height 1116.2742230347349}, :rects ({:x1 170.61249694228172, :y1 341.79998779296875, :x2 193.81250914931297, :y2 373.8000183105469, :width 894, :height 1116.2742230347349} {:x1 148.83001098036766, :y1 343.32501220703125, :x2 148.83303222060204, :y2 375.3249816894531, :width 894, :height 1116.2742230347349}), :page 274}, :content {:text "类"}, :properties {:color "green"}} {:id #uuid "63c940b3-cc99-4f5d-937b-a238d5d7422b", :page 274, :position {:bounding {:x1 0, :y1 588.8000030517578, :x2 798.286157220602, :y2 739.4624938964844, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 588.8000030517578, :x2 0, :y2 611.1999969482422, :width 894, :height 1116.2742230347349} {:x1 752.846704095602, :y1 693.9125061035156, :x2 798.286157220602, :y2 716.3125, :width 894, :height 1116.2742230347349} {:x1 115.91249999403954, :y1 717.0625, :x2 313.90020141005516, :y2 739.4624938964844, :width 894, :height 1116.2742230347349}), :page 274}, :content {:text "然函数声明可以提升，但类定义不能"}, :properties {:color "yellow"}} {:id #uuid "63c940c7-81a7-4968-9708-9cf168eaaf1f", :page 274, :position {:bounding {:x1 375.4619995057583, :y1 985.9375305175781, :x2 695.3262573182583, :y2 1008.3375244140625, :width 894, :height 1116.2742230347349}, :rects ({:x1 375.4619995057583, :y1 985.9375305175781, :x2 695.3262573182583, :y2 1008.3375244140625, :width 894, :height 1116.2742230347349}), :page 274}, :content {:text "函数受函数作用域限制，而类受块作用域限制："}, :properties {:color "yellow"}} {:id #uuid "63c940cf-dbad-4233-8658-57c1d1575535", :page 275, :position {:bounding {:x1 83.44999846816063, :y1 291.66251373291016, :x2 220.532609552145, :y2 314.06250762939453, :width 894, :height 1116.2742230347349}, :rects ({:x1 83.44999846816063, :y1 291.66251373291016, :x2 220.532609552145, :y2 314.06250762939453, :width 894, :height 1116.2742230347349}), :page 275}, :content {:text "空的类定义照样有效"}, :properties {:color "yellow"}} {:id #uuid "63c94108-2f54-48bc-b21a-8ca05c63f5b9", :page 275, :position {:bounding {:x1 146.70000609755516, :y1 896.6000366210938, :x2 246.71241149306297, :y2 924.6000366210938, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.70000609755516, :y1 896.6000366210938, :x2 246.71241149306297, :y2 924.6000366210938, :width 894, :height 1116.2742230347349}), :page 275}, :content {:text "类构造函数"}, :properties {:color "green"}} {:id #uuid "63c9419e-fd10-4dd8-adb3-b811e8c2e2a2", :page 276, :position {:bounding {:x1 146.98749694228172, :y1 945.4375, :x2 530.8482299745083, :y2 967.8375091552734, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.98749694228172, :y1 945.4375, :x2 470.5990844666958, :y2 967.8375091552734, :width 894, :height 1116.2742230347349} {:x1 480.78749999403954, :y1 945.8874969482422, :x2 530.8482299745083, :y2 966.6875, :width 894, :height 1116.2742230347349} {:x1 480.78749999403954, :y1 949.0875091552734, :x2 483.7375122010708, :y2 963.8000030517578, :width 894, :height 1116.2742230347349} {:x1 441.53749999403954, :y1 949.4375, :x2 470.5990844666958, :y2 964.9375, :width 894, :height 1116.2742230347349}), :page 276}, :content {:text "默认情况下，类构造函数会在执行之后返回 this 对象。"}, :properties {:color "yellow"}} {:id #uuid "63c942f1-8a06-40b6-b12b-06f7647294a7", :page 277, :position {:bounding {:x1 114.52500304579735, :y1 453.46250915527344, :x2 625.936303704977, :y2 475.86253356933594, :width 894, :height 1116.2742230347349}, :rects ({:x1 114.52500304579735, :y1 453.46250915527344, :x2 625.936303704977, :y2 475.86253356933594, :width 894, :height 1116.2742230347349} {:x1 374.6500183045864, :y1 457.46250915527344, :x2 578.7625366151333, :y2 472.96250915527344, :width 894, :height 1116.2742230347349}), :page 277}, :content {:text "类构造函数与构造函数的主要区别是，调用类构造函数必须使用 new 操作符"}, :properties {:color "yellow"}} {:id #uuid "63c94327-19f9-40e5-8cf0-6b3924866191", :page 278, :position {:bounding {:x1 0, :y1 405.8000183105469, :x2 806.8662963807583, :y2 451.3500061035156, :width 894, :height 1116.2742230347349}, :rects ({:x1 258.22976073622704, :y1 405.8000183105469, :x2 508.52163085341454, :y2 428.20001220703125, :width 894, :height 1116.2742230347349} {:x1 527.5750366151333, :y1 406.25, :x2 806.8662963807583, :y2 427.0500183105469, :width 894, :height 1116.2742230347349} {:x1 527.5750366151333, :y1 409.45001220703125, :x2 806.8662963807583, :y2 424.1625061035156, :width 894, :height 1116.2742230347349} {:x1 422.0875183045864, :y1 409.8000183105469, :x2 508.52163085341454, :y2 425.3000183105469, :width 894, :height 1116.2742230347349} {:x1 0, :y1 412.8000183105469, :x2 0, :y2 435.20001220703125, :width 894, :height 1116.2742230347349} {:x1 365.2750183045864, :y1 428.95001220703125, :x2 410.49306640028954, :y2 451.3500061035156, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 429.3999938964844, :x2 186.03589782118797, :y2 450.20001220703125, :width 894, :height 1116.2742230347349} {:x1 204.16249999403954, :y1 429.3999938964844, :x2 352.7290893495083, :y2 450.20001220703125, :width 894, :height 1116.2742230347349} {:x1 115.90000304579735, :y1 432.6000061035156, :x2 186.03589782118797, :y2 447.3125, :width 894, :height 1116.2742230347349} {:x1 204.16249999403954, :y1 432.6000061035156, :x2 352.7290893495083, :y2 447.3125, :width 894, :height 1116.2742230347349}), :page 278}, :content {:text "重点在于，类中定义的 constructor 方法不会被当成构造函数，在对它使用 instanceof 操作符时会返回 false。但是"}, :properties {:color "yellow"}} {:id #uuid "63c94392-8623-4584-a1a1-56f9b5b86fb0", :page 279, :position {:bounding {:x1 146.70000609755516, :y1 239.48751068115234, :x2 326.72231444716454, :y2 267.48751068115234, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.70000609755516, :y1 239.48751068115234, :x2 326.72231444716454, :y2 267.48751068115234, :width 894, :height 1116.2742230347349}), :page 279}, :content {:text "实例、原型和类成员"}, :properties {:color "green"}} {:id #uuid "63c943ce-7829-4b17-823e-0df7da8065a7", :page 279, :position {:bounding {:x1 114.53749999403954, :y1 422.1875228881836, :x2 647.6725097596645, :y2 444.58748626708984, :width 894, :height 1116.2742230347349}, :rects ({:x1 114.53749999403954, :y1 422.1875228881836, :x2 647.6725097596645, :y2 444.58748626708984, :width 894, :height 1116.2742230347349}), :page 279}, :content {:text "每个实例都对应一个唯一的成员对象，这意味着所有成员都不会在原型上共享："}, :properties {:color "yellow"}} {:id #uuid "63c94401-c316-42c8-b84d-f743cdd6380c", :page 280, :position {:bounding {:x1 146.98749694228172, :y1 733.0375061035156, :x2 573.4224945008755, :y2 755.4375, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.98749694228172, :y1 733.0375061035156, :x2 573.4224945008755, :y2 755.4375, :width 894, :height 1116.2742230347349}), :page 280}, :content {:text "类定义也支持获取和设置访问器。语法与行为跟普通对象一样："}, :properties {:color "yellow"}} {:id #uuid "63c9440b-e5c7-4920-bd67-d980d317285d", :page 281, :position {:bounding {:x1 205.27910766005516, :y1 124.5625, :x2 403.25139769911766, :y2 146.96250915527344, :width 894, :height 1116.2742230347349}, :rects ({:x1 205.27910766005516, :y1 124.5625, :x2 403.25139769911766, :y2 146.96250915527344, :width 894, :height 1116.2742230347349}), :page 281}, :content {:text "静态成员每个类上只能有一个"}, :properties {:color "yellow"}} {:id #uuid "63c94456-0517-4f4c-b2bd-5fc7d6956088", :page 281, :position {:bounding {:x1 114.52500304579735, :y1 859.5375366210938, :x2 708.5662628114223, :y2 881.9375305175781, :width 894, :height 1116.2742230347349}, :rects ({:x1 114.52500304579735, :y1 859.5375366210938, :x2 708.5662628114223, :y2 881.9375305175781, :width 894, :height 1116.2742230347349}), :page 281}, :content {:text "虽然类定义并不显式支持在原型或类上添加成员数据，但在类定义外部，可以手动添加："}, :properties {:color "yellow"}} {:id #uuid "63c9446b-cd0e-4ab2-96b6-e534f0286d43", :page 282, :position {:bounding {:x1 0, :y1 253.61248779296875, :x2 754.0990844666958, :y2 339.20001220703125, :width 894, :height 1116.2742230347349}, :rects ({:x1 451.93666991591454, :y1 253.61248779296875, :x2 710.917504876852, :y2 276.01251220703125, :width 894, :height 1116.2742230347349} {:x1 721.375024408102, :y1 253.61248779296875, :x2 754.0990844666958, :y2 276.01251220703125, :width 894, :height 1116.2742230347349} {:x1 721.375024408102, :y1 257.61248779296875, :x2 754.0990844666958, :y2 273.11248779296875, :width 894, :height 1116.2742230347349} {:x1 162.48749694228172, :y1 275.9750061035156, :x2 238.58233031630516, :y2 298.375, :width 894, :height 1116.2742230347349} {:x1 0, :y1 316.79998779296875, :x2 0, :y2 339.20001220703125, :width 894, :height 1116.2742230347349}), :page 282}, :content {:text "一般来说，对象实例应该独自拥有通过 this引用的数据"}, :properties {:color "yellow"}} {:id #uuid "63c9449a-8604-4a5e-a4c4-d3eaebcf4d51", :page 282, :position {:bounding {:x1 146.98749694228172, :y1 345.5874938964844, :x2 482.0810028016567, :y2 367.9875183105469, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.98749694228172, :y1 345.5874938964844, :x2 482.0810028016567, :y2 367.9875183105469, :width 894, :height 1116.2742230347349}), :page 282}, :content {:text "类定义语法支持在原型和类本身上定义生成器方法"}, :properties {:color "yellow"}} {:id #uuid "63c944ea-afc7-4f19-99da-fd25b957fe46", :page 282, :position {:bounding {:x1 146.98749694228172, :y1 786.1124877929688, :x2 736.7698455750942, :y2 806.9125061035156, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.98749694228172, :y1 786.1124877929688, :x2 736.7698455750942, :y2 806.9125061035156, :width 894, :height 1116.2742230347349}), :page 282}, :content {:text "因为支持生成器方法，所以可以通过添加一个默认的迭代器，把类实例变成可迭代对象"}, :properties {:color "yellow"}} {:id #uuid "63c94502-1b27-428b-8300-66e386c5748e", :page 283, :position {:bounding {:x1 146.70000609755516, :y1 479.0749969482422, :x2 185.92986449599266, :y2 504.6750030517578, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.70000609755516, :y1 479.0749969482422, :x2 185.92986449599266, :y2 504.6750030517578, :width 894, :height 1116.2742230347349}), :page 283}, :content {:text "继承"}, :properties {:color "green"}} {:id #uuid "63c9451c-e281-40ad-a62d-6547cdd26c5d", :page 283, :position {:bounding {:x1 0, :y1 380.7999954223633, :x2 778.4073120057583, :y2 635.4000091552734, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 380.7999954223633, :x2 0, :y2 402.39999771118164, :width 894, :height 1116.2742230347349} {:x1 114.52500304579735, :y1 590.4250030517578, :x2 652.9803710877895, :y2 611.2250061035156, :width 894, :height 1116.2742230347349} {:x1 669.8625122010708, :y1 591.4499969482422, :x2 778.4073120057583, :y2 612.25, :width 894, :height 1116.2742230347349} {:x1 143.54999694228172, :y1 594.6500091552734, :x2 652.9803710877895, :y2 610.1500091552734, :width 894, :height 1116.2742230347349} {:x1 669.8625122010708, :y1 594.6500091552734, :x2 778.4073120057583, :y2 610.1500091552734, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 614.6000061035156, :x2 704.2436386048794, :y2 635.4000091552734, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 617.8000030517578, :x2 704.2436386048794, :y2 633.3000030517578, :width 894, :height 1116.2742230347349}), :page 283}, :content {:text "ES6 类支持单继承。使用 extends 关键字，就可以继承任何拥有[[Construct]]和原型的对象。很大程度上，这意味着不仅可以继承一个类，也可以继承普通的构造函数（保持向后兼容）"}, :properties {:color "yellow"}} {:id #uuid "63c94557-8a59-4825-a6d9-7312a58ef59d", :page 284, :position {:bounding {:x1 164.25000914931297, :y1 453.0375121831894, :x2 408.2636352479458, :y2 473.83749997615814, :width 894, :height 1116.2742230347349}, :rects ({:x1 164.25000914931297, :y1 453.0375121831894, :x2 408.2636352479458, :y2 473.83749997615814, :width 894, :height 1116.2742230347349} {:x1 241.91249999403954, :y1 456.9125121831894, :x2 350.3555847108364, :y2 471.62500607967377, :width 894, :height 1116.2742230347349}), :page 284}, :content {:text "构造函数、HomeObject 和 super()"}, :properties {:color "yellow"}} {:id #uuid "63c94d6c-200e-463c-813f-e9f1ec1c67c9", :page 284, :position {:bounding {:x1 146.98749694228172, :y1 474.6625061035156, :x2 531.2969604432583, :y2 495.4624938964844, :width 894, :height 1116.2742230347349}, :rects ({:x1 146.98749694228172, :y1 474.6625061035156, :x2 531.2969604432583, :y2 495.4624938964844, :width 894, :height 1116.2742230347349} {:x1 302.1125122010708, :y1 477.8625183105469, :x2 358.07500609755516, :y2 493.3625183105469, :width 894, :height 1116.2742230347349}), :page 284}, :content {:text "派生类的方法可以通过 super 关键字引用它们的原型。"}, :properties {:color "yellow"}} {:id #uuid "63c94d83-5fca-4086-9aa0-a3f096eda8f2", :page 285, :position {:bounding {:x1 176.49898681044579, :y1 179.78749084472656, :x2 488.3489929139614, :y2 200.58750915527344, :width 894, :height 1116.2742230347349}, :rects ({:x1 176.49898681044579, :y1 179.78749084472656, :x2 488.3489929139614, :y2 200.58750915527344, :width 894, :height 1116.2742230347349} {:x1 176.50000914931297, :y1 182.6374969482422, :x2 433.04653319716454, :y2 197.34999084472656, :width 894, :height 1116.2742230347349}), :page 285}, :content {:text "super 始终会定义为[[HomeObject]]的原型"}, :properties {:color "yellow"}} {:id #uuid "63c94d8b-cf4d-4026-a216-acc3fadacbd2", :page 285, :position {:bounding {:x1 129.72480162978172, :y1 247.31251525878906, :x2 462.2717224061489, :y2 266.5124969482422, :width 894, :height 1116.2742230347349}, :rects ({:x1 129.72480162978172, :y1 247.31251525878906, :x2 462.2717224061489, :y2 266.5124969482422, :width 894, :height 1116.2742230347349}), :page 285}, :content {:text "super 只能在派生类构造函数和静态方法中使用"}, :properties {:color "yellow"}} {:id #uuid "63c94d97-bbd3-4664-bc86-5ccbb3f76d89", :page 285, :position {:bounding {:x1 134.43750914931297, :y1 375.02500915527344, :x2 668.073266595602, :y2 395.8249969482422, :width 894, :height 1116.2742230347349}, :rects ({:x1 134.43750914931297, :y1 375.02500915527344, :x2 668.073266595602, :y2 395.8249969482422, :width 894, :height 1116.2742230347349} {:x1 227.48749694228172, :y1 378.2250213623047, :x2 275.9656616151333, :y2 393.7250213623047, :width 894, :height 1116.2742230347349}), :page 285}, :content {:text "不能单独引用 super 关键字，要么用它调用构造函数，要么用它引用静态方法"}, :properties {:color "yellow"}} {:id #uuid "63c94da1-3bd8-4487-ab2a-4e109c745df3", :page 285, :position {:bounding {:x1 134.43750914931297, :y1 535.262523651123, :x2 573.437280267477, :y2 556.0625114440918, :width 894, :height 1116.2742230347349}, :rects ({:x1 134.43750914931297, :y1 535.262523651123, :x2 573.437280267477, :y2 556.0625114440918, :width 894, :height 1116.2742230347349} {:x1 165.42499694228172, :y1 538.4625358581543, :x2 573.437280267477, :y2 553.9625358581543, :width 894, :height 1116.2742230347349}), :page 285}, :content {:text "调用 super()会调用父类构造函数，并将返回的实例赋值给 this"}, :properties {:color "yellow"}} {:id #uuid "63c94da7-59a0-43df-ba50-681940eaa0f4", :page 285, :position {:bounding {:x1 134.43750914931297, :y1 742.5250091552734, :x2 708.4438262879848, :y2 761.7250213623047, :width 894, :height 1116.2742230347349}, :rects ({:x1 134.43750914931297, :y1 742.5250091552734, :x2 708.4438262879848, :y2 761.7250213623047, :width 894, :height 1116.2742230347349}), :page 285}, :content {:text "super()的行为如同调用构造函数，如果需要给父类构造函数传参，则需要手动传入"}, :properties {:color "yellow"}} {:id #uuid "63c94dad-6b16-4881-8ba2-0ec3274a8fb4", :page 285, :position {:bounding {:x1 0, :y1 652.8000183105469, :x2 778.2826782166958, :y2 1023.9125061035156, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 652.8000183105469, :x2 0, :y2 674.4000244140625, :width 894, :height 1116.2742230347349} {:x1 134.43750914931297, :y1 979.8750305175781, :x2 778.2826782166958, :y2 1000.6750183105469, :width 894, :height 1116.2742230347349} {:x1 490.9625183045864, :y1 983.0750427246094, :x2 778.2826782166958, :y2 998.5750427246094, :width 894, :height 1116.2742230347349} {:x1 134.43750914931297, :y1 1003.1125183105469, :x2 180.92400512099266, :y2 1023.9125061035156, :width 894, :height 1116.2742230347349}), :page 285}, :content {:text "如果没有定义类构造函数，在实例化派生类时会调用 super()，而且会传入所有传给派生类的参数。"}, :properties {:color "yellow"}} {:id #uuid "63c94db4-dc37-4254-a8f2-2ea3ff331a26", :page 286, :position {:bounding {:x1 166.90000304579735, :y1 273.6374969482422, :x2 528.2372680604458, :y2 294.43751525878906, :width 894, :height 1116.2742230347349}, :rects ({:x1 166.90000304579735, :y1 273.6374969482422, :x2 528.2372680604458, :y2 294.43751525878906, :width 894, :height 1116.2742230347349} {:x1 368.6874938905239, :y1 276.83750915527344, :x2 528.2372680604458, :y2 292.33750915527344, :width 894, :height 1116.2742230347349}), :page 286}, :content {:text "在类构造函数中，不能在调用 super()之前引用 this"}, :properties {:color "yellow"}} {:id #uuid "63c94dbb-5caa-4f8e-be39-c77e0a2eea65", :page 286, :position {:bounding {:x1 0, :y1 480.4499969482422, :x2 810.742211908102, :y2 530.4000091552734, :width 894, :height 1116.2742230347349}, :rects ({:x1 166.90000304579735, :y1 480.4499969482422, :x2 810.742211908102, :y2 501.24998474121094, :width 894, :height 1116.2742230347349} {:x1 585.9749999940395, :y1 483.65000915527344, :x2 810.742211908102, :y2 499.15000915527344, :width 894, :height 1116.2742230347349} {:x1 166.90000304579735, :y1 503.6000213623047, :x2 228.95220336318016, :y2 524.4000091552734, :width 894, :height 1116.2742230347349} {:x1 0, :y1 508.80003356933594, :x2 0, :y2 530.4000091552734, :width 894, :height 1116.2742230347349}), :page 286}, :content {:text "如果在派生类中显式定义了构造函数，则要么必须在其中调用 super()，要么必须在其中返回一个对象"}, :properties {:color "yellow"}} {:id #uuid "63c94e03-3251-4b15-844a-5798494a0efd", :page 288, :position {:bounding {:x1 0, :y1 860.8000183105469, :x2 810.7690063416958, :y2 1026.0750427246094, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 860.8000183105469, :x2 0, :y2 882.3999938964844, :width 894, :height 1116.2742230347349} {:x1 146.98749694228172, :y1 982.1375427246094, :x2 810.7690063416958, :y2 1002.9375305175781, :width 894, :height 1116.2742230347349} {:x1 562.3374877870083, :y1 985.3374938964844, :x2 810.7690063416958, :y2 1000.8374938964844, :width 894, :height 1116.2742230347349} {:x1 115.91249999403954, :y1 1005.2749938964844, :x2 177.94344481825829, :y2 1026.0750427246094, :width 894, :height 1116.2742230347349}), :page 288}, :content {:text "混入模式可以通过在一个表达式中连缀多个混入元素来实现，这个表达式最终会解析为一个可以被继承的类"}, :properties {:color "yellow"}} {:id #uuid "63c94e28-816a-4315-a1d8-87bf248cf22d", :page 289, :position {:bounding {:x1 0, :y1 28.800003051757812, :x2 758.1009307801723, :y2 192.46250915527344, :width 894, :height 1116.2742230347349}, :rects ({:x1 0, :y1 28.800003051757812, :x2 0, :y2 50.40000915527344, :width 894, :height 1116.2742230347349} {:x1 114.52500304579735, :y1 148.5124969482422, :x2 758.1009307801723, :y2 169.31251525878906, :width 894, :height 1116.2742230347349} {:x1 83.44999846816063, :y1 171.6625213623047, :x2 673.2324081361294, :y2 192.46250915527344, :width 894, :height 1116.2742230347349}), :page 289}, :content {:text "一个策略是定义一组“可嵌套”的函数，每个函数分别接收一个超类作为参数，而将混入类定义为这个参数的子类，并返回这个类。这些组合函数可以连缀调用，最终组合成超类表达式"}, :properties {:color "yellow"}} {:id #uuid "63ce3b14-0ba4-4a8d-9cf8-b5d0a8877c92", :page 291, :position {:bounding {:x1 285.45436400175095, :y1 715.5874938964844, :x2 440.40028685331345, :y2 733.9875030517578, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 285.45436400175095, :y1 715.5874938964844, :x2 440.40028685331345, :y2 733.9875030517578, :width 897.9999999999999, :height 1121.26873857404}), :page 291}, :content {:text "代理是目标对象的抽象"}, :properties {:color "yellow"}} {:id #uuid "63ce3b1d-c37a-4e88-b47e-74ebc79600c7", :page 291, :position {:bounding {:x1 138.77499693632126, :y1 669.3249969482422, :x2 230.65715330839157, :y2 696.5250091552734, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 138.77499693632126, :y1 669.3249969482422, :x2 230.65715330839157, :y2 696.5250091552734, :width 897.9999999999999, :height 1121.26873857404}), :page 291}, :content {:text "代理基础"}, :properties {:color "green"}} {:id #uuid "63ce3b72-33f0-47f5-9227-8e4286d27b15", :page 291, :position {:bounding {:x1 0, :y1 286.40001678466797, :x2 789.5147582888603, :y2 780.4875183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 286.40001678466797, :x2 0, :y2 305.6000175476074, :width 897.9999999999999, :height 1121.26873857404} {:x1 419.09999388456345, :y1 738.8375244140625, :x2 789.5147582888603, :y2 757.2375183105469, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.83750456571579, :y1 762.0875244140625, :x2 317.6348678469658, :y2 780.4875183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 291}, :content {:text "目标对象既可以直接被操作，也可以通过代理来操作。但直接操作会绕过代理施予的行为"}, :properties {:color "yellow"}} {:id #uuid "63ce3c12-b015-41f0-b063-83853c2f88dd", :page 291, :position {:bounding {:x1 128.7863342165947, :y1 876.4374923706055, :x2 245.83842772245407, :y2 900.9499969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.3500091433525, :y1 876.4374923706055, :x2 245.83842772245407, :y2 899.6374969482422, :width 897.9999999999999, :height 1121.26873857404} {:x1 128.7863342165947, :y1 877.7499923706055, :x2 128.78984373807907, :y2 900.9499969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 291}, :content {:text "创建空代理"}, :properties {:color "green"}} {:id #uuid "63ce3c2d-1932-4e69-81d6-466dd3ac82d3", :page 291, :position {:bounding {:x1 115.03750151395798, :y1 986.6749877929688, :x2 360.8210327029228, :y2 1005.0749969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 115.03750151395798, :y1 986.6749877929688, :x2 360.8210327029228, :y2 1005.0749969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 291}, :content {:text "代理是使用 Proxy 构造函数创建的"}, :properties {:color "yellow"}} {:id #uuid "63ce3c37-fcb0-4cac-aedf-17ee5ceba495", :page 291, :position {:bounding {:x1 469.9669982790947, :y1 986.6624908447266, :x2 750.6550170779228, :y2 1005.0624847412109, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 469.9669982790947, :y1 986.6624908447266, :x2 750.6550170779228, :y2 1005.0624847412109, :width 897.9999999999999, :height 1121.26873857404}), :page 291}, :content {:text "接收两个参数：目标对象和处理程序对象"}, :properties {:color "yellow"}} {:id #uuid "63ce3c71-ac03-45a5-912a-24d5beb0ad55", :page 292, :position {:bounding {:x1 172.6625091433525, :y1 641.3750152587891, :x2 376.25468748807907, :y2 657.3750152587891, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 172.6625091433525, :y1 641.3750152587891, :x2 272.79249876737595, :y2 657.3750152587891, :width 897.9999999999999, :height 1121.26873857404} {:x1 290.84999388456345, :y1 641.3750152587891, :x2 376.25468748807907, :y2 657.3750152587891, :width 897.9999999999999, :height 1121.26873857404}), :page 292}, :content {:text "Proxy.prototype 是 undefined"}, :properties {:color "yellow"}} {:id #uuid "63ce3c78-56d1-45c1-9852-e5a9297e766c", :page 292, :position {:bounding {:x1 172.6625091433525, :y1 656.6375274658203, :x2 374.42363280057907, :y2 672.6374969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 172.6625091433525, :y1 656.6375274658203, :x2 322.08549803495407, :y2 672.6374969482422, :width 897.9999999999999, :height 1121.26873857404} {:x1 333.59999388456345, :y1 656.6375274658203, :x2 374.42363280057907, :y2 672.6374969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 292}, :content {:text "因此不能使用 instanceof 操作符"}, :properties {:color "yellow"}} {:id #uuid "63ce3c8f-1d39-4484-82de-db2696e3c399", :page 292, :position {:bounding {:x1 172.6750060915947, :y1 748.2125091552734, :x2 356.93373411893845, :y2 764.2125091552734, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 172.6750060915947, :y1 748.2125091552734, :x2 356.93373411893845, :y2 764.2125091552734, :width 897.9999999999999, :height 1121.26873857404}), :page 292}, :content {:text "严格相等可以用来区分代理和目标"}, :properties {:color "yellow"}} {:id #uuid "63ce3ca3-2e1f-4e09-9892-7068262c31c3", :page 292, :position {:bounding {:x1 179.94999998807907, :y1 803.6500244140625, :x2 278.4384338259697, :y2 826.8500366210938, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 803.6500244140625, :x2 278.4384338259697, :y2 826.8500366210938, :width 897.9999999999999, :height 1121.26873857404}), :page 292}, :content {:text "定义捕获器"}, :properties {:color "green"}} {:id #uuid "63ce3cb8-d599-4635-987f-f29bc95fc1a3", :page 292, :position {:bounding {:x1 0, :y1 782.4000244140625, :x2 804.8006469607353, :y2 885.7750244140625, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 782.4000244140625, :x2 0, :y2 801.6000366210938, :width 897.9999999999999, :height 1121.26873857404} {:x1 474.24904173612595, :y1 844.0375366210938, :x2 804.8006469607353, :y2 862.4375305175781, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.41250151395798, :y1 867.3750305175781, :x2 169.29684752225876, :y2 885.7750244140625, :width 897.9999999999999, :height 1121.26873857404}), :page 292}, :content {:text "捕获器就是在处理程序对象中定义的“基本操作的拦截器”"}, :properties {:color "yellow"}} {:id #uuid "63ce3cd9-191c-46f4-a220-0418b0797757", :page 292, :position {:bounding {:x1 0, :y1 814.4000244140625, :x2 814.3387328982353, :y2 932.2875366210938, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 814.4000244140625, :x2 0, :y2 833.6000366210938, :width 897.9999999999999, :height 1121.26873857404} {:x1 302.5153686404228, :y1 890.6250305175781, :x2 814.3387328982353, :y2 909.0250244140625, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.41250151395798, :y1 913.8875122070312, :x2 506.2507583498955, :y2 932.2875366210938, :width 897.9999999999999, :height 1121.26873857404}), :page 292}, :content {:text "每次在代理对象上调用这些基本操作时，代理可以在这些操作传播到目标对象之前先调用捕获器函数，从而拦截并修改相应的行为。"}, :properties {:color "yellow"}} {:id #uuid "63ce3d0e-02ed-436c-a9ff-ce7f994bf54a", :page 293, :position {:bounding {:x1 0, :y1 238.40000915527344, :x2 781.8935424685478, :y2 462.32501220703125, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 238.40000915527344, :x2 0, :y2 257.6000099182129, :width 897.9999999999999, :height 1121.26873857404} {:x1 159.27499693632126, :y1 419.52500915527344, :x2 269.28752440214157, :y2 437.9250183105469, :width 897.9999999999999, :height 1121.26873857404} {:x1 429.66249388456345, :y1 419.52500915527344, :x2 667.7623779177666, :y2 437.9250183105469, :width 897.9999999999999, :height 1121.26873857404} {:x1 292.34999388456345, :y1 420.6750183105469, :x2 408.07951658964157, :y2 439.0750274658203, :width 897.9999999999999, :height 1121.26873857404} {:x1 719.5375244021416, :y1 420.6750183105469, :x2 781.8935424685478, :y2 439.07501220703125, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.82499998807907, :y1 443.9250183105469, :x2 214.1244689822197, :y2 462.32501220703125, :width 897.9999999999999, :height 1121.26873857404} {:x1 225.6625091433525, :y1 443.9250183105469, :x2 334.77296751737595, :y2 462.32501220703125, :width 897.9999999999999, :height 1121.26873857404}), :page 293}, :content {:text "proxy[property]、proxy.property 或 Object.create(proxy)[property]等操作都会触发基本的 get()操作以获取属性"}, :properties {:color "yellow"}} {:id #uuid "63ce3d2d-fbbf-4ba8-afd8-002840790945", :page 293, :position {:bounding {:x1 147.3500091433525, :y1 867.3750305175781, :x2 337.04933470487595, :y2 890.5750122070312, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.3500091433525, :y1 867.3750305175781, :x2 337.04933470487595, :y2 890.5750122070312, :width 897.9999999999999, :height 1121.26873857404}), :page 293}, :content {:text "捕获器参数和反射 API"}, :properties {:color "green"}} {:id #uuid "63ce3d8e-a369-4be9-8b29-9a6771cd2f14", :page 294, :position {:bounding {:x1 180.5500060915947, :y1 447.6624946594238, :x2 366.73207396268845, :y2 463.6624946594238, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 180.5500060915947, :y1 447.6624946594238, :x2 366.73207396268845, :y2 463.6624946594238, :width 897.9999999999999, :height 1121.26873857404}), :page 294}, :content {:text "return trapTarget[property];"}, :properties {:color "yellow"}} {:id #uuid "63ce3d9c-9608-4b9a-95c8-3920eb0a646f", :page 294, :position {:bounding {:x1 0, :y1 603.4000091552734, :x2 814.2453491091728, :y2 645.0500030517578, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 504.09047240018845, :y1 603.4000091552734, :x2 814.2453491091728, :y2 621.8000030517578, :width 897.9999999999999, :height 1121.26873857404} {:x1 0, :y1 622.4000091552734, :x2 0, :y2 641.6000213623047, :width 897.9999999999999, :height 1121.26873857404} {:x1 275.9875060915947, :y1 625.4875030517578, :x2 623.4445068240166, :y2 643.8874969482422, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.41250151395798, :y1 626.6500091552734, :x2 263.81743162870407, :y2 645.0500030517578, :width 897.9999999999999, :height 1121.26873857404}), :page 294}, :content {:text "开发者并不需要手动重建原始行为，而是可以通过调用全局 Reflect 对象上（封装了原始行为）的同名方法来轻松重建"}, :properties {:color "yellow"}} {:id #uuid "63ce3da9-0c6a-4345-b0ad-1acfb37456a5", :page 294, :position {:bounding {:x1 147.6625091433525, :y1 649.8999862670898, :x2 642.9887573122978, :y2 668.2999877929688, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.6625091433525, :y1 649.8999862670898, :x2 642.9887573122978, :y2 668.2999877929688, :width 897.9999999999999, :height 1121.26873857404}), :page 294}, :content {:text "处理程序对象中所有可以捕获的方法都有对应的反射（Reflect）API 方法"}, :properties {:color "yellow"}} {:id #uuid "63ce3dd2-0e0e-4bf2-860e-a27577556908", :page 294, :position {:bounding {:x1 410.42714232206345, :y1 673.1500091552734, :x2 611.5871459841728, :y2 691.5500183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 410.42714232206345, :y1 673.1500091552734, :x2 611.5871459841728, :y2 691.5500183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 294}, :content {:text "具有与被拦截方法相同的行为"}, :properties {:color "yellow"}} {:id #uuid "63ce3e02-61f9-4ba1-b9d6-94caca25e7b0", :page 295, :position {:bounding {:x1 116.42499846220016, :y1 371.52501678466797, :x2 431.73417967557907, :y2 387.52501678466797, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 116.42499846220016, :y1 371.52501678466797, :x2 339.63627928495407, :y2 387.52501678466797, :width 897.9999999999999, :height 1121.26873857404} {:x1 360.68751829862595, :y1 371.52501678466797, :x2 413.50172728300095, :y2 387.52501678466797, :width 897.9999999999999, :height 1121.26873857404} {:x1 423.7375060915947, :y1 371.52501678466797, :x2 431.73417967557907, :y2 387.52501678466797, :width 897.9999999999999, :height 1121.26873857404}), :page 295}, :content {:text "const proxy = new Proxy(target, Reflect);"}, :properties {:color "yellow"}} {:id #uuid "63ce3e1a-de10-434a-946e-c746bf79ac45", :page 295, :position {:bounding {:x1 115.03750151395798, :y1 445.1000061035156, :x2 733.4382812380791, :y2 463.50000762939453, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 115.03750151395798, :y1 445.1000061035156, :x2 733.4382812380791, :y2 463.50000762939453, :width 897.9999999999999, :height 1121.26873857404}), :page 295}, :content {:text "反射 API 为开发者准备好了样板代码，在此基础上开发者可以用最少的代码修改捕获的方法"}, :properties {:color "yellow"}} {:id #uuid "63ce3e27-c4b7-4d0e-8783-7b52fe0b5f0c", :page 295, :position {:bounding {:x1 128.7863342165947, :y1 876.5374908447266, :x2 265.53862303495407, :y2 901.0499877929688, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.3500091433525, :y1 876.5374908447266, :x2 265.53862303495407, :y2 899.7374877929688, :width 897.9999999999999, :height 1121.26873857404} {:x1 128.7863342165947, :y1 877.8499908447266, :x2 128.78984373807907, :y2 901.0499877929688, :width 897.9999999999999, :height 1121.26873857404}), :page 295}, :content {:text "捕获器不变式"}, :properties {:color "green"}} {:id #uuid "63ce3e36-e6fa-4469-a7bb-ee960efacb6b", :page 295, :position {:bounding {:x1 0, :y1 574.3999862670898, :x2 781.9841186404228, :y2 981.8250122070312, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 574.3999862670898, :x2 0, :y2 593.5999870300293, :width 897.9999999999999, :height 1121.26873857404} {:x1 0, :y1 590.3999862670898, :x2 0, :y2 609.5999870300293, :width 897.9999999999999, :height 1121.26873857404} {:x1 750.8154785037041, :y1 916.9249877929688, :x2 781.9841186404228, :y2 935.3249816894531, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.82499998807907, :y1 940.1749877929688, :x2 770.2105590701103, :y2 958.5749816894531, :width 897.9999999999999, :height 1121.26873857404} {:x1 76.03750151395798, :y1 963.4249877929688, :x2 157.45682066679, :y2 981.8250122070312, :width 897.9999999999999, :height 1121.26873857404} {:x1 175.13749998807907, :y1 963.4249877929688, :x2 198.608431994915, :y2 981.8249816894531, :width 897.9999999999999, :height 1121.26873857404}), :page 295}, :content {:text "每个捕获的方法都知道目标对象上下文、捕获函数签名，而捕获处理程序的行为必须遵循“捕获器不变式”（trap invariant）。"}, :properties {:color "yellow"}} {:id #uuid "63ce3e73-7e12-4419-a90c-5278d7eb4cdc", :page 296, :position {:bounding {:x1 179.94999998807907, :y1 393.0875015258789, :x2 278.4384338259697, :y2 416.28748321533203, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 393.0875015258789, :x2 278.4384338259697, :y2 416.28748321533203, :width 897.9999999999999, :height 1121.26873857404}), :page 296}, :content {:text "可撤销代理"}, :properties {:color "green"}} {:id #uuid "63ce3e8f-7d03-4ec6-a38f-bb1d184425df", :page 296, :position {:bounding {:x1 264.56251829862595, :y1 476.65000915527344, :x2 720.8139526247978, :y2 496.21250915527344, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 264.56251829862595, :y1 476.65000915527344, :x2 342.85209959745407, :y2 495.0500030517578, :width 897.9999999999999, :height 1121.26873857404} {:x1 362.18751829862595, :y1 477.81251525878906, :x2 720.8139526247978, :y2 496.21250915527344, :width 897.9999999999999, :height 1121.26873857404}), :page 296}, :content {:text "revocable()方法，这个方法支持撤销代理对象与目标对象的关联"}, :properties {:color "yellow"}} {:id #uuid "63ce3e9d-4d49-4126-91e3-9a3992911785", :page 296, :position {:bounding {:x1 288.74907225370407, :y1 501.15000915527344, :x2 704.6993286013603, :y2 519.5500030517578, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 288.74907225370407, :y1 501.15000915527344, :x2 423.4088928103447, :y2 519.5500030517578, :width 897.9999999999999, :height 1121.26873857404} {:x1 438.32499998807907, :y1 501.15000915527344, :x2 704.6993286013603, :y2 519.5500030517578, :width 897.9999999999999, :height 1121.26873857404}), :page 296}, :content {:text "撤销函数（revoke()）是幂等的，调用多少次的结果都一样"}, :properties {:color "yellow"}} {:id #uuid "63ce3f06-3470-4ca5-a9d7-5321fa4ad8b3", :page 296, :position {:bounding {:x1 179.94999998807907, :y1 853.4875183105469, :x2 290.8493224978447, :y2 876.6875305175781, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 853.4875183105469, :x2 290.8493224978447, :y2 876.6875305175781, :width 897.9999999999999, :height 1121.26873857404}), :page 296}, :content {:text "实用反射 API"}, :properties {:color "green"}} {:id #uuid "63ce3f16-e000-4a2a-9335-d612185928eb", :page 296, :position {:bounding {:x1 194.3219329714775, :y1 1011.4875183105469, :x2 735.4271880984306, :y2 1029.8875122070312, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 194.3219329714775, :y1 1011.4875183105469, :x2 735.4271880984306, :y2 1029.8875122070312, :width 897.9999999999999, :height 1121.26873857404}), :page 296}, :content {:text "Object 上的方法适用于通用程序，而反射方法适用于细粒度的对象控制与操作"}, :properties {:color "yellow"}} {:id #uuid "63ce3f68-7b09-4865-a52e-0f5091012788", :page 297, :position {:bounding {:x1 115.03750151395798, :y1 586.2624893188477, :x2 348.8582412600517, :y2 604.6625137329102, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 115.03750151395798, :y1 586.2624893188477, :x2 348.8582412600517, :y2 604.6625137329102, :width 897.9999999999999, :height 1121.26873857404}), :page 297}, :content {:text "以下反射方法都会提供状态标记："}, :properties {:color "yellow"}} {:id #uuid "63ce3f84-304d-4d4c-bef4-c6f68e8994f7", :page 297, :position {:bounding {:x1 132.37500303983688, :y1 713.8500137329102, :x2 283.99904173612595, :y2 732.2500381469727, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 132.37500303983688, :y1 713.8500137329102, :x2 283.99904173612595, :y2 732.2500381469727, :width 897.9999999999999, :height 1121.26873857404}), :page 297}, :content {:text "用一等函数替代操作符"}, :properties {:color "yellow"}} {:id #uuid "63ce3f90-592d-4fb4-b571-d501e628eced", :page 297, :position {:bounding {:x1 132.37500303983688, :y1 880.2374877929688, :x2 238.50760191679, :y2 898.6374969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 132.37500303983688, :y1 880.2374877929688, :x2 238.50760191679, :y2 898.6374969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 297}, :content {:text "安全地应用函数"}, :properties {:color "yellow"}} {:id #uuid "63ce3fbf-1fa0-4c67-bc57-bdb98dac101c", :page 298, :position {:bounding {:x1 179.94999998807907, :y1 125.76249694824219, :x2 317.82631224393845, :y2 148.96249389648438, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 125.76249694824219, :x2 317.82631224393845, :y2 148.96249389648438, :width 897.9999999999999, :height 1121.26873857404}), :page 298}, :content {:text "代理另一个代理"}, :properties {:color "green"}} {:id #uuid "63ce3fda-bdec-42f8-af4b-a4f490865d36", :page 298, :position {:bounding {:x1 0, :y1 166.04999995231628, :x2 814.4528686404228, :y2 273.60001826286316, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 505.41289061307907, :y1 166.04999995231628, :x2 814.4528686404228, :y2 184.45000910758972, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.41250151395798, :y1 189.4000060558319, :x2 428.2090408205986, :y2 207.79999995231628, :width 897.9999999999999, :height 1121.26873857404} {:x1 0, :y1 254.4000060558319, :x2 0, :y2 273.60001826286316, :width 897.9999999999999, :height 1121.26873857404}), :page 298}, :content {:text "创建一个代理，通过它去代理另一个代理。这样就可以在一个目标对象之上构建多层拦截网"}, :properties {:color "yellow"}} {:id #uuid "63ce405d-4ee3-4cba-bee8-46c2e77a39d4", :page 299, :position {:bounding {:x1 177.3000060915947, :y1 476.82501220703125, :x2 532.3447143435478, :y2 495.22503662109375, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 177.3000060915947, :y1 476.82501220703125, :x2 532.3447143435478, :y2 495.22503662109375, :width 897.9999999999999, :height 1121.26873857404}), :page 299}, :content {:text " User 实例一开始使用目标对象作为 WeakMap 的键"}, :properties {:color "yellow"}} {:id #uuid "63ce4077-b423-43de-a709-7a53433cdb2a", :page 299, :position {:bounding {:x1 395.64381712675095, :y1 500.07501220703125, :x2 672.6435424685478, :y2 518.4750366210938, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 395.64381712675095, :y1 500.07501220703125, :x2 672.6435424685478, :y2 518.4750366210938, :width 897.9999999999999, :height 1121.26873857404}), :page 299}, :content {:text "把代理 User 实例改为代理 User 类本身"}, :properties {:color "yellow"}} {:id #uuid "63ce40a6-36fc-46f6-9a7b-dda580811a30", :page 299, :position {:bounding {:x1 0, :y1 398.40000915527344, :x2 781.8966552615166, :y2 674.7000274658203, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 398.40000915527344, :x2 0, :y2 417.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 703.9875366091728, :y1 633.0500030517578, :x2 781.8966552615166, :y2 651.4500274658203, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.82499998807907, :y1 656.3000030517578, :x2 582.7845336794853, :y2 674.7000274658203, :width 897.9999999999999, :height 1121.26873857404}), :page 299}, :content {:text "内置类型可能会依赖代理无法控制的机制，结果导致在代理上调用某些方法会出错。"}, :properties {:color "yellow"}} {:id #uuid "63ce40b0-c17f-4aed-8693-bcb7a54110a7", :page 299, :position {:bounding {:x1 138.77499693632126, :y1 870.8625183105469, :x2 368.4157287478447, :y2 898.0625305175781, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 138.77499693632126, :y1 870.8625183105469, :x2 368.4157287478447, :y2 898.0625305175781, :width 897.9999999999999, :height 1121.26873857404}), :page 299}, :content {:text "代理捕获器与反射方法"}, :properties {:color "green"}} {:id #uuid "63ce40bd-8df4-466f-966f-526b6ae6f0cf", :page 298, :position {:bounding {:x1 179.94999998807907, :y1 580.8374938964844, :x2 337.52650755643845, :y2 604.0375061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 580.8374938964844, :x2 337.52650755643845, :y2 604.0375061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 298}, :content {:text "代理的问题与不足"}, :properties {:color "green"}} {:id #uuid "63ce40f3-9d0f-41d3-aba3-371a7b98faa1", :page 299, :position {:bounding {:x1 0, :y1 558.3999938964844, :x2 780.2543823122978, :y2 958.7750091552734, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 558.3999938964844, :x2 0, :y2 577.5999908447266, :width 897.9999999999999, :height 1121.26873857404} {:x1 115.03750151395798, :y1 917.125, :x2 780.2543823122978, :y2 935.5250091552734, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.82499998807907, :y1 940.375, :x2 192.95880430936813, :y2 958.7750091552734, :width 897.9999999999999, :height 1121.26873857404}), :page 299}, :content {:text "代理可以捕获 13 种不同的基本操作。这些操作有各自不同的反射 API 方法、参数、关联 ECMAScript操作和不变式。"}, :properties {:color "yellow"}} {:id #uuid "63ce4144-1c63-445b-953a-0a89ba3d0b76", :page 300, :position {:bounding {:x1 179.94999998807907, :y1 124.86250305175781, :x2 225.35966795682907, :y2 147.2624969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 124.86250305175781, :x2 225.35966795682907, :y2 147.2624969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 300}, :content {:text "get()"}, :properties {:color "green"}} {:id #uuid "63ce414d-6b18-4c36-8f39-e7343cd82c3e", :page 300, :position {:bounding {:x1 147.6625091433525, :y1 645.6749877929688, :x2 822.2872192263603, :y2 665.2374877929688, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 314.41249388456345, :y1 645.6749877929688, :x2 746.7499267458916, :y2 664.0750122070312, :width 897.9999999999999, :height 1121.26873857404} {:x1 772.6374999880791, :y1 645.6749877929688, :x2 822.2872192263603, :y2 664.0750122070312, :width 897.9999999999999, :height 1121.26873857404} {:x1 147.6625091433525, :y1 646.8374938964844, :x2 288.52492064237595, :y2 665.2374877929688, :width 897.9999999999999, :height 1121.26873857404}), :page 300}, :content {:text "如果 target.property 不可写且不可配置，则处理程序返回的值必须与 target.property 匹配。"}, :properties {:color "yellow"}} {:id #uuid "63ce4153-80ba-4ab0-abd8-56a31e687c07", :page 300, :position {:bounding {:x1 145.6625091433525, :y1 668.9249877929688, :x2 822.7750121951103, :y2 688.4875183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 297.76249998807907, :y1 668.9249877929688, :x2 414.00184935331345, :y2 687.3250122070312, :width 897.9999999999999, :height 1121.26873857404} {:x1 145.6625091433525, :y1 670.0874938964844, :x2 274.53480833768845, :y2 688.4874877929688, :width 897.9999999999999, :height 1121.26873857404} {:x1 429.16249388456345, :y1 670.0874938964844, :x2 822.7750121951103, :y2 688.4875183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 300}, :content {:text "如果 target.property 不可配置且[[Get]]特性为 undefined，处理程序的返回值也必须是 undefined。"}, :properties {:color "yellow"}} {:id #uuid "63ce415e-b96d-4a62-9cb3-117350a55116", :page 300, :position {:bounding {:x1 179.94999998807907, :y1 705.8250122070312, :x2 223.47197264432907, :y2 728.2250061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 705.8250122070312, :x2 223.47197264432907, :y2 728.2250061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 300}, :content {:text "set()"}, :properties {:color "green"}} {:id #uuid "63ce418a-ae9f-4255-ad78-92ae36636e2a", :page 301, :position {:bounding {:x1 127.6750060915947, :y1 451.9875030517578, :x2 195.71107786893845, :y2 475.8249969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.3500091433525, :y1 451.9875030517578, :x2 195.71107786893845, :y2 474.3874969482422, :width 897.9999999999999, :height 1121.26873857404} {:x1 127.6750060915947, :y1 452.62501525878906, :x2 128.78984373807907, :y2 475.8249969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 301}, :content {:text " has()"}, :properties {:color "green"}} {:id #uuid "63ce419b-a462-4ab5-a20a-57542392fd9f", :page 301, :position {:bounding {:x1 113.36249846220016, :y1 721.3249969482422, :x2 656.6470367312431, :y2 739.7250213623047, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 113.36249846220016, :y1 721.3249969482422, :x2 656.6470367312431, :y2 739.7250213623047, :width 897.9999999999999, :height 1121.26873857404}), :page 301}, :content {:text "has()必须返回布尔值，表示属性是否存在。返回非布尔值会被转型为布尔值。"}, :properties {:color "yellow"}} {:id #uuid "63ce41c5-b272-470c-92a6-7789815f4090", :page 302, :position {:bounding {:x1 179.94999998807907, :y1 124.9625244140625, :x2 339.5288879275322, :y2 147.36248779296875, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 124.9625244140625, :x2 339.5288879275322, :y2 147.36248779296875, :width 897.9999999999999, :height 1121.26873857404}), :page 302}, :content {:text "defineProperty()"}, :properties {:color "green"}} {:id #uuid "63ce421d-bd57-4845-974d-dadd661495f7", :page 302, :position {:bounding {:x1 179.94999998807907, :y1 728.2875213623047, :x2 454.9556762576103, :y2 750.6874847412109, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 728.2875213623047, :x2 454.9556762576103, :y2 750.6874847412109, :width 897.9999999999999, :height 1121.26873857404}), :page 302}, :content {:text "getOwnPropertyDescriptor()"}, :properties {:color "green"}} {:id #uuid "63ce4285-f83a-4f94-b6b8-ad907ae5f2bb", :page 303, :position {:bounding {:x1 147.3500091433525, :y1 486.1750183105469, :x2 306.09010618925095, :y2 508.5750198364258, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.3500091433525, :y1 486.1750183105469, :x2 306.09010618925095, :y2 508.5750198364258, :width 897.9999999999999, :height 1121.26873857404}), :page 303}, :content {:text "deleteProperty()"}, :properties {:color "green"}} {:id #uuid "63ce428d-26fe-4813-8dbb-1e7922fb5a22", :page 303, :position {:bounding {:x1 113.36249846220016, :y1 523.337516784668, :x2 518.5380126833916, :y2 542.9000244140625, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 113.36249846220016, :y1 523.337516784668, :x2 227.9991027712822, :y2 541.7375183105469, :width 897.9999999999999, :height 1121.26873857404} {:x1 255.69999998807907, :y1 524.5000228881836, :x2 518.5380126833916, :y2 542.9000244140625, :width 897.9999999999999, :height 1121.26873857404}), :page 303}, :content {:text "deleteProperty()捕获器会在 delete 操作符中被调用"}, :properties {:color "yellow"}} {:id #uuid "63ce4298-629c-4564-8f11-aaf6ca4edf72", :page 304, :position {:bounding {:x1 161.38632506132126, :y1 124.86248779296875, :x2 280.1330444216728, :y2 148.69998168945312, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 124.86248779296875, :x2 280.1330444216728, :y2 147.26248168945312, :width 897.9999999999999, :height 1121.26873857404} {:x1 161.38632506132126, :y1 125.5, :x2 161.3898498415947, :y2 148.69998168945312, :width 897.9999999999999, :height 1121.26873857404}), :page 304}, :content {:text "ownKeys()"}, :properties {:color "green"}} {:id #uuid "63ce42a5-582f-4f3e-9d81-62e7424c3e77", :page 304, :position {:bounding {:x1 145.9750091433525, :y1 159.875, :x2 579.9179565310478, :y2 179.42498779296875, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 145.9750091433525, :y1 159.875, :x2 400.0091125369072, :y2 178.27499389648438, :width 897.9999999999999, :height 1121.26873857404} {:x1 424.03749388456345, :y1 161.02499389648438, :x2 579.9179565310478, :y2 179.42498779296875, :width 897.9999999999999, :height 1121.26873857404}), :page 304}, :content {:text "ownKeys()捕获器会在 Object.keys()及类似方法中被调用。"}, :properties {:color "yellow"}} {:id #uuid "63ce42c3-ac31-41af-923e-a76f58ed5468", :page 304, :position {:bounding {:x1 179.94999998807907, :y1 680.4125061035156, :x2 343.1985656619072, :y2 702.8125, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 680.4125061035156, :x2 343.1985656619072, :y2 702.8125, :width 897.9999999999999, :height 1121.26873857404}), :page 304}, :content {:text "getPrototypeOf()"}, :properties {:color "green"}} {:id #uuid "63ce42ff-949a-4365-ad48-aa2ce53e1caa", :page 305, :position {:bounding {:x1 147.3500091433525, :y1 340.68749237060547, :x2 308.71132200956345, :y2 363.08751678466797, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.3500091433525, :y1 340.68749237060547, :x2 308.71132200956345, :y2 363.08751678466797, :width 897.9999999999999, :height 1121.26873857404}), :page 305}, :content {:text "setPrototypeOf()"}, :properties {:color "green"}} {:id #uuid "63ce430b-506d-4b2e-9c6b-498b470a2879", :page 305, :position {:bounding {:x1 158.2875091433525, :y1 872.2000122070312, :x2 289.2747680544853, :y2 894.6000061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 158.2875091433525, :y1 872.2000122070312, :x2 289.2747680544853, :y2 894.6000061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 305}, :content {:text "isExtensible()"}, :properties {:color "green"}} {:id #uuid "63ce4311-2b48-4fba-91af-2064f5237a1d", :page 306, :position {:bounding {:x1 189.4125091433525, :y1 472.87501525878906, :x2 384.24708861112595, :y2 495.27503967285156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 189.4125091433525, :y1 472.87501525878906, :x2 384.24708861112595, :y2 495.27503967285156, :width 897.9999999999999, :height 1121.26873857404}), :page 306}, :content {:text "preventExtensions()"}, :properties {:color "green"}} {:id #uuid "63ce4339-9afb-486e-87d5-6f91bb8a8792", :page 306, :position {:bounding {:x1 190.88749998807907, :y1 979.0625305175781, :x2 257.05556029081345, :y2 1001.4624938964844, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 190.88749998807907, :y1 979.0625305175781, :x2 257.05556029081345, :y2 1001.4624938964844, :width 897.9999999999999, :height 1121.26873857404}), :page 306}, :content {:text "apply()"}, :properties {:color "green"}} {:id #uuid "63ce434a-5116-439a-bb65-5d637e8f5ff0", :page 306, :position {:bounding {:x1 145.9750091433525, :y1 1013.9750366210938, :x2 426.31129759550095, :y2 1033.5250549316406, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 145.9750091433525, :y1 1013.9750366210938, :x2 193.74948424100876, :y2 1032.3750305175781, :width 897.9999999999999, :height 1121.26873857404} {:x1 208.02499693632126, :y1 1015.1250305175781, :x2 426.31129759550095, :y2 1033.5250549316406, :width 897.9999999999999, :height 1121.26873857404}), :page 306}, :content {:text "apply()捕获器会在调用函数时中被调用"}, :properties {:color "yellow"}} {:id #uuid "63ce4354-f220-489e-b90d-94e2a48ee26d", :page 306, :position {:bounding {:x1 145.9750091433525, :y1 756.5, :x2 658.4367553591728, :y2 776.0500183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 145.9750091433525, :y1 756.5, :x2 286.68046873807907, :y2 774.9000244140625, :width 897.9999999999999, :height 1121.26873857404} {:x1 528.0624877810478, :y1 756.5, :x2 658.4367553591728, :y2 774.9000244140625, :width 897.9999999999999, :height 1121.26873857404} {:x1 314.41249388456345, :y1 757.6500244140625, :x2 517.1617309451103, :y2 776.0500183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 306}, :content {:text "preventExtensions()必须返回布尔值，表示 target 是否已经不可扩展"}, :properties {:color "yellow"}} {:id #uuid "63ce4361-540f-4ef3-9af8-a29fb37f2917", :page 306, :position {:bounding {:x1 145.9750091433525, :y1 250.39999389648438, :x2 581.1431762576103, :y2 269.9499816894531, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 145.9750091433525, :y1 250.39999389648438, :x2 240.5681945681572, :y2 268.8000183105469, :width 897.9999999999999, :height 1121.26873857404} {:x1 483.13749998807907, :y1 250.39999389648438, :x2 581.1431762576103, :y2 268.8000183105469, :width 897.9999999999999, :height 1121.26873857404} {:x1 270.0875121951103, :y1 251.55001831054688, :x2 472.26689451932907, :y2 269.9499816894531, :width 897.9999999999999, :height 1121.26873857404}), :page 306}, :content {:text "isExtensible()必须返回布尔值，表示 target 是否可扩展。"}, :properties {:color "yellow"}} {:id #uuid "63ce436f-7740-4a82-b2ba-bc9ec7cf93d3", :page 307, :position {:bounding {:x1 158.2875091433525, :y1 620.0375366210938, :x2 266.2263061404228, :y2 642.4375305175781, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 158.2875091433525, :y1 620.0375366210938, :x2 266.2263061404228, :y2 642.4375305175781, :width 897.9999999999999, :height 1121.26873857404}), :page 307}, :content {:text "construct()"}, :properties {:color "green"}} {:id #uuid "63ce4378-f6d1-4d15-8618-5248bfe27c43", :page 308, :position {:bounding {:x1 149.50424498319626, :y1 239.07501220703125, :x2 263.2571594119072, :y2 267.8000183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 171.37500303983688, :y1 239.07501220703125, :x2 263.2571594119072, :y2 266.2749938964844, :width 897.9999999999999, :height 1121.26873857404} {:x1 149.50424498319626, :y1 240.60000610351562, :x2 149.50726622343063, :y2 267.8000183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 308}, :content {:text "代理模式"}, :properties {:color "green"}} {:id #uuid "63ce438c-ac67-4976-ab85-64b48e88f515", :page 308, :position {:bounding {:x1 179.94999998807907, :y1 321.87500762939453, :x2 298.1386291384697, :y2 345.0750045776367, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 321.87500762939453, :x2 298.1386291384697, :y2 345.0750045776367, :width 897.9999999999999, :height 1121.26873857404}), :page 308}, :content {:text "跟踪属性访问"}, :properties {:color "green"}} {:id #uuid "63ce43a2-652f-4f11-abac-460a8b021e13", :page 308, :position {:bounding {:x1 161.38632506132126, :y1 731.3500061035156, :x2 258.7382385134697, :y2 755.8625183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 731.3500061035156, :x2 258.7382385134697, :y2 754.5500183105469, :width 897.9999999999999, :height 1121.26873857404} {:x1 161.38632506132126, :y1 732.6625061035156, :x2 161.3898498415947, :y2 755.8625183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 308}, :content {:text "隐藏属性"}, :properties {:color "green"}} {:id #uuid "63ce449d-47e2-48a4-bc9b-4e93d564fecf", :page 308, :position {:bounding {:x1 163.23114317655563, :y1 771.7375183105469, :x2 708.9343292117119, :y2 790.1375122070312, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 163.23114317655563, :y1 771.7375183105469, :x2 708.9343292117119, :y2 790.1375122070312, :width 897.9999999999999, :height 1121.26873857404}), :page 308}, :content {:text "理的内部实现对外部代码是不可见的，因此要隐藏目标对象上的属性也轻而易举"}, :properties {:color "yellow"}} {:id #uuid "63ce44a8-68aa-44b8-83e5-bb468941ddb5", :page 309, :position {:bounding {:x1 147.3500091433525, :y1 414.56248474121094, :x2 226.13823240995407, :y2 437.7624969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.3500091433525, :y1 414.56248474121094, :x2 226.13823240995407, :y2 437.7624969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 309}, :content {:text "属性验证"}, :properties {:color "green"}} {:id #uuid "63ce4561-852d-4ba7-879a-68c34871c22a", :page 309, :position {:bounding {:x1 115.03750151395798, :y1 454.95001220703125, :x2 755.8538696169853, :y2 473.3500061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 115.03750151395798, :y1 454.95001220703125, :x2 337.55311888456345, :y2 473.3500061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 350.4625121951103, :y1 454.95001220703125, :x2 755.8538696169853, :y2 473.3500061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 309}, :content {:text "因为所有赋值操作都会触发 set()捕获器，所以可以根据所赋的值决定是允许还是拒绝赋值："}, :properties {:color "yellow"}} {:id #uuid "63ce4569-9657-4186-b3d8-cc72f8921cce", :page 309, :position {:bounding {:x1 147.3500091433525, :y1 785.1250305175781, :x2 364.01454466581345, :y2 808.3250122070312, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.3500091433525, :y1 785.1250305175781, :x2 364.01454466581345, :y2 808.3250122070312, :width 897.9999999999999, :height 1121.26873857404}), :page 309}, :content {:text "函数与构造函数参数验证"}, :properties {:color "green"}} {:id #uuid "63ce463a-9535-4a84-b395-b6ecf477696c", :page 310, :position {:bounding {:x1 161.38632506132126, :y1 591.0750122070312, :x2 376.91435545682907, :y2 615.5875244140625, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 179.94999998807907, :y1 591.0750122070312, :x2 376.91435545682907, :y2 614.2750244140625, :width 897.9999999999999, :height 1121.26873857404} {:x1 161.38632506132126, :y1 592.3875122070312, :x2 161.3898498415947, :y2 615.5875244140625, :width 897.9999999999999, :height 1121.26873857404}), :page 310}, :content {:text "数据绑定与可观察对象"}, :properties {:color "green"}} {:id #uuid "63ce4649-dbb4-4220-86c3-b675819d620d", :page 310, :position {:bounding {:x1 210.00195616483688, :y1 239.53749084472656, :x2 490.6044952273369, :y2 257.93748474121094, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 210.00195616483688, :y1 239.53749084472656, :x2 490.6044952273369, :y2 257.93748474121094, :width 897.9999999999999, :height 1121.26873857404}), :page 310}, :content {:text "可以要求实例化时必须给构造函数传参："}, :properties {:color "yellow"}} {:id #uuid "63ce464f-952c-4183-9d5a-094ceaa109b6", :page 309, :position {:bounding {:x1 0, :y1 558.40003657341, :x2 781.7390624880791, :y2 867.1625366210938, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 558.40003657341, :x2 0, :y2 577.6000373363495, :width 897.9999999999999, :height 1121.26873857404} {:x1 642.1884643435478, :y1 825.5125427246094, :x2 781.7390624880791, :y2 843.9125366210938, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.82499998807907, :y1 848.7625427246094, :x2 146.1623107790947, :y2 867.1625366210938, :width 897.9999999999999, :height 1121.26873857404}), :page 309}, :content {:text "以让函数只接收某种类型的值"}, :properties {:color "yellow"}} {:id #uuid "63ce4680-128a-4354-8720-d29342c88645", :page 310, :position {:bounding {:x1 0, :y1 631.4750061035156, :x2 814.4449188113213, :y2 673.125, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.64999693632126, :y1 631.4750061035156, :x2 814.4449188113213, :y2 649.875, :width 897.9999999999999, :height 1121.26873857404} {:x1 0, :y1 638.4000091552734, :x2 0, :y2 657.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 654.7250061035156, :x2 194.3185607790947, :y2 673.125, :width 897.9999999999999, :height 1121.26873857404}), :page 310}, :content {:text "通过代理可以把运行时中原本不相关的部分联系到一起。这样就可以实现各种模式，从而让不同的代码互操作"}, :properties {:color "yellow"}} {:id #uuid "63ce468c-3b2d-4035-935f-04fc420d857a", :page 310, :position {:bounding {:x1 506.27467650175095, :y1 678.0625, :x2 771.3570434451103, :y2 696.4625091552734, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 506.27467650175095, :y1 678.0625, :x2 771.3570434451103, :y2 696.4625091552734, :width 897.9999999999999, :height 1121.26873857404}), :page 310}, :content {:text "让所有创建的实例都被添加到这个集合"}, :properties {:color "yellow"}} {:id #uuid "63ce46ac-43ed-48df-adc7-753af5311f5b", :page 311, :position {:bounding {:x1 161.8075286746025, :y1 127.5374984741211, :x2 660.7587615847588, :y2 145.93750762939453, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 161.8075286746025, :y1 127.5374984741211, :x2 660.7587615847588, :y2 145.93750762939453, :width 897.9999999999999, :height 1121.26873857404}), :page 311}, :content {:text "还可以把集合绑定到一个事件分派程序，每次插入新实例时都会发送消息"}, :properties {:color "yellow"}} {:id #uuid "63ce475c-df80-4276-8974-ed85467ee048", :page 312, :position {:bounding {:x1 0, :y1 350.4000015258789, :x2 806.7258178591728, :y2 480.7375030517578, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 350.4000015258789, :x2 0, :y2 369.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 653.9499999880791, :y1 439.08750915527344, :x2 806.7258178591728, :y2 457.4875030517578, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 462.33750915527344, :x2 582.1401244997978, :y2 480.7375030517578, :width 897.9999999999999, :height 1121.26873857404}), :page 312}, :content {:text "每个函数都是 Function类型的实例，而 Function 也有属性和方法，跟其他引用类型一样。"}, :properties {:color "yellow"}} {:id #uuid "63ce4791-c39d-4d68-9ad3-4cf294aa8b0c", :page 312, :position {:bounding {:x1 412.68287962675095, :y1 589.4125061035156, :x2 677.7408325076103, :y2 607.8125, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 412.68287962675095, :y1 589.4125061035156, :x2 677.7408325076103, :y2 607.8125, :width 897.9999999999999, :height 1121.26873857404}), :page 312}, :content {:text "函数表达式与函数声明几乎是等价的："}, :properties {:color "yellow"}} {:id #uuid "63ce4880-9e52-4cbb-9dcd-b02434617cdb", :page 312, :position {:bounding {:x1 490.61867064237595, :y1 739.6375122070312, :x2 672.3853637576103, :y2 758.0375061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 490.61867064237595, :y1 739.6375122070312, :x2 564.8857299685478, :y2 758.0375061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 576.3874999880791, :y1 739.6375122070312, :x2 672.3853637576103, :y2 758.0375061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 312}, :content {:text "“箭头函数”（arrow function"}, :properties {:color "yellow"}} {:id #uuid "63ce48a0-4e1b-493a-b8c4-38a0a7bc2291", :page 312, :position {:bounding {:x1 0, :y1 638.4000244140625, :x2 814.3802368044853, :y2 861.8500061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 638.4000244140625, :x2 0, :y2 657.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 334.7204162478447, :y1 820.2000122070312, :x2 814.3802368044853, :y2 838.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.41250151395798, :y1 843.4500122070312, :x2 568.6089431643486, :y2 861.8500061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 312}, :content {:text "使用 Function 构造函数。这个构造函数接收任意多个字符串参数，最后一个参数始终会被当成函数体，而之前的参数都是新函数的参数"}, :properties {:color "yellow"}} {:id #uuid "63ce48b1-bb98-4826-871d-e8b9f695efde", :page 313, :position {:bounding {:x1 151.57499998807907, :y1 126.19999885559082, :x2 243.47781676054, :y2 153.40000343322754, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 151.57499998807907, :y1 126.19999885559082, :x2 243.47781676054, :y2 153.40000343322754, :width 897.9999999999999, :height 1121.26873857404}), :page 313}, :content {:text "箭头函数"}, :properties {:color "green"}} {:id #uuid "63ce493d-553d-4a7f-8a0d-b023fac9cea7", :page 313, :position {:bounding {:x1 0, :y1 638.4000244140625, :x2 781.8874999880791, :y2 1033.9250183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 638.4000244140625, :x2 0, :y2 657.6000289916992, :width 897.9999999999999, :height 1121.26873857404} {:x1 475.5997192263603, :y1 992.2750244140625, :x2 781.8874999880791, :y2 1010.6750183105469, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.81250303983688, :y1 1014.3750305175781, :x2 157.54506224393845, :y2 1032.7750244140625, :width 897.9999999999999, :height 1121.26873857404} {:x1 172.4750091433525, :y1 1015.5250244140625, :x2 328.3732787966728, :y2 1033.9250183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 313}, :content {:text "箭头函数不能使用 arguments、super 和 new.target，也不能用作构造函数"}, :properties {:color "yellow"}} {:id #uuid "63ce4944-ff39-4f08-992a-a1f7d655095a", :page 313, :position {:bounding {:x1 390.7300903201103, :y1 1014.3750305175781, :x2 634.8344604372978, :y2 1033.9250183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 583.7125121951103, :y1 1014.3750305175781, :x2 634.8344604372978, :y2 1032.7750244140625, :width 897.9999999999999, :height 1121.26873857404} {:x1 390.7300903201103, :y1 1015.5250244140625, :x2 573.2009765505791, :y2 1033.9250183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 313}, :content {:text "箭头函数也没有 prototype 属性。"}, :properties {:color "yellow"}} {:id #uuid "63ce494a-7d12-47ac-84c5-a96e6f82ceb0", :page 314, :position {:bounding {:x1 184.1750060915947, :y1 126.2874755859375, :x2 253.1201965212822, :y2 153.48748779296875, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 184.1750060915947, :y1 126.2874755859375, :x2 253.1201965212822, :y2 153.48748779296875, :width 897.9999999999999, :height 1121.26873857404}), :page 314}, :content {:text "函数名"}, :properties {:color "green"}} {:id #uuid "63ce496f-0463-4b45-9d1a-0362770f813b", :page 314, :position {:bounding {:x1 365.25075072050095, :y1 426.7875061035156, :x2 755.0493652224541, :y2 445.1875, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 365.25075072050095, :y1 426.7875061035156, :x2 755.0493652224541, :y2 445.1875, :width 897.9999999999999, :height 1121.26873857404}), :page 314}, :content {:text "使用不带括号的函数名会访问函数指针，而不会执行函数"}, :properties {:color "yellow"}} {:id #uuid "63ce4977-7f52-42a8-a2fc-66511700e4b1", :page 314, :position {:bounding {:x1 149.02499693632126, :y1 314.3000183105469, :x2 314.2348205447197, :y2 330.3000183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 149.02499693632126, :y1 314.3000183105469, :x2 314.2348205447197, :y2 330.3000183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 314}, :content {:text "let anotherSum = sum;"}, :properties {:color "yellow"}} {:id #uuid "63ce4a78-6a38-422d-8fa0-b5a25aec770f", :page 314, :position {:bounding {:x1 147.64999693632126, :y1 495.4875030517578, :x2 752.8823730349541, :y2 513.8875274658203, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.64999693632126, :y1 495.4875030517578, :x2 752.8823730349541, :y2 513.8875274658203, :width 897.9999999999999, :height 1121.26873857404}), :page 314}, :content {:text "ECMAScript 6 的所有函数对象都会暴露一个只读的 name 属性，其中包含关于函数的信息"}, :properties {:color "yellow"}} {:id #uuid "63ce4a83-e615-4d4a-b5d7-11b1a4480d37", :page 315, :position {:bounding {:x1 151.57499998807907, :y1 126.28750610351562, :x2 243.47781676054, :y2 153.48748779296875, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 151.57499998807907, :y1 126.28750610351562, :x2 243.47781676054, :y2 153.48748779296875, :width 897.9999999999999, :height 1121.26873857404}), :page 315}, :content {:text "理解参数"}, :properties {:color "green"}} {:id #uuid "63ce4aaf-57d2-42e3-b220-34f9440f1f69", :page 315, :position {:bounding {:x1 302.39564818143845, :y1 242.3000030517578, :x2 626.0079223513603, :y2 260.6999969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 302.39564818143845, :y1 242.3000030517578, :x2 626.0079223513603, :y2 260.6999969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 315}, :content {:text "ECMAScript 函数的参数在内部表现为一个数组"}, :properties {:color "yellow"}} {:id #uuid "63ce4af5-3fe0-4c07-a935-2ee02c55b452", :page 315, :position {:bounding {:x1 161.79046934843063, :y1 664.1875, :x2 563.4508544802666, :y2 682.5874938964844, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 161.79046934843063, :y1 664.1875, :x2 563.4508544802666, :y2 682.5874938964844, :width 897.9999999999999, :height 1121.26873857404}), :page 315}, :content {:text "通过 arguments 对象的 length 属性检查传入的参数个数"}, :properties {:color "yellow"}} {:id #uuid "63ce4b43-c548-49e9-9e63-85600e1b34c3", :page 316, :position {:bounding {:x1 145.9750091433525, :y1 388, :x2 736.2072479128838, :y2 406.40000915527344, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 145.9750091433525, :y1 388, :x2 736.2072479128838, :y2 406.40000915527344, :width 897.9999999999999, :height 1121.26873857404}), :page 316}, :content {:text "arguments 对象的另一个有意思的地方就是，它的值始终会与对应的命名参数同步。"}, :properties {:color "yellow"}} {:id #uuid "63ce4b53-152a-4f8e-8eb9-d1cc756c50aa", :page 316, :position {:bounding {:x1 416.5500060915947, :y1 196.22500610351562, :x2 703.5604736208916, :y2 214.625, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 416.5500060915947, :y1 196.22500610351562, :x2 703.5604736208916, :y2 214.625, :width 897.9999999999999, :height 1121.26873857404}), :page 316}, :content {:text "arguments 对象可以跟命名参数一起使用"}, :properties {:color "yellow"}} {:id #uuid "63ce4be6-0bef-425a-988a-3a409d369d3e", :page 316, :position {:bounding {:x1 163.23210448026657, :y1 797.3500061035156, :x2 767.6324951052666, :y2 815.75, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 163.23210448026657, :y1 797.3500061035156, :x2 767.6324951052666, :y2 815.75, :width 897.9999999999999, :height 1121.26873857404}), :page 316}, :content {:text "果函数是使用箭头语法定义的，那么传给函数的参数将不能使用 arguments 关键字访问"}, :properties {:color "yellow"}} {:id #uuid "63ce4c27-1c0d-42c4-9c30-0917702eadaa", :page 317, :position {:bounding {:x1 151.57499998807907, :y1 389.97501373291016, :x2 243.47781676054, :y2 417.1749954223633, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 151.57499998807907, :y1 389.97501373291016, :x2 243.47781676054, :y2 417.1749954223633, :width 897.9999999999999, :height 1121.26873857404}), :page 317}, :content {:text "没有重载"}, :properties {:color "green"}} {:id #uuid "63ce4c3f-edc6-420a-a383-21d31038f469", :page 317, :position {:bounding {:x1 317.69899290800095, :y1 482.7375183105469, :x2 567.2063476443291, :y2 501.1375274658203, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 317.69899290800095, :y1 482.7375183105469, :x2 567.2063476443291, :y2 501.1375274658203, :width 897.9999999999999, :height 1121.26873857404}), :page 317}, :content {:text "没有函数签名，自然也就没有重载。"}, :properties {:color "yellow"}} {:id #uuid "63ce4cec-dfe1-412a-a463-f4b73ae98f73", :page 318, :position {:bounding {:x1 184.1750060915947, :y1 126.28750610351562, :x2 298.98158568143845, :y2 153.48751831054688, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 184.1750060915947, :y1 126.28750610351562, :x2 298.98158568143845, :y2 153.48751831054688, :width 897.9999999999999, :height 1121.26873857404}), :page 318}, :content {:text "默认参数值"}, :properties {:color "green"}} {:id #uuid "63ce4e16-6fe1-42d2-abc9-81493de52513", :page 318, :position {:bounding {:x1 147.64999693632126, :y1 807.9874877929688, :x2 631.0146209597588, :y2 826.3875122070312, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.64999693632126, :y1 807.9874877929688, :x2 631.0146209597588, :y2 826.3875122070312, :width 897.9999999999999, :height 1121.26873857404}), :page 318}, :content {:text "默认参数值并不限于原始值或对象类型，也可以使用调用函数返回的值"}, :properties {:color "yellow"}} {:id #uuid "63ce4e4f-be60-4efd-b625-3f1fa5678ae6", :page 319, :position {:bounding {:x1 115.03750151395798, :y1 656.4874992370605, :x2 645.228175342083, :y2 674.887523651123, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 115.03750151395798, :y1 656.4874992370605, :x2 645.228175342083, :y2 674.887523651123, :width 897.9999999999999, :height 1121.26873857404}), :page 319}, :content {:text "因为参数是按顺序初始化的，所以后定义默认值的参数可以引用先定义的参数"}, :properties {:color "yellow"}} {:id #uuid "63ce4ea3-26e0-4202-8f9d-b84738526342", :page 320, :position {:bounding {:x1 184.18750303983688, :y1 126.28750610351562, :x2 344.99318236112595, :y2 153.48748779296875, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 184.18750303983688, :y1 126.28750610351562, :x2 344.99318236112595, :y2 153.48748779296875, :width 897.9999999999999, :height 1121.26873857404}), :page 320}, :content {:text "参数扩展与收集"}, :properties {:color "green"}} {:id #uuid "63ce4fda-fb74-4181-9eec-c77b95490a4a", :page 320, :position {:bounding {:x1 116.42499846220016, :y1 219.0500030517578, :x2 584.1723434329033, :y2 237.45000457763672, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 116.42499846220016, :y1 219.0500030517578, :x2 584.1723434329033, :y2 237.45000457763672, :width 897.9999999999999, :height 1121.26873857404}), :page 320}, :content {:text "扩展操作符既可以用于调用函数时传参，也可以用于定义函数参数。"}, :properties {:color "yellow"}} {:id #uuid "63ce5040-41c4-475d-a3c9-e676e3528275", :page 320, :position {:bounding {:x1 149.02499693632126, :y1 642.3125152587891, :x2 438.75245970487595, :y2 658.3125152587891, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 149.02499693632126, :y1 642.3125152587891, :x2 342.60475462675095, :y2 658.3125152587891, :width 897.9999999999999, :height 1121.26873857404} {:x1 393.28749388456345, :y1 642.3125152587891, :x2 438.75245970487595, :y2 658.3125152587891, :width 897.9999999999999, :height 1121.26873857404}), :page 320}, :content {:text "console.log(getSum(...values)); // 10"}, :properties {:color "yellow"}} {:id #uuid "63ce504c-49b4-4429-ac36-bba7e54d1970", :page 320, :position {:bounding {:x1 0, :y1 590.4000091552734, :x2 822.1293823122978, :y2 710.7500152587891, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 590.4000091552734, :x2 0, :y2 609.6000213623047, :width 897.9999999999999, :height 1121.26873857404} {:x1 147.64999693632126, :y1 669.1000213623047, :x2 822.1293823122978, :y2 687.5000152587891, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 692.3500213623047, :x2 334.6677047610283, :y2 710.7500152587891, :width 897.9999999999999, :height 1121.26873857404}), :page 320}, :content {:text "因为数组的长度已知，所以在使用扩展操作符传参的时候，并不妨碍在其前面或后面再传其他的值，包括使用扩展操作符传其他参数"}, :properties {:color "yellow"}} {:id #uuid "63ce5052-f49d-4569-b829-9b7c204a63f0", :page 320, :position {:bounding {:x1 149.02499693632126, :y1 717.2750091552734, :x2 427.44999998807907, :y2 733.2750091552734, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 149.02499693632126, :y1 717.2750091552734, :x2 293.73366087675095, :y2 733.2750091552734, :width 897.9999999999999, :height 1121.26873857404} {:x1 322.3625060915947, :y1 717.2750091552734, :x2 392.3470031619072, :y2 733.2750091552734, :width 897.9999999999999, :height 1121.26873857404} {:x1 424.81251829862595, :y1 717.2750091552734, :x2 427.44999998807907, :y2 733.2750091552734, :width 897.9999999999999, :height 1121.26873857404}), :page 320}, :content {:text "console.log(getSum(-1, ...values)); "}, :properties {:color "yellow"}} {:id #uuid "63ce5075-de26-46a0-9425-f226faa85ab9", :page 321, :position {:bounding {:x1 158.2875091433525, :y1 410.9250030517578, :x2 237.07573240995407, :y2 434.125, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 158.2875091433525, :y1 410.9250030517578, :x2 237.07573240995407, :y2 434.125, :width 897.9999999999999, :height 1121.26873857404}), :page 321}, :content {:text "收集参数"}, :properties {:color "green"}} {:id #uuid "63ce507b-24d7-4b20-8e97-c3b47261cdc9", :page 320, :position {:bounding {:x1 172.32382506132126, :y1 255.58749389648438, :x2 269.6757385134697, :y2 280.1000061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 190.88749998807907, :y1 255.58749389648438, :x2 269.6757385134697, :y2 278.7875061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 172.32382506132126, :y1 256.8999938964844, :x2 172.3273498415947, :y2 280.1000061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 320}, :content {:text "扩展参数"}, :properties {:color "green"}} {:id #uuid "63ce50c1-c3ac-4250-bae7-33af9cf63cfc", :page 322, :position {:bounding {:x1 184.1750060915947, :y1 260.3500118255615, :x2 413.81572264432907, :y2 287.54999351501465, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 184.1750060915947, :y1 260.3500118255615, :x2 413.81572264432907, :y2 287.54999351501465, :width 897.9999999999999, :height 1121.26873857404}), :page 322}, :content {:text "函数声明与函数表达式"}, :properties {:color "green"}} {:id #uuid "63ce5104-40e0-40af-bd93-01bfbfa4e1b7", :page 322, :position {:bounding {:x1 178.08749693632126, :y1 512.7250118255615, :x2 268.33330076932907, :y2 531.125036239624, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 178.08749693632126, :y1 512.7250118255615, :x2 268.33330076932907, :y2 531.125036239624, :width 897.9999999999999, :height 1121.26873857404}), :page 322}, :content {:text "函数声明提升"}, :properties {:color "yellow"}} {:id #uuid "63ce5112-41b5-4297-893e-0745fbf342ee", :page 322, :position {:bounding {:x1 270.32301634550095, :y1 560.2749996185303, :x2 806.933367908001, :y2 578.6750240325928, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 270.32301634550095, :y1 560.2749996185303, :x2 806.933367908001, :y2 578.6750240325928, :width 897.9999999999999, :height 1121.26873857404}), :page 322}, :content {:text "如果把前面代码中的函数声明改为等价的函数表达式，那么执行的时候就会出错"}, :properties {:color "yellow"}} {:id #uuid "63ce512e-3777-43dc-a487-3058b6d9d331", :page 322, :position {:bounding {:x1 184.1750060915947, :y1 944.3375244140625, :x2 298.98158568143845, :y2 971.5375061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 184.1750060915947, :y1 944.3375244140625, :x2 298.98158568143845, :y2 971.5375061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 322}, :content {:text "函数作为值"}, :properties {:color "green"}} {:id #uuid "63ce5145-7afa-45d9-99c0-5141844adc06", :page 322, :position {:bounding {:x1 0, :y1 814.4000091552734, :x2 814.5438720583916, :y2 1032.250015258789, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 814.4000091552734, :x2 0, :y2 833.6000137329102, :width 897.9999999999999, :height 1121.26873857404} {:x1 798.9481078982353, :y1 990.5000152587891, :x2 814.5438720583916, :y2 1008.900016784668, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.41250151395798, :y1 1013.8500137329102, :x2 677.7340957522392, :y2 1032.250015258789, :width 897.9999999999999, :height 1121.26873857404}), :page 322}, :content {:text "不仅可以把函数作为参数传给另一个函数，而且还可以在一个函数中返回另一个函数"}, :properties {:color "yellow"}} {:id #uuid "63ce51d5-3dab-491c-9b77-305d5b516708", :page 324, :position {:bounding {:x1 184.1750060915947, :y1 321.91251373291016, :x2 276.07780760526657, :y2 349.11251068115234, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 184.1750060915947, :y1 321.91251373291016, :x2 276.07780760526657, :y2 349.11251068115234, :width 897.9999999999999, :height 1121.26873857404}), :page 324}, :content {:text "函数内部"}, :properties {:color "green"}} {:id #uuid "63ce51e3-fb76-4f5f-8641-65b9657f9718", :page 324, :position {:bounding {:x1 190.88749998807907, :y1 425.1000213623047, :x2 297.10731810331345, :y2 447.50001525878906, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 190.88749998807907, :y1 425.1000213623047, :x2 297.10731810331345, :y2 447.50001525878906, :width 897.9999999999999, :height 1121.26873857404}), :page 324}, :content {:text "arguments"}, :properties {:color "green"}} {:id #uuid "63ce5208-7d9f-4a23-8314-476a1df1b6d4", :page 324, :position {:bounding {:x1 0, :y1 462.40000915527344, :x2 814.4029418826103, :y2 549.4000244140625, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 462.40000915527344, :x2 0, :y2 481.6000213623047, :width 897.9999999999999, :height 1121.26873857404} {:x1 225.6625091433525, :y1 506.6000213623047, :x2 480.04985350370407, :y2 525.0000305175781, :width 897.9999999999999, :height 1121.26873857404} {:x1 491.81251829862595, :y1 506.6000213623047, :x2 814.4029418826103, :y2 525.0000305175781, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.41250151395798, :y1 531.0000305175781, :x2 147.59872740507126, :y2 549.4000244140625, :width 897.9999999999999, :height 1121.26873857404}), :page 324}, :content {:text "arguments 对象其实还有一个 callee 属性，是一个指向 arguments 对象所在函数的指针"}, :properties {:color "yellow"}} {:id #uuid "63ce523f-e112-47ad-b61a-a538d5c2ffef", :page 324, :position {:bounding {:x1 209.92143553495407, :y1 718.2750396728516, :x2 609.5801879763603, :y2 737.8375396728516, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 386.9000121951103, :y1 718.2750396728516, :x2 609.5801879763603, :y2 736.6750335693359, :width 897.9999999999999, :height 1121.26873857404} {:x1 209.92143553495407, :y1 719.4375457763672, :x2 366.94353026151657, :y2 737.8375396728516, :width 897.9999999999999, :height 1121.26873857404}), :page 324}, :content {:text "使用 arguments.callee 就可以让函数逻辑与函数名解耦"}, :properties {:color "yellow"}} {:id #uuid "63ce5256-ff61-457b-9914-8b99a90571b8", :page 325, :position {:bounding {:x1 158.2875091433525, :y1 233.02500915527344, :x2 194.78607481718063, :y2 255.4250030517578, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 158.2875091433525, :y1 233.02500915527344, :x2 194.78607481718063, :y2 255.4250030517578, :width 897.9999999999999, :height 1121.26873857404}), :page 325}, :content {:text "this"}, :properties {:color "green"}} {:id #uuid "63ce5279-1b85-49b5-bd3b-b5e0a0d85fbc", :page 325, :position {:bounding {:x1 115.03750151395798, :y1 294.59999084472656, :x2 557.1671020388603, :y2 313.00001525878906, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 115.03750151395798, :y1 294.59999084472656, :x2 557.1671020388603, :y2 313.00001525878906, :width 897.9999999999999, :height 1121.26873857404}), :page 325}, :content {:text "在标准函数中，this 引用的是把函数当成方法调用的上下文对象"}, :properties {:color "yellow"}} {:id #uuid "63ce531b-1aa4-4b80-9a80-df39df09189b", :page 325, :position {:bounding {:x1 83.81250303983688, :y1 913.3875122070312, :x2 766.9752685427666, :y2 931.7875366210938, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 83.81250303983688, :y1 913.3875122070312, :x2 766.9752685427666, :y2 931.7875366210938, :width 897.9999999999999, :height 1121.26873857404}), :page 325}, :content {:text "回调函数写成箭头函数就可以解决问题。这是因为箭头函数中的 this 会保留定义该函数时的上下文"}, :properties {:color "yellow"}} {:id #uuid "63ce5334-7cb4-4f57-b307-da2a9d5c327c", :page 326, :position {:bounding {:x1 190.88749998807907, :y1 375.4500274658203, :x2 243.90495604276657, :y2 397.84999084472656, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 190.88749998807907, :y1 375.4500274658203, :x2 243.90495604276657, :y2 397.84999084472656, :width 897.9999999999999, :height 1121.26873857404}), :page 326}, :content {:text "caller"}, :properties {:color "green"}} {:id #uuid "63ce5348-8505-4bed-98b2-aba0c5ce6461", :page 326, :position {:bounding {:x1 0, :y1 414.40000915527344, :x2 814.3400146365166, :y2 478.68751525878906, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 414.40000915527344, :x2 0, :y2 433.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 457.3039123415947, :y1 437.0375061035156, :x2 814.3400146365166, :y2 455.43751525878906, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 460.2875061035156, :x2 333.30433958768845, :y2 478.68751525878906, :width 897.9999999999999, :height 1121.26873857404}), :page 326}, :content {:text "这个属性引用的是调用当前函数的函数，或者如果是在全局作用域中调用的则为 null"}, :properties {:color "yellow"}} {:id #uuid "63ce5367-8959-492f-92e9-dcedcdfa9d23", :page 326, :position {:bounding {:x1 147.64999693632126, :y1 819.8250427246094, :x2 469.25941771268845, :y2 839.3875427246094, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 418.12501829862595, :y1 819.8250427246094, :x2 469.25941771268845, :y2 838.2250061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 147.64999693632126, :y1 820.9875183105469, :x2 398.1685363650322, :y2 839.3875427246094, :width 897.9999999999999, :height 1121.26873857404}), :page 326}, :content {:text "在严格模式下访问 arguments.callee 会报错"}, :properties {:color "yellow"}} {:id #uuid "63ce5373-9173-45fc-b150-6f1fd3817038", :page 326, :position {:bounding {:x1 0, :y1 702.4000244140625, :x2 814.4023315310478, :y2 862.6375427246094, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 702.4000244140625, :x2 0, :y2 721.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 644.4875366091728, :y1 819.8250427246094, :x2 763.2103759646416, :y2 838.2250061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 786.3249999880791, :y1 820.9875183105469, :x2 814.4023315310478, :y2 839.3875427246094, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 844.2375183105469, :x2 303.5325729250908, :y2 862.6375427246094, :width 897.9999999999999, :height 1121.26873857404}), :page 326}, :content {:text "arguments.caller，但在严格模式下访问它会报错"}, :properties {:color "yellow"}} {:id #uuid "63ce537d-94e9-41cf-b911-f81399eed7a0", :page 326, :position {:bounding {:x1 190.88749998807907, :y1 949.7124938964844, :x2 292.9860412478447, :y2 972.1124877929688, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 190.88749998807907, :y1 949.7124938964844, :x2 292.9860412478447, :y2 972.1124877929688, :width 897.9999999999999, :height 1121.26873857404}), :page 326}, :content {:text "new.target"}, :properties {:color "green"}} {:id #uuid "63ce543d-27be-43d5-808d-39eea77c8728", :page 326, :position {:bounding {:x1 259.48536986112595, :y1 1010.2374877929688, :x2 640.9438354372978, :y2 1029.7874908447266, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 605.3749877810478, :y1 1010.2374877929688, :x2 640.9438354372978, :y2 1028.6374893188477, :width 897.9999999999999, :height 1121.26873857404} {:x1 259.48536986112595, :y1 1011.3874893188477, :x2 590.4575683474541, :y2 1029.7874908447266, :width 897.9999999999999, :height 1121.26873857404}), :page 326}, :content {:text "检测函数是否使用 new 关键字调用的 new.target 属性"}, :properties {:color "yellow"}} {:id #uuid "63ce5445-4053-46e6-ba48-d75a3f614456", :page 327, :position {:bounding {:x1 164.27499693632126, :y1 337.875, :x2 325.0806762576103, :y2 365.0749969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 164.27499693632126, :y1 337.875, :x2 325.0806762576103, :y2 365.0749969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 327}, :content {:text "函数属性与方法"}, :properties {:color "green"}} {:id #uuid "63ce54d1-32b7-462f-9761-2ea5b35db90a", :page 327, :position {:bounding {:x1 245.3625060915947, :y1 406.2250061035156, :x2 552.5425903201103, :y2 424.625, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 245.3625060915947, :y1 406.2250061035156, :x2 552.5425903201103, :y2 424.625, :width 897.9999999999999, :height 1121.26873857404}), :page 327}, :content {:text "length 属性保存函数定义的命名参数的个数"}, :properties {:color "yellow"}} {:id #uuid "63ce54e1-bbbd-461b-b6f1-45c81ba49627", :page 327, :position {:bounding {:x1 0, :y1 462.3999938964844, :x2 781.7772704958916, :y2 788.9625244140625, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 462.3999938964844, :x2 0, :y2 481.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 604.1000244021416, :y1 746.1500244140625, :x2 781.7772704958916, :y2 764.5499877929688, :width 897.9999999999999, :height 1121.26873857404} {:x1 524.1865722537041, :y1 747.3125, :x2 593.5884887576103, :y2 765.7125244140625, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.82499998807907, :y1 770.5625, :x2 160.310092151165, :y2 788.9625244140625, :width 897.9999999999999, :height 1121.26873857404}), :page 327}, :content {:text "prototype 是保存引用类型所有实例方法的地方"}, :properties {:color "yellow"}} {:id #uuid "63ce55c9-5616-4734-acef-f2b969acdbd9", :page 328, :position {:bounding {:x1 0, :y1 320.4999694824219, :x2 775.3874999880791, :y2 385.6000061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 209.9875060915947, :y1 320.4999694824219, :x2 775.3874999880791, :y2 338.8999938964844, :width 897.9999999999999, :height 1121.26873857404} {:x1 163.21249693632126, :y1 342.8625183105469, :x2 276.36659544706345, :y2 361.2624816894531, :width 897.9999999999999, :height 1121.26873857404} {:x1 290.6750060915947, :y1 342.8625183105469, :x2 343.12074583768845, :y2 361.2624816894531, :width 897.9999999999999, :height 1121.26873857404} {:x1 362.47499388456345, :y1 342.8625183105469, :x2 752.3983642458916, :y2 361.2625427246094, :width 897.9999999999999, :height 1121.26873857404} {:x1 0, :y1 366.3999938964844, :x2 0, :y2 385.6000061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 328}, :content {:text "在严格模式下，调用函数时如果没有指定上下文对象，则 this 值不会指向 window。除非使用 apply()或 call()把函数指定给一个对象，否则 this 的值会变成 undefined"}, :properties {:color "yellow"}} {:id #uuid "63ce55d9-f47a-46b4-ae19-78e29284cf62", :page 328, :position {:bounding {:x1 145.9750091433525, :y1 384.85000002384186, :x2 553.4491454958916, :y2 404.40001833438873, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 145.9750091433525, :y1 384.85000002384186, :x2 179.84237974882126, :y2 403.24999392032623, :width 897.9999999999999, :height 1121.26873857404} {:x1 199.1625091433525, :y1 385.99999392032623, :x2 297.4619933962822, :y2 404.40001833438873, :width 897.9999999999999, :height 1121.26873857404} {:x1 311.75001829862595, :y1 385.99999392032623, :x2 553.4491454958916, :y2 404.40001833438873, :width 897.9999999999999, :height 1121.26873857404}), :page 328}, :content {:text "call()方法与 apply()的作用一样，只是传参的形式不同。"}, :properties {:color "yellow"}} {:id #uuid "63ce5628-215a-4604-9c09-2c9ea8e64458", :page 328, :position {:bounding {:x1 0, :y1 622.4000091552734, :x2 805.2602416872978, :y2 739.4125061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 622.4000091552734, :x2 0, :y2 641.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 145.9750091433525, :y1 696.6000061035156, :x2 193.74948424100876, :y2 715, :width 897.9999999999999, :height 1121.26873857404} {:x1 208.02499693632126, :y1 697.7625122070312, :x2 261.39238280057907, :y2 716.1625061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 280.72499388456345, :y1 697.7625122070312, :x2 805.2602416872978, :y2 716.1625061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 721.0125122070312, :x2 178.80253905057907, :y2 739.4125061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 328}, :content {:text "apply()和 call()真正强大的地方并不是给函数传参，而是控制函数调用上下文即函数体内 this值的能力"}, :properties {:color "yellow"}} {:id #uuid "63ce564c-9816-4d36-ac4b-3677614c9cee", :page 329, :position {:bounding {:x1 0, :y1 46.399993896484375, :x2 781.7521240115166, :y2 215.77500915527344, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 46.399993896484375, :x2 0, :y2 65.59999084472656, :width 897.9999999999999, :height 1121.26873857404} {:x1 115.03750151395798, :y1 174.03749084472656, :x2 183.9798919558525, :y2 192.43751525878906, :width 897.9999999999999, :height 1121.26873857404} {:x1 203.3000060915947, :y1 174.03749084472656, :x2 270.57448118925095, :y2 192.43751525878906, :width 897.9999999999999, :height 1121.26873857404} {:x1 284.8625060915947, :y1 174.03749084472656, :x2 781.7521240115166, :y2 192.43751525878906, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.81250303983688, :y1 197.37501525878906, :x2 130.25441282987595, :y2 215.77500915527344, :width 897.9999999999999, :height 1121.26873857404}), :page 329}, :content {:text "使用 call()或 apply()的好处是可以将任意对象设置为任意函数的作用域，这样对象可以不用关心方法"}, :properties {:color "yellow"}} {:id #uuid "63ce56ab-8bf8-4060-b18c-10ab7eb83b47", :page 329, :position {:bounding {:x1 0, :y1 94.40000915527344, :x2 789.6609985232353, :y2 285.52500915527344, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 94.40000915527344, :x2 0, :y2 113.59999084472656, :width 897.9999999999999, :height 1121.26873857404} {:x1 508.3625060915947, :y1 243.8625030517578, :x2 559.1550781130791, :y2 262.2624969482422, :width 897.9999999999999, :height 1121.26873857404} {:x1 571.3000366091728, :y1 243.8625030517578, :x2 789.6609985232353, :y2 262.2624969482422, :width 897.9999999999999, :height 1121.26873857404} {:x1 325.1500121951103, :y1 267.1125030517578, :x2 371.88698118925095, :y2 285.5124969482422, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.81250303983688, :y1 267.12501525878906, :x2 312.99257200956345, :y2 285.52500915527344, :width 897.9999999999999, :height 1121.26873857404}), :page 329}, :content {:text "。bind()方法会创建一个新的函数实例，其 this 值会被绑定到传给 bind()的对象"}, :properties {:color "yellow"}} {:id #uuid "63ce56c3-0808-4a72-a998-405cabc928ae", :page 329, :position {:bounding {:x1 140.8260070681572, :y1 637.1124877929688, :x2 277.44536131620407, :y2 665.8500366210938, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 162.62500303983688, :y1 637.1124877929688, :x2 277.44536131620407, :y2 664.3125, :width 897.9999999999999, :height 1121.26873857404} {:x1 140.8260070681572, :y1 638.6500244140625, :x2 140.8290130496025, :y2 665.8500366210938, :width 897.9999999999999, :height 1121.26873857404}), :page 329}, :content {:text "函数表达式"}, :properties {:color "green"}} {:id #uuid "63ce5748-4f6f-4e84-bbcc-5e49d932710e", :page 330, :position {:bounding {:x1 238.19450682401657, :y1 150.78749084472656, :x2 437.5911743044853, :y2 169.18751525878906, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 238.19450682401657, :y1 150.78749084472656, :x2 437.5911743044853, :y2 169.18751525878906, :width 897.9999999999999, :height 1121.26873857404}), :page 330}, :content {:text "这样创建的函数叫作匿名函数"}, :properties {:color "yellow"}} {:id #uuid "63ce579c-5993-47e1-b7af-b8c9722710e8", :page 330, :position {:bounding {:x1 116.41250151395798, :y1 622.7125244140625, :x2 428.2438613772392, :y2 641.1125183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 116.41250151395798, :y1 622.7125244140625, :x2 428.2438613772392, :y2 641.1125183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 330}, :content {:text "如果把上面的函数声明换成函数表达式就没问"}, :properties {:color "yellow"}} {:id #uuid "63ce57d9-b8bf-407f-9c80-e6aabf35cc91", :page 331, :position {:bounding {:x1 164.2875091433525, :y1 306.65000915527344, :x2 210.28073424100876, :y2 333.8500061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 164.2875091433525, :y1 306.65000915527344, :x2 210.28073424100876, :y2 333.8500061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 331}, :content {:text "递归"}, :properties {:color "green"}} {:id #uuid "63ce57f2-15fb-4430-82cb-361162c49bf1", :page 331, :position {:bounding {:x1 0, :y1 590.4000015258789, :x2 781.7800781130791, :y2 924.1000061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 590.4000015258789, :x2 0, :y2 609.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 557.8000366091728, :y1 881.3000183105469, :x2 781.7800781130791, :y2 899.7000122070312, :width 897.9999999999999, :height 1121.26873857404} {:x1 115.03750151395798, :y1 882.4500122070312, :x2 537.8434936404228, :y2 900.8500061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.81250303983688, :y1 905.7000122070312, :x2 408.81267088651657, :y2 924.1000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 423.31251829862595, :y1 905.7000122070312, :x2 501.33574217557907, :y2 924.1000061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 331}, :content {:text "不过，在严格模式下运行的代码是不能访问 arguments.callee 的，因为访问会出错。此时，可以使用命名函数表达式（named function expression）达到目的"}, :properties {:color "yellow"}} {:id #uuid "63ce580b-f364-4e97-9d24-70baeeef164c", :page 332, :position {:bounding {:x1 196.88749998807907, :y1 212.38751220703125, :x2 311.7078735232353, :y2 239.58749389648438, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 196.88749998807907, :y1 212.38751220703125, :x2 311.7078735232353, :y2 239.58749389648438, :width 897.9999999999999, :height 1121.26873857404}), :page 332}, :content {:text "尾调用优化"}, :properties {:color "green"}} {:id #uuid "63ce587a-f2ea-4a95-87ff-5451ef6fc8e1", :page 332, :position {:bounding {:x1 194.34540098905563, :y1 281.79998779296875, :x2 716.7811157107353, :y2 300.20001220703125, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 194.34540098905563, :y1 281.79998779296875, :x2 377.73756712675095, :y2 300.20001220703125, :width 897.9999999999999, :height 1121.26873857404} {:x1 389.32499998807907, :y1 281.79998779296875, :x2 716.7811157107353, :y2 300.20001220703125, :width 897.9999999999999, :height 1121.26873857404}), :page 332}, :content {:text "这项优化非常适合“尾调用”，即外部函数的返回值是一个内部函数的返回值"}, :properties {:color "yellow"}} {:id #uuid "63ce5906-5bae-40df-8a84-0488df2e906f", :page 332, :position {:bounding {:x1 201.82499998807907, :y1 906.6750335693359, :x2 359.40150755643845, :y2 929.8750457763672, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 201.82499998807907, :y1 906.6750335693359, :x2 359.40150755643845, :y2 929.8750457763672, :width 897.9999999999999, :height 1121.26873857404}), :page 332}, :content {:text "尾调用优化的条件"}, :properties {:color "green"}} {:id #uuid "63ce591a-bca0-49e3-b8f8-3bf9f34f0d25", :page 332, :position {:bounding {:x1 303.54359740018845, :y1 947.0625305175781, :x2 537.4277831912041, :y2 965.4625549316406, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 303.54359740018845, :y1 947.0625305175781, :x2 537.4277831912041, :y2 965.4625549316406, :width 897.9999999999999, :height 1121.26873857404}), :page 332}, :content {:text "确定外部栈帧真的没有必要存在了"}, :properties {:color "yellow"}} {:id #uuid "63ce71a9-9f07-4980-8bdf-dd5066d10168", :page 332, :position {:bounding {:x1 167.63749998807907, :y1 970.4125366210938, :x2 323.5236389040947, :y2 988.8125305175781, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 167.63749998807907, :y1 970.4125366210938, :x2 323.5236389040947, :y2 988.8125305175781, :width 897.9999999999999, :height 1121.26873857404}), :page 332}, :content {:text "代码在严格模式下执行"}, :properties {:color "yellow"}} {:id #uuid "63ce71ee-91cb-4828-8a4a-8935578c3072", :page 332, :position {:bounding {:x1 167.63749998807907, :y1 993.6625366210938, :x2 448.3124572634697, :y2 1012.0625305175781, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 167.63749998807907, :y1 993.6625366210938, :x2 448.3124572634697, :y2 1012.0625305175781, :width 897.9999999999999, :height 1121.26873857404}), :page 332}, :content {:text "外部函数的返回值是对尾调用函数的调用"}, :properties {:color "yellow"}} {:id #uuid "63ce7216-34ec-4d4e-a91b-4849ff4123e7", :page 333, :position {:bounding {:x1 135.0375091433525, :y1 127.53750610351562, :x2 415.712435901165, :y2 145.9375, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 135.0375091433525, :y1 127.53750610351562, :x2 415.712435901165, :y2 145.9375, :width 897.9999999999999, :height 1121.26873857404}), :page 333}, :content {:text "尾调用函数返回后不需要执行额外的逻辑"}, :properties {:color "yellow"}} {:id #uuid "63ce721f-9fe8-4792-9fe1-13339b21b320", :page 333, :position {:bounding {:x1 135.0375091433525, :y1 150.78750610351562, :x2 509.2801849246025, :y2 169.1875, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 135.0375091433525, :y1 150.78750610351562, :x2 509.2801849246025, :y2 169.1875, :width 897.9999999999999, :height 1121.26873857404}), :page 333}, :content {:text "尾调用函数不是引用外部函数作用域中自由变量的闭包"}, :properties {:color "yellow"}} {:id #uuid "63ce723c-e9f3-40c4-ab6d-100fa9e9b2a3", :page 334, :position {:bounding {:x1 201.82499998807907, :y1 233.22500038146973, :x2 359.40150755643845, :y2 256.4249973297119, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 201.82499998807907, :y1 233.22500038146973, :x2 359.40150755643845, :y2 256.4249973297119, :width 897.9999999999999, :height 1121.26873857404}), :page 334}, :content {:text "尾调用优化的代码"}, :properties {:color "green"}} {:id #uuid "63ce726e-12e3-4630-b138-f182e93999d9", :page 334, :position {:bounding {:x1 0, :y1 606.3999938964844, :x2 814.2578002810478, :y2 699.6125183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 606.3999938964844, :x2 0, :y2 625.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 395.5481750369072, :y1 657.875, :x2 814.2578002810478, :y2 676.2749938964844, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 681.2124938964844, :x2 209.9664642214775, :y2 699.6125183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 334}, :content {:text "为此可以使用两个嵌套的函数，外部函数作为基础框架，内部函数执行递归"}, :properties {:color "yellow"}} {:id #uuid "63ce72b0-faef-4004-9b6e-f3fa76944796", :page 334, :position {:bounding {:x1 196.88749998807907, :y1 967.0000305175781, :x2 242.88074034452438, :y2 994.2000427246094, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 196.88749998807907, :y1 967.0000305175781, :x2 242.88074034452438, :y2 994.2000427246094, :width 897.9999999999999, :height 1121.26873857404}), :page 334}, :content {:text "闭包"}, :properties {:color "green"}} {:id #uuid "63ce7308-f609-4e10-8059-814d461afc89", :page 334, :position {:bounding {:x1 452.69999998807907, :y1 1012.2250366210938, :x2 814.5331909060478, :y2 1030.6250305175781, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 452.69999998807907, :y1 1012.2250366210938, :x2 814.5331909060478, :y2 1030.6250305175781, :width 897.9999999999999, :height 1121.26873857404}), :page 334}, :content {:text "闭包指的是那些引用了另一个函数作用域中变量的函"}, :properties {:color "yellow"}} {:id #uuid "63ce7399-a96e-4125-9a8b-ef38a9491027", :page 335, :position {:bounding {:x1 0, :y1 622.4000244140625, :x2 781.7390624880791, :y2 933.9625244140625, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 622.4000244140625, :x2 0, :y2 641.6000213623047, :width 897.9999999999999, :height 1121.26873857404} {:x1 564.6659423708916, :y1 892.2125244140625, :x2 781.7390624880791, :y2 910.6125183105469, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.82499998807907, :y1 915.5625305175781, :x2 278.66896361112595, :y2 933.9625244140625, :width 897.9999999999999, :height 1121.26873857404}), :page 335}, :content {:text "全局上下文中的叫变量对象，它会在代码执行期间始终存在"}, :properties {:color "yellow"}} {:id #uuid "63ce73a0-2706-408f-b978-fab2dcd7486e", :page 335, :position {:bounding {:x1 473.4998657107353, :y1 915.5625305175781, :x2 717.0612670779228, :y2 933.9625244140625, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 473.4998657107353, :y1 915.5625305175781, :x2 717.0612670779228, :y2 933.9625244140625, :width 897.9999999999999, :height 1121.26873857404}), :page 335}, :content {:text "活动对象，只在函数执行期间存在"}, :properties {:color "yellow"}} {:id #uuid "63ce73dd-c238-49e3-9a09-cc4681392f0d", :page 336, :position {:bounding {:x1 0, :y1 270.4000015258789, :x2 814.3515502810478, :y2 480.25001525878906, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 270.4000015258789, :x2 0, :y2 289.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 659.2939330935478, :y1 438.6000213623047, :x2 814.3515502810478, :y2 457.00001525878906, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 461.8500213623047, :x2 459.4234420657158, :y2 480.25001525878906, :width 897.9999999999999, :height 1121.26873857404}), :page 336}, :content {:text "。函数执行完毕后，局部活动对象会被销毁，内存中就只剩下全局作用域"}, :properties {:color "yellow"}} {:id #uuid "63ce7454-073c-4d83-a673-1d994a342dae", :page 337, :position {:bounding {:x1 169.21249693632126, :y1 593.9250030517578, :x2 259.53786009550095, :y2 616.3249969482422, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 169.21249693632126, :y1 593.9250030517578, :x2 259.53786009550095, :y2 616.3249969482422, :width 897.9999999999999, :height 1121.26873857404}), :page 337}, :content {:text "this 对象"}, :properties {:color "green"}} {:id #uuid "63ce74a4-1ac8-4f35-91fd-468be88ccb1e", :page 338, :position {:bounding {:x1 116.42499846220016, :y1 127.5374755859375, :x2 653.8500854372978, :y2 145.9375, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 116.42499846220016, :y1 127.5374755859375, :x2 487.0273010134697, :y2 145.9375, :width 897.9999999999999, :height 1121.26873857404} {:x1 516.6249877810478, :y1 127.5374755859375, :x2 653.8500854372978, :y2 145.9375, :width 897.9999999999999, :height 1121.26873857404}), :page 338}, :content {:text "么匿名函数没有使用其包含作用域（getIdentityFunc()）的 this 对象呢？"}, :properties {:color "yellow"}} {:id #uuid "63ce74e6-6288-4bc3-87e5-f8e1f3eb6e88", :page 338, :position {:bounding {:x1 147.64999693632126, :y1 615.8125, :x2 748.8569824099541, :y2 634.2125091552734, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.64999693632126, :y1 615.8125, :x2 748.8569824099541, :y2 634.2125091552734, :width 897.9999999999999, :height 1121.26873857404}), :page 338}, :content {:text "在一些特殊情况下，this 值可能并不是我们所期待的值。比如下面这个修改后的例子："}, :properties {:color "yellow"}} {:id #uuid "63ce7556-5a94-48c6-9d17-de50c830c5d4", :page 338, :position {:bounding {:x1 116.43750303983688, :y1 1006.9624938964844, :x2 409.73732298612595, :y2 1025.3625183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 116.43750303983688, :y1 1006.9624938964844, :x2 409.73732298612595, :y2 1025.3625183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 338}, :content {:text "即使语法稍有不同，也可能影响 this 的值"}, :properties {:color "yellow"}} {:id #uuid "63ce7562-1da2-4d32-96a0-c5d669455209", :page 337, :position {:bounding {:x1 0, :y1 334.3999938964844, :x2 781.7969238162041, :y2 698.6375122070312, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 334.3999938964844, :x2 0, :y2 353.59999084472656, :width 897.9999999999999, :height 1121.26873857404} {:x1 302.10878294706345, :y1 656.9875030517578, :x2 781.7969238162041, :y2 675.3875122070312, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.82499998807907, :y1 680.2375030517578, :x2 658.2368041872978, :y2 698.6375122070312, :width 897.9999999999999, :height 1121.26873857404}), :page 337}, :content {:text "如果在全局函数中调用，则 this 在非严格模式下等于 window，在严格模式下等于 undefined。如果作为某个对象的方法调用，则 this 等于这个对象。"}, :properties {:color "yellow"}} {:id #uuid "63ce75b4-e707-4b2b-81c1-3107967ce08b", :page 339, :position {:bounding {:x1 169.2250091433525, :y1 125.76251220703125, :x2 248.01323240995407, :y2 148.96249389648438, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 169.2250091433525, :y1 125.76251220703125, :x2 248.01323240995407, :y2 148.96249389648438, :width 897.9999999999999, :height 1121.26873857404}), :page 339}, :content {:text "内存泄漏"}, :properties {:color "green"}} {:id #uuid "63ce75e3-7dfb-40b7-9b62-a03b0e9106a6", :page 339, :position {:bounding {:x1 0, :y1 46.400001525878906, :x2 781.7710449099541, :y2 231.05001068115234, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 46.400001525878906, :x2 0, :y2 65.60000038146973, :width 897.9999999999999, :height 1121.26873857404} {:x1 369.14604490995407, :y1 189.4000015258789, :x2 781.7710449099541, :y2 207.8000030517578, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.81250303983688, :y1 212.6500015258789, :x2 348.89898985624313, :y2 231.05001068115234, :width 897.9999999999999, :height 1121.26873857404}), :page 339}, :content {:text "在这些版本的 IE 中，把 HTML 元素保存在某个闭包的作用域中，就相当于宣布该元素不能被销毁。"}, :properties {:color "yellow"}} {:id #uuid "63ce7fd4-4885-4655-a1ef-547b890adbf6", :page 339, :position {:bounding {:x1 164.2875091433525, :y1 668.1500015258789, :x2 394.04066771268845, :y2 695.3500137329102, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 164.2875091433525, :y1 668.1500015258789, :x2 394.04066771268845, :y2 695.3500137329102, :width 897.9999999999999, :height 1121.26873857404}), :page 339}, :content {:text "立即调用的函数表达式"}, :properties {:color "green"}} {:id #uuid "63ce8049-59c0-43b2-b253-941686f09944", :page 339, :position {:bounding {:x1 0, :y1 398.3999938964844, :x2 760.2805053591728, :y2 753.9375, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 398.3999938964844, :x2 0, :y2 417.59999084472656, :width 897.9999999999999, :height 1121.26873857404} {:x1 513.3000366091728, :y1 712.2874984741211, :x2 760.2805053591728, :y2 730.6875, :width 897.9999999999999, :height 1121.26873857404} {:x1 115.03750151395798, :y1 713.3250045776367, :x2 323.9583083987236, :y2 731.7249984741211, :width 897.9999999999999, :height 1121.26873857404} {:x1 339.3625060915947, :y1 713.3250045776367, :x2 477.50664061307907, :y2 731.7249984741211, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.81250303983688, :y1 735.5374984741211, :x2 673.1580688357353, :y2 753.9375, :width 897.9999999999999, :height 1121.26873857404}), :page 339}, :content {:text "立 即 调 用 的 匿 名 函 数 又 被 称 作 立 即 调 用 的 函 数 表 达 式 （ IIFE ， Immediately Invoked Function Expression）。它类似于函数声明，但由于被包含在括号中，所以会被解释为函数表达式"}, :properties {:color "yellow"}} {:id #uuid "63ce807b-8337-4573-961f-d23248e9fc12", :page 340, :position {:bounding {:x1 0, :y1 220.63751220703125, :x2 814.4997436404228, :y2 321.6000061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.6625091433525, :y1 220.63751220703125, :x2 814.4997436404228, :y2 239.03750610351562, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.43750303983688, :y1 243.88751220703125, :x2 178.81378477811813, :y2 262.2875061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 0, :y1 302.3999938964844, :x2 0, :y2 321.6000061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 340}, :content {:text "在 ECMAScript 6 以后，IIFE 就没有那么必要了，因为块级作用域中的变量无须 IIFE 就可以实现同样的隔离"}, :properties {:color "yellow"}} {:id #uuid "63ce80ee-1be1-4581-bcfc-a205a6104af3", :page 341, :position {:bounding {:x1 164.2875091433525, :y1 467.5000190734863, :x2 256.1696655154228, :y2 494.70000076293945, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 164.2875091433525, :y1 467.5000190734863, :x2 256.1696655154228, :y2 494.70000076293945, :width 897.9999999999999, :height 1121.26873857404}), :page 341}, :content {:text "私有变量"}, :properties {:color "green"}} {:id #uuid "63ce8101-8cbd-4257-948f-6aadba753203", :page 341, :position {:bounding {:x1 130.58575743436813, :y1 560.2625122070312, :x2 598.3809234499931, :y2 578.6625213623047, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 130.58575743436813, :y1 560.2625122070312, :x2 598.3809234499931, :y2 578.6625213623047, :width 897.9999999999999, :height 1121.26873857404}), :page 341}, :content {:text "私有变量包括函数参数、局部变量，以及函数内部定义的其他函数。"}, :properties {:color "yellow"}} {:id #uuid "63ce811e-9911-4a38-b64a-a02f6cb162c0", :page 341, :position {:bounding {:x1 115.01249998807907, :y1 727.6625061035156, :x2 703.2397338747978, :y2 747.1000061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 115.01249998807907, :y1 727.6625061035156, :x2 297.7131225466728, :y2 746.0625305175781, :width 897.9999999999999, :height 1121.26873857404} {:x1 310.1500121951103, :y1 728.7000122070312, :x2 703.2397338747978, :y2 747.1000061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 341}, :content {:text "特权方法（privileged method）是能够访问函数私有变量（及私有函数）的公有方法。"}, :properties {:color "yellow"}} {:id #uuid "63ce8149-9e7d-4bed-a1b7-914ca210e9a3", :page 342, :position {:bounding {:x1 380.0385619997978, :y1 127.5374755859375, :x2 736.7222167849541, :y2 145.93746948242188, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 380.0385619997978, :y1 127.5374755859375, :x2 736.7222167849541, :y2 145.93746948242188, :width 897.9999999999999, :height 1121.26873857404}), :page 342}, :content {:text "是因为定义在构造函数中的特权方法其实是一个闭包"}, :properties {:color "yellow"}} {:id #uuid "63ce818f-dac7-4510-bdee-d50c08dc5519", :page 342, :position {:bounding {:x1 201.82499998807907, :y1 628.0124969482422, :x2 320.0136291384697, :y2 651.2125091552734, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 201.82499998807907, :y1 628.0124969482422, :x2 320.0136291384697, :y2 651.2125091552734, :width 897.9999999999999, :height 1121.26873857404}), :page 342}, :content {:text "静态私有变量"}, :properties {:color "green"}} {:id #uuid "63ce81ac-6423-45f5-a5a2-43df5429e615", :page 342, :position {:bounding {:x1 0, :y1 568.1374893188477, :x2 814.3902465701103, :y2 609.8874893188477, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 674.6761352419853, :y1 568.1374893188477, :x2 814.3902465701103, :y2 586.5375137329102, :width 897.9999999999999, :height 1121.26873857404} {:x1 0, :y1 574.4000015258789, :x2 0, :y2 593.6000137329102, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 591.4875259399414, :x2 381.4797469973564, :y2 609.8874893188477, :width 897.9999999999999, :height 1121.26873857404}), :page 342}, :content {:text "构造函数模式的缺点是每个实例都会重新创建一遍新方法。"}, :properties {:color "yellow"}} {:id #uuid "63ce821a-5640-4199-9dfa-0847dbfcb7ee", :page 343, :position {:bounding {:x1 169.2250091433525, :y1 893.7750244140625, :x2 248.01323240995407, :y2 916.9750061035156, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 169.2250091433525, :y1 893.7750244140625, :x2 248.01323240995407, :y2 916.9750061035156, :width 897.9999999999999, :height 1121.26873857404}), :page 343}, :content {:text "模块模式"}, :properties {:color "green"}} {:id #uuid "63ce8239-640f-4f7a-a73d-d99e7da0ae39", :page 344, :position {:bounding {:x1 147.64999693632126, :y1 198.56253051757812, :x2 736.9115325808525, :y2 216.96249389648438, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 147.64999693632126, :y1 198.56253051757812, :x2 736.9115325808525, :y2 216.96249389648438, :width 897.9999999999999, :height 1121.26873857404}), :page 344}, :content {:text "模块模式是在单例对象基础上加以扩展，使其通过作用域链来关联私有变量和特权方法"}, :properties {:color "yellow"}} {:id #uuid "63ce829f-8fc5-4cb3-9c1f-d620e1e3b561", :page 344, :position {:bounding {:x1 0, :y1 608.5250015258789, :x2 814.2578002810478, :y2 650.1750259399414, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 488.5933715701103, :y1 608.5250015258789, :x2 814.2578002810478, :y2 626.9250259399414, :width 897.9999999999999, :height 1121.26873857404} {:x1 0, :y1 622.4000015258789, :x2 0, :y2 641.6000137329102, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 631.7750015258789, :x2 381.4444686770439, :y2 650.1750259399414, :width 897.9999999999999, :height 1121.26873857404}), :page 344}, :content {:text "如果单例对象需要进行某种初始化，并且需要访问私有变量时，那就可以采用这个模式"}, :properties {:color "yellow"}} {:id #uuid "63ce82e2-12ad-474f-9bb2-f613f5bb1850", :page 344, :position {:bounding {:x1 0, :y1 942.3999938964844, :x2 822.2750121951103, :y2 1029.1999816894531, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 942.3999938964844, :x2 0, :y2 961.6000061035156, :width 897.9999999999999, :height 1121.26873857404} {:x1 373.2401916384697, :y1 987.5500183105469, :x2 822.2750121951103, :y2 1005.9499816894531, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.42499846220016, :y1 1010.8000183105469, :x2 489.46318358182907, :y2 1029.1999816894531, :width 897.9999999999999, :height 1121.26873857404}), :page 344}, :content {:text "创建这个对象之后，内部就会创建一个私有的数组 components，然后将一个 BaseComponent 组件的新实例添加到数组"}, :properties {:color "yellow"}} {:id #uuid "63ce834d-625e-4729-8bef-c2abeeab91dd", :page 345, :position {:bounding {:x1 169.2250091433525, :y1 303.6500015258789, :x2 287.41362303495407, :y2 326.8499984741211, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 169.2250091433525, :y1 303.6500015258789, :x2 287.41362303495407, :y2 326.8499984741211, :width 897.9999999999999, :height 1121.26873857404}), :page 345}, :content {:text "模块增强模式"}, :properties {:color "green"}} {:id #uuid "63ce8361-f411-44d1-8337-fa2b96fbe31d", :page 345, :position {:bounding {:x1 0, :y1 62.399993896484375, :x2 781.73904722929, :y2 239.0374755859375, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 62.399993896484375, :x2 0, :y2 81.60000610351562, :width 897.9999999999999, :height 1121.26873857404} {:x1 239.06863707304, :y1 197.375, :x2 781.73904722929, :y2 215.7750244140625, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.81250303983688, :y1 220.63751220703125, :x2 285.86439818143845, :y2 239.0374755859375, :width 897.9999999999999, :height 1121.26873857404}), :page 345}, :content {:text "例对象作为一个模块，经过初始化可以包含某些私有的数据，而这些数据又可以通过其暴露的公共方法来访问"}, :properties {:color "yellow"}} {:id #uuid "63ce836a-179c-4597-9db1-1a1bc860f105", :page 345, :position {:bounding {:x1 0, :y1 142.40000915527344, :x2 781.8199951052666, :y2 385.7875213623047, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 0, :y1 142.40000915527344, :x2 0, :y2 161.59999084472656, :width 897.9999999999999, :height 1121.26873857404} {:x1 317.70024412870407, :y1 344.0500030517578, :x2 781.8199951052666, :y2 362.4499969482422, :width 897.9999999999999, :height 1121.26873857404} {:x1 83.82499998807907, :y1 367.3874969482422, :x2 458.0508911013603, :y2 385.7875213623047, :width 897.9999999999999, :height 1121.26873857404}), :page 345}, :content {:text "在返回对象之前先对其进行增强。这适合单例对象需要是某个特定类型的实例，但又必须给它添加额外属性或方法的场景。"}, :properties {:color "yellow"}} {:id #uuid "63ce8391-b1c1-41ac-b557-188a3912ffe0", :page 346, :position {:bounding {:x1 0, :y1 299.81251525878906, :x2 814.4919311404228, :y2 401.59999084472656, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 162.82980650663376, :y1 299.81251525878906, :x2 814.4919311404228, :y2 318.21253967285156, :width 897.9999999999999, :height 1121.26873857404} {:x1 295.8000060915947, :y1 321.91249084472656, :x2 456.02626341581345, :y2 340.31251525878906, :width 897.9999999999999, :height 1121.26873857404} {:x1 116.41250151395798, :y1 323.06251525878906, :x2 276.6448547244072, :y2 341.4624786376953, :width 897.9999999999999, :height 1121.26873857404} {:x1 0, :y1 382.3999786376953, :x2 0, :y2 401.59999084472656, :width 897.9999999999999, :height 1121.26873857404}), :page 346}, :content {:text "主要区别在于这里创建了一个名为 app 的变量，其中保存了 BaseComponent 组件的实例。这是最终要变成 application 的那个对象的局部版本"}, :properties {:color "yellow"}} {:id #uuid "63ce8478-3ef3-4354-b849-433f84163d2b", :page 347, :position {:bounding {:x1 149.8000060915947, :y1 660.1625061035156, :x2 241.682162463665, :y2 687.3625183105469, :width 897.9999999999999, :height 1121.26873857404}, :rects ({:x1 149.8000060915947, :y1 660.1625061035156, :x2 241.682162463665, :y2 687.3625183105469, :width 897.9999999999999, :height 1121.26873857404}), :page 347}, :content {:text "异步编程"}, :properties {:color "green"}} {:id #uuid "63cfc53f-b92e-412f-a143-49643015aec5", :page 347, :position {:bounding {:x1 116.67500448226929, :y1 442.3500061035156, :x2 734.7500853538513, :y2 464.75001525878906, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.67500448226929, :y1 442.3500061035156, :x2 734.7500853538513, :y2 464.75001525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.67500448226929, :y1 446.3500061035156, :x2 376.99376821517944, :y2 462.15000915527344, :width 911.6666666666666, :height 1138.3333333333333}), :page 347}, :content {:text "ECMAScript 6 新增了正式的 Promise（期约）引用类型，支持优雅地定义和组织异步逻"}, :properties {:color "yellow"}} {:id #uuid "63cfc562-c06d-4053-bc4b-cc7cf727b926", :page 347, :position {:bounding {:x1 0, :y1 124.80001068115234, :x2 676.7513915896416, :y2 413.3000183105469, :width 768.9999999999999, :height 960.1956124314441}, :rects ({:x1 0, :y1 124.80001068115234, :x2 0, :y2 147.20000457763672, :width 768.9999999999999, :height 960.1956124314441} {:x1 649.4858276247978, :y1 374.18751525878906, :x2 676.7513915896416, :y2 393.38751220703125, :width 768.9999999999999, :height 960.1956124314441} {:x1 71.78750151395798, :y1 394.1000061035156, :x2 486.11317747831345, :y2 413.3000183105469, :width 768.9999999999999, :height 960.1956124314441} {:x1 71.78750151395798, :y1 397.3000183105469, :x2 264.03749388456345, :y2 410.62501525878906, :width 768.9999999999999, :height 960.1956124314441}), :page 347}, :content {:text "接下来几个版本增加了使用 async 和 await 关键字定义异步函数的机制。"}, :properties {:color "yellow"}} {:id #uuid "63cfc57d-624c-4b6d-935d-e19807c032aa", :page 347, :position {:bounding {:x1 0, :y1 204.80001068115234, :x2 723.25830078125, :y2 614.5250244140625, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 204.80001068115234, :x2 0, :y2 227.20001220703125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 129, :y1 569.9375305175781, :x2 723.25830078125, :y2 592.3375244140625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 406.1750183105469, :y1 573.9375305175781, :x2 723.25830078125, :y2 589.3125305175781, :width 887.0000000000001, :height 1107.5338208409507} {:x1 129, :y1 592.1250305175781, :x2 205.0124053955078, :y2 614.5250244140625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 129, :y1 596.1250305175781, :x2 205.0124053955078, :y2 611.5000305175781, :width 887.0000000000001, :height 1107.5338208409507}), :page 347}, :content {:text "此外，浏览器控制台的输出经常能打印出 JavaScript 运行中无法获取的对象信息（比如期约的状态）"}, :properties {:color "yellow"}} {:id #uuid "63cfc590-e8a1-495c-a81c-5d6f78306290", :page 348, :position {:bounding {:x1 145.83750915527344, :y1 168.46250915527344, :x2 635.6958618164062, :y2 191.8874969482422, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 260.0249938964844, :y1 168.46250915527344, :x2 489.7973327636719, :y2 190.8625030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 499.8000183105469, :y1 168.46250915527344, :x2 635.6958618164062, :y2 190.8625030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 145.83750915527344, :y1 169.4875030517578, :x2 250.0207977294922, :y2 191.8874969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 260.0249938964844, :y1 172.46250915527344, :x2 489.7973327636719, :y2 187.83750915527344, :width 887.0000000000001, :height 1107.5338208409507} {:x1 499.8000183105469, :y1 172.46250915527344, :x2 543.4442749023438, :y2 187.83750915527344, :width 887.0000000000001, :height 1107.5338208409507} {:x1 191.96250915527344, :y1 173.4875030517578, :x2 250.0207977294922, :y2 188.8625030517578, :width 887.0000000000001, :height 1107.5338208409507}), :page 348}, :content {:text "这两行 JavaScript 代码对应的低级指令（从 JavaScript 到 x86）并不难想象"}, :properties {:color "yellow"}} {:id #uuid "63cfc59e-73a6-4266-b138-b9024264c5a2", :page 348, :position {:bounding {:x1 206.16250610351562, :y1 260.4124946594238, :x2 661.9755249023438, :y2 282.8125190734863, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 206.16250610351562, :y1 260.4124946594238, :x2 661.9755249023438, :y2 282.8125190734863, :width 887.0000000000001, :height 1107.5338208409507}), :page 348}, :content {:text "异步行为类似于系统中断，即当前进程外部的实体可以触发代码执行"}, :properties {:color "yellow"}} {:id #uuid "63cfc624-79d6-43da-a671-0bab4845ece9", :page 348, :position {:bounding {:x1 145.83750915527344, :y1 330.4375190734863, :x2 572.2367401123047, :y2 352.8375129699707, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 145.83750915527344, :y1 330.4375190734863, :x2 572.2367401123047, :y2 352.8375129699707, :width 887.0000000000001, :height 1107.5338208409507}), :page 348}, :content {:text "异步操作的例子可以是在定时回调中执行一次简单的数学计算："}, :properties {:color "yellow"}} {:id #uuid "63cfc662-2d8a-4846-96ec-a81aa2a0e61e", :page 348, :position {:bounding {:x1 296.7730407714844, :y1 465.85002517700195, :x2 417.955078125, :y2 488.2499885559082, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 296.7730407714844, :y1 465.85002517700195, :x2 417.955078125, :y2 488.2499885559082, :width 887.0000000000001, :height 1107.5338208409507}), :page 348}, :content {:text "由系统计时器触发"}, :properties {:color "yellow"}} {:id #uuid "63cfc665-0f18-4593-8904-31dfbedd1249", :page 348, :position {:bounding {:x1 493.6938171386719, :y1 465.85002517700195, :x2 660.319091796875, :y2 488.2499885559082, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 493.6938171386719, :y1 465.85002517700195, :x2 660.319091796875, :y2 488.2499885559082, :width 887.0000000000001, :height 1107.5338208409507}), :page 348}, :content {:text "成一个入队执行的中断。"}, :properties {:color "yellow"}} {:id #uuid "63cfc698-b94f-49d8-a1b2-5a2682469269", :page 348, :position {:bounding {:x1 0, :y1 620.8000183105469, :x2 802.5490112304688, :y2 748.1125183105469, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 620.8000183105469, :x2 0, :y2 643.2000122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 634.3125, :y1 701.7250061035156, :x2 802.5490112304688, :y2 724.1250305175781, :width 887.0000000000001, :height 1107.5338208409507} {:x1 518.31396484375, :y1 702.7500305175781, :x2 624.3036499023438, :y2 725.1500244140625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 634.3125, :y1 705.7250061035156, :x2 802.5490112304688, :y2 721.1000061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 566.2125244140625, :y1 706.7500305175781, :x2 624.3036499023438, :y2 722.1250305175781, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 725.7125244140625, :x2 251.31729125976562, :y2 748.1125183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 348}, :content {:text "早期的 JavaScript 中，只支持定义回调函数来表明异步操作完成"}, :properties {:color "yellow"}} {:id #uuid "63cfc6ce-67f2-499b-9e71-9196105298be", :page 348, :position {:bounding {:x1 0, :y1 764.8000335693359, :x2 803.4848022460938, :y2 945.237548828125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 764.8000335693359, :x2 0, :y2 787.2000427246094, :width 887.0000000000001, :height 1107.5338208409507} {:x1 620.0499877929688, :y1 900.3125305175781, :x2 696.1970825195312, :y2 921.112548828125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 707.7125244140625, :y1 900.3125305175781, :x2 803.4848022460938, :y2 921.112548828125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 707.7125244140625, :y1 903.5125427246094, :x2 803.4848022460938, :y2 918.112548828125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 922.8375549316406, :x2 389.11866760253906, :y2 945.237548828125, :width 887.0000000000001, :height 1107.5338208409507}), :page 348}, :content {:text "setTimeout 可以定义一个在指定时间之后会被调度执行的回调函数"}, :properties {:color "yellow"}} {:id #uuid "63cfc731-6bac-41be-8f09-b4a06d8c8042", :page 348, :position {:bounding {:x1 312.984619140625, :y1 968.8500213623047, :x2 755.789794921875, :y2 991.2625122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 385.2749938964844, :y1 968.8500213623047, :x2 511.4345703125, :y2 991.2500152587891, :width 887.0000000000001, :height 1107.5338208409507} {:x1 312.984619140625, :y1 968.8625183105469, :x2 371.9506530761719, :y2 991.2625122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 522.9500122070312, :y1 969.3000183105469, :x2 755.789794921875, :y2 990.1000213623047, :width 887.0000000000001, :height 1107.5338208409507} {:x1 315.2250061035156, :y1 972.5000152587891, :x2 371.9506530761719, :y2 987.1000213623047, :width 887.0000000000001, :height 1107.5338208409507} {:x1 522.9500122070312, :y1 972.5000152587891, :x2 523.127685546875, :y2 987.1000213623047, :width 887.0000000000001, :height 1107.5338208409507} {:x1 385.2749938964844, :y1 972.8500213623047, :x2 511.4345703125, :y2 988.2250213623047, :width 887.0000000000001, :height 1107.5338208409507}), :page 348}, :content {:text "double()函数在 setTimeout 成功调度异步操作之后会立即退出"}, :properties {:color "yellow"}} {:id #uuid "63cfc7bc-7aca-4b18-bbba-6b696432f61c", :page 350, :position {:bounding {:x1 180.1750030517578, :y1 346.875, :x2 224.9939727783203, :y2 378.875, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 180.1750030517578, :y1 346.875, :x2 224.9939727783203, :y2 378.875, :width 887.0000000000001, :height 1107.5338208409507}), :page 350}, :content {:text "期约"}, :properties {:color "green"}} {:id #uuid "63cfc8bd-26f4-424c-9f9b-6b13f406f079", :page 350, :position {:bounding {:x1 288.4356384277344, :y1 816.2000122070312, :x2 633.8322143554688, :y2 838.6000061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 288.4356384277344, :y1 816.2000122070312, :x2 633.8322143554688, :y2 838.6000061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 350.5375061035156, :y1 820.2000122070312, :x2 525.6749877929688, :y2 835.5750122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 350}, :content {:text "引用类型 Promise，可以通过 new 操作符来实例化"}, :properties {:color "yellow"}} {:id #uuid "63cfc8cb-b693-41fa-b3e6-40e096c47f67", :page 350, :position {:bounding {:x1 187.08750915527344, :y1 776.2875289916992, :x2 263.92254638671875, :y2 804.2875289916992, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 187.08750915527344, :y1 776.2875289916992, :x2 263.92254638671875, :y2 804.2875289916992, :width 887.0000000000001, :height 1107.5338208409507}), :page 350}, :content {:text "期约基础"}, :properties {:color "green"}} {:id #uuid "63cfcbd9-11e9-4923-8431-983e38a8abd4", :page 350, :position {:bounding {:x1 0, :y1 652.8000183105469, :x2 801.3382568359375, :y2 861.5625305175781, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 652.8000183105469, :x2 0, :y2 675.2000122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 649.06005859375, :y1 816.2000122070312, :x2 801.3382568359375, :y2 838.6000061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 839.1625061035156, :x2 334.86431884765625, :y2 861.5625305175781, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 843.1625061035156, :x2 222.0350799560547, :y2 858.5375061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 350}, :content {:text "创建新期约时需要传入执行器（executor）函数作为参数"}, :properties {:color "yellow"}} {:id #uuid "63cfcdeb-dc28-4def-b890-e5d62202810d", :page 350, :position {:bounding {:x1 409.50848388671875, :y1 1001.0625, :x2 748.6781005859375, :y2 1023.4624938964844, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 409.50848388671875, :y1 1001.0625, :x2 748.6781005859375, :y2 1023.4624938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 688.2999877929688, :y1 1005.0625, :x2 700.0384521484375, :y2 1020.4375, :width 887.0000000000001, :height 1107.5338208409507}), :page 350}, :content {:text "期约是一个有状态的对象，可能处于如下 3 种状态"}, :properties {:color "yellow"}} {:id #uuid "63cfce35-30a8-4693-9b98-d6a2bfe08aac", :page 351, :position {:bounding {:x1 0, :y1 76.80000305175781, :x2 768.1940307617188, :y2 260.87501525878906, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 76.80000305175781, :x2 0, :y2 99.19999694824219, :width 887.0000000000001, :height 1107.5338208409507} {:x1 707.422119140625, :y1 215.50001525878906, :x2 768.1940307617188, :y2 237.90000915527344, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7750015258789, :y1 238.47499084472656, :x2 385.72330474853516, :y2 260.87501525878906, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "只要从待定转换为兑现或拒绝，期约的状态就不再改变"}, :properties {:color "yellow"}} {:id #uuid "63cfce65-d6ad-48d2-867a-aba9b6e5a2fa", :page 351, :position {:bounding {:x1 0, :y1 140.8000030517578, :x2 769.2732543945312, :y2 352.8249969482422, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 140.8000030517578, :x2 0, :y2 163.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 571.292236328125, :y1 307.46250915527344, :x2 769.2732543945312, :y2 329.86253356933594, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.76250457763672, :y1 330.42503356933594, :x2 341.6892623901367, :y2 352.8249969482422, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "这主要是为了避免根据读取到的期约状态，以同步方式处理期约对象"}, :properties {:color "yellow"}} {:id #uuid "63cfcece-6ed7-40a4-a93a-7c94e10328f6", :page 351, :position {:bounding {:x1 113.5999984741211, :y1 402.825008392334, :x2 496.6966781616211, :y2 425.22500228881836, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 113.5999984741211, :y1 402.825008392334, :x2 496.6966781616211, :y2 425.22500228881836, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "期约主要有两大用途。首先是抽象地表示一个异步操作。"}, :properties {:color "yellow"}} {:id #uuid "63cfceeb-0ba8-4c37-9565-8103568b69ff", :page 351, :position {:bounding {:x1 0, :y1 300.79999923706055, :x2 764.9601135253906, :y2 586.1750144958496, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 300.79999923706055, :x2 0, :y2 323.200008392334, :width 887.0000000000001, :height 1107.5338208409507} {:x1 249.95095825195312, :y1 540.7125205993652, :x2 764.9601135253906, :y2 563.1125144958496, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 563.7750205993652, :x2 128.22975158691406, :y2 586.1750144958496, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "期约封装的异步操作会实际生成某个值，而程序期待期约状态改变时可以访问这个值"}, :properties {:color "yellow"}} {:id #uuid "63cfcef4-7f1c-4850-be36-0dbd3a13b976", :page 351, :position {:bounding {:x1 0, :y1 316.7999954223633, :x2 764.4212036132812, :y2 609.1374969482422, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 316.7999954223633, :x2 0, :y2 339.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 734.1263427734375, :y1 563.7750091552734, :x2 764.4212036132812, :y2 586.1750030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 586.7375030517578, :x2 467.70391845703125, :y2 609.1374969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 590.7375030517578, :x2 467.70391845703125, :y2 606.1125030517578, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "设期约向服务器发送一个 HTTP 请求并预定会返回一个 JSON"}, :properties {:color "yellow"}} {:id #uuid "63cfcf14-28b7-455d-b82b-790363f1d2fe", :page 351, :position {:bounding {:x1 280.1539001464844, :y1 678.625, :x2 692.2590942382812, :y2 701.0249938964844, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 280.1539001464844, :y1 678.625, :x2 692.2590942382812, :y2 701.0249938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 634.25, :y1 681.6000061035156, :x2 692.2590942382812, :y2 696.9750061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "个期约只要状态切换为兑现，就会有一个私有的内部值（value"}, :properties {:color "yellow"}} {:id #uuid "63cfcf1c-6c3a-4120-8738-e16dbde0bfdd", :page 351, :position {:bounding {:x1 82.7874984741211, :y1 701.5874938964844, :x2 532.3478393554688, :y2 723.9875183105469, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 82.7874984741211, :y1 701.5874938964844, :x2 532.3478393554688, :y2 723.9875183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 451.1499938964844, :y1 704.5625, :x2 532.3478393554688, :y2 719.9375, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "每个期约只要状态切换为拒绝，就会有一个私有的内部理由（reason"}, :properties {:color "yellow"}} {:id #uuid "63cfcf40-ad3c-43fd-9f3a-bed0087ac441", :page 351, :position {:bounding {:x1 0, :y1 476.8000030517578, :x2 764.868896484375, :y2 842.3875122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 476.8000030517578, :x2 0, :y2 499.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 734.5785522460938, :y1 796.9375, :x2 764.868896484375, :y2 819.3374938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 819.9875183105469, :x2 567.5155563354492, :y2 842.3875122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "执行器函数主要有两项职责：初始化期约的异步行为和控制状态的最终转换。"}, :properties {:color "yellow"}} {:id #uuid "63cfcf6a-5469-4bc4-9460-fbbde3eae129", :page 351, :position {:bounding {:x1 0, :y1 508.8000030517578, :x2 771.7932739257812, :y2 888.3125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 508.8000030517578, :x2 0, :y2 531.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 740.7477416992188, :y1 842.9500122070312, :x2 771.7932739257812, :y2 865.3500366210938, :width 887.0000000000001, :height 1107.5338208409507} {:x1 161.60000610351562, :y1 865.9125366210938, :x2 298.6275634765625, :y2 888.3125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 866.3624877929688, :x2 140.52561950683594, :y2 887.1625366210938, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 869.5625, :x2 140.52561950683594, :y2 884.1625366210938, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "调用 resolve()会把状态切换为兑现"}, :properties {:color "yellow"}} {:id #uuid "63cfcf70-6ac8-4909-b199-b4b8e8b3bfb0", :page 351, :position {:bounding {:x1 313.8528747558594, :y1 865.9125366210938, :x2 557.7412719726562, :y2 888.3125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 313.8528747558594, :y1 865.9125366210938, :x2 397.99993896484375, :y2 888.3125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 420.70001220703125, :y1 865.9125366210938, :x2 557.7412719726562, :y2 888.3125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 346.3500061035156, :y1 869.9125366210938, :x2 397.99993896484375, :y2 885.2875366210938, :width 887.0000000000001, :height 1107.5338208409507}), :page 351}, :content {:text "调用 reject()会把状态切换为拒绝"}, :properties {:color "yellow"}} {:id #uuid "63cfd052-0d28-442f-a4e5-f39b722e5402", :page 352, :position {:bounding {:x1 160.3498992919922, :y1 146.5250244140625, :x2 739.2409057617188, :y2 168.92501831054688, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 160.3498992919922, :y1 146.5250244140625, :x2 739.2409057617188, :y2 168.92501831054688, :width 887.0000000000001, :height 1107.5338208409507} {:x1 374.8625183105469, :y1 149.5, :x2 404.1622619628906, :y2 164.875, :width 887.0000000000001, :height 1107.5338208409507}), :page 352}, :content {:text "这里的关键在于，执行器函数是同步执行的。这是因为执行器函数是期约的初始化程序"}, :properties {:color "yellow"}} {:id #uuid "63cfd07c-026a-4687-bcc4-bfe9b383108d", :page 352, :position {:bounding {:x1 0, :y1 524.8000183105469, :x2 803.7386474609375, :y2 575.0750122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 524.8000183105469, :x2 0, :y2 547.2000122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 526.6121826171875, :y1 530.7375183105469, :x2 722.5595703125, :y2 553.1375122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 734.0875244140625, :y1 531.1875, :x2 803.7386474609375, :y2 551.9875183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 734.0875244140625, :y1 534.3875122070312, :x2 803.7386474609375, :y2 548.9875183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 638.6749877929688, :y1 534.7375183105469, :x2 722.5595703125, :y2 550.1125183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 552.6750183105469, :x2 392.3732604980469, :y2 575.0750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 556.6750183105469, :x2 130.4884033203125, :y2 572.0500183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 352}, :content {:text "比如，可以通过 setTimeout 设置一个10 秒钟后无论如何都会拒绝期约的回调："}, :properties {:color "yellow"}} {:id #uuid "63cfd13c-ded7-4f9b-8b7c-235b2e8819fa", :page 352, :position {:bounding {:x1 145.83750915527344, :y1 903.0750122070312, :x2 604.8580322265625, :y2 925.4750366210938, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 145.83750915527344, :y1 903.0750122070312, :x2 481.9219665527344, :y2 925.4750366210938, :width 887.0000000000001, :height 1107.5338208409507} {:x1 514.2000122070312, :y1 903.0750122070312, :x2 604.8580322265625, :y2 925.4750366210938, :width 887.0000000000001, :height 1107.5338208409507} {:x1 361.4250183105469, :y1 907.0750122070312, :x2 481.9219665527344, :y2 922.4500122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 352}, :content {:text "这个解决的期约的值对应着传给 Promise.resolve()的第一个参数"}, :properties {:color "yellow"}} {:id #uuid "63cfd1a4-ef6b-4489-baef-236b97ba4878", :page 353, :position {:bounding {:x1 323.9875183105469, :y1 648.1625366210938, :x2 768.784423828125, :y2 671.012451171875, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 464.1875, :y1 648.1625366210938, :x2 768.784423828125, :y2 670.5625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 323.9875183105469, :y1 648.6124877929688, :x2 430.3058166503906, :y2 671.012451171875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 323.9875183105469, :y1 651.8125, :x2 430.3058166503906, :y2 666.4125366210938, :width 887.0000000000001, :height 1107.5338208409507}), :page 353}, :content {:text "Promise.reject()会实例化一个拒绝的期约并抛出一个异步错误"}, :properties {:color "yellow"}} {:id #uuid "63cfd1b7-93f9-4b52-aea9-9e7f6d0d65d3", :page 352, :position {:bounding {:x1 0, :y1 732.8000335693359, :x2 796.9229736328125, :y2 858.925048828125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 732.8000335693359, :x2 0, :y2 755.2000427246094, :width 887.0000000000001, :height 1107.5338208409507} {:x1 748.0906372070312, :y1 813.5750427246094, :x2 796.9229736328125, :y2 835.9750366210938, :width 887.0000000000001, :height 1107.5338208409507} {:x1 263.8500061035156, :y1 836.5250549316406, :x2 522.7938842773438, :y2 858.925048828125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 836.9750366210938, :x2 231.58445739746094, :y2 857.7750549316406, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 840.175048828125, :x2 231.58445739746094, :y2 854.7750549316406, :width 887.0000000000001, :height 1107.5338208409507}), :page 352}, :content {:text "过调用 Promise.resolve()静态方法，可以实例化一个解决的期约"}, :properties {:color "yellow"}} {:id #uuid "63cfd26e-901e-4276-9068-dcbd9b517e74", :page 353, :position {:bounding {:x1 0, :y1 524.8000183105469, :x2 769.8314208984375, :y2 926.3624877929688, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 524.8000183105469, :x2 0, :y2 547.2000122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 649.1063232421875, :y1 880.9874877929688, :x2 769.8314208984375, :y2 903.3875122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 903.9625244140625, :x2 448.2980499267578, :y2 926.3624877929688, :width 887.0000000000001, :height 1107.5338208409507}), :page 353}, :content {:text "如果给它传一个期约对象，则这个期约会成为它返回的拒绝期约的理由："}, :properties {:color "yellow"}} {:id #uuid "63cfd295-b4e6-42a1-9375-8280aa26e73b", :page 354, :position {:bounding {:x1 145.83750915527344, :y1 344.12499237060547, :x2 696.3348388671875, :y2 366.52501678466797, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 145.83750915527344, :y1 344.12499237060547, :x2 696.3348388671875, :y2 366.52501678466797, :width 887.0000000000001, :height 1107.5338208409507} {:x1 191.9499969482422, :y1 348.12499237060547, :x2 649.1702880859375, :y2 363.49999237060547, :width 887.0000000000001, :height 1107.5338208409507}), :page 354}, :content {:text "第一个 try/catch 抛出并捕获了错误，第二个 try/catch 抛出错误却没有捕获到"}, :properties {:color "yellow"}} {:id #uuid "63cfd531-34ef-479a-af99-f0b21d9bdad5", :page 354, :position {:bounding {:x1 187.08750915527344, :y1 541.1250152587891, :x2 321.5487976074219, :y2 569.1250152587891, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 187.08750915527344, :y1 541.1250152587891, :x2 321.5487976074219, :y2 569.1250152587891, :width 887.0000000000001, :height 1107.5338208409507}), :page 354}, :content {:text "期约的实例方法"}, :properties {:color "green"}} {:id #uuid "63cfd592-3e44-4ddc-8b7d-bafea929e945", :page 354, :position {:bounding {:x1 145.83750915527344, :y1 581.0375213623047, :x2 572.2115325927734, :y2 603.4375152587891, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 145.83750915527344, :y1 581.0375213623047, :x2 572.2115325927734, :y2 603.4375152587891, :width 887.0000000000001, :height 1107.5338208409507}), :page 354}, :content {:text "期约实例的方法是连接外部同步代码与内部异步代码之间的桥梁"}, :properties {:color "yellow"}} {:id #uuid "63cfd5aa-fcf3-4ff2-b448-54c584f0313e", :page 354, :position {:bounding {:x1 162.96250915527344, :y1 654.8375091552734, :x2 301.2327575683594, :y2 677.2375183105469, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 162.96250915527344, :y1 654.8375091552734, :x2 301.2327575683594, :y2 677.2375183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 193.71250915527344, :y1 658.8375091552734, :x2 267.8278503417969, :y2 674.2125091552734, :width 887.0000000000001, :height 1107.5338208409507}), :page 354}, :content {:text "实现 Thenable 接口"}, :properties {:color "green"}} {:id #uuid "63cfd5b3-fd47-483f-babf-eb3e02fd3358", :page 354, :position {:bounding {:x1 162.96250915527344, :y1 896.0375061035156, :x2 331.3197021484375, :y2 916.8375244140625, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 162.96250915527344, :y1 896.0375061035156, :x2 331.3197021484375, :y2 916.8375244140625, :width 887.0000000000001, :height 1107.5338208409507}), :page 354}, :content {:text "Promise.prototype.then()"}, :properties {:color "green"}} {:id #uuid "63cfd5ed-1986-4076-a831-5df70ca32455", :page 355, :position {:bounding {:x1 113.63750457763672, :y1 378.5624694824219, :x2 570.5328903198242, :y2 400.9624938964844, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 113.63750457763672, :y1 378.5624694824219, :x2 570.5328903198242, :y2 400.9624938964844, :width 887.0000000000001, :height 1107.5338208409507}), :page 355}, :content {:text "因为期约只能转换为最终状态一次，所以这两个操作一定是互斥的。"}, :properties {:color "yellow"}} {:id #uuid "63cfd67c-c27f-4c0f-bd1b-7c1548c29d43", :page 355, :position {:bounding {:x1 0, :y1 252.80000019073486, :x2 771.9744262695312, :y2 469.8500061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 252.80000019073486, :x2 0, :y2 275.20000171661377, :width 887.0000000000001, :height 1107.5338208409507} {:x1 143.5913543701172, :y1 424.4875030517578, :x2 315.7102966308594, :y2 446.8874969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 741.7625122070312, :y1 424.4875030517578, :x2 771.9744262695312, :y2 446.8874969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 328.07501220703125, :y1 424.9375, :x2 731.2767944335938, :y2 445.7375030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 328.07501220703125, :y1 428.1374969482422, :x2 731.2767944335938, :y2 442.7375030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 236.5, :y1 428.4875030517578, :x2 315.7102966308594, :y2 443.8625030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 741.7625122070312, :y1 428.4875030517578, :x2 771.9744262695312, :y2 443.8625030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 447.4499969482422, :x2 646.3739852905273, :y2 469.8500061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 355}, :content {:text "如果想只提供 onRejected 参数，那就要在 onResolved 参数的位置上传入 undefined。这样有助于避免在内存中创建多余的对象，对期待函数参数的类型系统也是一个交代。"}, :properties {:color "yellow"}} {:id #uuid "63cfd6ca-53dc-411b-a5f3-dd8cccc94328", :page 355, :position {:bounding {:x1 0, :y1 588.8000030517578, :x2 770.3196411132812, :y2 903.2000427246094, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 588.8000030517578, :x2 0, :y2 611.2000122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 587.5250244140625, :y1 857.8375244140625, :x2 770.3196411132812, :y2 880.2375183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 231.65000915527344, :y1 880.8000183105469, :x2 353.491943359375, :y2 903.2000427246094, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 881.25, :x2 199.37196350097656, :y2 902.0500183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 884.4500122070312, :x2 199.37196350097656, :y2 899.0500183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 355}, :content {:text "该处理程序的返回值会通过 Promise.resolve()包装来生成新期约"}, :properties {:color "yellow"}} {:id #uuid "63cfd7a5-e8ef-4fcf-b947-442194016ff4", :page 355, :position {:bounding {:x1 0, :y1 604.7999992370605, :x2 771.8800048828125, :y2 926.1625061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 604.7999992370605, :x2 0, :y2 627.1999988555908, :width 887.0000000000001, :height 1107.5338208409507} {:x1 383.9524230957031, :y1 880.8000030517578, :x2 709.1769409179688, :y2 903.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 741.4750366210938, :y1 880.8000030517578, :x2 771.8800048828125, :y2 903.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 585.8624877929688, :y1 884.8000030517578, :x2 709.1769409179688, :y2 900.1750030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 741.4750366210938, :y1 884.8000030517578, :x2 771.8800048828125, :y2 900.1750030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 903.7624969482422, :x2 294.80245208740234, :y2 926.1625061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 355}, :content {:text "果没有提供这个处理程序，则 Promise.resolve()就会包装上一个期约解决之后的值。"}, :properties {:color "yellow"}} {:id #uuid "63cfd7ab-73e5-4920-b344-18378d5c8978", :page 355, :position {:bounding {:x1 0, :y1 620.7999992370605, :x2 770.852294921875, :y2 949.2250061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 620.7999992370605, :x2 0, :y2 643.2000007629395, :width 887.0000000000001, :height 1107.5338208409507} {:x1 309.9463806152344, :y1 903.7624969482422, :x2 616.77197265625, :y2 926.1625061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 649.0499877929688, :y1 903.7624969482422, :x2 770.852294921875, :y2 926.1625061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 496.25, :y1 907.7625122070312, :x2 616.77197265625, :y2 923.1375122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 649.0499877929688, :y1 907.7625122070312, :x2 770.852294921875, :y2 923.1375122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 926.8250122070312, :x2 170.3643035888672, :y2 949.2250061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 930.8250122070312, :x2 170.3643035888672, :y2 946.2000122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 355}, :content {:text "果没有显式的返回语句，则 Promise.resolve()会包装默认的返回值 undefined"}, :properties {:color "yellow"}} {:id #uuid "63cfd7e8-b156-43a9-bcf0-42af74d8cfbe", :page 356, :position {:bounding {:x1 170.5500030517578, :y1 450.18749237060547, :x2 385.9403991699219, :y2 468.58751678466797, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 170.5500030517578, :y1 450.18749237060547, :x2 275.5284118652344, :y2 468.58751678466797, :width 887.0000000000001, :height 1107.5338208409507} {:x1 302.875, :y1 450.18749237060547, :x2 385.9403991699219, :y2 468.58751678466797, :width 887.0000000000001, :height 1107.5338208409507}), :page 356}, :content {:text "Promise.resolve()保留返回的期约"}, :properties {:color "yellow"}} {:id #uuid "63cfd8a8-c384-40d9-975d-2ae6324424d4", :page 356, :position {:bounding {:x1 145.83750915527344, :y1 568.2874984741211, :x2 343.8346252441406, :y2 590.6875228881836, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 145.83750915527344, :y1 568.2874984741211, :x2 343.8346252441406, :y2 590.6875228881836, :width 887.0000000000001, :height 1107.5338208409507}), :page 356}, :content {:text "抛出异常会返回拒绝的期约："}, :properties {:color "yellow"}} {:id #uuid "63cfd8af-f34f-4837-92e1-567091e950c2", :page 356, :position {:bounding {:x1 191.52914428710938, :y1 696.4250106811523, :x2 739.8288269042969, :y2 718.8250350952148, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 191.52914428710938, :y1 696.4250106811523, :x2 739.8288269042969, :y2 718.8250350952148, :width 887.0000000000001, :height 1107.5338208409507}), :page 356}, :content {:text "返回错误值不会触发上面的拒绝行为，而会把错误对象包装在一个解决的期约中："}, :properties {:color "yellow"}} {:id #uuid "63cfd8c1-747d-4bdf-93db-092a7e871a93", :page 356, :position {:bounding {:x1 160.68954467773438, :y1 855.1125183105469, :x2 724.1938171386719, :y2 877.5125122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 160.68954467773438, :y1 855.1125183105469, :x2 724.1938171386719, :y2 877.5125122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 356}, :content {:text "拒绝处理程序在捕获错误后不抛出异常是符合期约的行为，应该返回一个解决期约。"}, :properties {:color "yellow"}} {:id #uuid "63cfdaa7-c538-4d42-b040-9236574def56", :page 357, :position {:bounding {:x1 125.20654296875, :y1 753.0500183105469, :x2 305.0440368652344, :y2 775.4500122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 125.20654296875, :y1 753.0500183105469, :x2 305.0440368652344, :y2 775.4500122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 126.4625015258789, :y1 757.0500183105469, :x2 126.76863861083984, :y2 772.4250183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 357}, :content {:text " Promise.prototype.catch()"}, :properties {:color "green"}} {:id #uuid "63cfdab8-1b1c-4558-9a50-7ee0a8169b6e", :page 354, :position {:bounding {:x1 369.5704040527344, :y1 914.9499816894531, :x2 613.2965698242188, :y2 937.3500061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 369.5704040527344, :y1 914.9499816894531, :x2 613.2965698242188, :y2 937.3500061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 354}, :content {:text "为期约实例添加处理程序的主要方法"}, :properties {:color "yellow"}} {:id #uuid "63cfdac3-df32-467c-9042-7866064483fd", :page 357, :position {:bounding {:x1 362.4217224121094, :y1 772.4125061035156, :x2 564.8755493164062, :y2 794.8125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 362.4217224121094, :y1 772.4125061035156, :x2 564.8755493164062, :y2 794.8125, :width 887.0000000000001, :height 1107.5338208409507}), :page 357}, :content {:text "用于给期约添加拒绝处理程序"}, :properties {:color "yellow"}} {:id #uuid "63cfdaca-bdaa-4471-b528-4dd1c2fbe783", :page 357, :position {:bounding {:x1 0, :y1 412.80000591278076, :x2 767.3292846679688, :y2 816.625, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 412.80000591278076, :x2 0, :y2 435.20000743865967, :width 887.0000000000001, :height 1107.5338208409507} {:x1 642.7423706054688, :y1 772.4125061035156, :x2 767.3292846679688, :y2 794.8125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 795.8250122070312, :x2 157.99754333496094, :y2 816.625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 170.35000610351562, :y1 795.8250122070312, :x2 233.8849334716797, :y2 816.625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 799.0250244140625, :x2 157.99754333496094, :y2 813.625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 170.35000610351562, :y1 799.0250244140625, :x2 170.46067810058594, :y2 813.625, :width 887.0000000000001, :height 1107.5338208409507}), :page 357}, :content {:text "只接收一个参数： onRejected 处理程序"}, :properties {:color "yellow"}} {:id #uuid "63cfdad4-c3bc-463b-b96a-7d8be5cca330", :page 357, :position {:bounding {:x1 0, :y1 428.8000068664551, :x2 743.3656616210938, :y2 839.5750122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 428.8000068664551, :x2 0, :y2 451.200008392334, :width 887.0000000000001, :height 1107.5338208409507} {:x1 296.25, :y1 795.375, :x2 743.3656616210938, :y2 817.7750244140625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 473.3999938964844, :y1 799.375, :x2 743.3656616210938, :y2 814.75, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 818.7750244140625, :x2 147.92758178710938, :y2 839.5750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 170.35000610351562, :y1 818.7750244140625, :x2 259.1659851074219, :y2 839.5750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 821.9750061035156, :x2 147.92758178710938, :y2 836.5750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 170.35000610351562, :y1 821.9750061035156, :x2 259.1659851074219, :y2 836.5750122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 357}, :content {:text "这个方法就是一个语法糖，调用它就相当于调用 Promise.prototype. then(null, onRejected)"}, :properties {:color "yellow"}} {:id #uuid "63cfdb53-9356-421a-b06f-7f69b9edff62", :page 358, :position {:bounding {:x1 162.96250915527344, :y1 260.2249984741211, :x2 342.3063659667969, :y2 281.0250015258789, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 162.96250915527344, :y1 260.2249984741211, :x2 342.3063659667969, :y2 281.0250015258789, :width 887.0000000000001, :height 1107.5338208409507}), :page 358}, :content {:text "Promise.prototype.finally()"}, :properties {:color "green"}} {:id #uuid "63cfdb5e-384b-4214-adc5-ccb433460614", :page 358, :position {:bounding {:x1 411.0580139160156, :y1 279.12500762939453, :x2 666.6094970703125, :y2 301.5250015258789, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 411.0580139160156, :y1 279.12500762939453, :x2 584.7738037109375, :y2 301.5250015258789, :width 887.0000000000001, :height 1107.5338208409507} {:x1 601.9500122070312, :y1 279.5750045776367, :x2 666.6094970703125, :y2 300.37500762939453, :width 887.0000000000001, :height 1107.5338208409507} {:x1 601.9500122070312, :y1 282.7750015258789, :x2 604.875, :y2 297.37500762939453, :width 887.0000000000001, :height 1107.5338208409507} {:x1 519.1500244140625, :y1 283.12500762939453, :x2 584.7738037109375, :y2 298.50000762939453, :width 887.0000000000001, :height 1107.5338208409507}), :page 358}, :content {:text "用于给期约添加 onFinally 处理程序"}, :properties {:color "yellow"}} {:id #uuid "63cfdb8a-f2e8-439d-9303-cbdac12bf81b", :page 358, :position {:bounding {:x1 0, :y1 279.12500762939453, :x2 802.2214965820312, :y2 387.2000045776367, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 681.677490234375, :y1 279.12500762939453, :x2 802.2214965820312, :y2 301.5250015258789, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 302.18750762939453, :x2 359.8959655761719, :y2 324.5875015258789, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 306.18750762939453, :x2 222.625, :y2 321.56250762939453, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 364.80001068115234, :x2 0, :y2 387.2000045776367, :width 887.0000000000001, :height 1107.5338208409507}), :page 358}, :content {:text "这个处理程序在期约转换为解决或拒绝状态时都会执行"}, :properties {:color "yellow"}} {:id #uuid "63cfdbe6-0d4e-4b47-a7f2-62e729c119de", :page 358, :position {:bounding {:x1 0, :y1 924.8000183105469, :x2 800.9031372070312, :y2 1001.1750183105469, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 924.8000183105469, :x2 0, :y2 947.2000122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 145.83750915527344, :y1 955.8125, :x2 458.3661804199219, :y2 978.2125244140625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 475.57501220703125, :y1 956.2625122070312, :x2 800.9031372070312, :y2 977.0625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 475.57501220703125, :y1 959.4625244140625, :x2 800.9031372070312, :y2 974.0625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 392.26251220703125, :y1 959.8125, :x2 458.3661804199219, :y2 975.1875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 978.7750244140625, :x2 514.3973388671875, :y2 1001.1750183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 982.7750244140625, :x2 427.7895050048828, :y2 998.1499938964844, :width 887.0000000000001, :height 1107.5338208409507}), :page 358}, :content {:text "如果返回的是一个待定的期约，或者 onFinally 处理程序抛出了错误（显式抛出或返回了一个拒绝期约），则会返回相应的期约（待定或拒绝），如下所示："}, :properties {:color "yellow"}} {:id #uuid "63cfdc3e-fab8-445d-a6f1-aca824bd8bae", :page 359, :position {:bounding {:x1 130.7624969482422, :y1 573.2000122070312, :x2 233.16490173339844, :y2 595.6000061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 130.7624969482422, :y1 573.2000122070312, :x2 233.16490173339844, :y2 595.6000061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 359}, :content {:text "非重入期约方法"}, :properties {:color "green"}} {:id #uuid "63cfdc49-1ed5-4a39-b9e2-56b25b2c047e", :page 359, :position {:bounding {:x1 113.63750457763672, :y1 594.75, :x2 664.2084350585938, :y2 617.1499938964844, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 113.63750457763672, :y1 594.75, :x2 664.2084350585938, :y2 617.1499938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 512.7999877929688, :y1 597.7250061035156, :x2 542.0077514648438, :y2 613.1000061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 359}, :content {:text "当期约进入落定状态时，与该状态相关的处理程序仅仅会被排期，而非立即执行。"}, :properties {:color "yellow"}} {:id #uuid "63cfdccc-212f-4beb-819c-554136ca37c9", :page 359, :position {:bounding {:x1 296.03802490234375, :y1 640.6749877929688, :x2 778.4625244140625, :y2 663.0750122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 296.03802490234375, :y1 640.6749877929688, :x2 642.442138671875, :y2 663.0750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 654.4750366210938, :y1 640.6749877929688, :x2 752.5822143554688, :y2 663.0750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 763.2625122070312, :y1 640.6749877929688, :x2 778.4625244140625, :y2 663.0750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 375.4250183105469, :y1 644.6749877929688, :x2 642.442138671875, :y2 660.0499877929688, :width 887.0000000000001, :height 1107.5338208409507} {:x1 654.4750366210938, :y1 644.6749877929688, :x2 752.5822143554688, :y2 660.0499877929688, :width 887.0000000000001, :height 1107.5338208409507}), :page 359}, :content {:text "这个特性由 JavaScript 运行时保证，被称为“非重入”（non-reentrancy）"}, :properties {:color "yellow"}} {:id #uuid "63cfddbd-c9b8-46f2-b300-80184e729954", :page 359, :position {:bounding {:x1 234.9783477783203, :y1 899.6750183105469, :x2 709.0888061523438, :y2 922.0750122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 234.9783477783203, :y1 899.6750183105469, :x2 418.78399658203125, :y2 922.0750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 430.9125061035156, :y1 899.6750183105469, :x2 709.0888061523438, :y2 922.0750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 374.3625183105469, :y1 903.6750183105469, :x2 418.78399658203125, :y2 919.0500183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 430.9125061035156, :y1 903.6750183105469, :x2 553.2904052734375, :y2 919.0500183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 359}, :content {:text "一个解决期约上调用 then()会把 onResolved 处理程序推进消息队列"}, :properties {:color "yellow"}} {:id #uuid "63cfdde5-158b-4bab-8008-a7a6e4119150", :page 360, :position {:bounding {:x1 145.83750915527344, :y1 528.687536239624, :x2 788.4454345703125, :y2 551.1000118255615, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 566.8250122070312, :y1 528.687536239624, :x2 699.4075927734375, :y2 551.0874996185303, :width 887.0000000000001, :height 1107.5338208409507} {:x1 727.5625, :y1 528.687536239624, :x2 788.4454345703125, :y2 551.0874996185303, :width 887.0000000000001, :height 1107.5338208409507} {:x1 145.83750915527344, :y1 528.699987411499, :x2 410.18505859375, :y2 551.1000118255615, :width 887.0000000000001, :height 1107.5338208409507} {:x1 422.5375061035156, :y1 529.137487411499, :x2 551.3075561523438, :y2 549.937536239624, :width 887.0000000000001, :height 1107.5338208409507} {:x1 422.5375061035156, :y1 532.3374996185303, :x2 551.3075561523438, :y2 546.937536239624, :width 887.0000000000001, :height 1107.5338208409507} {:x1 566.8250122070312, :y1 532.687536239624, :x2 699.4075927734375, :y2 548.062536239624, :width 887.0000000000001, :height 1107.5338208409507} {:x1 238.16250610351562, :y1 532.699987411499, :x2 410.18505859375, :y2 548.074987411499, :width 887.0000000000001, :height 1107.5338208409507}), :page 360}, :content {:text "非重入适用于 onResolved/onRejected 处理程序、catch()处理程序和 finally()处理程序"}, :properties {:color "yellow"}} {:id #uuid "63cfdeff-fdc3-4dc5-8036-d9d8662385f2", :page 360, :position {:bounding {:x1 162.96250915527344, :y1 977.4625549316406, :x2 323.8680419921875, :y2 999.862548828125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 162.96250915527344, :y1 977.4625549316406, :x2 323.8680419921875, :y2 999.862548828125, :width 887.0000000000001, :height 1107.5338208409507}), :page 360}, :content {:text "邻近处理程序的执行顺序"}, :properties {:color "green"}} {:id #uuid "63cfdff0-d04f-4e9f-a887-41ba19f28b17", :page 360, :position {:bounding {:x1 145.83750915527344, :y1 999, :x2 797.1725921630859, :y2 1021.4000015258789, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 145.83750915527344, :y1 999, :x2 797.1725921630859, :y2 1021.4000015258789, :width 887.0000000000001, :height 1107.5338208409507}), :page 360}, :content {:text "如果给期约添加了多个处理程序，当期约状态变化时，相关处理程序会按照添加它们的顺序依次执"}, :properties {:color "yellow"}} {:id #uuid "63cfdff7-2faf-4f39-a6cb-051a0cd089f8", :page 361, :position {:bounding {:x1 130.7624969482422, :y1 503.0499954223633, :x2 277.0641784667969, :y2 525.4500198364258, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 130.7624969482422, :y1 503.0499954223633, :x2 277.0641784667969, :y2 525.4500198364258, :width 887.0000000000001, :height 1107.5338208409507}), :page 361}, :content {:text "传递解决值和拒绝理由"}, :properties {:color "green"}} {:id #uuid "63cfe0a3-6f34-46e1-aa72-b3f6a3c48e86", :page 361, :position {:bounding {:x1 0, :y1 396.80001068115234, :x2 770.693603515625, :y2 661.9125061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 396.80001068115234, :x2 0, :y2 419.2000045776367, :width 887.0000000000001, :height 1107.5338208409507} {:x1 113.63750457763672, :y1 616.5500183105469, :x2 518.9879760742188, :y2 638.9500122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 540.0750122070312, :y1 616.5500183105469, :x2 610.6058349609375, :y2 638.9500122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 633.2875366210938, :y1 616.5500183105469, :x2 770.693603515625, :y2 638.9500122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 453.3999938964844, :y1 620.5500183105469, :x2 518.9879760742188, :y2 635.9250183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 540.0750122070312, :y1 620.5500183105469, :x2 610.6058349609375, :y2 635.9250183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 633.2875366210938, :y1 620.5500183105469, :x2 770.693603515625, :y2 635.9250183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 639.5125122070312, :x2 98.01658630371094, :y2 661.9125061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 361}, :content {:text "在执行函数中，解决的值和拒绝的理由是分别作为 resolve()和 reject()的第一个参数往后传的"}, :properties {:color "yellow"}} {:id #uuid "63cfe0db-290b-4ae6-9c24-697778c747ab", :page 361, :position {:bounding {:x1 130.7624969482422, :y1 915.875, :x2 291.6680603027344, :y2 938.2749938964844, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 130.7624969482422, :y1 915.875, :x2 291.6680603027344, :y2 938.2749938964844, :width 887.0000000000001, :height 1107.5338208409507}), :page 361}, :content {:text "拒绝期约与拒绝错误处理"}, :properties {:color "green"}} {:id #uuid "63cfe102-6951-4599-8dd1-e18233143da6", :page 361, :position {:bounding {:x1 0, :y1 620.8000011444092, :x2 766.8106079101562, :y2 982.7875061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 620.8000011444092, :x2 0, :y2 643.2000007629395, :width 887.0000000000001, :height 1107.5338208409507} {:x1 736.7990112304688, :y1 937.4250183105469, :x2 766.8106079101562, :y2 959.8250122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 960.3875122070312, :x2 643.3418731689453, :y2 982.7875061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 361}, :content {:text "在期约的执行函数或处理程序中抛出错误会导致拒绝，对应的错误对象会成为拒绝的理由"}, :properties {:color "yellow"}} {:id #uuid "63cfe11c-f748-4c9f-a411-2ab546a8fd2d", :page 362, :position {:bounding {:x1 0, :y1 316.875, :x2 800.6854858398438, :y2 419.20001220703125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 647.7841186523438, :y1 316.875, :x2 800.6854858398438, :y2 339.2749938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 339.9375, :x2 796.6364288330078, :y2 362.3374938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 343.9375, :x2 796.6364288330078, :y2 359.3125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 362.8999938964844, :x2 389.3534240722656, :y2 385.3000183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 366.8999938964844, :x2 203.56777954101562, :y2 382.2749938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 380.8000183105469, :x2 0, :y2 403.20001220703125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 396.79998779296875, :x2 0, :y2 419.20001220703125, :width 887.0000000000001, :height 1107.5338208409507}), :page 362}, :content {:text "这样做主要是因为创建错误对象可以让浏览器捕获错误对象中的栈追踪信息，而这些信息对调试是非常关键的。例如，前面例子中抛出的 4 个错误的栈追踪信息如下："}, :properties {:color "yellow"}} {:id #uuid "63cfe12c-bc6e-422d-968c-0426ee5760a7", :page 362, :position {:bounding {:x1 221.9019317626953, :y1 629.4000091552734, :x2 633.1898956298828, :y2 651.8000030517578, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 221.9019317626953, :y1 629.4000091552734, :x2 633.1898956298828, :y2 651.8000030517578, :width 887.0000000000001, :height 1107.5338208409507}), :page 362}, :content {:text "也就是说，在最终抛出未捕获错误之前它还会创建另一个期约"}, :properties {:color "yellow"}} {:id #uuid "63cfe167-c5ba-4ab9-a31c-6717a9c0f05f", :page 362, :position {:bounding {:x1 145.83750915527344, :y1 583.4625091552734, :x2 751.7306365966797, :y2 605.8625030517578, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 145.83750915527344, :y1 583.4625091552734, :x2 751.7306365966797, :y2 605.8625030517578, :width 887.0000000000001, :height 1107.5338208409507}), :page 362}, :content {:text "所有错误都是异步抛出且未处理的，通过错误对象捕获的栈追踪信息展示了错误发生的路径"}, :properties {:color "yellow"}} {:id #uuid "63cfe1b4-d116-457c-a082-cbdec8a9472b", :page 362, :position {:bounding {:x1 0, :y1 844.8000030517578, :x2 803.3388061523438, :y2 953.8000183105469, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 844.8000030517578, :x2 0, :y2 867.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 146.4250030517578, :y1 908.4250030517578, :x2 354.65826416015625, :y2 930.8249969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 390.0500183105469, :y1 908.4250030517578, :x2 723.2793579101562, :y2 930.8249969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 736.0375366210938, :y1 908.875, :x2 803.3388061523438, :y2 929.6750030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 736.0375366210938, :y1 912.0749969482422, :x2 803.3388061523438, :y2 926.6750030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 240.41250610351562, :y1 912.4250030517578, :x2 354.65826416015625, :y2 927.8000030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 390.0500183105469, :y1 912.4250030517578, :x2 723.2793579101562, :y2 927.8000030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 931.4000091552734, :x2 145.83840942382812, :y2 953.8000183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 362}, :content {:text "如本章前面的 Promise.reject()示例所示，异步错误只能通过异步的 onRejected 处理程序捕获"}, :properties {:color "yellow"}} {:id #uuid "63cfe1fe-3cbd-4260-b25f-e07c9ebfae47", :page 363, :position {:bounding {:x1 111.9749984741211, :y1 375.65000915527344, :x2 596.2193603515625, :y2 398.0500183105469, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 164.5124969482422, :y1 375.65000915527344, :x2 229.58120727539062, :y2 398.0500183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 245.0749969482422, :y1 375.65000915527344, :x2 339.54754638671875, :y2 398.0500183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 111.9749984741211, :y1 376.1000061035156, :x2 152.40536499023438, :y2 396.90000915527344, :width 887.0000000000001, :height 1107.5338208409507} {:x1 351.9125061035156, :y1 376.1000061035156, :x2 596.2193603515625, :y2 396.90000915527344, :width 887.0000000000001, :height 1107.5338208409507} {:x1 351.9125061035156, :y1 379.3000183105469, :x2 596.2193603515625, :y2 393.90000915527344, :width 887.0000000000001, :height 1107.5338208409507} {:x1 164.5124969482422, :y1 379.65000915527344, :x2 229.58120727539062, :y2 395.02500915527344, :width 887.0000000000001, :height 1107.5338208409507} {:x1 245.0749969482422, :y1 379.65000915527344, :x2 339.54754638671875, :y2 395.02500915527344, :width 887.0000000000001, :height 1107.5338208409507}), :page 363}, :content {:text "then()和 catch()的 onRejected 处理程序在语义上相当于 try/catch"}, :properties {:color "yellow"}} {:id #uuid "63cfe20b-135a-4ff7-bb15-8edf5867d3a2", :page 363, :position {:bounding {:x1 0, :y1 220.8000087738037, :x2 769.125732421875, :y2 443.9750061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 220.8000087738037, :x2 0, :y2 243.20001029968262, :width 887.0000000000001, :height 1107.5338208409507} {:x1 370.231689453125, :y1 398.6125183105469, :x2 478.2853088378906, :y2 421.01251220703125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 490.6499938964844, :y1 399.06251525878906, :x2 769.125732421875, :y2 419.8625183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 402.9875183105469, :y1 402.26251220703125, :x2 478.2853088378906, :y2 416.8625183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 490.6499938964844, :y1 402.26251220703125, :x2 769.125732421875, :y2 416.8625183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 421.57501220703125, :x2 236.27603149414062, :y2 443.9750061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 425.57501220703125, :x2 189.0372772216797, :y2 440.95001220703125, :width 887.0000000000001, :height 1107.5338208409507}), :page 363}, :content {:text "此，onRejected 处理程序的任务应该是在捕获异步错误之后返回一个解决的期约"}, :properties {:color "yellow"}} {:id #uuid "63cfe2c9-2898-4277-9f2d-0e6a938b0bb4", :page 363, :position {:bounding {:x1 136.5442352294922, :y1 866.7750244140625, :x2 327.7663269042969, :y2 896.0750427246094, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 154.8874969482422, :y1 866.7750244140625, :x2 327.7663269042969, :y2 894.7750244140625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 136.5442352294922, :y1 868.0750274658203, :x2 136.54776000976562, :y2 896.0750427246094, :width 887.0000000000001, :height 1107.5338208409507}), :page 363}, :content {:text "期约连锁与期约合成"}, :properties {:color "green"}} {:id #uuid "63cfe2e3-3e4a-4bed-95ec-b5dd0019dfed", :page 363, :position {:bounding {:x1 0, :y1 652.7999954223633, :x2 768.9569702148438, :y2 1022.2000122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 652.7999954223633, :x2 0, :y2 675.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 658.9413452148438, :y1 976.8249969482422, :x2 764.9725952148438, :y2 999.2250061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 166.0749969482422, :y1 999.7875061035156, :x2 227.3437042236328, :y2 1022.1875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 242.83750915527344, :y1 999.7875061035156, :x2 312.7918701171875, :y2 1022.1875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 340.9125061035156, :y1 999.7875061035156, :x2 768.9569702148438, :y2 1022.1875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 999.8000030517578, :x2 153.96786499023438, :y2 1022.2000122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 166.0749969482422, :y1 1003.7875061035156, :x2 227.3437042236328, :y2 1019.1625061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 242.83750915527344, :y1 1003.7875061035156, :x2 312.7918701171875, :y2 1019.1625061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 340.9125061035156, :y1 1003.7875061035156, :x2 477.999755859375, :y2 1019.1625061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 1003.8000030517578, :x2 153.96786499023438, :y2 1019.1750030517578, :width 887.0000000000001, :height 1107.5338208409507}), :page 363}, :content {:text "个期约实例的方法（then()、catch()和 finally()）都会返回一个新的期约对象，而这个新期约又有自己的实例方"}, :properties {:color "yellow"}} {:id #uuid "63cfe38e-0af5-4b1c-bc1c-2a8842efe6a5", :page 364, :position {:bounding {:x1 0, :y1 464.4750061035156, :x2 798.2941284179688, :y2 547.2000122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 450.3270568847656, :y1 464.4750061035156, :x2 798.2941284179688, :y2 486.875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 487.4375, :x2 478.5460510253906, :y2 509.8374938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 524.8000183105469, :x2 0, :y2 547.2000122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 364}, :content {:text "让每个执行器都返回一个期约实例。这样就可以让每个后续期约都等待之前的期约，也就是串行化异步任务"}, :properties {:color "yellow"}} {:id #uuid "63cfe415-16b3-467c-8c57-3d98adb07b81", :page 365, :position {:bounding {:x1 0, :y1 140.80001831054688, :x2 764.9725952148438, :y2 316.125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 140.80001831054688, :x2 0, :y2 163.20001220703125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 431.7314147949219, :y1 270.66253662109375, :x2 764.9725952148438, :y2 293.0625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 293.72503662109375, :x2 416.05055236816406, :y2 316.125, :width 887.0000000000001, :height 1107.5338208409507}), :page 365}, :content {:text "然后实例化一个新期约并返回它。这种结构可以简洁地将异步任务串行化，解决之前依赖回调的难题"}, :properties {:color "yellow"}} {:id #uuid "63cfe480-c84c-4e6a-be50-83e7c1b3817a", :page 365, :position {:bounding {:x1 264.5973815917969, :y1 976.4375, :x2 567.5929565429688, :y2 998.8374938964844, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 264.5973815917969, :y1 976.4375, :x2 567.5929565429688, :y2 998.8374938964844, :width 887.0000000000001, :height 1107.5338208409507}), :page 365}, :content {:text "而使用实例方法添加的处理程序则是有向顶点"}, :properties {:color "yellow"}} {:id #uuid "63cfe4c1-b679-4532-82eb-6591110954f0", :page 366, :position {:bounding {:x1 0, :y1 547.1749877929688, :x2 797.0814208984375, :y2 627.2000122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 539.6129150390625, :y1 547.1749877929688, :x2 797.0814208984375, :y2 569.5750122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 570.1375122070312, :x2 160.68563842773438, :y2 592.5375366210938, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 604.7999877929688, :x2 0, :y2 627.2000122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 366}, :content {:text "期约的处理程序是按照它们添加的顺序执行的"}, :properties {:color "yellow"}} {:id #uuid "63cfe4c8-274b-41d7-a240-d440eefcf2d2", :page 366, :position {:bounding {:x1 175.91416931152344, :y1 570.1375122070312, :x2 728.5648193359375, :y2 592.5375366210938, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 175.91416931152344, :y1 570.1375122070312, :x2 728.5648193359375, :y2 592.5375366210938, :width 887.0000000000001, :height 1107.5338208409507} {:x1 330.5874938964844, :y1 573.1124877929688, :x2 498.51226806640625, :y2 588.4874877929688, :width 887.0000000000001, :height 1107.5338208409507}), :page 366}, :content {:text "由于期约的处理程序是先添加到消息队列，然后才逐个执行，因此构成了层序遍历"}, :properties {:color "yellow"}} {:id #uuid "63cfe554-5ca8-4941-a910-19669841162e", :page 366, :position {:bounding {:x1 0, :y1 616.0625, :x2 800.5519409179688, :y2 675.2000427246094, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 480.77734375, :y1 616.0625, :x2 800.5519409179688, :y2 638.4625244140625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 639.0250244140625, :x2 160.59495544433594, :y2 661.4250183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 652.8000183105469, :x2 0, :y2 675.2000427246094, :width 887.0000000000001, :height 1107.5338208409507}), :page 366}, :content {:text "所以有向非循环图是体现期约连锁可能性的最准确表达"}, :properties {:color "yellow"}} {:id #uuid "63cfe55b-06ce-4e81-8008-a6d2afd43753", :page 366, :position {:bounding {:x1 147.10000610351562, :y1 759.7625122070312, :x2 629.5852661132812, :y2 782.1625061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 261.0375061035156, :y1 759.7625122070312, :x2 629.5852661132812, :y2 782.1625061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 147.10000610351562, :y1 760.2124938964844, :x2 231.8327178955078, :y2 781.0125122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 366}, :content {:text "Promise.all()静态方法创建的期约会在一组期约全部解决之后再解决"}, :properties {:color "yellow"}} {:id #uuid "63cfe673-d8a7-47a2-b349-a0c934e3409e", :page 366, :position {:bounding {:x1 170.5500030517578, :y1 882.4750061035156, :x2 521.0878295898438, :y2 900.875, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 170.5500030517578, :y1 882.4750061035156, :x2 312.9360046386719, :y2 900.875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 326.2875061035156, :y1 882.4750061035156, :x2 434.50341796875, :y2 900.875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 461.8500061035156, :y1 882.4750061035156, :x2 521.0878295898438, :y2 900.875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 326.2875061035156, :y1 885.6750183105469, :x2 434.50341796875, :y2 898.6125183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 366}, :content {:text "可迭代对象中的元素会通过 Promise.resolve()转换为期约"}, :properties {:color "yellow"}} {:id #uuid "63cfe67a-a9a8-4e49-8a71-579a4ac88225", :page 366, :position {:bounding {:x1 170.5500030517578, :y1 927.2250366210938, :x2 408.5462951660156, :y2 945.625, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 170.5500030517578, :y1 927.2250366210938, :x2 289.1911926269531, :y2 945.625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 300.3125, :y1 927.2250366210938, :x2 408.5462951660156, :y2 945.625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 300.3125, :y1 930.4249877929688, :x2 302.8999938964844, :y2 943.3624877929688, :width 887.0000000000001, :height 1107.5338208409507}), :page 366}, :content {:text "空的可迭代对象等价于 Promise.resolve()"}, :properties {:color "yellow"}} {:id #uuid "63cfe6b4-2088-4446-ba09-63e0e36d965d", :page 367, :position {:bounding {:x1 0, :y1 140.80000686645508, :x2 764.8814086914062, :y2 343.27499771118164, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 140.80000686645508, :x2 0, :y2 163.20000076293945, :width 887.0000000000001, :height 1107.5338208409507} {:x1 507.41290283203125, :y1 297.9125099182129, :x2 764.8814086914062, :y2 320.31250381469727, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 320.87500381469727, :x2 174.1712646484375, :y2 343.27499771118164, :width 887.0000000000001, :height 1107.5338208409507}), :page 367}, :content {:text "如果有一个包含的期约拒绝，则合成的期约也会拒绝"}, :properties {:color "yellow"}} {:id #uuid "63cfe74a-3ef2-41f0-90a5-02b35f641d74", :page 367, :position {:bounding {:x1 113.63750457763672, :y1 556.8999977111816, :x2 643.0065307617188, :y2 579.3000221252441, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 113.63750457763672, :y1 556.8999977111816, :x2 643.0065307617188, :y2 579.3000221252441, :width 887.0000000000001, :height 1107.5338208409507}), :page 367}, :content {:text "如果所有期约都成功解决，则合成期约的解决值就是所有包含期约解决值的数组"}, :properties {:color "yellow"}} {:id #uuid "63cfe760-8ebe-40e7-8b11-5ba331f85652", :page 367, :position {:bounding {:x1 113.63750457763672, :y1 700.4125061035156, :x2 643.7939987182617, :y2 722.8125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 113.63750457763672, :y1 700.4125061035156, :x2 643.7939987182617, :y2 722.8125, :width 887.0000000000001, :height 1107.5338208409507}), :page 367}, :content {:text "如果有期约拒绝，则第一个拒绝的期约会将自己的理由作为合成期约的拒绝理由"}, :properties {:color "yellow"}} {:id #uuid "63cfe7c5-8831-42e7-a382-6b788959f6c7", :page 367, :position {:bounding {:x1 111.9749984741211, :y1 976.8250427246094, :x2 720.6791229248047, :y2 999.2250366210938, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 234.5749969482422, :y1 976.8250427246094, :x2 720.6791229248047, :y2 999.2250366210938, :width 887.0000000000001, :height 1107.5338208409507} {:x1 111.9749984741211, :y1 977.2750549316406, :x2 208.59739685058594, :y2 998.0750427246094, :width 887.0000000000001, :height 1107.5338208409507}), :page 367}, :content {:text "Promise.race()静态方法返回一个包装期约，是一组集合中最先解决或拒绝的期约的镜像"}, :properties {:color "yellow"}} {:id #uuid "63cfe88a-8533-4bd5-881e-bf17166c6010", :page 368, :position {:bounding {:x1 170.5500030517578, :y1 196.92501831054688, :x2 521.0878295898438, :y2 215.32498168945312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 170.5500030517578, :y1 196.92501831054688, :x2 312.9360046386719, :y2 215.32498168945312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 326.2875061035156, :y1 196.92501831054688, :x2 434.50341796875, :y2 215.32498168945312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 461.8500061035156, :y1 196.92501831054688, :x2 521.0878295898438, :y2 215.32498168945312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 326.2875061035156, :y1 200.12503051757812, :x2 434.50341796875, :y2 213.06253051757812, :width 887.0000000000001, :height 1107.5338208409507}), :page 368}, :content {:text "可迭代对象中的元素会通过 Promise.resolve()转换为期约"}, :properties {:color "yellow"}} {:id #uuid "63cfe8b4-f043-495d-b31f-4b9efdaa0807", :page 368, :position {:bounding {:x1 170.5500030517578, :y1 242.16250610351562, :x2 456.7181701660156, :y2 260.5625305175781, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 170.5500030517578, :y1 242.16250610351562, :x2 289.1911926269531, :y2 260.5625305175781, :width 887.0000000000001, :height 1107.5338208409507} {:x1 300.3125, :y1 242.16250610351562, :x2 394.3504333496094, :y2 260.5625305175781, :width 887.0000000000001, :height 1107.5338208409507} {:x1 412.4875183105469, :y1 242.16250610351562, :x2 456.7181701660156, :y2 260.5625305175781, :width 887.0000000000001, :height 1107.5338208409507} {:x1 300.3125, :y1 245.36251831054688, :x2 394.3504333496094, :y2 258.3000183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 412.4875183105469, :y1 245.36251831054688, :x2 438.4250183105469, :y2 258.3000183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 368}, :content {:text "空的可迭代对象等价于 new Promise(() => {})"}, :properties {:color "yellow"}} {:id #uuid "63cfe8c0-9fc2-4877-a09e-d3e544138956", :page 368, :position {:bounding {:x1 0, :y1 343.1500244140625, :x2 798.451416015625, :y2 435.20001220703125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 509.8270568847656, :y1 343.1500244140625, :x2 798.451416015625, :y2 365.54998779296875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 366.2125244140625, :x2 257.8153991699219, :y2 388.61248779296875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 283.8000183105469, :y1 366.2125244140625, :x2 573.1671142578125, :y2 388.61248779296875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 370.2125244140625, :x2 257.8153991699219, :y2 385.5875244140625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 412.79998779296875, :x2 0, :y2 435.20001220703125, :width 887.0000000000001, :height 1107.5338208409507}), :page 368}, :content {:text "无论是解决还是拒绝，只要是第一个落定的期约，Promise.race()就会包装其解决值或拒绝理由并返回新期约"}, :properties {:color "yellow"}} {:id #uuid "63cfe90f-c3bc-4ea6-b1c4-5fefcc95c9a3", :page 368, :position {:bounding {:x1 170.5500030517578, :y1 391.35003662109375, :x2 348.428955078125, :y2 409.75, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 170.5500030517578, :y1 391.35003662109375, :x2 348.428955078125, :y2 409.75, :width 887.0000000000001, :height 1107.5338208409507}), :page 368}, :content {:text "解决先发生，超时后的拒绝被忽略"}, :properties {:color "yellow"}} {:id #uuid "63cfe915-e81a-4f1d-90c4-472250f2d751", :page 368, :position {:bounding {:x1 170.5500030517578, :y1 496.875, :x2 348.428955078125, :y2 515.2750244140625, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 170.5500030517578, :y1 496.875, :x2 348.428955078125, :y2 515.2750244140625, :width 887.0000000000001, :height 1107.5338208409507}), :page 368}, :content {:text "拒绝先发生，超时后的解决被忽略"}, :properties {:color "yellow"}} {:id #uuid "63cfe9b3-cada-4a22-8c82-1f79299fed93", :page 368, :position {:bounding {:x1 162.96250915527344, :y1 974.6375274658203, :x2 250.76101684570312, :y2 997.0375213623047, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 162.96250915527344, :y1 974.6375274658203, :x2 250.76101684570312, :y2 997.0375213623047, :width 887.0000000000001, :height 1107.5338208409507}), :page 368}, :content {:text "串行期约合成"}, :properties {:color "green"}} {:id #uuid "63cfea32-35ea-459d-b43b-d8b0ce967307", :page 369, :position {:bounding {:x1 0, :y1 492.8000240325928, :x2 767.6416625976562, :y2 792.4875183105469, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 492.8000240325928, :x2 0, :y2 515.200023651123, :width 887.0000000000001, :height 1107.5338208409507} {:x1 356.26251220703125, :y1 747.1125335693359, :x2 767.6416625976562, :y2 769.5125274658203, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 770.0875244140625, :x2 113.2556381225586, :y2 792.4875183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 369}, :content {:text "可以把任意多个函数作为处理程序合成一个连续传值的期约连锁。"}, :properties {:color "yellow"}} {:id #uuid "63cfea69-66d1-4fe6-8d6a-6ac08eead0d6", :page 370, :position {:bounding {:x1 187.08750915527344, :y1 121.78750610351562, :x2 263.92254638671875, :y2 149.78750610351562, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 187.08750915527344, :y1 121.78750610351562, :x2 263.92254638671875, :y2 149.78750610351562, :width 887.0000000000001, :height 1107.5338208409507}), :page 370}, :content {:text "期约扩展"}, :properties {:color "green"}} {:id #uuid "63cfeaf3-6961-4126-838a-72a804490b7e", :page 370, :position {:bounding {:x1 0, :y1 349, :x2 799.709228515625, :y2 403.20001220703125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 632.1846313476562, :y1 349, :x2 799.709228515625, :y2 371.4000244140625, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115.01250457763672, :y1 371.9749755859375, :x2 648.0748825073242, :y2 394.375, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 380.79998779296875, :x2 0, :y2 403.20001220703125, :width 887.0000000000001, :height 1107.5338208409507}), :page 370}, :content {:text "利用这个接口可以取消期约；同时也提供了一个期约的实例，可以用来触发取消后的操作并求值取消状态"}, :properties {:color "yellow"}} {:id #uuid "63cfeb09-b862-4fdb-ba76-1d204dd0ae40", :page 370, :position {:bounding {:x1 0, :y1 556.8000030517578, :x2 796.6364135742188, :y2 606.8499908447266, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 478.5335388183594, :y1 561.4875030517578, :x2 796.6364135742188, :y2 583.8875274658203, :width 887.0000000000001, :height 1107.5338208409507} {:x1 114.98750305175781, :y1 584.4500274658203, :x2 267.2610778808594, :y2 606.8499908447266, :width 887.0000000000001, :height 1107.5338208409507}), :page 370}, :content {:text "这里期约是令牌类的公共成员，因此可以给它添加处理程序以取消期约"}, :properties {:color "yellow"}} {:id #uuid "63cfebfe-c6bd-473b-b36a-8e7dc7594240", :page 370, :position {:bounding {:x1 162.96250915527344, :y1 212.53750610351562, :x2 221.37803649902344, :y2 234.9375, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 162.96250915527344, :y1 212.53750610351562, :x2 221.37803649902344, :y2 234.9375, :width 887.0000000000001, :height 1107.5338208409507}), :page 370}, :content {:text "期约取消"}, :properties {:color "yellow"}} {:id #uuid "63cfec25-2c24-434b-87e6-3fe8ae74e649", :page 371, :position {:bounding {:x1 130.7624969482422, :y1 359.4625015258789, :x2 218.56101989746094, :y2 381.8624954223633, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 130.7624969482422, :y1 359.4625015258789, :x2 218.56101989746094, :y2 381.8624954223633, :width 887.0000000000001, :height 1107.5338208409507}), :page 371}, :content {:text "期约进度通知"}, :properties {:color "yellow"}} {:id #uuid "63cfec45-4ef7-47d5-bc06-e2e380d03c77", :page 371, :position {:bounding {:x1 113.63750457763672, :y1 427.0124969482422, :x2 533.8883666992188, :y2 449.4250030517578, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 488.2124938964844, :y1 427.0124969482422, :x2 533.8883666992188, :y2 449.41249084472656, :width 887.0000000000001, :height 1107.5338208409507} {:x1 113.63750457763672, :y1 427.0249938964844, :x2 466.43267822265625, :y2 449.4250030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 252.1750030517578, :y1 431.0249938964844, :x2 466.43267822265625, :y2 446.3999938964844, :width 887.0000000000001, :height 1107.5338208409507}), :page 371}, :content {:text "一种实现方式是扩展 Promise 类，为它添加 notify()方法，"}, :properties {:color "yellow"}} {:id #uuid "63cfecc7-c665-4214-ab51-a4be4217018c", :page 372, :position {:bounding {:x1 180.1750030517578, :y1 929.7625122070312, :x2 269.9025573730469, :y2 961.7625122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 180.1750030517578, :y1 929.7625122070312, :x2 269.9025573730469, :y2 961.7625122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 372}, :content {:text "异步函数"}, :properties {:color "green"}} {:id #uuid "63cfed44-a561-4d71-accf-8a1c0fb84de0", :page 373, :position {:bounding {:x1 154.8874969482422, :y1 474.3875198364258, :x2 231.7225341796875, :y2 502.3875198364258, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 154.8874969482422, :y1 474.3875198364258, :x2 231.7225341796875, :y2 502.3875198364258, :width 887.0000000000001, :height 1107.5338208409507}), :page 373}, :content {:text "异步函数"}, :properties {:color "green"}} {:id #uuid "63cfeda0-6690-4998-bb9b-0eb000615ec2", :page 373, :position {:bounding {:x1 111.9749984741211, :y1 584.7874908447266, :x2 763.1755981445312, :y2 605.5874938964844, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 111.9749984741211, :y1 584.7874908447266, :x2 763.1755981445312, :y2 605.5874938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 155.7624969482422, :y1 587.9875030517578, :x2 644.0936279296875, :y2 603.3625030517578, :width 887.0000000000001, :height 1107.5338208409507}), :page 373}, :content {:text "async 关键字用于声明异步函数。这个关键字可以用在函数声明、函数表达式、箭头函数和方法上"}, :properties {:color "yellow"}} {:id #uuid "63cfeddb-f1f7-4629-b55d-8d9ecd8beb3f", :page 373, :position {:bounding {:x1 0, :y1 556.7999954223633, :x2 772.0841674804688, :y2 1021.5124816894531, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 556.7999954223633, :x2 0, :y2 579.1999969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 159.29470825195312, :y1 976.1499938964844, :x2 328.4044494628906, :y2 998.5500183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 734.1749877929688, :y1 976.1499938964844, :x2 772.0841674804688, :y2 998.5500183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 339.4624938964844, :y1 976.6000061035156, :x2 574.366943359375, :y2 997.3999938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 585.4125366210938, :y1 976.6000061035156, :x2 723.7767944335938, :y2 997.3999938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 339.4624938964844, :y1 979.8000183105469, :x2 574.366943359375, :y2 994.3999938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 585.4125366210938, :y1 979.8000183105469, :x2 723.7767944335938, :y2 994.3999938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 282.9125061035156, :y1 980.1499938964844, :x2 328.4044494628906, :y2 995.5249938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 734.1749877929688, :y1 980.1499938964844, :x2 772.0841674804688, :y2 995.5249938964844, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 999.1125183105469, :x2 264.8394470214844, :y2 1021.5124816894531, :width 887.0000000000001, :height 1107.5338208409507} {:x1 297.125, :y1 999.1125183105469, :x2 433.5148010253906, :y2 1021.5124816894531, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.80000305175781, :y1 1003.1125183105469, :x2 264.8394470214844, :y2 1018.4875183105469, :width 887.0000000000001, :height 1107.5338208409507}), :page 373}, :content {:text "异步函数如果使用 return 关键字返回了值（如果没有 return 则会返回 undefined），这个值会被 Promise.resolve()包装成一个期约对象"}, :properties {:color "yellow"}} {:id #uuid "63cfee20-4b72-43f9-9f59-f114557f0c09", :page 374, :position {:bounding {:x1 191.53135681152344, :y1 359.5000114440918, :x2 435.23193359375, :y2 381.9000053405762, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 191.53135681152344, :y1 359.5000114440918, :x2 435.23193359375, :y2 381.9000053405762, :width 887.0000000000001, :height 1107.5338208409507}), :page 374}, :content {:text "直接返回一个期约对象也是一样的："}, :properties {:color "yellow"}} {:id #uuid "63cfeebe-0054-4743-96cb-28454f06a6fa", :page 375, :position {:bounding {:x1 113.63750457763672, :y1 224.45001220703125, :x2 585.8265914916992, :y2 246.85000610351562, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 113.63750457763672, :y1 224.45001220703125, :x2 585.8265914916992, :y2 246.85000610351562, :width 887.0000000000001, :height 1107.5338208409507}), :page 375}, :content {:text "与在期约处理程序中一样，在异步函数中抛出错误会返回拒绝的期约："}, :properties {:color "yellow"}} {:id #uuid "63cfeec4-005e-4e62-b4bb-b3cb5cf62a9f", :page 375, :position {:bounding {:x1 159.32704162597656, :y1 439.1750030517578, :x2 403.00457763671875, :y2 461.5749969482422, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 159.32704162597656, :y1 439.1750030517578, :x2 403.00457763671875, :y2 461.5749969482422, :width 887.0000000000001, :height 1107.5338208409507}), :page 375}, :content {:text "拒绝期约的错误不会被异步函数捕获"}, :properties {:color "yellow"}} {:id #uuid "63cfef2c-2a85-4c63-a058-814353472db3", :page 375, :position {:bounding {:x1 0, :y1 476.8000183105469, :x2 765.898193359375, :y2 729.3375244140625, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 476.8000183105469, :x2 0, :y2 499.20001220703125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 690.2993774414062, :y1 683.8875122070312, :x2 765.898193359375, :y2 706.2875061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 726.6875, :y1 687.8875122070312, :x2 765.898193359375, :y2 703.2625122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 706.9375305175781, :x2 433.09395599365234, :y2 729.3375244140625, :width 887.0000000000001, :height 1107.5338208409507}), :page 375}, :content {:text "使用 await关键字可以暂停异步函数代码的执行，等待期约解决"}, :properties {:color "yellow"}} {:id #uuid "63cfefa1-22c9-49f5-9f65-004d7e0e486d", :page 375, :position {:bounding {:x1 0, :y1 652.8000373840332, :x2 770.3760986328125, :y2 975.487548828125, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 652.8000373840332, :x2 0, :y2 675.2000350952148, :width 887.0000000000001, :height 1107.5338208409507} {:x1 724.7914428710938, :y1 930.1250305175781, :x2 770.3760986328125, :y2 952.5250549316406, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 953.0875549316406, :x2 258.4512023925781, :y2 975.487548828125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 269.9875183105469, :y1 953.5375366210938, :x2 382.4020080566406, :y2 974.3375549316406, :width 887.0000000000001, :height 1107.5338208409507} {:x1 269.9875183105469, :y1 956.737548828125, :x2 270.2244567871094, :y2 971.3375549316406, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 957.0875549316406, :x2 258.4512023925781, :y2 972.4625549316406, :width 887.0000000000001, :height 1107.5338208409507}), :page 375}, :content {:text "这个行为与生成器函数中的 yield 关键字是一样的"}, :properties {:color "yellow"}} {:id #uuid "63cfefe6-6299-4fb1-9e0d-ba965bf4cc62", :page 376, :position {:bounding {:x1 0, :y1 510.40000915527344, :x2 802.0266723632812, :y2 595.1999969482422, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 605.4813842773438, :y1 510.40000915527344, :x2 802.0266723632812, :y2 532.8000030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 533.4625091552734, :x2 236.82835388183594, :y2 555.8625030517578, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 572.8000030517578, :x2 0, :y2 595.1999969482422, :width 887.0000000000001, :height 1107.5338208409507}), :page 376}, :content {:text "如果不是，则这个值就被当作已经解决的期约。"}, :properties {:color "yellow"}} {:id #uuid "63cff098-d7eb-4d3d-97b7-9053e5cbf072", :page 377, :position {:bounding {:x1 251.38682556152344, :y1 344.12499237060547, :x2 753.4845581054688, :y2 366.52501678466797, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 251.38682556152344, :y1 344.12499237060547, :x2 413.390869140625, :y2 366.52501678466797, :width 887.0000000000001, :height 1107.5338208409507} {:x1 447.3500061035156, :y1 344.12499237060547, :x2 753.4845581054688, :y2 366.52501678466797, :width 887.0000000000001, :height 1107.5338208409507} {:x1 299.3500061035156, :y1 348.12499237060547, :x2 413.390869140625, :y2 363.49999237060547, :width 887.0000000000001, :height 1107.5338208409507}), :page 377}, :content {:text "单独的 Promise.reject()不会被异步函数捕获，而会抛出未捕获错误。"}, :properties {:color "yellow"}} {:id #uuid "63cff0cf-822c-4622-8b69-456589bcfcc2", :page 377, :position {:bounding {:x1 0, :y1 604.8000106811523, :x2 769.3982543945312, :y2 903.0125122070312, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 604.8000106811523, :x2 0, :y2 627.2000122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 430.0580139160156, :y1 857.6375122070312, :x2 769.3982543945312, :y2 880.0375061035156, :width 887.0000000000001, :height 1107.5338208409507} {:x1 462.2375183105469, :y1 861.2875061035156, :x2 769.3982543945312, :y2 875.8875122070312, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 880.6125183105469, :x2 113.23807525634766, :y2 903.0125122070312, :width 887.0000000000001, :height 1107.5338208409507}), :page 377}, :content {:text "此，await 关键字也只能直接出现在异步函数的定义中"}, :properties {:color "yellow"}} {:id #uuid "63cff0dc-4abd-4b82-8192-084e862944bd", :page 378, :position {:bounding {:x1 187.08750915527344, :y1 480.81251525878906, :x2 321.5487976074219, :y2 508.81251525878906, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 187.08750915527344, :y1 480.81251525878906, :x2 321.5487976074219, :y2 508.81251525878906, :width 887.0000000000001, :height 1107.5338208409507}), :page 378}, :content {:text "停止和恢复执行"}, :properties {:color "green"}} {:id #uuid "63cff197-add3-409f-aadc-2a96f374ecc5", :page 378, :position {:bounding {:x1 160.66336059570312, :y1 879.7374877929688, :x2 671.7741088867188, :y2 902.1374969482422, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 160.66336059570312, :y1 879.7374877929688, :x2 671.7741088867188, :y2 902.1374969482422, :width 887.0000000000001, :height 1107.5338208409507} {:x1 299.7375183105469, :y1 883.7374877929688, :x2 347.7028503417969, :y2 899.1124877929688, :width 887.0000000000001, :height 1107.5338208409507}), :page 378}, :content {:text "异步函数如果不包含 await 关键字，其执行基本上跟普通函数没有什么区别"}, :properties {:color "yellow"}} {:id #uuid "63cff1c9-5fb1-4093-a5cd-7aa5465f75bc", :page 379, :position {:bounding {:x1 0, :y1 76.79998779296875, :x2 771.1123046875, :y2 244.22500610351562, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 0, :y1 76.79998779296875, :x2 0, :y2 99.20001220703125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 661.4000244140625, :y1 197.83749389648438, :x2 771.1123046875, :y2 220.23748779296875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 390.6144104003906, :y1 198.86248779296875, :x2 651.3973388671875, :y2 221.26251220703125, :width 887.0000000000001, :height 1107.5338208409507} {:x1 661.4000244140625, :y1 201.83749389648438, :x2 771.1123046875, :y2 217.21249389648438, :width 887.0000000000001, :height 1107.5338208409507} {:x1 423.6875, :y1 202.86248779296875, :x2 651.3973388671875, :y2 218.23748779296875, :width 887.0000000000001, :height 1107.5338208409507} {:x1 82.7874984741211, :y1 221.82501220703125, :x2 463.5792465209961, :y2 244.22500610351562, :width 887.0000000000001, :height 1107.5338208409507}), :page 379}, :content {:text "等到 await 右边的值可用了，JavaScript 运行时会向消息队列中推送一个任务，这个任务会恢复异步函数的执行。"}, :properties {:color "yellow"}} {:id #uuid "63cff2f3-d546-405a-a8ae-3cd47c3cccf2", :page 379, :position {:bounding {:x1 144.0664520263672, :y1 244.79999995231628, :x2 664.1408081054688, :y2 267.19999384880066, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 144.0664520263672, :y1 244.79999995231628, :x2 664.1408081054688, :y2 267.19999384880066, :width 887.0000000000001, :height 1107.5338208409507} {:x1 190.5749969482422, :y1 248.79999995231628, :x2 632.0077514648438, :y2 264.1749999523163, :width 887.0000000000001, :height 1107.5338208409507}), :page 379}, :content {:text "，即使 await 后面跟着一个立即可用的值，函数的其余部分也会被异步求值"}, :properties {:color "yellow"}} {:id #uuid "63cff341-18db-48c5-bf91-df94981077bc", :page 381, :position {:bounding {:x1 154.8874969482422, :y1 121.78752136230469, :x2 270.1400451660156, :y2 149.7875213623047, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 154.8874969482422, :y1 121.78752136230469, :x2 270.1400451660156, :y2 149.7875213623047, :width 887.0000000000001, :height 1107.5338208409507}), :page 381}, :content {:text "异步函数策略"}, :properties {:color "green"}} {:id #uuid "63cff353-e60c-4a49-8495-7c904ea0135d", :page 381, :position {:bounding {:x1 113.63750457763672, :y1 302.9624938964844, :x2 640.7000122070312, :y2 325.375, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 625.5, :y1 302.9624938964844, :x2 640.7000122070312, :y2 325.3625183105469, :width 887.0000000000001, :height 1107.5338208409507} {:x1 113.63750457763672, :y1 302.9750061035156, :x2 609.3521118164062, :y2 325.375, :width 887.0000000000001, :height 1107.5338208409507} {:x1 560.1749877929688, :y1 306.9750061035156, :x2 609.3521118164062, :y2 322.3500061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 381}, :content {:text "有了异步函数之后，就不一样了。一个简单的箭头函数就可以实现 sleep()："}, :properties {:color "yellow"}} {:id #uuid "63cff368-f20f-4094-b413-3dfb600f2070", :page 381, :position {:bounding {:x1 130.77500915527344, :y1 212.53750610351562, :x2 210.5643310546875, :y2 234.9375, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 130.77500915527344, :y1 212.53750610351562, :x2 210.5643310546875, :y2 234.9375, :width 887.0000000000001, :height 1107.5338208409507} {:x1 161.52500915527344, :y1 216.53750610351562, :x2 164.60000610351562, :y2 231.91250610351562, :width 887.0000000000001, :height 1107.5338208409507}), :page 381}, :content {:text "实现 sleep()"}, :properties {:color "yellow"}} {:id #uuid "63cff3d8-68db-4ea1-ac1a-4bfa0f703a17", :page 381, :position {:bounding {:x1 130.7624969482422, :y1 513.0750122070312, :x2 218.56101989746094, :y2 535.4750061035156, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 130.7624969482422, :y1 513.0750122070312, :x2 218.56101989746094, :y2 535.4750061035156, :width 887.0000000000001, :height 1107.5338208409507}), :page 381}, :content {:text "利用平行执行"}, :properties {:color "yellow"}} {:id #uuid "63cff40c-2c94-402c-957f-c5e385f306ec", :page 382, :position {:bounding {:x1 0, :y1 517.2124996185303, :x2 810.254638671875, :y2 611.199987411499, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 145.83750915527344, :y1 517.2124996185303, :x2 810.254638671875, :y2 539.6125240325928, :width 887.0000000000001, :height 1107.5338208409507} {:x1 342.25, :y1 521.2124996185303, :x2 810.254638671875, :y2 536.5874996185303, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 540.1750240325928, :x2 236.7657928466797, :y2 562.574987411499, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 588.8000240325928, :x2 0, :y2 611.199987411499, :width 887.0000000000001, :height 1107.5338208409507}), :page 382}, :content {:text "就算这些期约之间没有依赖，异步函数也会依次暂停，等待每个超时完成。这样可以保证执行顺序，但总执行时间会变"}, :properties {:color "yellow"}} {:id #uuid "63cff42e-a020-4869-b7e0-604eeb266524", :page 384, :position {:bounding {:x1 162.96250915527344, :y1 306.4125003814697, :x2 250.76101684570312, :y2 328.8124942779541, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 162.96250915527344, :y1 306.4125003814697, :x2 250.76101684570312, :y2 328.8124942779541, :width 887.0000000000001, :height 1107.5338208409507}), :page 384}, :content {:text "串行执行期约"}, :properties {:color "yellow"}} {:id #uuid "63cff4c8-5ca6-4e94-b6eb-82167debe6a6", :page 384, :position {:bounding {:x1 0, :y1 327.9625186920166, :x2 803.2440795898438, :y2 451.20000648498535, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 587.0287475585938, :y1 327.9625186920166, :x2 803.2440795898438, :y2 350.362512588501, :width 887.0000000000001, :height 1107.5338208409507} {:x1 621.9375, :y1 331.9625186920166, :x2 803.2440795898438, :y2 347.3375186920166, :width 887.0000000000001, :height 1107.5338208409507} {:x1 115, :y1 350.9374942779541, :x2 175.88290405273438, :y2 373.3375186920166, :width 887.0000000000001, :height 1107.5338208409507} {:x1 0, :y1 428.800012588501, :x2 0, :y2 451.20000648498535, :width 887.0000000000001, :height 1107.5338208409507}), :page 384}, :content {:text "使用 async/await，期约连锁会变得很简单"}, :properties {:color "yellow"}} {:id #uuid "63cff4db-8a08-46a0-9de9-51c4d1fb66bd", :page 384, :position {:bounding {:x1 162.96250915527344, :y1 819.9375, :x2 279.9687805175781, :y2 842.3375244140625, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 162.96250915527344, :y1 819.9375, :x2 279.9687805175781, :y2 842.3375244140625, :width 887.0000000000001, :height 1107.5338208409507}), :page 384}, :content {:text "栈追踪与内存管理"}, :properties {:color "yellow"}} {:id #uuid "63cff57a-482f-4390-8537-352920afa822", :page 385, :position {:bounding {:x1 113.63750457763672, :y1 621.3125114440918, :x2 724.8740234375, :y2 643.7125358581543, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 113.63750457763672, :y1 621.3125114440918, :x2 632.4523315429688, :y2 643.7125358581543, :width 887.0000000000001, :height 1107.5338208409507} {:x1 663.3500366210938, :y1 621.3125114440918, :x2 724.8740234375, :y2 643.7125358581543, :width 887.0000000000001, :height 1107.5338208409507} {:x1 488.0249938964844, :y1 624.9625358581543, :x2 632.4523315429688, :y2 639.5625114440918, :width 887.0000000000001, :height 1107.5338208409507}), :page 385}, :content {:text "这样一改，栈追踪信息就准确地反映了当前的调用栈。fooPromiseExecutor()已经返回"}, :properties {:color "yellow"}} {:id #uuid "63cff5d6-bed2-40b5-8d78-39ac5bf03ae6", :page 386, :position {:bounding {:x1 181.9375, :y1 607.7125244140625, :x2 312.0778503417969, :y2 639.7125244140625, :width 887.0000000000001, :height 1107.5338208409507}, :rects ({:x1 181.9375, :y1 607.7125244140625, :x2 312.0778503417969, :y2 639.7125244140625, :width 887.0000000000001, :height 1107.5338208409507}), :page 386}, :content {:text "window 对象"}, :properties {:color "green"}} {:id #uuid "63d0847f-1fde-443f-99fa-32496ee05e95", :page 386, :position {:bounding {:x1 0, :y1 476.8000183105469, :x2 787.91357421875, :y2 679.3500061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 476.8000183105469, :x2 0, :y2 499.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 742.2243041992188, :y1 637.1625061035156, :x2 787.91357421875, :y2 657.9624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 658.5500183105469, :x2 313.84027099609375, :y2 679.3500061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 661.7500305175781, :x2 279.6181335449219, :y2 676.7375183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 386}, :content {:text "一个是 ECMAScript 中的 Global 对象"}, :properties {:color "yellow"}} {:id #uuid "63d0848a-3095-4c9b-85a0-2be7fb6174d3", :page 386, :position {:bounding {:x1 343.9930419921875, :y1 658.5500183105469, :x2 591.4697875976562, :y2 680.3500061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 558.2625122070312, :y1 658.5500183105469, :x2 591.4697875976562, :y2 679.3500061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 343.9930419921875, :y1 659.5500183105469, :x2 547.1829833984375, :y2 680.3500061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 558.2625122070312, :y1 661.7500305175781, :x2 558.3828735351562, :y2 676.7375183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 491.8374938964844, :y1 662.7500305175781, :x2 547.1829833984375, :y2 677.7375183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 386}, :content {:text "一个就是浏览器窗口的 JavaScript 接口"}, :properties {:color "yellow"}} {:id #uuid "63d084a9-eafd-4c30-b4cc-681a6909c958", :page 386, :position {:bounding {:x1 183.875, :y1 850.1250305175781, :x2 312.3689880371094, :y2 875.7250366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 850.1250305175781, :x2 312.3689880371094, :y2 875.7250366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 249.3625030517578, :y1 854.1250305175781, :x2 253.0124969482422, :y2 872.3375244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 386}, :content {:text "Global 作用域"}, :properties {:color "green"}} {:id #uuid "63d084cc-3765-4575-822b-df2c4e8c09ad", :page 386, :position {:bounding {:x1 0, :y1 604.8000106811523, :x2 786.77490234375, :y2 931.6000061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 604.8000106811523, :x2 0, :y2 627.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 556.9622802734375, :y1 888.4000091552734, :x2 786.77490234375, :y2 909.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 589.4000244140625, :y1 891.2625122070312, :x2 786.77490234375, :y2 905.5000152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 910.8000183105469, :x2 368.2924499511719, :y2 931.6000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 914.0000152587891, :x2 248.7593231201172, :y2 928.9875183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 386}, :content {:text "通过 var 声明的所有全局变量和函数都会变成 window 对象的属性和方法"}, :properties {:color "yellow"}} {:id #uuid "63d084df-c80e-46f2-b969-fdc7ba48529f", :page 387, :position {:bounding {:x1 186.94906616210938, :y1 226.79998779296875, :x2 588.0181884765625, :y2 247.60000610351562, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 186.94906616210938, :y1 226.79998779296875, :x2 588.0181884765625, :y2 247.60000610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 219.7375030517578, :y1 229.64999389648438, :x2 371.7001647949219, :y2 244.63748168945312, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "使用 let 或 const 替代 var，则不会把变量添加给全局对象"}, :properties {:color "yellow"}} {:id #uuid "63d08506-f186-464d-a57c-c6c990663fde", :page 387, :position {:bounding {:x1 152.46250915527344, :y1 541.6750183105469, :x2 229.2877960205078, :y2 568.0750198364258, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 541.6750183105469, :x2 229.2877960205078, :y2 568.0750198364258, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "窗口关系"}, :properties {:color "green"}} {:id #uuid "63d08509-7d5e-415d-a4fa-61e20f1408b6", :page 387, :position {:bounding {:x1 152.46250915527344, :y1 541.6750183105469, :x2 229.2877960205078, :y2 568.0750198364258, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 541.6750183105469, :x2 229.2877960205078, :y2 568.0750198364258, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "窗口关系"}, :properties {:color "green"}} {:id #uuid "63d0851e-0b14-4bdf-9c18-11bd5b1ac391", :page 387, :position {:bounding {:x1 109.20000457763672, :y1 580.2625198364258, :x2 518.7247161865234, :y2 600.2625198364258, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 580.2625198364258, :x2 518.7247161865234, :y2 600.2625198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 134.8249969482422, :y1 583.462516784668, :x2 135.01815795898438, :y2 597.7000198364258, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "top 对象始终指向最上层（最外层）窗口，即浏览器窗口本身"}, :properties {:color "yellow"}} {:id #uuid "63d08524-c82b-47af-9fd6-486cc7b17e61", :page 387, :position {:bounding {:x1 0, :y1 348.8000183105469, :x2 755.1675415039062, :y2 623.8000183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 348.8000183105469, :x2 0, :y2 371.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 547.2625122070312, :y1 580.2625198364258, :x2 755.1675415039062, :y2 600.2625198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 598.5, :y1 583.462516784668, :x2 755.1675415039062, :y2 597.7000198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 603.0000228881836, :x2 156.8805694580078, :y2 623.8000183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "parent 对象则始终指向当前窗口的父窗口"}, :properties {:color "yellow"}} {:id #uuid "63d08538-5dee-4ad3-bde3-d8dc542b4e10", :page 387, :position {:bounding {:x1 174.5749969482422, :y1 647.5375061035156, :x2 557.9595947265625, :y2 668.3374938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 174.5749969482422, :y1 647.5375061035156, :x2 557.9595947265625, :y2 668.3374938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 208.83750915527344, :y1 650.7375183105469, :x2 557.9595947265625, :y2 664.9750061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "self 对象，它是终极 window 属性，始终会指向 window"}, :properties {:color "yellow"}} {:id #uuid "63d08541-84ec-4e9b-a9d8-d51ea3dfa9c9", :page 387, :position {:bounding {:x1 134.57846069335938, :y1 750.3125305175781, :x2 306.11309814453125, :y2 777.9750061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 750.3125305175781, :x2 306.11309814453125, :y2 776.7125244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 134.57846069335938, :y1 751.5750122070312, :x2 134.58197021484375, :y2 777.9750061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "窗口位置与像素比"}, :properties {:color "green"}} {:id #uuid "63d0854b-a040-4746-a4c4-709e5098301c", :page 388, :position {:bounding {:x1 142.22500610351562, :y1 251.78750610351562, :x2 439.21685791015625, :y2 272.5874938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 251.78750610351562, :x2 439.21685791015625, :y2 272.5874938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 168.8625030517578, :y1 254.98751831054688, :x2 255.77304077148438, :y2 269.9750061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 388}, :content {:text "CSS 像素是 Web 开发中使用的统一像素单位"}, :properties {:color "yellow"}} {:id #uuid "63d0855f-b64a-4712-b0f0-46aff2e6e2dc", :page 387, :position {:bounding {:x1 109.20000457763672, :y1 788.9125366210938, :x2 494.73216247558594, :y2 808.9125366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 788.9125366210938, :x2 494.73216247558594, :y2 808.9125366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "window 对象的位置可以通过不同的属性和方法来确定"}, :properties {:color "yellow"}} {:id #uuid "63d0857c-43f4-4029-8420-664aa1ef10c2", :page 387, :position {:bounding {:x1 110.80000305175781, :y1 834.0375213623047, :x2 425.06915283203125, :y2 854.8375244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.80000305175781, :y1 834.0375213623047, :x2 425.06915283203125, :y2 854.8375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 176.375, :y1 836.9000244140625, :x2 334.3756408691406, :y2 851.8875122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "可以使用 moveTo()和 moveBy()方法移动窗口"}, :properties {:color "yellow"}} {:id #uuid "63d08585-f16b-40b7-83d9-23c9ed2578bd", :page 387, :position {:bounding {:x1 0, :y1 476.8000183105469, :x2 753.2750244140625, :y2 832.1000366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 476.8000183105469, :x2 0, :y2 499.2000274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 728.4000244140625, :y1 788.9125213623047, :x2 753.2750244140625, :y2 808.9125213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 637.3250122070312, :y1 789.2500305175781, :x2 717.8865356445312, :y2 810.0500335693359, :width 864.9999999999999, :height 1080.0639853747714} {:x1 642.9125366210938, :y1 792.1125335693359, :x2 717.8865356445312, :y2 806.3500213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 728.4000244140625, :y1 792.1125335693359, :x2 753.2750244140625, :y2 806.3500213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 811.3000335693359, :x2 680.2274780273438, :y2 832.1000366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 814.5000305175781, :x2 649.7750244140625, :y2 829.4875335693359, :width 864.9999999999999, :height 1080.0639853747714}), :page 387}, :content {:text "screenLeft 和 screenTop 属性，用于表示窗口相对于屏幕左侧和顶部的位置 ，返回值的单位是 CSS 像素"}, :properties {:color "yellow"}} {:id #uuid "63d0858d-f35f-4a46-ab39-8bd20f691a8d", :page 388, :position {:bounding {:x1 621.983642578125, :y1 252.7875213623047, :x2 711.5438842773438, :y2 273.58750915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 621.983642578125, :y1 252.7875213623047, :x2 711.5438842773438, :y2 273.58750915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 677.0125122070312, :y1 254.9875030517578, :x2 711.5438842773438, :y2 269.9750213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 388}, :content {:text "个角度：0.0213°"}, :properties {:color "yellow"}} {:id #uuid "63d085bf-4a93-4b87-b3bb-fda00a73dfbc", :page 388, :position {:bounding {:x1 0, :y1 387.2625045776367, :x2 786.4923706054688, :y2 451.2000045776367, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 482.099853515625, :y1 387.2625045776367, :x2 786.4923706054688, :y2 408.0625228881836, :width 864.9999999999999, :height 1080.0639853747714} {:x1 597.3500366210938, :y1 389.46251678466797, :x2 786.4923706054688, :y2 404.4500045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 409.3875045776367, :x2 292.68282318115234, :y2 429.3875045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 308.5500183105469, :y1 409.3875045776367, :x2 375.6170349121094, :y2 429.3875045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 412.58751678466797, :x2 292.68282318115234, :y2 426.8250045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 308.5500183105469, :y1 412.58751678466797, :x2 308.8290100097656, :y2 426.8250045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 428.80001068115234, :x2 0, :y2 451.2000045776367, :width 864.9999999999999, :height 1080.0639853747714}), :page 388}, :content {:text "这个物理像素与 CSS 像素之间的转换比率由 window.devicePixelRatio 属性提供"}, :properties {:color "yellow"}} {:id #uuid "63d085d0-dbb7-4afa-860d-1ab934e21f9d", :page 388, :position {:bounding {:x1 0, :y1 475.90001678466797, :x2 785.0912475585938, :y2 520.0999984741211, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 712.25, :y1 475.90001678466797, :x2 785.0912475585938, :y2 496.7000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 712.25, :y1 479.0999984741211, :x2 785.0912475585938, :y2 494.08751678466797, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 492.80001068115234, :x2 0, :y2 515.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 417.4750061035156, :y1 498.9500045776367, :x2 711.017333984375, :y2 518.9500045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 499.30001068115234, :x2 401.6078186035156, :y2 520.0999984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 417.4750061035156, :y1 502.15001678466797, :x2 417.6681823730469, :y2 516.3875045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 502.5000228881836, :x2 401.6078186035156, :y2 517.4875106811523, :width 864.9999999999999, :height 1080.0639853747714}), :page 388}, :content {:text "DPI 表示单位像素密度，而 window.devicePixelRatio 表示物理像素与逻辑像素之间的缩放系数。"}, :properties {:color "yellow"}} {:id #uuid "63d085d7-57f2-4e84-886a-9796bbe428db", :page 388, :position {:bounding {:x1 183.875, :y1 534.5500030517578, :x2 260.7002868652344, :y2 560.9499969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 534.5500030517578, :x2 260.7002868652344, :y2 560.9499969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 388}, :content {:text "窗口大小"}, :properties {:color "green"}} {:id #uuid "63d08606-c677-46fc-9233-84b37a34c7f8", :page 388, :position {:bounding {:x1 0, :y1 556.8000030517578, :x2 785.103759765625, :y2 639.0749969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 532.8500366210938, :y1 595.5374984741211, :x2 785.103759765625, :y2 616.3374938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 532.8500366210938, :y1 598.7375030517578, :x2 785.103759765625, :y2 613.7250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 618.2750091552734, :x2 249.67591094970703, :y2 639.0749969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 388}, :content {:text "outerWidth 和 outerHeight 返回浏览器窗口自身的大小"}, :properties {:color "yellow"}} {:id #uuid "63d0860e-d9b7-41f2-856f-08fd210fc616", :page 388, :position {:bounding {:x1 0, :y1 572.8000030517578, :x2 779.8849487304688, :y2 661.4625091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 572.8000030517578, :x2 0, :y2 595.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 698.9874877929688, :y1 617.9375, :x2 779.8849487304688, :y2 637.9375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 640.6625061035156, :x2 457.58087158203125, :y2 661.4625091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 643.8625030517578, :x2 227.71250915527344, :y2 658.8500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 388}, :content {:text "innerWidth和 innerHeight 返回浏览器窗口中页面视口的大小"}, :properties {:color "yellow"}} {:id #uuid "63d08628-65ca-4e3a-8443-712596461a62", :page 388, :position {:bounding {:x1 0, :y1 604.8000030517578, :x2 776.1036987304688, :y2 706.3500061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 604.8000030517578, :x2 0, :y2 627.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 140.6125030517578, :y1 662.8125, :x2 776.1036987304688, :y2 683.6124877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 448.0249938964844, :y1 666.0124969482422, :x2 776.1036987304688, :y2 680.25, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 685.5500030517578, :x2 294.88927459716797, :y2 706.3500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 388}, :content {:text "document.documentElement.clientWidth 和 document.documentElement.clientHeight返回页面视口的宽度和高度"}, :properties {:color "yellow"}} {:id #uuid "63d0867a-237c-4df3-a53a-cc40a76a8621", :page 389, :position {:bounding {:x1 0, :y1 44.80000305175781, :x2 756.0823974609375, :y2 209.26251220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 44.80000305175781, :x2 0, :y2 67.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 165.98751831054688, :x2 756.0823974609375, :y2 186.78750610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 215.9375, :y1 168.83749389648438, :x2 756.0823974609375, :y2 183.82498168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 188.46249389648438, :x2 219.7240753173828, :y2 209.26251220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 389}, :content {:text "在移动设备上，window.innerWidth 和 window.innerHeight 返回视口的大小，也就是屏幕上页面可视区域的大小"}, :properties {:color "yellow"}} {:id #uuid "63d086c7-4e15-4b6f-b31f-7c719230bdd6", :page 388, :position {:bounding {:x1 0, :y1 844.7999877929688, :x2 796.7626342773438, :y2 988.7124938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 844.7999877929688, :x2 0, :y2 867.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 511.1505432128906, :y1 945.4249877929688, :x2 796.7626342773438, :y2 966.2250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 622.2250366210938, :y1 948.2875061035156, :x2 796.7626342773438, :y2 962.5249938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 967.9125061035156, :x2 320.6509017944336, :y2 988.7124938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 388}, :content {:text "如果不是则通过 document.compatMode来检查页面是否处于标准模式"}, :properties {:color "yellow"}} {:id #uuid "63d08722-9140-48a2-8f42-eb8451ef996a", :page 389, :position {:bounding {:x1 110.8125, :y1 473.4874954223633, :x2 482.67822265625, :y2 494.28751373291016, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 473.4874954223633, :x2 242.4779815673828, :y2 494.28751373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 258.3500061035156, :y1 473.4874954223633, :x2 345.88677978515625, :y2 494.28751373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 360.82501220703125, :y1 473.4874954223633, :x2 482.67822265625, :y2 494.28751373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 172.8625030517578, :y1 476.35001373291016, :x2 242.4779815673828, :y2 490.5875015258789, :width 864.9999999999999, :height 1080.0639853747714} {:x1 258.3500061035156, :y1 476.68750762939453, :x2 345.88677978515625, :y2 491.6749954223633, :width 864.9999999999999, :height 1080.0639853747714}), :page 389}, :content {:text "可以使用 resizeTo()和 resizeBy()方法调整窗口大小"}, :properties {:color "yellow"}} {:id #uuid "63d0872d-b11e-48dc-92f5-cea8fcafb021", :page 389, :position {:bounding {:x1 152.46250915527344, :y1 708.4749984741211, :x2 229.2877960205078, :y2 734.875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 708.4749984741211, :x2 229.2877960205078, :y2 734.875, :width 864.9999999999999, :height 1080.0639853747714}), :page 389}, :content {:text "视口位置"}, :properties {:color "green"}} {:id #uuid "63d08745-c7ed-4e8f-b6c2-12e6c0fdc8c7", :page 389, :position {:bounding {:x1 0, :y1 428.8000030517578, :x2 754.8359985351562, :y2 813.0875091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 428.8000030517578, :x2 0, :y2 451.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.49071502685547, :y1 769.9000091552734, :x2 754.8359985351562, :y2 790.6999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 535.5, :y1 772.75, :x2 754.8359985351562, :y2 786.9875030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 791.9375, :x2 128.95408630371094, :y2 811.9375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 140.5124969482422, :y1 791.9375, :x2 430.3871765136719, :y2 812.7375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 441, :y1 792.2875061035156, :x2 456.20001220703125, :y2 813.0875091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 795.1374969482422, :x2 128.95408630371094, :y2 809.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 140.5124969482422, :y1 795.1374969482422, :x2 430.3871765136719, :y2 810.125, :width 864.9999999999999, :height 1080.0639853747714}), :page 389}, :content {:text "度量文档相对于视口滚动距离的属性有两对，返回相等的值：window.pageXoffset/window. scrollX 和 window.pageYoffset/window.scrollY。"}, :properties {:color "yellow"}} {:id #uuid "63d0874b-5372-4690-a349-a3a1dfa45b4b", :page 389, :position {:bounding {:x1 110.82500457763672, :y1 814.6750030517578, :x2 538.4721069335938, :y2 835.4875030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 239.5625, :y1 814.6750030517578, :x2 316.1702575683594, :y2 835.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 333.2124938964844, :y1 814.6750030517578, :x2 417.2677307128906, :y2 835.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 433.88751220703125, :y1 814.6750030517578, :x2 538.4721069335938, :y2 835.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.82500457763672, :y1 814.6875, :x2 221.9318084716797, :y2 835.4875030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 173.625, :y1 817.5375061035156, :x2 221.9318084716797, :y2 831.7750091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 239.5625, :y1 817.875, :x2 316.1702575683594, :y2 832.8625030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 333.2124938964844, :y1 817.875, :x2 417.2677307128906, :y2 832.8625030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 433.88751220703125, :y1 817.875, :x2 538.4721069335938, :y2 832.8625030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 389}, :content {:text "可以使用 scroll()、scrollTo()和 scrollBy()方法滚动页面。"}, :properties {:color "yellow"}} {:id #uuid "63d08781-b8be-4d0b-9200-9121c7149047", :page 390, :position {:bounding {:x1 0, :y1 159.52500915527344, :x2 784.8900146484375, :y2 291.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 621.8504028320312, :y1 159.52500915527344, :x2 784.8900146484375, :y2 180.32501220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 681.8125, :y1 162.3874969482422, :x2 784.8900146484375, :y2 176.625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 181.92501831054688, :x2 279.6146011352539, :y2 202.72500610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 268.8000183105469, :x2 0, :y2 291.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 390}, :content {:text "可以通过 behavior 属性告诉浏览器是否平滑滚动"}, :properties {:color "yellow"}} {:id #uuid "63d08794-9a98-4a92-a158-415d27db1421", :page 390, :position {:bounding {:x1 183.875, :y1 424.875, :x2 337.5256042480469, :y2 451.2750244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 424.875, :x2 337.5256042480469, :y2 451.2750244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 390}, :content {:text "导航与打开新窗口"}, :properties {:color "green"}} {:id #uuid "63d0879e-7023-4405-bf42-50c67e80add8", :page 390, :position {:bounding {:x1 140.6125030517578, :y1 463.46250915527344, :x2 667.5039672851562, :y2 484.26251220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 463.46250915527344, :x2 667.5039672851562, :y2 484.26251220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 251.6125030517578, :y1 467.01251220703125, :x2 455.9867248535156, :y2 482.00001525878906, :width 864.9999999999999, :height 1080.0639853747714}), :page 390}, :content {:text "window.open()方法可以用于导航到指定 URL，也可以用于打开新浏览器窗口"}, :properties {:color "yellow"}} {:id #uuid "63d08841-6284-4807-a044-9dda98e0acc0", :page 390, :position {:bounding {:x1 142.22500610351562, :y1 733.7375335693359, :x2 684.763671875, :y2 754.5375213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 733.7375335693359, :x2 684.763671875, :y2 754.5375213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 177.6999969482422, :y1 736.6000213623047, :x2 286.6433410644531, :y2 750.8375244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 390}, :content {:text "如果 window.open()的第二个参数不是已有窗口，则会打开一个新窗口或标签页"}, :properties {:color "yellow"}} {:id #uuid "63d0884b-cea9-4260-a357-e3ca42c8f03f", :page 390, :position {:bounding {:x1 142.21250915527344, :y1 823.4250183105469, :x2 599.0969696044922, :y2 844.2250366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.21250915527344, :y1 823.4250183105469, :x2 599.0969696044922, :y2 844.2250366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 390}, :content {:text "特性字符串是一个逗号分隔的设置字符串，用于指定新窗口包含的特"}, :properties {:color "yellow"}} {:id #uuid "63d08862-f467-4e2f-9afb-4c76f0f0f20c", :page 391, :position {:bounding {:x1 110.8125, :y1 338.95001220703125, :x2 570.5131225585938, :y2 359.75, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 338.95001220703125, :x2 570.5131225585938, :y2 359.75, :width 864.9999999999999, :height 1080.0639853747714}), :page 391}, :content {:text "这些设置需要以逗号分隔的名值对形式出现，其中名值对以等号连接"}, :properties {:color "yellow"}} {:id #uuid "63d0887c-1819-4683-b408-e586f59c48a4", :page 391, :position {:bounding {:x1 283.1067810058594, :y1 530.9875183105469, :x2 736.1732788085938, :y2 551.7875213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 283.1067810058594, :y1 530.9875183105469, :x2 736.1732788085938, :y2 551.7875213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 360.82501220703125, :y1 533.8375091552734, :x2 418.57208251953125, :y2 548.0750122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 391}, :content {:text "跟使用任何 window 对象一样，可以使用这个对象操纵新打开的窗口"}, :properties {:color "yellow"}} {:id #uuid "63d08884-18b4-494d-b785-cae6af412c28", :page 391, :position {:bounding {:x1 0, :y1 476.80001068115234, :x2 759.2334594726562, :y2 816.4125061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 476.80001068115234, :x2 0, :y2 499.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 302.375, :y1 773.2125244140625, :x2 759.2334594726562, :y2 794.0125122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 773.2250061035156, :x2 285.1936950683594, :y2 794.0250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 302.375, :y1 776.4125061035156, :x2 759.2334594726562, :y2 791.4000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 200.85000610351562, :y1 776.4250183105469, :x2 285.1936950683594, :y2 791.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 795.6125183105469, :x2 185.42750549316406, :y2 816.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 798.8125305175781, :x2 153.6125030517578, :y2 813.8000183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 391}, :content {:text "弹出窗口可以调用 top.close()来关闭自己。关闭窗口以后，窗口的引用虽然还在，但只能用于检查其 closed 属性"}, :properties {:color "yellow"}} {:id #uuid "63d0889d-4973-433f-9665-b3576aaba8b1", :page 391, :position {:bounding {:x1 110.8125, :y1 860.5125122070312, :x2 559.6351928710938, :y2 881.3125152587891, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 860.5125122070312, :x2 559.6351928710938, :y2 881.3125152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 205.3125, :y1 863.3625106811523, :x2 423.1632995605469, :y2 878.3500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 391}, :content {:text "新创建窗口的 window 对象有一个属性 opener，指向打开它的窗口"}, :properties {:color "yellow"}} {:id #uuid "63d088b3-71e9-4bd6-9d0b-9035c6358c13", :page 392, :position {:bounding {:x1 0, :y1 165.98750686645508, :x2 791.0968627929688, :y2 291.2000160217285, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 492.499267578125, :y1 165.98750686645508, :x2 791.0968627929688, :y2 186.78749465942383, :width 864.9999999999999, :height 1080.0639853747714} {:x1 733.2374877929688, :y1 168.83749771118164, :x2 791.0968627929688, :y2 183.07500076293945, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 188.46249771118164, :x2 566.533317565918, :y2 209.26250076293945, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 268.799991607666, :x2 0, :y2 291.2000160217285, :width 864.9999999999999, :height 1080.0639853747714}), :page 392}, :content {:text "。如果一个标签页打开了另一个，而 window对象需要跟另一个标签页通信，那么标签便不能运行在独立的进程中"}, :properties {:color "yellow"}} {:id #uuid "63d088c1-8809-48ca-a822-6aa45176eed8", :page 392, :position {:bounding {:x1 0, :y1 320.8250160217285, :x2 791.353515625, :y2 403.2000160217285, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 320.8250160217285, :x2 791.353515625, :y2 341.62500381469727, :width 864.9999999999999, :height 1080.0639853747714} {:x1 157.21250915527344, :y1 324.02499771118164, :x2 791.353515625, :y2 339.0125160217285, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 343.2250099182129, :x2 173.0519561767578, :y2 364.02499771118164, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 380.799991607666, :x2 0, :y2 403.2000160217285, :width 864.9999999999999, :height 1080.0639853747714}), :page 392}, :content {:text "把 opener 设置为 null 表示新打开的标签页不需要与打开它的标签页通信，因此可以在独立进程中运行。"}, :properties {:color "yellow"}} {:id #uuid "63d088f8-dd64-4af5-903e-493d31744f12", :page 392, :position {:bounding {:x1 142.22500610351562, :y1 724.625, :x2 687.4847717285156, :y2 745.4250183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 724.625, :x2 687.4847717285156, :y2 745.4250183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 392}, :content {:text "所有现代浏览器都内置了屏蔽弹窗的程序，因此大多数意料之外的弹窗都会被屏蔽"}, :properties {:color "yellow"}} {:id #uuid "63d08900-2097-486a-949e-a7a827717a84", :page 392, :position {:bounding {:x1 0, :y1 652.8000030517578, :x2 784.8900146484375, :y2 790.2250061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 652.8000030517578, :x2 0, :y2 675.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 310.138916015625, :y1 747.0249938964844, :x2 784.8900146484375, :y2 767.8250122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 643.3875122070312, :y1 749.8875122070312, :x2 784.8900146484375, :y2 764.125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 769.4250183105469, :x2 203.77957153320312, :y2 790.2250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 772.625, :x2 175.1125030517578, :y2 787.6125183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 392}, :content {:text "如果浏览器内置的弹窗屏蔽程序阻止了弹窗，那么 window.open()很可能会返回 null"}, :properties {:color "yellow"}} {:id #uuid "63d0890d-c088-4178-84c7-94ac0c8ccdcb", :page 392, :position {:bounding {:x1 142.22500610351562, :y1 864.4000244140625, :x2 619.18505859375, :y2 885.2000274658203, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 864.4000244140625, :x2 619.18505859375, :y2 885.2000274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 400.3000183105469, :y1 867.2500228881836, :x2 509.1456604003906, :y2 881.4875335693359, :width 864.9999999999999, :height 1080.0639853747714}), :page 392}, :content {:text "在浏览器扩展或其他程序屏蔽弹窗时，window.open()通常会抛出错误"}, :properties {:color "yellow"}} {:id #uuid "63d08924-f8b7-4007-bcb5-fce364a4189d", :page 393, :position {:bounding {:x1 152.46250915527344, :y1 346.875, :x2 210.0814666748047, :y2 373.27500915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 346.875, :x2 210.0814666748047, :y2 373.27500915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 393}, :content {:text "定时器"}, :properties {:color "green"}} {:id #uuid "63d08933-70ee-451c-ae7d-366ceea9e52b", :page 393, :position {:bounding {:x1 200.9499969482422, :y1 407.8625183105469, :x2 547.5311279296875, :y2 428.6625213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 200.9499969482422, :y1 407.8625183105469, :x2 547.5311279296875, :y2 428.6625213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 200.9499969482422, :y1 411.06251525878906, :x2 294.2410583496094, :y2 425.3000183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 393}, :content {:text "setTimeout()用于指定在一定时间后执行某些代码"}, :properties {:color "yellow"}} {:id #uuid "63d08948-339c-4fbd-8aa1-d58c785efccf", :page 393, :position {:bounding {:x1 0, :y1 204.80000686645508, :x2 753.8136596679688, :y2 451.40000915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 204.80000686645508, :x2 0, :y2 227.20000839233398, :width 864.9999999999999, :height 1080.0639853747714} {:x1 581.7125244140625, :y1 407.8625183105469, :x2 669.6089477539062, :y2 427.8625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 692.8125, :y1 408.21250915527344, :x2 753.8136596679688, :y2 429.01251220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 692.8125, :y1 411.4125061035156, :x2 753.8136596679688, :y2 426.40000915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 430.6000061035156, :x2 263.4892883300781, :y2 451.40000915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 393}, :content {:text "setInterval()用于指定每隔一段时间执行某些代码"}, :properties {:color "yellow"}} {:id #uuid "63d08968-5f85-4219-8558-64e7ca637acd", :page 393, :position {:bounding {:x1 0, :y1 332.80001068115234, :x2 755.3661499023438, :y2 628.3625030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 332.80001068115234, :x2 0, :y2 355.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 582.7250366210938, :y1 584.1625213623047, :x2 755.3661499023438, :y2 604.9625091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 261.01251220703125, :y1 584.8250274658203, :x2 571.6643676757812, :y2 605.6250152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 582.7250366210938, :y1 587.3625030517578, :x2 755.3661499023438, :y2 602.3500213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 261.01251220703125, :y1 588.0250091552734, :x2 571.6643676757812, :y2 602.2625274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 607.5625152587891, :x2 247.3492889404297, :y2 628.3625030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 393}, :content {:text "setTimeout()的第二个参数只是告诉 JavaScript 引擎在指定的毫秒数过后把任务添加到这个队列。"}, :properties {:color "yellow"}} {:id #uuid "63d089a3-95d6-454c-be83-d8223bd3e69b", :page 393, :position {:bounding {:x1 0, :y1 396.8000183105469, :x2 754.2237548828125, :y2 718.0250091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 396.8000183105469, :x2 0, :y2 419.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 305.8435363769531, :y1 674.8250274658203, :x2 650.7110595703125, :y2 695.6250152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 662.9249877929688, :y1 674.8250274658203, :x2 754.2237548828125, :y2 695.6250152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 543.375, :y1 677.6875152587891, :x2 650.7110595703125, :y2 691.9250030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 662.9249877929688, :y1 678.0250091552734, :x2 754.2237548828125, :y2 693.0125274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 697.2250213623047, :x2 112.56551361083984, :y2 718.0250091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 700.4250030517578, :x2 112.56551361083984, :y2 715.4125213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 393}, :content {:text "要取消等待中的排期任务，可以调用 clearTimeout()方法并传入超时 ID"}, :properties {:color "yellow"}} {:id #uuid "63d089ee-fd4b-4db7-8a36-413ac67807a8", :page 394, :position {:bounding {:x1 140.6125030517578, :y1 340.50000762939453, :x2 758.6884155273438, :y2 361.63751220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 340.50000762939453, :x2 228.4300994873047, :y2 360.5, :width 864.9999999999999, :height 1080.0639853747714} {:x1 251.6125030517578, :y1 340.8375015258789, :x2 758.6884155273438, :y2 361.63751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 251.6125030517578, :y1 344.0375061035156, :x2 451.1905212402344, :y2 359.02500915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 394}, :content {:text "setInterval()方法也会返回一个循环定时 ID，可以用于在未来某个时间点上取消循环定时"}, :properties {:color "yellow"}} {:id #uuid "63d08a52-8c8b-4b25-8df6-91084f56a973", :page 395, :position {:bounding {:x1 152.46250915527344, :y1 178.75, :x2 248.49412536621094, :y2 205.14999389648438, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 178.75, :x2 248.49412536621094, :y2 205.14999389648438, :width 864.9999999999999, :height 1080.0639853747714}), :page 395}, :content {:text "系统对话框"}, :properties {:color "green"}} {:id #uuid "63d08a82-a58a-4f57-aabf-3fc7122e6772", :page 395, :position {:bounding {:x1 109.20000457763672, :y1 307.0125045776367, :x2 595.376220703125, :y2 328.1500015258789, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 307.0125045776367, :x2 153.40615844726562, :y2 327.0125198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 168.97500610351562, :y1 307.3499984741211, :x2 595.376220703125, :y2 328.1500015258789, :width 864.9999999999999, :height 1080.0639853747714}), :page 395}, :content {:text "alert()方法在本书示例中经常用到。它接收一个要显示给用户的字符串"}, :properties {:color "yellow"}} {:id #uuid "63d08a96-74ca-46c7-bf1c-3c2afc474c43", :page 395, :position {:bounding {:x1 110.8125, :y1 593.5125122070312, :x2 467.41558837890625, :y2 614.3125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 593.5125122070312, :x2 411.3591003417969, :y2 614.3125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 421.5500183105469, :y1 593.5125122070312, :x2 467.41558837890625, :y2 614.3125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 344.6000061035156, :y1 596.375, :x2 411.3591003417969, :y2 610.6125183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 395}, :content {:text "第二种对话框叫确认框，通过调用 confirm()来显示"}, :properties {:color "yellow"}} {:id #uuid "63d08aae-6fc1-43ea-938d-562bbfb1f2e6", :page 395, :position {:bounding {:x1 110.8125, :y1 812.4000091552734, :x2 642.9232177734375, :y2 833.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 812.4000091552734, :x2 541.5341186523438, :y2 833.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 551.6375122070312, :y1 812.4000091552734, :x2 642.9232177734375, :y2 833.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 234.7375030517578, :y1 814.6000061035156, :x2 541.5341186523438, :y2 829.5875091552734, :width 864.9999999999999, :height 1080.0639853747714}), :page 395}, :content {:text "要知道用户单击了 OK 按钮还是 Cancel 按钮，可以判断 confirm()方法的返回值"}, :properties {:color "yellow"}} {:id #uuid "63d08aba-99a5-40ec-85d2-cd118a24b419", :page 396, :position {:bounding {:x1 142.21250915527344, :y1 188.47500610351562, :x2 774.4982299804688, :y2 209.27499389648438, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.21250915527344, :y1 188.47500610351562, :x2 774.4982299804688, :y2 209.27499389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 386.25, :y1 191.32501220703125, :x2 451.36553955078125, :y2 205.5625, :width 864.9999999999999, :height 1080.0639853747714}), :page 396}, :content {:text "最后一种对话框是提示框，通过调用 prompt()方法来显示。提示框的用途是提示用户输入消息"}, :properties {:color "yellow"}} {:id #uuid "63d08b03-0d68-4137-8a9c-33bc866ee436", :page 396, :position {:bounding {:x1 0, :y1 620.8000030517578, :x2 786.2252807617188, :y2 840.9875183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 620.8000030517578, :x2 0, :y2 643.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 280.6853942871094, :y1 797.8000183105469, :x2 786.2252807617188, :y2 818.6000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 497.6499938964844, :y1 801, :x2 786.2252807617188, :y2 815.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.11250305175781, :y1 820.1875, :x2 424.5215759277344, :y2 840.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 436.7375183105469, :y1 820.1875, :x2 501.3503112792969, :y2 840.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 515.2875366210938, :y1 820.1875, :x2 591.3849487304688, :y2 840.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.11250305175781, :y1 823.3875122070312, :x2 424.5215759277344, :y2 838.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 436.7375183105469, :y1 823.3875122070312, :x2 501.3503112792969, :y2 838.375, :width 864.9999999999999, :height 1080.0639853747714}), :page 396}, :content {:text "用户在浏览器菜单上选择“查找”（find）和“打印”（print）时显示的就是这两种对话框。通过在 window 对象上调用 find()和 print()可以显示它"}, :properties {:color "yellow"}} {:id #uuid "63d08b0b-f58b-44f5-9b92-ac4fc407f15f", :page 397, :position {:bounding {:x1 124.93165588378906, :y1 119.82501220703125, :x2 299.6612243652344, :y2 151.8375244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 146.0124969482422, :y1 119.82501220703125, :x2 233.25491333007812, :y2 150.22503662109375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 248.40000915527344, :y1 119.82501220703125, :x2 299.6612243652344, :y2 150.22503662109375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 124.93165588378906, :y1 120.63751220703125, :x2 124.9346923828125, :y2 151.8375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 146.0124969482422, :y1 124.625, :x2 233.25491333007812, :y2 145.97503662109375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 248.40000915527344, :y1 124.625, :x2 252.6750030517578, :y2 145.97503662109375, :width 864.9999999999999, :height 1080.0639853747714}), :page 397}, :content {:text "location 对象"}, :properties {:color "green"}} {:id #uuid "63d08b82-ded9-4f11-9d4b-abcf1dcb8dba", :page 397, :position {:bounding {:x1 0, :y1 60.79999923706055, :x2 755.6673583984375, :y2 252.53750610351562, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 60.79999923706055, :x2 0, :y2 83.20000457763672, :width 864.9999999999999, :height 1080.0639853747714} {:x1 500.2124938964844, :y1 209, :x2 755.6673583984375, :y2 229.79998779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 500.2124938964844, :y1 212.1999969482422, :x2 755.6673583984375, :y2 226.4375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 231.7375030517578, :x2 561.7653198242188, :y2 252.53750610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 234.9375, :x2 269.265380859375, :y2 249.9250030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 397}, :content {:text "location 对象不仅保存着当前加载文档的信息，也保存着把 URL 解析为离散片段后能够通过属性访问的信息"}, :properties {:color "yellow"}} {:id #uuid "63d08b94-abe1-41cc-956b-94687c3ab2eb", :page 397, :position {:bounding {:x1 152.46250915527344, :y1 659.7000122070312, :x2 248.49412536621094, :y2 686.1000061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 659.7000122070312, :x2 248.49412536621094, :y2 686.1000061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 397}, :content {:text "查询字符串"}, :properties {:color "green"}} {:id #uuid "63d08bad-a8d4-4ba7-9fe4-e06f0ee69fc1", :page 397, :position {:bounding {:x1 80.73750305175781, :y1 720.7875366210938, :x2 506.6808776855469, :y2 741.5875244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 80.73750305175781, :y1 720.7875366210938, :x2 191.8399658203125, :y2 740.7875366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 208.8249969482422, :y1 720.7875366210938, :x2 506.6808776855469, :y2 741.5875244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 208.8249969482422, :y1 723.9875335693359, :x2 398.8648986816406, :y2 738.9750366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 397}, :content {:text "location.search 返回了从问号开始直到 URL 末尾的所有内容"}, :properties {:color "yellow"}} {:id #uuid "63d08bc2-6e1f-405d-a513-89aba0f76c8d", :page 398, :position {:bounding {:x1 0, :y1 181.91249084472656, :x2 793.2149658203125, :y2 307.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 517.1342163085938, :y1 181.91249084472656, :x2 793.2149658203125, :y2 202.71250915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 693.2875366210938, :y1 184.77500915527344, :x2 793.2149658203125, :y2 199.7624969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 204.31248474121094, :x2 338.45001220703125, :y2 225.1125030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 207.5124969482422, :x2 326.751220703125, :y2 222.49998474121094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 284.8000030517578, :x2 0, :y2 307.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 398}, :content {:text "接着，先把查询字符串按照&分割成数组，每个元素的形式为 name=value。"}, :properties {:color "yellow"}} {:id #uuid "63d08bf1-955e-45d4-a81e-847cb3482d36", :page 398, :position {:bounding {:x1 140.6125030517578, :y1 420.5750184059143, :x2 273.2157287597656, :y2 440.5750184059143, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 420.5750184059143, :x2 273.2157287597656, :y2 440.5750184059143, :width 864.9999999999999, :height 1080.0639853747714}), :page 398}, :content {:text "URLSearchParams"}, :properties {:color "yellow"}} {:id #uuid "63d08bf5-10c3-4dcb-897d-624bee7af7a0", :page 398, :position {:bounding {:x1 0, :y1 462.0125184059143, :x2 786.8624877929688, :y2 505.2000184059143, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 609.9457397460938, :y1 462.0125184059143, :x2 786.8624877929688, :y2 482.81250619888306, :width 864.9999999999999, :height 1080.0639853747714} {:x1 728.875, :y1 464.8624939918518, :x2 786.8624877929688, :y2 479.1000123023987, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 476.7999939918518, :x2 0, :y2 499.2000184059143, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 484.06250619888306, :x2 144.2513885498047, :y2 504.06250619888306, :width 864.9999999999999, :height 1080.0639853747714} {:x1 154.83750915527344, :y1 484.40000009536743, :x2 229.51170349121094, :y2 505.2000184059143, :width 864.9999999999999, :height 1080.0639853747714} {:x1 241.9375, :y1 484.40000009536743, :x2 516.0291137695312, :y2 505.2000184059143, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 487.2625184059143, :x2 144.2513885498047, :y2 501.50000619888306, :width 864.9999999999999, :height 1080.0639853747714} {:x1 154.83750915527344, :y1 487.6000123023987, :x2 229.51170349121094, :y2 502.58750009536743, :width 864.9999999999999, :height 1080.0639853747714}), :page 398}, :content {:text "这个实例上暴露了 get()、 set()和 delete()等方法，可以对查询字符串执行相应操作"}, :properties {:color "yellow"}} {:id #uuid "63d08c17-49b2-404e-bbc3-588cc7c07920", :page 398, :position {:bounding {:x1 140.6125030517578, :y1 439.1750030517578, :x2 763.54638671875, :y2 459.1750030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 439.1750030517578, :x2 763.54638671875, :y2 459.1750030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 278.95001220703125, :y1 442.7250061035156, :x2 427.905517578125, :y2 457.71250915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 398}, :content {:text "URLSearchParams 提 供 了 一 组 标 准 API 方 法 ， 通 过 它 们 可 以 检 查 和 修 改 查 询 字 符 串 。 给"}, :properties {:color "yellow"}} {:id #uuid "63d08c21-8afb-42b0-bfc3-51ae77c187ca", :page 398, :position {:bounding {:x1 183.875, :y1 893.0125427246094, :x2 260.7002868652344, :y2 919.4125061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 893.0125427246094, :x2 260.7002868652344, :y2 919.4125061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 398}, :content {:text "操作地址"}, :properties {:color "green"}} {:id #uuid "63d08c3d-03a6-484f-a7d4-9a65ecfe82e7", :page 398, :position {:bounding {:x1 0, :y1 796.8000183105469, :x2 785.7274780273438, :y2 975.2375183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 796.8000183105469, :x2 0, :y2 819.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 596.323486328125, :y1 931.9500122070312, :x2 682.3844604492188, :y2 952.75, :width 864.9999999999999, :height 1080.0639853747714} {:x1 694.3375244140625, :y1 931.9500122070312, :x2 785.7274780273438, :y2 952.75, :width 864.9999999999999, :height 1080.0639853747714} {:x1 626.0250244140625, :y1 934.8125, :x2 682.3844604492188, :y2 949.0500183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 694.3375244140625, :y1 935.1499938964844, :x2 785.7274780273438, :y2 950.1375122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 954.4375, :x2 176.14414978027344, :y2 975.2375183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 957.6375122070312, :x2 162.7148895263672, :y2 972.625, :width 864.9999999999999, :height 1080.0639853747714}), :page 398}, :content {:text "使用 assign()方法并传入一个 URL，"}, :properties {:color "yellow"}} {:id #uuid "63d08c4b-3671-4873-93fb-9ec994f1c909", :page 399, :position {:bounding {:x1 110.8125, :y1 121.1875, :x2 694.6613159179688, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 121.1875, :x2 694.6613159179688, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 323.0625, :y1 123.38751220703125, :x2 356, :y2 138.375, :width 864.9999999999999, :height 1080.0639853747714}), :page 399}, :content {:text "这行代码会立即启动导航到新 URL 的操作，同时在浏览器历史记录中增加一条记录"}, :properties {:color "yellow"}} {:id #uuid "63d08c5d-2883-4929-a7ae-14bba9730eb8", :page 399, :position {:bounding {:x1 0, :y1 12.800003051757812, :x2 758.4491577148438, :y2 164.38751220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 12.800003051757812, :x2 0, :y2 35.19999694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 726.55517578125, :y1 121.1875, :x2 758.4491577148438, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 143.23751831054688, :x2 173.1602325439453, :y2 163.23751831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 191.75, :y1 143.23751831054688, :x2 684.6416015625, :y2 164.03753662109375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 696.6124877929688, :y1 143.58749389648438, :x2 727.0758666992188, :y2 164.38751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 146.4375, :x2 173.1602325439453, :y2 160.67501831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 191.75, :y1 146.4375, :x2 684.6416015625, :y2 161.42498779296875, :width 864.9999999999999, :height 1080.0639853747714}), :page 399}, :content {:text "果给 location.href 或 window.location 设置一个 URL，也会以同一个 URL 值调用 assign()方法"}, :properties {:color "yellow"}} {:id #uuid "63d08cac-e2e5-411d-b64f-c71ce8285ba4", :page 399, :position {:bounding {:x1 0, :y1 380.80000591278076, :x2 754.74658203125, :y2 722.2875061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 380.80000591278076, :x2 0, :y2 403.20000743865967, :width 864.9999999999999, :height 1080.0639853747714} {:x1 309.9258117675781, :y1 679.1000061035156, :x2 619.3935546875, :y2 699.9000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 632.375, :y1 679.1000061035156, :x2 754.74658203125, :y2 699.9000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 555.4249877929688, :y1 681.9500122070312, :x2 619.3935546875, :y2 696.1875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 632.375, :y1 682.3000183105469, :x2 754.74658203125, :y2 697.2875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 701.4875183105469, :x2 421.1659393310547, :y2 722.2875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 704.6875, :x2 161.2773895263672, :y2 719.6750183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 399}, :content {:text "如果不希望增加历史记录，可以使用 replace()方法。这个方法接收一个 URL 参数，但重新加载后不会增加历史记录"}, :properties {:color "yellow"}} {:id #uuid "63d08cb2-d717-47de-b39c-79f515668679", :page 399, :position {:bounding {:x1 421.1659240722656, :y1 701.4875183105469, :x2 725.6764526367188, :y2 722.2875061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 421.1659240722656, :y1 701.4875183105469, :x2 530.3935546875, :y2 722.2875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 543.2875366210938, :y1 701.4875183105469, :x2 725.6764526367188, :y2 722.2875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 466.4250183105469, :y1 704.3500061035156, :x2 530.3935546875, :y2 718.5875244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 399}, :content {:text "。调用 replace()之后，用户不能回到前一页"}, :properties {:color "yellow"}} {:id #uuid "63d08cc4-c839-44e8-8d48-2e5712b703b5", :page 400, :position {:bounding {:x1 327.4250183105469, :y1 120.85000610351562, :x2 608.85546875, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 327.4250183105469, :y1 120.85000610351562, :x2 384.3943786621094, :y2 140.85000610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 395.7375183105469, :y1 121.1875, :x2 608.85546875, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714}), :page 400}, :content {:text "reload()，它能重新加载当前显示的页面"}, :properties {:color "yellow"}} {:id #uuid "63d08ccd-33de-4a6c-9240-66e94e13f645", :page 400, :position {:bounding {:x1 249.2135772705078, :y1 165.97500610351562, :x2 713.6763305664062, :y2 186.78750610351562, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 649.9249877929688, :y1 165.97500610351562, :x2 713.6763305664062, :y2 186.7750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 249.2135772705078, :y1 165.98751831054688, :x2 638.5819091796875, :y2 186.78750610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 581.6124877929688, :y1 168.8375244140625, :x2 638.5819091796875, :y2 183.07501220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 649.9249877929688, :y1 169.17501831054688, :x2 713.6763305664062, :y2 184.16250610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 400}, :content {:text "如果想强制从服务器重新加载，可以像下面这样给 reload()传个 true"}, :properties {:color "yellow"}} {:id #uuid "63d08cd7-78f1-4381-9dd0-8322f43fa38b", :page 400, :position {:bounding {:x1 177.4250030517578, :y1 290.0375061035156, :x2 343.87371826171875, :y2 320.4375, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 177.4250030517578, :y1 290.0375061035156, :x2 278.7291564941406, :y2 320.4375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 292.6125183105469, :y1 290.0375061035156, :x2 343.87371826171875, :y2 320.4375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 292.6125183105469, :y1 294.8374938964844, :x2 296.88751220703125, :y2 316.1875, :width 864.9999999999999, :height 1080.0639853747714}), :page 400}, :content {:text "navigator 对象"}, :properties {:color "green"}} {:id #uuid "63d08cec-3ac6-44fa-8f04-d70086b3f444", :page 400, :position {:bounding {:x1 112.1500015258789, :y1 357.0749969482422, :x2 488.5927429199219, :y2 377.875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 112.1500015258789, :y1 357.0749969482422, :x2 273.3740539550781, :y2 377.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 284.5500183105469, :y1 357.0749969482422, :x2 488.5927429199219, :y2 377.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 217.2624969482422, :y1 360.2749938964844, :x2 273.3740539550781, :y2 375.2624969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 284.5500183105469, :y1 360.2749938964844, :x2 376.6407470703125, :y2 375.2624969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 400}, :content {:text "只要浏览器启用 JavaScript，navigator 对象就一定存在"}, :properties {:color "yellow"}} {:id #uuid "63d08d3f-35ac-4eb3-a104-2082cdd164a7", :page 401, :position {:bounding {:x1 152.46250915527344, :y1 725.3625183105469, :x2 229.2877960205078, :y2 751.7625122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 725.3625183105469, :x2 229.2877960205078, :y2 751.7625122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 401}, :content {:text "检测插件"}, :properties {:color "green"}} {:id #uuid "63d08ec6-96a9-491b-b8aa-1c81f02e1939", :page 402, :position {:bounding {:x1 0, :y1 620.8000183105469, :x2 780.7592163085938, :y2 714.1375122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 620.8000183105469, :x2 0, :y2 643.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 720.9452514648438, :y1 670.9375152587891, :x2 780.7592163085938, :y2 691.7375183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 764.9375, :y1 674.1375122070312, :x2 780.7592163085938, :y2 689.1250152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 386.1625061035156, :y1 693.3250122070312, :x2 550.443603515625, :y2 714.1250305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1624984741211, :y1 693.3375244140625, :x2 376.1112976074219, :y2 714.1375122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1624984741211, :y1 696.5375061035156, :x2 376.1112976074219, :y2 711.5250244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 402}, :content {:text "在这些 IE中检测插件要使用专有的 ActiveXObject，并尝试实例化特定的插"}, :properties {:color "yellow"}} {:id #uuid "63d08ed8-ef26-44b7-a034-08290e74d0ab", :page 401, :position {:bounding {:x1 0, :y1 444.8000183105469, :x2 756.2872924804688, :y2 807.5000305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 444.8000183105469, :x2 0, :y2 467.2000198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 476.343017578125, :y1 764.3000183105469, :x2 756.2872924804688, :y2 785.1000366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 493.1750183105469, :y1 766.5000305175781, :x2 756.2872924804688, :y2 781.4875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 786.7000122070312, :x2 498.61326599121094, :y2 807.5000305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 789.9000244140625, :x2 162.15000915527344, :y2 804.8875122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 401}, :content {:text "除 IE10 及更低版本外的浏览器，都可以通过 plugins 数组来确定。这个数组中的每一项都包含如下属性"}, :properties {:color "yellow"}} {:id #uuid "63d08f24-fdf3-4f91-a87c-efad9eba0576", :page 403, :position {:bounding {:x1 110.80000305175781, :y1 210.86249542236328, :x2 750.4998321533203, :y2 231.66251373291016, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.80000305175781, :y1 210.86249542236328, :x2 750.4998321533203, :y2 231.66251373291016, :width 864.9999999999999, :height 1080.0639853747714}), :page 403}, :content {:text "因为检测插件涉及两种方式，所以一般要针对特定插件写一个函数，而不是使用通常的检测函数"}, :properties {:color "yellow"}} {:id #uuid "63d08f2b-6f9e-4ea7-9c5e-0b052e8c03d9", :page 403, :position {:bounding {:x1 152.46250915527344, :y1 798.3250427246094, :x2 267.700439453125, :y2 824.7250061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 798.3250427246094, :x2 267.700439453125, :y2 824.7250061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 403}, :content {:text "注册处理程序"}, :properties {:color "green"}} {:id #uuid "63d08f46-34b0-4f89-94dc-bd852e4a52cd", :page 403, :position {:bounding {:x1 0, :y1 540.8000183105469, :x2 753.87841796875, :y2 880.4625549316406, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 540.8000183105469, :x2 0, :y2 563.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 494.8000183105469, :y1 836.9250183105469, :x2 679.4113159179688, :y2 857.7250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 708.375, :y1 837.2625427246094, :x2 753.87841796875, :y2 858.0625305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 494.8000183105469, :y1 840.1250305175781, :x2 679.4113159179688, :y2 854.3625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 708.375, :y1 840.4625549316406, :x2 753.87841796875, :y2 855.4500427246094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 859.6625061035156, :x2 491.93556213378906, :y2 880.4625549316406, :width 864.9999999999999, :height 1080.0639853747714}), :page 403}, :content {:text "registerProtocolHandler()方法。这个方法可以把一个网站注册为处理某种特定类型信息应用程"}, :properties {:color "yellow"}} {:id #uuid "63d08f55-a620-4c93-bfe1-f61cfa8726c7", :page 404, :position {:bounding {:x1 177.4250030517578, :y1 233.67501831054688, :x2 305.4486999511719, :y2 264.0749816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 177.4250030517578, :y1 233.67501831054688, :x2 305.4486999511719, :y2 264.0749816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 254.1999969482422, :y1 238.47500610351562, :x2 258.4750061035156, :y2 259.8249816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 404}, :content {:text "screen 对象"}, :properties {:color "green"}} {:id #uuid "63d08f65-c3d3-4ad2-a3a2-bec84a3fdb61", :page 404, :position {:bounding {:x1 0, :y1 278.3125305175781, :x2 785.6942749023438, :y2 355.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 726.8147583007812, :y1 278.3125305175781, :x2 785.6942749023438, :y2 299.1125183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 300.8000183105469, :x2 657.4979629516602, :y2 321.6000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 332.8000183105469, :x2 0, :y2 355.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 404}, :content {:text "。这个对象中保存的纯粹是客户端能力信息，也就是浏览器窗口外面的客户端显示器的信息"}, :properties {:color "yellow"}} {:id #uuid "63d08fa2-7b9e-4372-b943-0be9c16a7a38", :page 404, :position {:bounding {:x1 177.4250030517578, :y1 640.1500015258789, :x2 318.2611999511719, :y2 670.5500259399414, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 177.4250030517578, :y1 640.1500015258789, :x2 251.5651397705078, :y2 670.5500259399414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 267.01251220703125, :y1 640.1500015258789, :x2 318.2611999511719, :y2 670.5500259399414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 267.01251220703125, :y1 644.9499893188477, :x2 271.2875061035156, :y2 666.3000259399414, :width 864.9999999999999, :height 1080.0639853747714}), :page 404}, :content {:text "history 对象"}, :properties {:color "green"}} {:id #uuid "63d08fb3-7908-495b-b50b-ecfc5b02c9c7", :page 404, :position {:bounding {:x1 140.6125030517578, :y1 684.4500122070312, :x2 777.603759765625, :y2 705.25, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 684.4500122070312, :x2 777.603759765625, :y2 705.25, :width 864.9999999999999, :height 1080.0639853747714} {:x1 200.3874969482422, :y1 687.6500244140625, :x2 734.2470703125, :y2 702.6375427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 404}, :content {:text "history 对象表示当前窗口首次使用以来用户的导航历史记录。因为 history 是 window 的属性"}, :properties {:color "yellow"}} {:id #uuid "63d08fda-d39a-497d-b8f5-80bb455edf91", :page 404, :position {:bounding {:x1 183.875, :y1 764.8375244140625, :x2 222.2876434326172, :y2 791.2375183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 764.8375244140625, :x2 222.2876434326172, :y2 791.2375183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 404}, :content {:text "导航"}, :properties {:color "green"}} {:id #uuid "63d08ff2-3b7a-414b-8ebe-80a26ba060d2", :page 404, :position {:bounding {:x1 140.6125030517578, :y1 803.4250183105469, :x2 620.5986328125, :y2 824.2250061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 803.4250183105469, :x2 620.5986328125, :y2 824.2250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 174.7624969482422, :y1 806.9625244140625, :x2 620.5986328125, :y2 821.9500427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 404}, :content {:text "go()方法可以在用户历史记录中沿任何方向导航，可以前进也可以后退。"}, :properties {:color "yellow"}} {:id #uuid "63d09001-5d7f-4cef-8634-d58eccbc3ab7", :page 405, :position {:bounding {:x1 109.20000457763672, :y1 273.2250061035156, :x2 400.2850036621094, :y2 294.0249938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 273.2250061035156, :x2 400.2850036621094, :y2 294.0249938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 143.3625030517578, :y1 276.7749938964844, :x2 400.2850036621094, :y2 291.76251220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 405}, :content {:text "go()有两个简写方法：back()和 forward()"}, :properties {:color "yellow"}} {:id #uuid "63d09007-a3d1-48b1-ba75-ebd08d4177fa", :page 405, :position {:bounding {:x1 0, :y1 12.800003051757812, :x2 759.0050659179688, :y2 164.38751220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 12.800003051757812, :x2 0, :y2 35.19999694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 278.9083251953125, :y1 121.1875, :x2 759.0050659179688, :y2 141.98748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 291.6625061035156, :y1 124.04998779296875, :x2 759.0050659179688, :y2 138.28750610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 143.58749389648438, :x2 292.8314514160156, :y2 164.38751220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 405}, :content {:text "，go()方法的参数也可以是一个字符串，这种情况下浏览器会导航到历史中包含该字符串的第一个位置"}, :properties {:color "yellow"}} {:id #uuid "63d09024-06fb-46bf-aa5d-2097b5529197", :page 405, :position {:bounding {:x1 109.20000457763672, :y1 403.2124938964844, :x2 548.4418334960938, :y2 424.01251220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 403.2124938964844, :x2 548.4418334960938, :y2 424.01251220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 168.97500610351562, :y1 406.4125061035156, :x2 318.6179504394531, :y2 421.3999938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 405}, :content {:text "history 对象还有一个 length 属性，表示历史记录中有多个条目"}, :properties {:color "yellow"}} {:id #uuid "63d09048-427b-41b9-bb86-cef1cebfcbf7", :page 405, :position {:bounding {:x1 152.46250915527344, :y1 702.2125244140625, :x2 267.700439453125, :y2 728.6125183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 702.2125244140625, :x2 267.700439453125, :y2 728.6125183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 405}, :content {:text "历史状态管理"}, :properties {:color "green"}} {:id #uuid "63d0908a-aff6-451f-a2bd-87171c91f92e", :page 406, :position {:bounding {:x1 179.6999969482422, :y1 188.125, :x2 410.8018493652344, :y2 209.2624969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 179.6999969482422, :y1 188.125, :x2 263.2297058105469, :y2 208.125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 273.7250061035156, :y1 188.4625015258789, :x2 410.8018493652344, :y2 209.2624969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 406}, :content {:text "pushState()会创建新的历史记录"}, :properties {:color "yellow"}} {:id #uuid "63d090d5-5422-4b96-8a57-88c4a4babf5b", :page 406, :position {:bounding {:x1 142.22500610351562, :y1 402.7375183105469, :x2 494.2530212402344, :y2 423.88751220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 327.8999938964844, :y1 402.7375183105469, :x2 494.2530212402344, :y2 422.7375183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 403.0874938964844, :x2 306.0774841308594, :y2 423.88751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 327.8999938964844, :y1 405.9375, :x2 330.75, :y2 420.1750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 207.60000610351562, :y1 406.2875061035156, :x2 306.0774841308594, :y2 421.2749938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 406}, :content {:text "可 以 通 过 history.state 获 取 当 前 的 状 态 对 象 ，"}, :properties {:color "yellow"}} {:id #uuid "63d090e4-cdf0-4911-87f4-e317c650bcce", :page 406, :position {:bounding {:x1 0, :y1 402.7375183105469, :x2 781.3677978515625, :y2 483.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 717.2000122070312, :y1 402.7375183105469, :x2 781.3677978515625, :y2 423.53753662109375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 557.6871948242188, :y1 403.0874938964844, :x2 573.56201171875, :y2 423.88751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 588.3624877929688, :y1 403.0874938964844, :x2 698.38330078125, :y2 423.88751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 717.2000122070312, :y1 405.9375, :x2 781.3677978515625, :y2 420.92498779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 588.3624877929688, :y1 406.2875061035156, :x2 698.38330078125, :y2 421.2749938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 425.13751220703125, :x2 195.57872009277344, :y2 445.13751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 206.0749969482422, :y1 425.4750061035156, :x2 404.0758361816406, :y2 446.2749938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 428.3374938964844, :x2 195.57872009277344, :y2 442.57501220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 460.8000183105469, :x2 0, :y2 483.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 406}, :content {:text " 用 replaceState() 并 传 入 与 pushState()同样的前两个参数来更新状态"}, :properties {:color "yellow"}} {:id #uuid "63d09130-59eb-45b2-b357-3a667f947a59", :page 405, :position {:bounding {:x1 109.20000457763672, :y1 828.2875366210938, :x2 439.5724182128906, :y2 849.0875244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 828.2875366210938, :x2 439.5724182128906, :y2 849.0875244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 201.71250915527344, :y1 831.8250122070312, :x2 299.7278747558594, :y2 846.8125305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 405}, :content {:text "hashchange 会在页面 URL 的散列变化时被触发"}, :properties {:color "yellow"}} {:id #uuid "63d09182-bf4f-4525-a6d1-4f7b6e99dab8", :page 405, :position {:bounding {:x1 259.6742248535156, :y1 873.5, :x2 716.384033203125, :y2 894.2999877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 259.6742248535156, :y1 873.5, :x2 716.384033203125, :y2 894.2999877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 303.6875, :y1 876.7000122070312, :x2 703.1524047851562, :y2 891.6875305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 405}, :content {:text "：一个 state 对象、一个新状态的标题和一个（可选的）相对 URL。"}, :properties {:color "yellow"}} {:id #uuid "63d091be-fb58-4864-b4df-b3f6dadf0e47", :page 407, :position {:bounding {:x1 146, :y1 656.8499908447266, :x2 235.73948669433594, :y2 688.0500030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 146, :y1 656.8499908447266, :x2 235.73948669433594, :y2 688.0500030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 407}, :content {:text "能力检测"}, :properties {:color "green"}} {:id #uuid "63d0920f-8aea-494d-98e8-aff92da3b82e", :page 407, :position {:bounding {:x1 171.6041717529297, :y1 720.5625, :x2 732.0256805419922, :y2 741.3625030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 171.6041717529297, :y1 720.5625, :x2 732.0256805419922, :y2 741.3625030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 407}, :content {:text "这种方式不要求事先知道特定浏览器的信息，只需检测自己关心的能力是否存在即可"}, :properties {:color "yellow"}} {:id #uuid "63d09262-ca51-4bad-a77b-647a3206b3b1", :page 408, :position {:bounding {:x1 183.875, :y1 520.5125274658203, :x2 299.1129455566406, :y2 546.9125213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 520.5125274658203, :x2 299.1129455566406, :y2 546.9125213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 408}, :content {:text "安全能力检测"}, :properties {:color "green"}} {:id #uuid "63d09297-5ec0-4dd8-bef5-fe5a4c4a06ca", :page 408, :position {:bounding {:x1 0, :y1 668.8000030517578, :x2 789.2797241210938, :y2 742.4000244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 668.8000030517578, :x2 0, :y2 691.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 699.2125244140625, :x2 426.8641052246094, :y2 720.0125122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 439.01251220703125, :y1 699.2125244140625, :x2 789.2797241210938, :y2 720.0125122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 387.6750183105469, :y1 702.0625, :x2 426.8641052246094, :y2 716.3000183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 439.01251220703125, :y1 702.4125061035156, :x2 789.2797241210938, :y2 717.4000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 721.6000061035156, :x2 432.8625183105469, :y2 742.4000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 724.8000183105469, :x2 413.4638366699219, :y2 739.7875061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 408}, :content {:text "这个函数尝试通过检测对象上是否有 sort()方法来确定它是否支持排序。问题在于，即使这个对象有一个 sort 属性，这个函数也会返回 true："}, :properties {:color "yellow"}} {:id #uuid "63d0929a-34b0-47b1-9cb9-187e0abb97d8", :page 408, :position {:bounding {:x1 538.155029296875, :y1 771.4125061035156, :x2 786.5774536132812, :y2 792.2125244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 538.155029296875, :y1 771.4125061035156, :x2 786.5774536132812, :y2 792.2125244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 656.6625366210938, :y1 774.2750244140625, :x2 693.7750244140625, :y2 788.5125122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 408}, :content {:text "更好的方式是检测 sort 是不是函数："}, :properties {:color "yellow"}} {:id #uuid "63d092b8-425a-4a25-aa94-79747f174e53", :page 408, :position {:bounding {:x1 142.2375030517578, :y1 911.1875, :x2 442.1421813964844, :y2 931.9875183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.2375030517578, :y1 911.1875, :x2 442.1421813964844, :y2 931.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 341.2875061035156, :y1 914.0375061035156, :x2 395.3625183105469, :y2 928.2750244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 408}, :content {:text "进行能力检测时应该尽量使用 typeof 操作符"}, :properties {:color "yellow"}} {:id #uuid "63d092d5-cd9a-48c8-9af3-d3bfe4ccc848", :page 409, :position {:bounding {:x1 152.46250915527344, :y1 375.3500061035156, :x2 402.14471435546875, :y2 401.75, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 375.3500061035156, :x2 402.14471435546875, :y2 401.75, :width 864.9999999999999, :height 1080.0639853747714}), :page 409}, :content {:text "基于能力检测进行浏览器分析"}, :properties {:color "green"}} {:id #uuid "63d09351-0623-4bbd-b105-13c6b57bf146", :page 409, :position {:bounding {:x1 0, :y1 204.8000030517578, :x2 762.3312149047852, :y2 479.875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 204.8000030517578, :x2 0, :y2 227.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 111.03055572509766, :y1 436.6750183105469, :x2 762.3312149047852, :y2 457.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 459.07501220703125, :x2 248.2248992919922, :y2 479.875, :width 864.9999999999999, :height 1080.0639853747714}), :page 409}, :content {:text "使用能力检测而非用户代理检测的优点在于，伪造用户代理字符串很简单，而伪造能够欺骗能力检测的浏览器特性却很难。"}, :properties {:color "yellow"}} {:id #uuid "63d09361-bd0b-40b8-8462-034ca9f56583", :page 409, :position {:bounding {:x1 127.51250457763672, :y1 486.34999084472656, :x2 184.47915649414062, :y2 507.1499938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.51250457763672, :y1 486.34999084472656, :x2 184.47915649414062, :y2 507.1499938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 409}, :content {:text "检测特性"}, :properties {:color "yellow"}} {:id #uuid "63d09389-868d-4959-9da4-2d7645ce10e6", :page 409, :position {:bounding {:x1 127.5374984741211, :y1 726.6875, :x2 198.83126831054688, :y2 747.4874877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.5374984741211, :y1 726.6875, :x2 198.83126831054688, :y2 747.4874877929688, :width 864.9999999999999, :height 1080.0639853747714}), :page 409}, :content {:text "检测浏览器"}, :properties {:color "yellow"}} {:id #uuid "63d093a6-b187-4323-a1c5-314541261e96", :page 410, :position {:bounding {:x1 158.9375, :y1 749.9250183105469, :x2 258.800048828125, :y2 770.7250061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9375, :y1 749.9250183105469, :x2 258.800048828125, :y2 770.7250061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 410}, :content {:text "能力检测的局限"}, :properties {:color "yellow"}} {:id #uuid "63d093bc-2d25-4830-95d7-aa57fb17e845", :page 411, :position {:bounding {:x1 170.875, :y1 163.98748779296875, :x2 688.6651000976562, :y2 184.7874755859375, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 170.875, :y1 163.98748779296875, :x2 688.6651000976562, :y2 184.7874755859375, :width 864.9999999999999, :height 1080.0639853747714}), :page 411}, :content {:text "能力检测最适合用于决定下一步该怎么做，而不一定能够作为辨识浏览器的标"}, :properties {:color "yellow"}} {:id #uuid "63d0940d-f35e-4cc5-a3cc-3e95233bdd9e", :page 411, :position {:bounding {:x1 124.93071746826172, :y1 219.16250610351562, :x2 280.52294921875, :y2 251.83749389648438, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 146, :y1 219.16250610351562, :x2 280.52294921875, :y2 250.36251831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 124.93071746826172, :y1 220.63748168945312, :x2 124.9337387084961, :y2 251.83749389648438, :width 864.9999999999999, :height 1080.0639853747714}), :page 411}, :content {:text "用户代理检测"}, :properties {:color "green"}} {:id #uuid "63d0941e-5a60-43c6-93ce-e6f593447060", :page 411, :position {:bounding {:x1 0, :y1 60.79998779296875, :x2 755.6048583984375, :y2 306.7499694824219, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 60.79998779296875, :x2 0, :y2 83.19998168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 572.8250122070312, :y1 264.5624694824219, :x2 755.6048583984375, :y2 285.3625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 285.9499816894531, :x2 282.291748046875, :y2 306.7499694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 293.375, :y1 285.9499816894531, :x2 520.8755493164062, :y2 306.7499694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 538.0750122070312, :y1 286.6125183105469, :x2 573.7644653320312, :y2 306.6125183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 289.1499938964844, :x2 282.291748046875, :y2 304.1374816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 293.375, :y1 289.1499938964844, :x2 520.8755493164062, :y2 304.1374816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 538.0750122070312, :y1 289.8124694824219, :x2 538.3151245117188, :y2 304.0500183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 411}, :content {:text "用户代理字符串包含在每个 HTTP 请求的头部，在 JavaScript 中可以通过 navigator.userAgent 访问"}, :properties {:color "yellow"}} {:id #uuid "63d0943d-2bfc-4725-8783-85e4625add7c", :page 411, :position {:bounding {:x1 0, :y1 396.8000030517578, :x2 755.0562133789062, :y2 832.875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 396.8000030517578, :x2 0, :y2 419.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 562.5125122070312, :y1 789.5875244140625, :x2 755.0562133789062, :y2 810.3875122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.82500457763672, :y1 790.5875244140625, :x2 542.7245483398438, :y2 811.3875122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 411.01251220703125, :y1 792.7875366210938, :x2 542.7245483398438, :y2 807.7750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 562.5125122070312, :y1 792.7875366210938, :x2 755.0562133789062, :y2 807.7750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 812.0750122070312, :x2 188.4913787841797, :y2 832.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 210.9875030517578, :y1 812.0750122070312, :x2 411.83990478515625, :y2 832.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 815.2750244140625, :x2 188.4913787841797, :y2 830.2625122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 210.9875030517578, :y1 815.2750244140625, :x2 211.1050262451172, :y2 830.2625122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 411}, :content {:text "在网景公司准备开发浏览器时，代号确定为“Mozilla”（Mosaic Killer 的简写）。第一个公开发行版 Netscape Navigator 2 的用户代理字符串是这样的："}, :properties {:color "red"}} {:id #uuid "63d0948e-d945-4e4f-8442-0f31c57df63f", :page 414, :position {:bounding {:x1 142.22500610351562, :y1 292.2625045776367, :x2 777.1317138671875, :y2 313.06249237060547, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 292.2625045776367, :x2 777.1317138671875, :y2 313.06249237060547, :width 864.9999999999999, :height 1080.0639853747714} {:x1 236.15000915527344, :y1 294.46251678466797, :x2 624.7374877929688, :y2 309.4500045776367, :width 864.9999999999999, :height 1080.0639853747714}), :page 414}, :content {:text "要更好地理解 Gecko 的用户代理字符串，最好是看几个不同的基于 Gecko 的浏览器返回的字符串"}, :properties {:color "yellow"}} {:id #uuid "63d094a3-8e9a-4080-982d-447bdd464e8a", :page 414, :position {:bounding {:x1 0, :y1 796.7999877929688, :x2 793.8349380493164, :y2 989.6000061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 796.7999877929688, :x2 0, :y2 819.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 812.7999877929688, :x2 0, :y2 835.1999816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 621.0154418945312, :y1 924, :x2 788.5460815429688, :y2 944.7999877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 946.3999938964844, :x2 793.8349380493164, :y2 967.1999816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 949.6000061035156, :x2 793.8349380493164, :y2 964.5874938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 968.7999877929688, :x2 233.89268493652344, :y2 989.6000061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 414}, :content {:text "怎样才能保证浏览器不被排除在流行的站点之外。答案就是在用户代理字符串中添加足够多的信息，让网站知道这个浏览器与其他浏览器是兼容的"}, :properties {:color "yellow"}} {:id #uuid "63d094cb-c816-403b-b410-43661d7cb9c2", :page 415, :position {:bounding {:x1 110.82500457763672, :y1 558.3750152587891, :x2 643.4603881835938, :y2 579.1750030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.82500457763672, :y1 558.3750152587891, :x2 643.4603881835938, :y2 579.1750030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 175.78750610351562, :y1 561.5749969482422, :x2 593.7999877929688, :y2 576.5625152587891, :width 864.9999999999999, :height 1080.0639853747714}), :page 415}, :content {:text "Konqueror 是与 KDE Linux 桌面环境打包发布的浏览器，基于开源渲染引擎 KHTM"}, :properties {:color "yellow"}} {:id #uuid "63d094fa-6cd8-49b9-90bb-e3a09de14639", :page 416, :position {:bounding {:x1 142.2375030517578, :y1 501.0124969482422, :x2 760.7906494140625, :y2 521.8124847412109, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.2375030517578, :y1 501.0124969482422, :x2 760.7906494140625, :y2 521.8124847412109, :width 864.9999999999999, :height 1080.0639853747714} {:x1 157.22500610351562, :y1 504.21250915527344, :x2 299.53851318359375, :y2 519.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 416}, :content {:text "从 Opera 9 开始，Opera 也采用了两个策略改变自己的字符串。一是把自己标识为别的浏览器"}, :properties {:color "yellow"}} {:id #uuid "63d09501-dd7a-4d3e-bbb6-3d2ca6c559f5", :page 416, :position {:bounding {:x1 0, :y1 636.8000259399414, :x2 785.9036865234375, :y2 728.8500137329102, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 636.8000259399414, :x2 0, :y2 659.1999893188477, :width 864.9999999999999, :height 1080.0639853747714} {:x1 326.4750061035156, :y1 684.5625381469727, :x2 627.6179809570312, :y2 705.3625259399414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 638.4249877929688, :y1 684.5625381469727, :x2 785.9036865234375, :y2 705.3625259399414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.1999969482422, :y1 685.5625381469727, :x2 315.6679382324219, :y2 706.3625259399414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 282.25, :y1 687.7624893188477, :x2 315.6679382324219, :y2 702.7500381469727, :width 864.9999999999999, :height 1080.0639853747714} {:x1 326.4750061035156, :y1 687.7624893188477, :x2 627.6179809570312, :y2 702.7500381469727, :width 864.9999999999999, :height 1080.0639853747714} {:x1 638.4249877929688, :y1 687.7624893188477, :x2 785.9036865234375, :y2 702.7500381469727, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.11250305175781, :y1 708.0500259399414, :x2 644.003662109375, :y2 728.8500137329102, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.11250305175781, :y1 711.2500381469727, :x2 534.4500122070312, :y2 726.2375259399414, :width 864.9999999999999, :height 1080.0639853747714}), :page 416}, :content {:text "另一个策略是伪装成 Firefox 或 IE。这种情况下的用户代理字符串与 Firefox 和 IE 返回的一样，末尾也没有\"Opera\"及其版本信息。这样就根本没办法区分 Opera 与其他浏览器了"}, :properties {:color "yellow"}} {:id #uuid "63d09520-2ddb-411e-99ea-23b4fbb6afc8", :page 417, :position {:bounding {:x1 110.8125, :y1 540.9499969482422, :x2 578.0109252929688, :y2 561.7500152587891, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 540.9499969482422, :x2 578.0109252929688, :y2 561.7500152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 159.58750915527344, :y1 543.1500091552734, :x2 197.21250915527344, :y2 558.1374969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 417}, :content {:text "注意在 iOS 3 以前，操作系统的版本号不会出现在用户代理字符串中。"}, :properties {:color "yellow"}} {:id #uuid "63d0952f-b059-4fe2-80e3-55d4485d5e4c", :page 417, :position {:bounding {:x1 152.46250915527344, :y1 708.2874908447266, :x2 248.49412536621094, :y2 734.6875152587891, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 708.2874908447266, :x2 248.49412536621094, :y2 734.6875152587891, :width 864.9999999999999, :height 1080.0639853747714}), :page 417}, :content {:text "浏览器分析"}, :properties {:color "green"}} {:id #uuid "63d0954a-b858-462e-981d-3a6e47b6da97", :page 417, :position {:bounding {:x1 127.5250015258789, :y1 886.4750366210938, :x2 213.1458740234375, :y2 907.2750244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.5250015258789, :y1 886.4750366210938, :x2 213.1458740234375, :y2 907.2750244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 417}, :content {:text "伪造用户代理"}, :properties {:color "yellow"}} {:id #uuid "63d0955e-3490-4878-80a6-0e91db94d5f9", :page 418, :position {:bounding {:x1 0, :y1 264.6500244140625, :x2 792.5912475585938, :y2 371.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 453.7250061035156, :y1 264.6500244140625, :x2 736.3583374023438, :y2 285.45001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 746.9874877929688, :y1 264.6500244140625, :x2 792.5912475585938, :y2 285.45001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 453.7250061035156, :y1 267.85003662109375, :x2 736.3583374023438, :y2 282.8375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 746.9874877929688, :y1 267.85003662109375, :x2 792.5912475585938, :y2 282.8375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 287.13751220703125, :x2 325.3080520629883, :y2 307.9375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 348.79998779296875, :x2 0, :y2 371.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 418}, :content {:text "有些浏览器提供伪私有的__defineGetter__方法，利用它可以篡改用户代理字符串"}, :properties {:color "yellow"}} {:id #uuid "63d09576-da0c-4626-9e25-29ae6d27bebe", :page 419, :position {:bounding {:x1 146.0124969482422, :y1 271.7375183105469, :x2 303.0481872558594, :y2 302.9375, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 146.0124969482422, :y1 271.7375183105469, :x2 303.0481872558594, :y2 302.9375, :width 864.9999999999999, :height 1080.0639853747714}), :page 419}, :content {:text "软件与硬件检测"}, :properties {:color "green"}} {:id #uuid "63d09589-5cc5-42c6-9863-9e017a97c601", :page 419, :position {:bounding {:x1 141.6420135498047, :y1 339.52501678466797, :x2 528.40966796875, :y2 360.3250045776367, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 141.6420135498047, :y1 339.52501678466797, :x2 528.40966796875, :y2 360.3250045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 249.8125, :y1 342.37499237060547, :x2 482.6750183105469, :y2 356.61251068115234, :width 864.9999999999999, :height 1080.0639853747714}), :page 419}, :content {:text "可以通过暴露在 window.navigator 上的一组 API 获得。"}, :properties {:color "yellow"}} {:id #uuid "63d09599-cf89-417e-96b9-da522c007b5d", :page 419, :position {:bounding {:x1 199.4480438232422, :y1 403.5125045776367, :x2 513.5581665039062, :y2 424.31249237060547, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 199.4480438232422, :y1 403.5125045776367, :x2 513.5581665039062, :y2 424.31249237060547, :width 864.9999999999999, :height 1080.0639853747714} {:x1 201.1374969482422, :y1 407.71251678466797, :x2 338.9203796386719, :y2 422.7000045776367, :width 864.9999999999999, :height 1080.0639853747714}), :page 419}, :content {:text "建议在使用这些 API 之前先检测它们是否存在"}, :properties {:color "yellow"}} {:id #uuid "63d0959f-c5a5-45ca-9609-e11b9623a2f5", :page 419, :position {:bounding {:x1 152.46250915527344, :y1 475.2500228881836, :x2 344.5257263183594, :y2 501.64998626708984, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 475.2500228881836, :x2 344.5257263183594, :y2 501.64998626708984, :width 864.9999999999999, :height 1080.0639853747714}), :page 419}, :content {:text "识别浏览器与操作系统"}, :properties {:color "green"}} {:id #uuid "63d095c7-46ea-42a8-aaf2-47e7cbd25599", :page 419, :position {:bounding {:x1 109.20000457763672, :y1 582.1625061035156, :x2 758.3599243164062, :y2 602.9625244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 582.1625061035156, :x2 224.67886352539062, :y2 602.1625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 237.28750610351562, :y1 582.1625061035156, :x2 758.3599243164062, :y2 602.9625244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 237.28750610351562, :y1 585.3625183105469, :x2 622.2322387695312, :y2 599.6000061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 419}, :content {:text "navigator.oscpu 属性是一个字符串，通常对应用户代理字符串中操作系统/系统架构相关信息。"}, :properties {:color "yellow"}} {:id #uuid "63d095d1-39db-4a77-ab33-5f644fc70a4c", :page 419, :position {:bounding {:x1 109.20000457763672, :y1 800.6750183105469, :x2 576.2194061279297, :y2 820.6750183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 800.6750183105469, :x2 231.8457794189453, :y2 820.6750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 245.8249969482422, :y1 800.6750183105469, :x2 576.2194061279297, :y2 820.6750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 245.8249969482422, :y1 803.875, :x2 246.21560668945312, :y2 818.1125183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 419}, :content {:text "navigator.vendor 属性是一个字符串，通常包含浏览器开发商信息"}, :properties {:color "yellow"}} {:id #uuid "63d095fc-f9aa-49fd-af51-a6ae38591474", :page 419, :position {:bounding {:x1 109.20000457763672, :y1 974.0250396728516, :x2 600.4242553710938, :y2 994.0250549316406, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 974.0250396728516, :x2 239.92113494873047, :y2 994.0250549316406, :width 864.9999999999999, :height 1080.0639853747714} {:x1 257.9624938964844, :y1 974.0250396728516, :x2 600.4242553710938, :y2 994.0250549316406, :width 864.9999999999999, :height 1080.0639853747714} {:x1 257.9624938964844, :y1 977.2250366210938, :x2 258.13934326171875, :y2 991.4625549316406, :width 864.9999999999999, :height 1080.0639853747714}), :page 419}, :content {:text "navigator.platform 属性是一个字符串，通常表示浏览器所在的操作系统"}, :properties {:color "yellow"}} {:id #uuid "63d09606-4fe1-4820-8ad7-5b3aea8ca5ff", :page 420, :position {:bounding {:x1 140.6125030517578, :y1 245.42498779296875, :x2 744.00048828125, :y2 266.2250061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 245.42498779296875, :x2 273.2614440917969, :y2 265.42498779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 285.7749938964844, :y1 245.42498779296875, :x2 439.275390625, :y2 266.2250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 454, :y1 245.42498779296875, :x2 744.00048828125, :y2 265.42498779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 285.7749938964844, :y1 248.625, :x2 439.275390625, :y2 263.61248779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 454, :y1 248.625, :x2 456.8500061035156, :y2 262.86248779296875, :width 864.9999999999999, :height 1080.0639853747714}), :page 420}, :content {:text "screen.colorDepth 和 screen.pixelDepth 返回一样的值，即显示器每像素颜色的位深"}, :properties {:color "yellow"}} {:id #uuid "63d09611-c823-43f7-90ab-f5372e1c8899", :page 420, :position {:bounding {:x1 0, :y1 433.7750244140625, :x2 756.8590698242188, :y2 477.4000244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 433.7750244140625, :x2 273.4139404296875, :y2 453.7750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 294.3125, :y1 433.7750244140625, :x2 525.3023681640625, :y2 454.5750732421875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 537.6875, :y1 433.7750244140625, :x2 756.8590698242188, :y2 454.5750732421875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 294.3125, :y1 436.97503662109375, :x2 525.3023681640625, :y2 451.9625244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 537.6875, :y1 436.97503662109375, :x2 756.8590698242188, :y2 451.9625244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 444.79998779296875, :x2 0, :y2 467.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 456.60003662109375, :x2 218.7478790283203, :y2 477.4000244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 420}, :content {:text "screen.orientation 属性返回一个 ScreenOrientation 对象，其中包含 Screen Orientation API定义的屏幕信息"}, :properties {:color "yellow"}} {:id #uuid "63d0962a-07ca-4b05-a2ad-a8d7b5edead7", :page 420, :position {:bounding {:x1 183.875, :y1 835.6124877929688, :x2 299.1129455566406, :y2 862.0125122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 835.6124877929688, :x2 299.1129455566406, :y2 862.0125122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 420}, :content {:text "浏览器元数据"}, :properties {:color "green"}} {:id #uuid "63d09636-9432-4f42-8c81-240213e1fdae", :page 420, :position {:bounding {:x1 0, :y1 796.8000183105469, :x2 788.216064453125, :y2 963.7625122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 796.8000183105469, :x2 0, :y2 819.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 140.6125030517578, :y1 920.1250305175781, :x2 298.3304138183594, :y2 940.1250305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 319.9375, :y1 920.1250305175781, :x2 486.249267578125, :y2 940.925048828125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 503.6125183105469, :y1 920.4750061035156, :x2 788.216064453125, :y2 941.2750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 319.9375, :y1 923.3250122070312, :x2 486.249267578125, :y2 938.3125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 503.6125183105469, :y1 923.6750183105469, :x2 788.216064453125, :y2 938.6625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 942.9625244140625, :x2 157.7412567138672, :y2 963.7625122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 420}, :content {:text "navigator.geolocation 属性暴露了 Geolocation API，可以让浏览器脚本感知当前设备的地理位置。这"}, :properties {:color "yellow"}} {:id #uuid "63d0963f-2f18-4b4d-97a7-bb052d7bbab9", :page 420, :position {:bounding {:x1 140.6125030517578, :y1 874.2125244140625, :x2 628.9046020507812, :y2 895.0125122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 874.2125244140625, :x2 628.9046020507812, :y2 895.0125122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 217.46250915527344, :y1 877.4125061035156, :x2 351.3568420410156, :y2 892.3999938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 420}, :content {:text "navigator 对象暴露出一些 API，可以提供浏览器和操作系统的状态信息"}, :properties {:color "yellow"}} {:id #uuid "63d09660-9216-4a37-85d6-cffff8d46cea", :page 421, :position {:bounding {:x1 0, :y1 412.8000183105469, :x2 758.1712036132812, :y2 755.7875061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 412.8000183105469, :x2 0, :y2 435.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 109.20000457763672, :y1 712.2500305175781, :x2 758.1712036132812, :y2 733.0500793457031, :width 864.9999999999999, :height 1080.0639853747714} {:x1 203.1374969482422, :y1 715.4500427246094, :x2 758.1712036132812, :y2 730.4375305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 734.9875183105469, :x2 490.3500061035156, :y2 755.7875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 738.1875305175781, :x2 490.3500061035156, :y2 753.1750183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 421}, :content {:text "Coordinates 对象包含一个 speed 属性，表示设备每秒移动的速度。还有一个 heading（朝向）属性，表示相对于正北方向移动的角度（0 ≤ heading < 360）"}, :properties {:color "yellow"}} {:id #uuid "63d0968e-55db-4f0c-8243-45ae984e3c67", :page 421, :position {:bounding {:x1 0, :y1 140.80001831054688, :x2 742.381591796875, :y2 383.0874938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 140.80001831054688, :x2 0, :y2 163.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 393.375, :y1 340.6000061035156, :x2 541.1659545898438, :y2 360.6000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 564.1625366210938, :y1 340.6000061035156, :x2 742.381591796875, :y2 361.3999938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 564.1625366210938, :y1 343.8000183105469, :x2 742.381591796875, :y2 358.7875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 363.0874938964844, :x2 209.3983917236328, :y2 383.0874938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 366.2875061035156, :x2 174.86814880371094, :y2 380.5249938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 421}, :content {:text "getCurrentPosition() 方 法 。 这 个 方 法 返 回 一 个 Coordinates 对象"}, :properties {:color "yellow"}} {:id #uuid "63d0969f-58de-4362-9d3e-e4b7ff7c5d49", :page 421, :position {:bounding {:x1 0, :y1 524.8000364303589, :x2 755.6673583984375, :y2 950.1000366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 524.8000364303589, :x2 0, :y2 547.2000379562378, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 906.9000549316406, :x2 549.8909912109375, :y2 927.7000427246094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 572.8875122070312, :y1 906.9000549316406, :x2 755.6673583984375, :y2 927.7000427246094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 402.1000061035156, :y1 909.7625427246094, :x2 549.8909912109375, :y2 924.0000305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 572.8875122070312, :y1 910.1000366210938, :x2 755.6673583984375, :y2 925.0875549316406, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 929.300048828125, :x2 172.11602783203125, :y2 950.1000366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 421}, :content {:text "获取浏览器地理位置并不能保证成功。因此 getCurrentPosition()方法也接收失败回调函数作为第二个参数"}, :properties {:color "yellow"}} {:id #uuid "63d096e5-1c1a-4730-9dde-d77f8d4b77bb", :page 422, :position {:bounding {:x1 142.22500610351562, :y1 559.8750152587891, :x2 728.1266479492188, :y2 580.6750030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 559.8750152587891, :x2 225.5199432373047, :y2 580.6750030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 242.7624969482422, :y1 559.8750152587891, :x2 486.3632507324219, :y2 580.6750030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 497.8374938964844, :y1 560.5250091552734, :x2 728.1266479492188, :y2 580.5250091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 242.7624969482422, :y1 563.0749969482422, :x2 486.3632507324219, :y2 578.0625152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 497.8374938964844, :y1 563.7250213623047, :x2 498.0304260253906, :y2 577.9625091552734, :width 864.9999999999999, :height 1080.0639853747714}), :page 422}, :content {:text "Geolocation API 位置请求可以使用 PositionOptions 对象来配置，作为第三个参数提供"}, :properties {:color "yellow"}} {:id #uuid "63d0970e-90bd-4a9f-b9d1-83fdea301647", :page 421, :position {:bounding {:x1 127.64226531982422, :y1 387.43751525878906, :x2 541.561279296875, :y2 405.0375061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.64226531982422, :y1 387.43751525878906, :x2 251.3571014404297, :y2 405.0375061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 286.7250061035156, :y1 387.43751525878906, :x2 362.1658630371094, :y2 405.0375061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 375.88751220703125, :y1 387.43751525878906, :x2 541.561279296875, :y2 405.0375061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 421}, :content {:text "getCurrentPosition()会以 position 对象为参数调用传入的回调函数"}, :properties {:color "yellow"}} {:id #uuid "63d09730-fb68-45c3-8a8d-7325bcab6873", :page 423, :position {:bounding {:x1 0, :y1 12.800018310546875, :x2 739.8817138671875, :y2 163.23751831054688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 12.800018310546875, :x2 0, :y2 35.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 516.9000244140625, :y1 121.18753051757812, :x2 739.8817138671875, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 588.8125, :y1 124.38754272460938, :x2 739.8817138671875, :y2 139.37503051757812, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 143.23751831054688, :x2 334.216064453125, :y2 163.23751831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 146.43753051757812, :x2 134.8125, :y2 160.67501831054688, :width 864.9999999999999, :height 1080.0639853747714}), :page 423}, :content {:text "任何时候，都可以通过 navigator. onLine 属性来确定浏览器的联网状态"}, :properties {:color "yellow"}} {:id #uuid "63d0974f-ab2a-4a0e-a96b-0ffb4ec54fcd", :page 423, :position {:bounding {:x1 109.20000457763672, :y1 373.1375045776367, :x2 761.5099487304688, :y2 394.2874984741211, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 373.1375045776367, :x2 414.5470275878906, :y2 393.93749237060547, :width 864.9999999999999, :height 1080.0639853747714} {:x1 681.1500244140625, :y1 373.1375045776367, :x2 761.5099487304688, :y2 393.1375045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 435.5874938964844, :y1 373.48751068115234, :x2 663.5668334960938, :y2 394.2874984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 186.0500030517578, :y1 376.33751678466797, :x2 414.5470275878906, :y2 391.32503509521484, :width 864.9999999999999, :height 1080.0639853747714} {:x1 681.1500244140625, :y1 376.33751678466797, :x2 684, :y2 390.5750045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 435.5874938964844, :y1 376.68749237060547, :x2 663.5668334960938, :y2 391.67501068115234, :width 864.9999999999999, :height 1080.0639853747714}), :page 423}, :content {:text "navigator 对象还暴露了 NetworkInformation API，可以通过 navigator.connection 属性使用。"}, :properties {:color "yellow"}} {:id #uuid "63d09784-07f5-48da-802b-051e838ff040", :page 424, :position {:bounding {:x1 0, :y1 346.43750762939453, :x2 786.6139526367188, :y2 419.19998931884766, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 633.1375122070312, :y1 346.43750762939453, :x2 786.6139526367188, :y2 367.2374954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.21250915527344, :y1 346.44998931884766, :x2 603.5908813476562, :y2 367.25000762939453, :width 864.9999999999999, :height 1080.0639853747714} {:x1 445.0874938964844, :y1 349.2999954223633, :x2 603.5908813476562, :y2 363.53751373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 633.1375122070312, :y1 349.63748931884766, :x2 786.6139526367188, :y2 364.62500762939453, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 368.8375015258789, :x2 390.49127197265625, :y2 389.63748931884766, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 372.03751373291016, :x2 343.4624938964844, :y2 387.0250015258789, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 396.7999954223633, :x2 0, :y2 419.19998931884766, :width 864.9999999999999, :height 1080.0639853747714}), :page 424}, :content {:text "浏览器可以访问设备电池及充电状态的信息。navigator.getBattery()方法会返回一个期约实例，解决为一个 BatteryManager 对象。"}, :properties {:color "yellow"}} {:id #uuid "63d097c0-86f6-498f-aadb-39de7c8985de", :page 424, :position {:bounding {:x1 142.22500610351562, :y1 590.5749969482422, :x2 731.1034545898438, :y2 611.3750152587891, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 590.5749969482422, :x2 731.1034545898438, :y2 611.3750152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 176, :y1 592.7750091552734, :x2 274.6822814941406, :y2 607.7624969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 424}, :content {:text "这个 API 还提供了 4 个事件属性，可用于设置在相应的电池事件发生时调用的回调函数。"}, :properties {:color "yellow"}} {:id #uuid "63d0981b-f28e-4768-9725-ce80d53397d1", :page 425, :position {:bounding {:x1 152.46250915527344, :y1 232.36249923706055, :x2 190.87515258789062, :y2 258.762508392334, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 232.36249923706055, :x2 190.87515258789062, :y2 258.762508392334, :width 864.9999999999999, :height 1080.0639853747714}), :page 425}, :content {:text "硬件"}, :properties {:color "yellow"}} {:id #uuid "63d09823-c44f-4d4f-a6d7-f572ac2f60ea", :page 425, :position {:bounding {:x1 0, :y1 156.79999923706055, :x2 758.4996948242188, :y2 362.6875114440918, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 156.79999923706055, :x2 0, :y2 179.20000839233398, :width 864.9999999999999, :height 1080.0639853747714} {:x1 109.20000457763672, :y1 319.1500053405762, :x2 342.73473358154297, :y2 339.1500053405762, :width 864.9999999999999, :height 1080.0639853747714} {:x1 356.8374938964844, :y1 319.1500053405762, :x2 758.4996948242188, :y2 339.1500053405762, :width 864.9999999999999, :height 1080.0639853747714} {:x1 356.8374938964844, :y1 322.3500175476074, :x2 758.4996948242188, :y2 336.5875053405762, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 341.8874931335449, :x2 201.2179412841797, :y2 362.6875114440918, :width 864.9999999999999, :height 1080.0639853747714}), :page 425}, :content {:text "navigator.hardwareConcurrency 属性返回浏览器支持的逻辑处理器核心数量，包含表示核心数的一个整数值（"}, :properties {:color "yellow"}} {:id #uuid "63d09830-4048-4b4d-a76a-2e16ad24c14a", :page 425, :position {:bounding {:x1 109.20000457763672, :y1 412.23749923706055, :x2 708.8467407226562, :y2 433.0375175476074, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 412.23749923706055, :x2 708.8467407226562, :y2 433.0375175476074, :width 864.9999999999999, :height 1080.0639853747714} {:x1 297.0625, :y1 415.4375114440918, :x2 647.0659790039062, :y2 429.67499923706055, :width 864.9999999999999, :height 1080.0639853747714}), :page 425}, :content {:text "navigator.deviceMemory 属性返回设备大致的系统内存大小，包含单位为 GB 的浮点数"}, :properties {:color "yellow"}} {:id #uuid "63d09836-5c61-4a3e-8628-b26a0011052a", :page 425, :position {:bounding {:x1 109.20000457763672, :y1 482.8249931335449, :x2 699.1194458007812, :y2 502.8249931335449, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 482.8249931335449, :x2 301.5020980834961, :y2 502.8249931335449, :width 864.9999999999999, :height 1080.0639853747714} {:x1 314.1499938964844, :y1 482.8249931335449, :x2 699.1194458007812, :y2 502.8249931335449, :width 864.9999999999999, :height 1080.0639853747714} {:x1 314.1499938964844, :y1 486.0250053405762, :x2 314.3431396484375, :y2 500.2624931335449, :width 864.9999999999999, :height 1080.0639853747714}), :page 425}, :content {:text "navigator.maxTouchPoints 属性返回触摸屏支持的最大关联触点数量，包含一个整数"}, :properties {:color "yellow"}} {:id #uuid "63d09856-0e2f-4908-82dc-d965d85888aa", :page 426, :position {:bounding {:x1 0, :y1 348.8000030517578, :x2 784.8038330078125, :y2 464.4875183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 348.8000030517578, :x2 0, :y2 371.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 715.5, :y1 420.3000030517578, :x2 784.8038330078125, :y2 441.1000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 715.5, :y1 423.50001525878906, :x2 784.8038330078125, :y2 438.4875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 443.68751525878906, :x2 623.3088302612305, :y2 464.4875183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 426}, :content {:text "DOM 表示由多层节点构成的文档，通过它开发者可以添加、删除和修改页面的各个部"}, :properties {:color "yellow"}} {:id #uuid "63d0987f-5248-4bce-9f86-21d2f88b0ff4", :page 426, :position {:bounding {:x1 177.41250610351562, :y1 652.7750091552734, :x2 267.1519775390625, :y2 683.9750061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 177.41250610351562, :y1 652.7750091552734, :x2 267.1519775390625, :y2 683.9750061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 426}, :content {:text "节点层级"}, :properties {:color "green"}} {:id #uuid "63d0989b-c595-4607-8635-bbf4c33363d0", :page 427, :position {:bounding {:x1 0, :y1 28.800003051757812, :x2 754.5133666992188, :y2 612.6125183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 28.800003051757812, :x2 0, :y2 51.19999694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 392.79852294921875, :y1 569.4125061035156, :x2 754.5133666992188, :y2 590.2124938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 598.5, :y1 572.2749938964844, :x2 754.5133666992188, :y2 587.2624816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 591.8125, :x2 304.89801025390625, :y2 612.6125183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 595.0125122070312, :x2 304.89801025390625, :y2 610, :width 864.9999999999999, :height 1080.0639853747714}), :page 427}, :content {:text "在这里，根节点的唯一子节点是<html>元素，我们称之为文档元素（documentElement"}, :properties {:color "yellow"}} {:id #uuid "63d098c3-1f06-490b-a5f9-a4327564c8c4", :page 427, :position {:bounding {:x1 0, :y1 108.80000305175781, :x2 754.7260131835938, :y2 724.6750183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 108.80000305175781, :x2 0, :y2 131.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 513.7875366210938, :y1 680.4750061035156, :x2 754.7260131835938, :y2 701.2750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 551.8250122070312, :y1 684.6750183105469, :x2 754.7260131835938, :y2 699.6625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 703.875, :x2 263.43865966796875, :y2 724.6750183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 427}, :content {:text "DOM 中总共有 12 种节点类型，这些类型都继承一种基本类型。"}, :properties {:color "yellow"}} {:id #uuid "63d098ce-85e9-49cd-b9ce-16534ae89bc7", :page 427, :position {:bounding {:x1 134.57846069335938, :y1 739.6875, :x2 239.93765258789062, :y2 766.6875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 739.6875, :x2 239.93765258789062, :y2 765.2875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 134.57846069335938, :y1 740.2875061035156, :x2 134.58197021484375, :y2 766.6875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 152.46250915527344, :y1 743.6875, :x2 201.39561462402344, :y2 761.9000244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 427}, :content {:text "Node 类型"}, :properties {:color "green"}} {:id #uuid "63d098d6-b347-4b21-b048-675daecc4ffc", :page 427, :position {:bounding {:x1 275.3374938964844, :y1 777.625, :x2 672.481689453125, :y2 798.4249877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 275.3374938964844, :y1 777.625, :x2 672.481689453125, :y2 798.4249877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 313.8625183105469, :y1 781.1625061035156, :x2 525.9742431640625, :y2 796.1500244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 427}, :content {:text "Node 的接口，这个接口是所有 DOM 节点类型都必须实现的"}, :properties {:color "yellow"}} {:id #uuid "63d098df-f0a0-4cb9-a341-b0ee33686fc2", :page 427, :position {:bounding {:x1 110.8125, :y1 845.2375183105469, :x2 447.31475830078125, :y2 866.0375061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 845.2375183105469, :x2 447.31475830078125, :y2 866.0375061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 205.6999969482422, :y1 848.0874938964844, :x2 277.53692626953125, :y2 862.3250427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 427}, :content {:text "每个节点都有 nodeType 属性，表示该节点的类型"}, :properties {:color "yellow"}} {:id #uuid "63d09c71-909e-4ad0-bdc2-db027edcfbc4", :page 428, :position {:bounding {:x1 0, :y1 380.41251373291016, :x2 787.494873046875, :y2 451.2000198364258, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 619.9944458007812, :y1 380.41251373291016, :x2 787.494873046875, :y2 401.21253204345703, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 402.46253204345703, :x2 306.5174255371094, :y2 423.2625198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 405.66248321533203, :x2 190.72959899902344, :y2 419.90003204345703, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 428.7999954223633, :x2 0, :y2 451.2000198364258, :width 864.9999999999999, :height 1080.0639853747714}), :page 428}, :content {:text "如果两者相等，则意味着 someNode 是一个元素节点。"}, :properties {:color "yellow"}} {:id #uuid "63d09d22-875b-4c14-9aab-42d5f6a383bd", :page 428, :position {:bounding {:x1 0, :y1 495.7875003814697, :x2 790.9508666992188, :y2 539.0750370025635, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 745.2589111328125, :y1 495.7875003814697, :x2 790.9508666992188, :y2 516.5875186920166, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 508.800012588501, :x2 0, :y2 531.2000370025635, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 518.2750186920166, :x2 416.65999603271484, :y2 539.0750370025635, :width 864.9999999999999, :height 1080.0639853747714}), :page 428}, :content {:text "在使用这两个属性前，最好先检测节点类型，如下所"}, :properties {:color "yellow"}} {:id #uuid "63d09d52-93ac-4202-aae6-0b2f39e57603", :page 428, :position {:bounding {:x1 142.21250915527344, :y1 668.7500305175781, :x2 779.1981811523438, :y2 689.5500183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.21250915527344, :y1 668.7500305175781, :x2 779.1981811523438, :y2 689.5500183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 407, :y1 671.9500122070312, :x2 620.182373046875, :y2 686.9375305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 428}, :content {:text "文档中的所有节点都与其他节点有关系。这些关系可以形容为家族关系，相当于把文档树比作家谱"}, :properties {:color "yellow"}} {:id #uuid "63d09dd7-080c-4c42-9384-634c0084d591", :page 428, :position {:bounding {:x1 142.21250915527344, :y1 736.0250244140625, :x2 610.2096557617188, :y2 756.8250122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.21250915527344, :y1 736.0250244140625, :x2 610.2096557617188, :y2 756.8250122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 266.13751220703125, :y1 738.8875122070312, :x2 563.125, :y2 753.1250305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 428}, :content {:text "每个节点都有一个 childNodes 属性，其中包含一个 NodeList 的实例"}, :properties {:color "yellow"}} {:id #uuid "63d09e36-3fec-4cd7-8137-7a0d9e568b33", :page 428, :position {:bounding {:x1 0, :y1 716.8000183105469, :x2 784.7875366210938, :y2 824.0000305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 716.8000183105469, :x2 0, :y2 739.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 383.7008056640625, :y1 780.8125305175781, :x2 784.7875366210938, :y2 801.6125183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 398.3000183105469, :y1 783.6625366210938, :x2 784.7875366210938, :y2 797.9000549316406, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1624984741211, :y1 803.2000427246094, :x2 559.7367553710938, :y2 824.0000305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1624984741211, :y1 806.4000549316406, :x2 482.8500061035156, :y2 821.3875427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 428}, :content {:text "。NodeList 对象独特的地方在于，它其实是一个对 DOM 结构的查询，因此 DOM 结构的变化会自动地在 NodeList 中反映出来"}, :properties {:color "yellow"}} {:id #uuid "63d09e78-ffe7-4ffc-b4fc-4642a48bb397", :page 428, :position {:bounding {:x1 203.4791259765625, :y1 950.3625183105469, :x2 598.1791381835938, :y2 971.1625061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 203.4791259765625, :y1 950.3625183105469, :x2 598.1791381835938, :y2 971.1625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 247.25, :y1 953.2125244140625, :x2 502.7749938964844, :y2 967.4500122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 428}, :content {:text "注意，length 属性表示那一时刻 NodeList 中节点的数量"}, :properties {:color "yellow"}} {:id #uuid "63d09e8a-691e-4f79-a0dd-6f663b74e12f", :page 429, :position {:bounding {:x1 156.416259765625, :y1 144.5374755859375, :x2 582.6492309570312, :y2 165.3375244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 156.416259765625, :y1 144.5374755859375, :x2 323.440185546875, :y2 165.3375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 339, :y1 144.5374755859375, :x2 582.6492309570312, :y2 165.3375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 189.5625, :y1 146.73748779296875, :x2 323.440185546875, :y2 161.7249755859375, :width 864.9999999999999, :height 1080.0639853747714}), :page 429}, :content {:text "使用 ES6 的 Array.from()静态方法，可以替换这种笨拙的方式"}, :properties {:color "yellow"}} {:id #uuid "63d09e97-4b68-401f-92ec-b7709dddff30", :page 428, :position {:bounding {:x1 0, :y1 844.8000183105469, :x2 765.4606323242188, :y2 993.5500183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 844.8000183105469, :x2 0, :y2 867.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 613.400634765625, :y1 950.3625183105469, :x2 765.4606323242188, :y2 971.1625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 647.8375244140625, :y1 953.2125244140625, :x2 765.4606323242188, :y2 967.4500122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 972.4000244140625, :x2 154.8187713623047, :y2 992.4000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 171.91250610351562, :y1 972.7500305175781, :x2 604.98291015625, :y2 993.5500183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 975.6000061035156, :x2 154.8187713623047, :y2 989.8375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 171.91250610351562, :y1 975.9500122070312, :x2 494.3306579589844, :y2 990.9375305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 428}, :content {:text "使用 Array.prototype. slice()可以像前面介绍 arguments 时一样把 NodeList 对象转换为数组"}, :properties {:color "yellow"}} {:id #uuid "63d09eb0-db8d-4bc7-b3cd-facff8bb1ed7", :page 429, :position {:bounding {:x1 110.8125, :y1 194.34999084472656, :x2 546.0263671875, :y2 215.15000915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 194.34999084472656, :x2 546.0263671875, :y2 215.15000915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 234.72500610351562, :y1 197.1999969482422, :x2 460.3954772949219, :y2 211.43751525878906, :width 864.9999999999999, :height 1080.0639853747714}), :page 429}, :content {:text "每个节点都有一个 parentNode 属性，指向其 DOM 树中的父元素"}, :properties {:color "yellow"}} {:id #uuid "63d09f6e-3b48-40eb-8b2d-7709b7c6fc7d", :page 429, :position {:bounding {:x1 0, :y1 60.80000305175781, :x2 754.4374389648438, :y2 237.53749084472656, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 60.80000305175781, :x2 0, :y2 83.19999694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 558.1749877929688, :y1 194.00001525878906, :x2 754.4374389648438, :y2 214.00001525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 643.6749877929688, :y1 197.1999969482422, :x2 754.4374389648438, :y2 211.43751525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 216.7375030517578, :x2 517.9736938476562, :y2 237.53749084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 219.93751525878906, :x2 364.4847106933594, :y2 234.9250030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 429}, :content {:text "childNodes 中的所有节点都有同一个父元素，因此它们的 parentNode 属性都指向同一个节点"}, :properties {:color "yellow"}} {:id #uuid "63d09f75-3503-470f-a249-fade04e50317", :page 429, :position {:bounding {:x1 0, :y1 92.80000305175781, :x2 754.32373046875, :y2 282.4250030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 92.80000305175781, :x2 0, :y2 115.19999694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 541.7750244140625, :y1 238.8874969482422, :x2 646.1314086914062, :y2 259.68751525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 658.75, :y1 238.8874969482422, :x2 754.32373046875, :y2 258.8874969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 384.0426025390625, :y1 239.22499084472656, :x2 526.5036010742188, :y2 260.02500915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 413.57501220703125, :y1 242.08750915527344, :x2 526.5036010742188, :y2 256.3249969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 541.7750244140625, :y1 242.08750915527344, :x2 646.1314086914062, :y2 257.0749969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 658.75, :y1 242.08750915527344, :x2 754.32373046875, :y2 256.3249969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 261.62501525878906, :x2 195.10003662109375, :y2 282.4250030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 429}, :content {:text "使用 previousSibling 和 nextSibling 可以在这个列表的节点间导航"}, :properties {:color "yellow"}} {:id #uuid "63d09f83-5f14-4351-9113-9cdd0e10821a", :page 429, :position {:bounding {:x1 0, :y1 252.7999997138977, :x2 753.937744140625, :y2 480.81251192092896, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 252.7999997138977, :x2 0, :y2 275.1999936103821, :width 864.9999999999999, :height 1080.0639853747714} {:x1 572.7000122070312, :y1 438.4249997138977, :x2 668.7440795898438, :y2 459.2250180244446, :width 864.9999999999999, :height 1080.0639853747714} {:x1 681.9000244140625, :y1 438.4249997138977, :x2 753.937744140625, :y2 458.4249997138977, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 438.7624936103821, :x2 553.12890625, :y2 459.56251192092896, :width 864.9999999999999, :height 1080.0639853747714} {:x1 487.3000183105469, :y1 441.62501192092896, :x2 553.12890625, :y2 455.8624997138977, :width 864.9999999999999, :height 1080.0639853747714} {:x1 572.7000122070312, :y1 441.62501192092896, :x2 668.7440795898438, :y2 456.6124997138977, :width 864.9999999999999, :height 1080.0639853747714} {:x1 681.9000244140625, :y1 441.62501192092896, :x2 753.937744140625, :y2 455.8624997138977, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 460.81251192092896, :x2 386.439208984375, :y2 480.81251192092896, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 464.0124936103821, :x2 166.5585174560547, :y2 478.25001192092896, :width 864.9999999999999, :height 1080.0639853747714}), :page 429}, :content {:text "父节点和它的第一个及最后一个子节点也有专门属性：firstChild 和 lastChild 分别指向 childNodes 中的第一个和最后一个子节点"}, :properties {:color "yellow"}} {:id #uuid "63d09fc0-e465-4f6d-9d43-e3e55723affa", :page 429, :position {:bounding {:x1 110.8125, :y1 863.7375183105469, :x2 592.4588012695312, :y2 884.5375366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 863.7375183105469, :x2 592.4588012695312, :y2 884.5375366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 214.3249969482422, :y1 866.5875244140625, :x2 300.0179443359375, :y2 880.8250427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 429}, :content {:text "有了这些关系，childNodes 属性的作用远远不止是必备属性那么简单了"}, :properties {:color "yellow"}} {:id #uuid "63d0a010-4401-457f-b735-35c2c25c9aad", :page 429, :position {:bounding {:x1 0, :y1 428.8000259399414, :x2 756.9197998046875, :y2 996.5875244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 428.8000259399414, :x2 0, :y2 451.2000198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 354.4492492675781, :y1 953.3000183105469, :x2 756.9197998046875, :y2 974.1000366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 366.13751220703125, :y1 956.1625366210938, :x2 756.9197998046875, :y2 971.1500244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 975.7875366210938, :x2 141.3111114501953, :y2 996.5875244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 429}, :content {:text "。ownerDocument 属性是一个指向代表整个文档的文档节点的指针。"}, :properties {:color "yellow"}} {:id #uuid "63d0a051-b265-4275-b362-146c94560b91", :page 430, :position {:bounding {:x1 158.9250030517578, :y1 231.67498779296875, :x2 215.8916473388672, :y2 252.47500610351562, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 231.67498779296875, :x2 215.8916473388672, :y2 252.47500610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 430}, :content {:text "操纵节点"}, :properties {:color "green"}} {:id #uuid "63d0a093-51e0-412f-ae20-16d305af497a", :page 430, :position {:bounding {:x1 0, :y1 252.6875, :x2 789.2637939453125, :y2 323.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 675.6800537109375, :y1 252.6875, :x2 789.2637939453125, :y2 273.48748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 274.75, :x2 500.7762145996094, :y2 295.5500183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 277.95001220703125, :x2 376.1125183105469, :y2 292.1875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 300.79998779296875, :x2 0, :y2 323.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 430}, :content {:text "最常用的方法是 appendChild()，用于在 childNodes 列表末尾添加节点"}, :properties {:color "yellow"}} {:id #uuid "63d0a0ca-b8d5-4984-9d8b-009e66beb91f", :page 430, :position {:bounding {:x1 142.22500610351562, :y1 377.46251106262207, :x2 781.0061645507812, :y2 398.2624988555908, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 377.46251106262207, :x2 781.0061645507812, :y2 398.2624988555908, :width 864.9999999999999, :height 1080.0639853747714} {:x1 371.26251220703125, :y1 380.3249988555908, :x2 497.57501220703125, :y2 394.5625171661377, :width 864.9999999999999, :height 1080.0639853747714}), :page 430}, :content {:text "如果把文档中已经存在的节点传给 appendChild()，则这个节点会从之前的位置被转移到新位置"}, :properties {:color "yellow"}} {:id #uuid "63d0a124-598c-45c8-911f-cd2bfc1bd8a6", :page 430, :position {:bounding {:x1 142.22500610351562, :y1 539.6249866485596, :x2 769.9025268554688, :y2 560.4250354766846, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 539.6249866485596, :x2 719.5684204101562, :y2 560.4250354766846, :width 864.9999999999999, :height 1080.0639853747714} {:x1 739.5, :y1 539.6249866485596, :x2 769.9025268554688, :y2 560.4250354766846, :width 864.9999999999999, :height 1080.0639853747714} {:x1 267.5625, :y1 542.4750232696533, :x2 719.5684204101562, :y2 556.7125110626221, :width 864.9999999999999, :height 1080.0639853747714}), :page 430}, :content {:text "如果想把节点放到 childNodes 中的特定位置而不是末尾，则可以使用 insertBefore()方法"}, :properties {:color "yellow"}} {:id #uuid "63d0a21d-9258-4935-8a1f-895187d658e5", :page 430, :position {:bounding {:x1 112.13750457763672, :y1 844.0375061035156, :x2 564.8858032226562, :y2 865.1750183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 112.13750457763672, :y1 844.0375061035156, :x2 213.8162384033203, :y2 864.0375061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 231.6875, :y1 844.3750305175781, :x2 564.8858032226562, :y2 865.1750183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 430}, :content {:text "replaceChild()方法接收两个参数：要插入的节点和要替换的节点"}, :properties {:color "yellow"}} {:id #uuid "63d0c906-53c0-4253-a4ef-f632c3d0d4be", :page 431, :position {:bounding {:x1 110.82500457763672, :y1 143.58749389648438, :x2 528.4450073242188, :y2 164.38748168945312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.82500457763672, :y1 143.58749389648438, :x2 528.4450073242188, :y2 164.38748168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 371.63751220703125, :y1 146.43753051757812, :x2 474.826904296875, :y2 160.67501831054688, :width 864.9999999999999, :height 1080.0639853747714}), :page 431}, :content {:text "要移除节点而不是替换节点，可以使用 removeChild()方法。"}, :properties {:color "yellow"}} {:id #uuid "63d0c930-68c3-4766-b3f1-fd9fe52948e2", :page 431, :position {:bounding {:x1 0, :y1 220.79999160766602, :x2 756.6337280273438, :y2 457.00000381469727, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 220.79999160766602, :x2 0, :y2 243.20001602172852, :width 864.9999999999999, :height 1080.0639853747714} {:x1 324.0457458496094, :y1 413.81250381469727, :x2 756.6337280273438, :y2 434.612491607666, :width 864.9999999999999, :height 1080.0639853747714} {:x1 403.7124938964844, :y1 416.6625099182129, :x2 756.6337280273438, :y2 430.89999771118164, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 436.2000160217285, :x2 95.93875122070312, :y2 457.00000381469727, :width 864.9999999999999, :height 1080.0639853747714}), :page 431}, :content {:text "。第一个是 cloneNode()，会返回与调用它的节点一模一样的节点"}, :properties {:color "yellow"}} {:id #uuid "63d0c939-084c-40ae-8275-577c65ce9294", :page 431, :position {:bounding {:x1 110.7249984741211, :y1 435.862491607666, :x2 494.1012268066406, :y2 456.66247940063477, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.7249984741211, :y1 435.862491607666, :x2 494.1012268066406, :y2 456.66247940063477, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.7249984741211, :y1 439.06250381469727, :x2 200.10118103027344, :y2 453.299991607666, :width 864.9999999999999, :height 1080.0639853747714}), :page 431}, :content {:text "cloneNode()方法接收一个布尔值参数，表示是否深复制"}, :properties {:color "yellow"}} {:id #uuid "63d0c94c-1bbf-4e80-a473-8cb0febdb83a", :page 431, :position {:bounding {:x1 0, :y1 252.79999160766602, :x2 757.8582763671875, :y2 501.8750343322754, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 252.79999160766602, :x2 0, :y2 275.2000160217285, :width 864.9999999999999, :height 1080.0639853747714} {:x1 303.0533752441406, :y1 458.6000099182129, :x2 757.8582763671875, :y2 479.39999771118164, :width 864.9999999999999, :height 1080.0639853747714} {:x1 362.3500061035156, :y1 461.80002212524414, :x2 757.8582763671875, :y2 476.7875099182129, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 481.0749855041504, :x2 553.6531372070312, :y2 501.8750343322754, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 484.27499771118164, :x2 543.9625244140625, :y2 499.2624855041504, :width 864.9999999999999, :height 1080.0639853747714}), :page 431}, :content {:text "如果传入 false，则只会复制调用该方法的节点。复制返回的节点属于文档所有，但尚未指定父节点，所以可称为孤儿节点（orphan）。"}, :properties {:color "yellow"}} {:id #uuid "63d0c975-3771-4d36-8b6a-82cd189907a8", :page 431, :position {:bounding {:x1 156.38177490234375, :y1 832.1874847412109, :x2 606.4486694335938, :y2 853.6374969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 156.38177490234375, :y1 832.1874847412109, :x2 156.38426208496094, :y2 852.9874877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 557.3250122070312, :y1 832.1874847412109, :x2 606.4486694335938, :y2 852.9874877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 170.875, :y1 832.8374938964844, :x2 545.97265625, :y2 853.6374969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 557.3250122070312, :y1 835.3874969482422, :x2 557.4528198242188, :y2 850.3749847412109, :width 864.9999999999999, :height 1080.0639853747714} {:x1 170.875, :y1 836.0374908447266, :x2 545.97265625, :y2 851.0249786376953, :width 864.9999999999999, :height 1080.0639853747714}), :page 431}, :content {:text "cloneNode()方法不会复制添加到 DOM 节点的 JavaScript 属性，"}, :properties {:color "yellow"}} {:id #uuid "63d0c9a5-2d74-4870-b629-fcdf25c1ab86", :page 431, :position {:bounding {:x1 0, :y1 588.7999877929688, :x2 757.8861694335938, :y2 982.2624816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 588.7999877929688, :x2 0, :y2 611.199987411499, :width 864.9999999999999, :height 1080.0639853747714} {:x1 313.57501220703125, :y1 938.7250061035156, :x2 396.71124267578125, :y2 958.7250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 407.51251220703125, :y1 939.0625, :x2 757.8861694335938, :y2 959.8624877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 407.51251220703125, :y1 942.2624816894531, :x2 757.8861694335938, :y2 957.25, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 961.4624938964844, :x2 95.97230529785156, :y2 982.2624816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 431}, :content {:text "normalize()。这个方法唯一的任务就是处理文档子树中的文本节点"}, :properties {:color "yellow"}} {:id #uuid "63d0c9cb-f09b-4abb-8b06-ad531d249814", :page 432, :position {:bounding {:x1 0, :y1 121.1875, :x2 789.1797485351562, :y2 259.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 249.1676788330078, :y1 121.1875, :x2 428.1119079589844, :y2 141.98748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 438.9125061035156, :y1 121.1875, :x2 789.1797485351562, :y2 141.98748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 344.88751220703125, :y1 124.04998779296875, :x2 428.1119079589844, :y2 138.2874755859375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 438.9125061035156, :y1 124.38751220703125, :x2 789.1797485351562, :y2 139.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 143.5875244140625, :x2 782.2535781860352, :y2 164.38751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 236.79998779296875, :x2 0, :y2 259.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 432}, :content {:text "在节点上调用 normalize()方法会检测这个节点的所有后代，从中搜索上述两种情形。如果发现空文本节点，则将其删除；如果两个同胞节点是相邻的，则将其合并为一个文本节点"}, :properties {:color "yellow"}} {:id #uuid "63d0c9d6-2ba5-4b3e-a4f0-9280904c3166", :page 432, :position {:bounding {:x1 183.875, :y1 201.89999389648438, :x2 314.9876403808594, :y2 228.29998779296875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 201.89999389648438, :x2 314.9876403808594, :y2 228.29998779296875, :width 864.9999999999999, :height 1080.0639853747714}), :page 432}, :content {:text "Document 类型"}, :properties {:color "green"}} {:id #uuid "63d0c9e3-d413-4205-afdb-182ec18ed6c7", :page 432, :position {:bounding {:x1 140.6125030517578, :y1 239.17501831054688, :x2 507.7621765136719, :y2 260.6374816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 337.0874938964844, :y1 239.17501831054688, :x2 507.7621765136719, :y2 259.9750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 140.6125030517578, :y1 239.83749389648438, :x2 326.0240478515625, :y2 260.6374816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 337.0874938964844, :y1 242.375, :x2 337.37322998046875, :y2 257.3625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 218.60000610351562, :y1 243.375, :x2 326.0240478515625, :y2 258.3625183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 432}, :content {:text "Document 类型是 JavaScript 中表示文档节点的类型"}, :properties {:color "yellow"}} {:id #uuid "63d0c9f0-24c7-413d-a09c-518004063fd6", :page 432, :position {:bounding {:x1 0, :y1 262.2250061035156, :x2 791.1434326171875, :y2 339.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 646.7999877929688, :y1 262.2250061035156, :x2 791.1434326171875, :y2 283.0250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 646.7999877929688, :y1 265.4250183105469, :x2 791.1434326171875, :y2 280.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 284.9624938964844, :x2 340.4983139038086, :y2 305.76251220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 316.79998779296875, :x2 0, :y2 339.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 432}, :content {:text "document 是 window对象的属性，因此是一个全局对象"}, :properties {:color "yellow"}} {:id #uuid "63d0ca18-2357-4892-ba40-ddae8e67fa4b", :page 432, :position {:bounding {:x1 278.5625, :y1 486.3375015258789, :x2 747.2730102539062, :y2 507.1375198364258, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 278.5625, :y1 486.3375015258789, :x2 747.2730102539062, :y2 507.1375198364258, :width 864.9999999999999, :height 1080.0639853747714}), :page 432}, :content {:text "document 对象可用于获取关于页面的信息以及操纵其外观和底层结构"}, :properties {:color "yellow"}} {:id #uuid "63d0ca25-5f10-4e80-85bb-37feaba9c1ee", :page 432, :position {:bounding {:x1 0, :y1 524.8000183105469, :x2 784.7750244140625, :y2 600.4624938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 524.8000183105469, :x2 0, :y2 547.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 577.3847045898438, :y1 557.2625122070312, :x2 784.7750244140625, :y2 578.0625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 637.125, :y1 560.125, :x2 784.7750244140625, :y2 575.1125183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 579.6625061035156, :x2 395.1514892578125, :y2 600.4624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 582.8625183105469, :x2 364.8785705566406, :y2 597.8500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 432}, :content {:text "第一个是 documentElement 属性，始终指向 HTML 页面中的<html>元素"}, :properties {:color "yellow"}} {:id #uuid "63d0ca4b-5fdc-400c-a69c-8a9d1a586f14", :page 432, :position {:bounding {:x1 142.21250915527344, :y1 859.1875, :x2 739.7639770507812, :y2 879.9875183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.21250915527344, :y1 859.1875, :x2 739.7639770507812, :y2 879.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 176.7624969482422, :y1 862.0375061035156, :x2 712.1314086914062, :y2 877.0249938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 432}, :content {:text "作为 HTMLDocument 的实例，document 对象还有一个 body 属性，直接指向<body>元素"}, :properties {:color "yellow"}} {:id #uuid "63d0caac-3a20-4f5b-8754-7ac1b1420b12", :page 432, :position {:bounding {:x1 0, :y1 812.8000030517578, :x2 786.9798583984375, :y2 997.0625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 812.8000030517578, :x2 0, :y2 835.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 518.7999877929688, :y1 953.5249938964844, :x2 786.9798583984375, :y2 973.5249938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 604.2000122070312, :y1 957.0750122070312, :x2 786.9798583984375, :y2 972.0625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 976.2625122070312, :x2 621.6337280273438, :y2 997.0625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 979.4624938964844, :x2 562.1449584960938, :y2 994.4500122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 432}, :content {:text "<!doctype>标签是文档中独立的部分，其信息可以通过 doctype 属性（在浏览器中是 document.doctype）来访问"}, :properties {:color "yellow"}} {:id #uuid "63d0cadf-f2c2-4260-9358-79820ad7f957", :page 433, :position {:bounding {:x1 155.89181518554688, :y1 144.53750228881836, :x2 714.84130859375, :y2 165.33750534057617, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 155.89181518554688, :y1 144.53750228881836, :x2 714.84130859375, :y2 165.33750534057617, :width 864.9999999999999, :height 1080.0639853747714} {:x1 259.0249938964844, :y1 147.38750076293945, :x2 714.84130859375, :y2 162.37500381469727, :width 864.9999999999999, :height 1080.0639853747714}), :page 433}, :content {:text "严格来讲出现在<html>元素外面的注释也是文档的子节点，它们的类型是 Comment"}, :properties {:color "yellow"}} {:id #uuid "63d0cb30-e06b-484a-8b92-4ac6aa10b10d", :page 433, :position {:bounding {:x1 0, :y1 300.79999923706055, :x2 762.4224853515625, :y2 555.2125358581543, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 300.79999923706055, :x2 0, :y2 323.1999931335449, :width 864.9999999999999, :height 1080.0639853747714} {:x1 504.89703369140625, :y1 512.0124931335449, :x2 762.4224853515625, :y2 532.8125114440918, :width 864.9999999999999, :height 1080.0639853747714} {:x1 247.35000610351562, :y1 534.0625114440918, :x2 403.1632385253906, :y2 554.0625114440918, :width 864.9999999999999, :height 1080.0639853747714} {:x1 416.6125183105469, :y1 534.4000053405762, :x2 447.06475830078125, :y2 555.200023651123, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 534.4125175476074, :x2 233.71414184570312, :y2 555.2125358581543, :width 864.9999999999999, :height 1080.0639853747714} {:x1 247.35000610351562, :y1 537.2624931335449, :x2 403.1632385253906, :y2 551.5000114440918, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 537.6124992370605, :x2 233.71414184570312, :y2 552.5999870300293, :width 864.9999999999999, :height 1080.0639853747714}), :page 433}, :content {:text "，修改后的标题也会反映在浏览器标题栏上。不过，修改 title 属性并不会改变<title>元素"}, :properties {:color "yellow"}} {:id #uuid "63d0cb3b-b290-406e-a42a-2cd9543a05e1", :page 433, :position {:bounding {:x1 109.20000457763672, :y1 466.7875061035156, :x2 682.825439453125, :y2 487.58750915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 466.7875061035156, :x2 682.825439453125, :y2 487.58750915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 181.78750610351562, :y1 470.3249969482422, :x2 549.0946044921875, :y2 485.3125, :width 864.9999999999999, :height 1080.0639853747714}), :page 433}, :content {:text "document 作为 HTMLDocument 的实例，还有一些标准 Document 对象上所没有的属性"}, :properties {:color "yellow"}} {:id #uuid "63d0cb53-d636-41bb-afa8-0ead27057c0c", :page 433, :position {:bounding {:x1 398.9190368652344, :y1 489.6125030517578, :x2 649.9376831054688, :y2 510.4125061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 398.9190368652344, :y1 489.6125030517578, :x2 442.43194580078125, :y2 510.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 456.0874938964844, :y1 489.6125030517578, :x2 545.8529663085938, :y2 510.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 559.3125, :y1 489.6125030517578, :x2 649.9376831054688, :y2 510.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 413.3000183105469, :y1 492.4750061035156, :x2 442.43194580078125, :y2 506.71250915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 456.0874938964844, :y1 492.8125, :x2 545.8529663085938, :y2 507.8000030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 433}, :content {:text "是 title，包含<title>元素中的文本"}, :properties {:color "yellow"}} {:id #uuid "63d0cb5c-c39a-4567-b4bd-4f3db31abe0f", :page 433, :position {:bounding {:x1 0, :y1 396.8000030517578, :x2 753.5858154296875, :y2 687.5625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 396.8000030517578, :x2 0, :y2 419.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 516.1508178710938, :y1 644.3625183105469, :x2 753.5858154296875, :y2 665.1625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 527.4375, :y1 647.2250061035156, :x2 753.5858154296875, :y2 662.2125244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 666.7625122070312, :x2 189.875, :y2 687.5625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 669.9624938964844, :x2 189.875, :y2 684.9500122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 433}, :content {:text "，URL 包含当前页面的完整 URL（地址栏中的 URL）"}, :properties {:color "yellow"}} {:id #uuid "63d0cb60-724e-40bd-a4e4-e6044699ac86", :page 433, :position {:bounding {:x1 197.0625, :y1 666.4125061035156, :x2 359.1131286621094, :y2 687.2124938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 197.0625, :y1 666.4125061035156, :x2 359.1131286621094, :y2 687.2124938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 197.0625, :y1 669.6125183105469, :x2 253.0406951904297, :y2 683.8500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 433}, :content {:text "domain 包含页面的域名"}, :properties {:color "yellow"}} {:id #uuid "63d0cb67-2930-472a-b6d4-140b5b533c28", :page 433, :position {:bounding {:x1 397.3152770996094, :y1 666.4125061035156, :x2 724.9667358398438, :y2 687.2124938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 397.3152770996094, :y1 666.4125061035156, :x2 445.9283142089844, :y2 686.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 459.7875061035156, :y1 666.4125061035156, :x2 724.9667358398438, :y2 687.2124938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 459.7875061035156, :y1 669.6125183105469, :x2 724.9667358398438, :y2 683.8500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 433}, :content {:text "eferrer 包含链接到当前页面的那个页面的 URL"}, :properties {:color "yellow"}} {:id #uuid "63d0cb96-3c70-45bd-bcaf-ea468364d97b", :page 434, :position {:bounding {:x1 142.21250915527344, :y1 410.4000244140625, :x2 723.646484375, :y2 431.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.21250915527344, :y1 410.4000244140625, :x2 723.646484375, :y2 431.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 209.4875030517578, :y1 413.6000061035156, :x2 275.4495544433594, :y2 428.5875244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 434}, :content {:text "浏 览 器 对 domain 属 性 还 有 一 个 限 制 ， 即 这 个 属 性 一 旦 放 松 就 不 能 再 收 紧 。 比 如 "}, :properties {:color "yellow"}} {:id #uuid "63d0cba0-c6e4-4385-85df-c0f688982d85", :page 433, :position {:bounding {:x1 216.8554229736328, :y1 911.4625091552734, :x2 425.8576354980469, :y2 932.2624969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 216.8554229736328, :y1 911.4625091552734, :x2 425.8576354980469, :y2 932.2624969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 249.0625, :y1 914.3125, :x2 305.1495361328125, :y2 928.5500030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 433}, :content {:text "只有 domain 属性是可以设置的"}, :properties {:color "yellow"}} {:id #uuid "63d0cbca-9d88-478d-b19a-ceaa2f17fd38", :page 434, :position {:bounding {:x1 142.22500610351562, :y1 590.9500122070312, :x2 776.1424865722656, :y2 611.75, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 590.9500122070312, :x2 776.1424865722656, :y2 611.75, :width 864.9999999999999, :height 1080.0639853747714} {:x1 173.25, :y1 594.1499938964844, :x2 225.68687438964844, :y2 609.1375122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 434}, :content {:text "使用 DOM 最常见的情形可能就是获取某个或某组元素的引用，然后对它们执行某些操作"}, :properties {:color "yellow"}} {:id #uuid "63d0cbd6-bc3e-4c74-9a39-1de6196577da", :page 434, :position {:bounding {:x1 0, :y1 588.7999877929688, :x2 787.8163452148438, :y2 701.4125061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 588.7999877929688, :x2 0, :y2 611.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 140.6125030517578, :y1 657.875, :x2 266.7959899902344, :y2 677.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 277.3374938964844, :y1 658.2250061035156, :x2 787.8163452148438, :y2 679.0249938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 277.3374938964844, :y1 661.4249877929688, :x2 787.8163452148438, :y2 676.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 680.6124877929688, :x2 229.6388397216797, :y2 701.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 683.8125, :x2 205.1750030517578, :y2 698.7999877929688, :width 864.9999999999999, :height 1080.0639853747714}), :page 434}, :content {:text "getElementById()方法接收一个参数，即要获取元素的 ID，如果找到了则返回这个元素，如果没找到则返回 nul"}, :properties {:color "yellow"}} {:id #uuid "63d0cbe8-a59f-44b9-86ab-07e151f84c06", :page 434, :position {:bounding {:x1 142.22500610351562, :y1 852.6375427246094, :x2 779.9682006835938, :y2 873.4375305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 852.6375427246094, :x2 556.2755126953125, :y2 873.4375305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 566.7250366210938, :y1 852.6375427246094, :x2 779.9682006835938, :y2 873.4375305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 340.6125183105469, :y1 854.8375549316406, :x2 556.2755126953125, :y2 869.8250427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 434}, :content {:text "如果页面中存在多个具有相同 ID 的元素，则 getElementById()返回在文档中出现的第一个元素"}, :properties {:color "yellow"}} {:id #uuid "63d0cc4b-2745-45ab-bd9f-7a0679a88d4c", :page 434, :position {:bounding {:x1 0, :y1 732.8000335693359, :x2 790.7547607421875, :y2 918.2250366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 732.8000335693359, :x2 0, :y2 755.2000427246094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 140.6125030517578, :y1 874.6875305175781, :x2 790.7547607421875, :y2 894.6875305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 328.6625061035156, :y1 878.2250366210938, :x2 790.7547607421875, :y2 893.2125549316406, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 897.425048828125, :x2 508.1824645996094, :y2 918.2250366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 900.6250305175781, :x2 508.1824645996094, :y2 915.612548828125, :width 864.9999999999999, :height 1080.0639853747714}), :page 434}, :content {:text "getElementsByTagName()是另一个常用来获取元素引用的方法。这个方法接收一个参数，即要获取元素的标签名，返回包含零个或多个元素的 NodeList"}, :properties {:color "yellow"}} {:id #uuid "63d0cc7d-2b3c-43b5-953b-4c70b1a00c1e", :page 435, :position {:bounding {:x1 0, :y1 28.800018310546875, :x2 757.6674194335938, :y2 185.63751220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 28.800018310546875, :x2 0, :y2 51.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 143.58749389648438, :x2 757.6674194335938, :y2 164.38751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 180.65000915527344, :y1 146.4375, :x2 757.6674194335938, :y2 161.42498779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 165.63751220703125, :x2 288.5236511230469, :y2 185.63751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 168.83749389648438, :x2 132.16815185546875, :y2 183.07501220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 435}, :content {:text "使用中括号或 item()方法从 HTMLCollection 取得特定的元素。而取得元素的数量同样可以通过 length 属性得知，如下所示："}, :properties {:color "yellow"}} {:id #uuid "63d0ccb4-e70c-4c1b-acd8-7f78f196897c", :page 435, :position {:bounding {:x1 0, :y1 108.80000114440918, :x2 754.4286499023438, :y2 289.1499996185303, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 108.80000114440918, :x2 0, :y2 131.2000026702881, :width 864.9999999999999, :height 1080.0639853747714} {:x1 109.20000457763672, :y1 245.52499961853027, :x2 754.4286499023438, :y2 266.32501792907715, :width 864.9999999999999, :height 1080.0639853747714} {:x1 228.75, :y1 248.72501182556152, :x2 754.4286499023438, :y2 263.7124996185303, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 268.3500118255615, :x2 141.64981079101562, :y2 289.1499996185303, :width 864.9999999999999, :height 1080.0639853747714}), :page 435}, :content {:text "HTMLCollection 对象还有一个额外的方法 namedItem()，可通过标签的 name 属性取得某一项的引用。"}, :properties {:color "yellow"}} {:id #uuid "63d0ccfa-5061-4f1b-800a-2c2aa4337b47", :page 435, :position {:bounding {:x1 0, :y1 236.8000087738037, :x2 767.7138214111328, :y2 483.4750118255615, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 236.8000087738037, :x2 0, :y2 259.20001792907715, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 440.2749996185303, :x2 767.7138214111328, :y2 461.07501792907715, :width 864.9999999999999, :height 1080.0639853747714} {:x1 125.80000305175781, :y1 443.4750118255615, :x2 767.7138214111328, :y2 458.4624996185303, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 462.67499351501465, :x2 488.9375, :y2 483.4750118255615, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 465.8750057220459, :x2 474.4185485839844, :y2 480.86249351501465, :width 864.9999999999999, :height 1080.0639853747714}), :page 435}, :content {:text "对 HTMLCollection 对象而言，中括号既可以接收数值索引，也可以接收字符串索引。而在后台，数值索引会调用 item()，字符串索引会调用 namedItem()。"}, :properties {:color "yellow"}} {:id #uuid "63d0cd07-fdca-4f2b-8afd-9707d13a4622", :page 435, :position {:bounding {:x1 110.8125, :y1 485.1625118255615, :x2 564.0375366210938, :y2 505.9624996185303, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 485.1625118255615, :x2 564.0375366210938, :y2 505.9624996185303, :width 864.9999999999999, :height 1080.0639853747714} {:x1 340.13751220703125, :y1 488.01251792907715, :x2 564.0375366210938, :y2 502.250036239624, :width 864.9999999999999, :height 1080.0639853747714}), :page 435}, :content {:text "要取得文档中的所有元素，可以给 getElementsByTagName()传入*"}, :properties {:color "yellow"}} {:id #uuid "63d0cd1a-5229-4c79-81ef-6906fdd11f50", :page 435, :position {:bounding {:x1 109.20000457763672, :y1 727.9000244140625, :x2 652.0711059570312, :y2 748.7000122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 727.9000244140625, :x2 652.0711059570312, :y2 748.7000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 215.9375, :y1 731.4375, :x2 637.2415771484375, :y2 746.4250183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 435}, :content {:text "HTMLDocument 类型上定义的获取元素的第三个方法是 getElementsByName()。"}, :properties {:color "yellow"}} {:id #uuid "63d0cd34-0629-4e91-bd65-b87d31de021b", :page 436, :position {:bounding {:x1 142.22500610351562, :y1 189.60000610351562, :x2 484.821044921875, :y2 210.39999389648438, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 189.60000610351562, :x2 484.821044921875, :y2 210.39999389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 337.4875183105469, :y1 192.46249389648438, :x2 457.3131408691406, :y2 207.44998168945312, :width 864.9999999999999, :height 1080.0639853747714}), :page 436}, :content {:text "这里所有的单选按钮都有名为\"color\"的 name 属性"}, :properties {:color "yellow"}} {:id #uuid "63d0cd71-e1e2-4fe4-a712-1af4a81cdb3e", :page 436, :position {:bounding {:x1 158.9250030517578, :y1 333.87499237060547, :x2 215.8916473388672, :y2 354.67501068115234, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 333.87499237060547, :x2 215.8916473388672, :y2 354.67501068115234, :width 864.9999999999999, :height 1080.0639853747714}), :page 436}, :content {:text "特殊集合"}, :properties {:color "green"}} {:id #uuid "63d0cd88-f0fe-4d31-9d06-19d391ecb1d6", :page 436, :position {:bounding {:x1 155.4918670654297, :y1 629.5750122070312, :x2 268.5437927246094, :y2 650.375, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 155.4918670654297, :y1 629.5750122070312, :x2 183.69146728515625, :y2 650.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 193.90000915527344, :y1 629.5750122070312, :x2 268.5437927246094, :y2 650.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 193.90000915527344, :y1 632.7750244140625, :x2 194.13937377929688, :y2 647.7625122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 436}, :content {:text "DOM 兼容性检测"}, :properties {:color "green"}} {:id #uuid "63d0cda6-ff8d-4407-8f18-991f31e32f1d", :page 436, :position {:bounding {:x1 112.13750457763672, :y1 671.6375122070312, :x2 771.5316772460938, :y2 692.4375305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 112.13750457763672, :y1 671.6375122070312, :x2 771.5316772460938, :y2 692.4375305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 308.5500183105469, :y1 674.8375244140625, :x2 622.6705932617188, :y2 689.0750122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 436}, :content {:text "document.implementation 属性是一个对象，其中提供了与浏览器 DOM 实现相关的信息和能力"}, :properties {:color "yellow"}} {:id #uuid "63d0cdc6-964a-4094-9378-a02fa71d427d", :page 436, :position {:bounding {:x1 0, :y1 652.8000183105469, :x2 785.7237548828125, :y2 758.9125061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 652.8000183105469, :x2 0, :y2 675.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 668.8000183105469, :x2 0, :y2 691.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 575.2362670898438, :y1 694.4625244140625, :x2 682.9671020507812, :y2 715.2625122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 694.4249877929688, :y1 694.4625244140625, :x2 785.7237548828125, :y2 715.2625122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 591.9625244140625, :y1 697.3250122070312, :x2 682.9671020507812, :y2 711.5625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 694.4249877929688, :y1 697.6625061035156, :x2 785.7237548828125, :y2 712.6500244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 716.8625183105469, :x2 713.0305786132812, :y2 737.6625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 724.5125122070312, :y1 716.8625183105469, :x2 785.3175659179688, :y2 737.6625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 720.0625, :x2 713.0305786132812, :y2 735.0500183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 724.5125122070312, :y1 720.0625, :x2 785.3175659179688, :y2 735.0500183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 738.9125061035156, :x2 142.101318359375, :y2 758.9125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 742.1125183105469, :x2 142.101318359375, :y2 756.3500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 436}, :content {:text "即 hasFeature()。这个方法接收两个参数：特性名称和 DOM 版本。如果浏览器支持指定的特性和版本，则 hasFeature()方法返回 true"}, :properties {:color "yellow"}} {:id #uuid "63d0cdf7-ae8c-4e7e-af96-98493d890137", :page 437, :position {:bounding {:x1 127.5250015258789, :y1 527.1374969482422, :x2 184.4916534423828, :y2 547.9375152587891, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.5250015258789, :y1 527.1374969482422, :x2 184.4916534423828, :y2 547.9375152587891, :width 864.9999999999999, :height 1080.0639853747714}), :page 437}, :content {:text "文档写入"}, :properties {:color "green"}} {:id #uuid "63d0ce0a-0ea6-46b6-bf25-6947899717eb", :page 437, :position {:bounding {:x1 0, :y1 316.7999954223633, :x2 756.3856811523438, :y2 613.7500152587891, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 316.7999954223633, :x2 0, :y2 339.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 358.6499938964844, :y1 570.2125091552734, :x2 406.2109069824219, :y2 591.0124969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 418.4250183105469, :y1 570.5500030517578, :x2 498.6982421875, :y2 591.3499908447266, :width 864.9999999999999, :height 1080.0639853747714} {:x1 514.0625, :y1 570.5500030517578, :x2 756.3856811523438, :y2 591.3499908447266, :width 864.9999999999999, :height 1080.0639853747714} {:x1 358.6499938964844, :y1 573.4124908447266, :x2 406.2109069824219, :y2 587.6500091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 418.4250183105469, :y1 573.7500152587891, :x2 498.6982421875, :y2 588.7375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 514.0625, :y1 573.7500152587891, :x2 756.3856811523438, :y2 588.7375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 592.9499969482422, :x2 233.62063598632812, :y2 613.7500152587891, :width 864.9999999999999, :height 1080.0639853747714}), :page 437}, :content {:text "write()和 writeln()方法都接收一个字符串参数，可以将这个字符串写入网页中"}, :properties {:color "yellow"}} {:id #uuid "63d0ce35-0f9a-4a35-95a5-59e4ee8793e4", :page 437, :position {:bounding {:x1 109.20000457763672, :y1 897.3625183105469, :x2 478.966552734375, :y2 918.5000305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 897.3625183105469, :x2 156.76087951660156, :y2 917.3625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 168.97500610351562, :y1 897.7000427246094, :x2 250.3982391357422, :y2 918.5000305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 265.75, :y1 897.7000427246094, :x2 478.966552734375, :y2 918.5000305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 168.97500610351562, :y1 900.9000549316406, :x2 250.3982391357422, :y2 915.8875427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 437}, :content {:text "write()和 writeln()方法经常用于动态包含外部资源"}, :properties {:color "yellow"}} {:id #uuid "63d0ce5c-9335-42ba-9b44-9dc406a40222", :page 438, :position {:bounding {:x1 0, :y1 532.0250053405762, :x2 787.9352416992188, :y2 643.200023651123, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 543.1875, :y1 532.0250053405762, :x2 787.9352416992188, :y2 552.8249931335449, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 532.0375175476074, :x2 532.8641357421875, :y2 552.8375053405762, :width 864.9999999999999, :height 1080.0639853747714} {:x1 406.375, :y1 534.8874931335449, :x2 532.8641357421875, :y2 549.1250114440918, :width 864.9999999999999, :height 1080.0639853747714} {:x1 543.1875, :y1 535.2250175476074, :x2 787.9352416992188, :y2 550.2125053405762, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 554.4249992370605, :x2 347.45947265625, :y2 575.2249870300293, :width 864.9999999999999, :height 1080.0639853747714} {:x1 357.70001220703125, :y1 554.4249992370605, :x2 570.8899536132812, :y2 575.2249870300293, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 557.6250114440918, :x2 347.45947265625, :y2 572.6124992370605, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 620.7999992370605, :x2 0, :y2 643.200023651123, :width 864.9999999999999, :height 1080.0639853747714}), :page 438}, :content {:text "前面的例子展示了在页面渲染期间通过 document.write()向文档中输出内容。如果是在页面加载完之后再调用 document.write()，则输出的内容会重写整个页面"}, :properties {:color "yellow"}} {:id #uuid "63d0ce6e-0b2d-4095-9079-5f441276d07e", :page 439, :position {:bounding {:x1 152.46250915527344, :y1 120.11250305175781, :x2 272.66265869140625, :y2 145.71250915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 120.11250305175781, :x2 272.66265869140625, :y2 145.71250915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 228.875, :y1 124.11250305175781, :x2 232.52500915527344, :y2 142.3249969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 439}, :content {:text "Element 类型"}, :properties {:color "green"}} {:id #uuid "63d0ceb0-689c-4515-8641-ffa9f8e7fcd6", :page 439, :position {:bounding {:x1 0, :y1 284.80001068115234, :x2 756.2782592773438, :y2 577.8875350952148, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 284.80001068115234, :x2 0, :y2 307.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 300.80001068115234, :x2 0, :y2 323.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 138.63876342773438, :y1 512.2000350952148, :x2 755.0486450195312, :y2 533.0000228881836, :width 864.9999999999999, :height 1080.0639853747714} {:x1 158.72500610351562, :y1 514.3999862670898, :x2 755.0486450195312, :y2 529.3875350952148, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 534.6875228881836, :x2 756.2782592773438, :y2 555.4875106811523, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 537.8875350952148, :x2 756.2782592773438, :y2 552.8750228881836, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 557.0874862670898, :x2 217.70043182373047, :y2 577.8875350952148, :width 864.9999999999999, :height 1080.0639853747714}), :page 439}, :content {:text "在 HTML 中，元素标签名始终以全大写表示；在 XML（包括 XHTML）中，标签名始终与源代码中的大小写一致。如果不确定脚本是在 HTML 文档还是 XML 文档中运行，最好将标签名转换为小写形式，以便于比较"}, :properties {:color "yellow"}} {:id #uuid "63d0ceea-d3c3-4228-a2a0-8a41eddefeb8", :page 440, :position {:bounding {:x1 142.22500610351562, :y1 405.93750619888306, :x2 477.2946472167969, :y2 426.7374939918518, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 405.93750619888306, :x2 477.2946472167969, :y2 426.7374939918518, :width 864.9999999999999, :height 1080.0639853747714}), :page 440}, :content {:text "并非所有这些属性的修改都会对页面产生影响。比"}, :properties {:color "yellow"}} {:id #uuid "63d0cf1c-4b3c-4cb1-b495-ca679c99167f", :page 440, :position {:bounding {:x1 0, :y1 450.81251525878906, :x2 786.77490234375, :y2 531.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 507.97247314453125, :y1 450.81251525878906, :x2 786.77490234375, :y2 471.6125030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 538.1625366210938, :y1 453.66249084472656, :x2 786.77490234375, :y2 467.90000915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 473.21250915527344, :x2 373.7161560058594, :y2 494.0124969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 476.41249084472656, :x2 373.7161560058594, :y2 491.40000915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 508.8000030517578, :x2 0, :y2 531.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 440}, :content {:text "修改 className 会立即反映应用到新类名的 CSS 样式（如果定义了不同的样式）"}, :properties {:color "yellow"}} {:id #uuid "63d0cf28-0ff6-4d46-8be2-782aada5f351", :page 441, :position {:bounding {:x1 123.62259674072266, :y1 786.2250366210938, :x2 184.47915649414062, :y2 807.0250244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 123.62259674072266, :y1 786.2250366210938, :x2 184.47915649414062, :y2 807.0250244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 441}, :content {:text "取得属性"}, :properties {:color "green"}} {:id #uuid "63d0cf70-0279-43ee-8180-cf9dc5d2e2a3", :page 441, :position {:bounding {:x1 110.8125, :y1 975.9750366210938, :x2 753.6830444335938, :y2 996.7750244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 975.9750366210938, :x2 276.5685729980469, :y2 996.7750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 298.7749938964844, :y1 975.9750366210938, :x2 713.0521850585938, :y2 996.7750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 723.0875244140625, :y1 975.9750366210938, :x2 753.6830444335938, :y2 996.7750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 179.03750610351562, :y1 978.8375244140625, :x2 276.5685729980469, :y2 993.0750427246094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 298.7749938964844, :y1 979.1750183105469, :x2 713.0521850585938, :y2 994.1625366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 441}, :content {:text "注意传给 getAttribute()的属性名与它们实际的属性名是一样的，因此这里要传\"class\"而非"}, :properties {:color "yellow"}} {:id #uuid "63d0cfb3-fef6-487d-a960-8e5a22742bf4", :page 442, :position {:bounding {:x1 140.6125030517578, :y1 165.63748168945312, :x2 642.8616943359375, :y2 186.77499389648438, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 165.63748168945312, :x2 238.1435546875, :y2 185.63748168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 260.1625061035156, :y1 165.97500610351562, :x2 642.8616943359375, :y2 186.77499389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 260.1625061035156, :y1 169.17498779296875, :x2 431.82666015625, :y2 184.16250610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 442}, :content {:text "getAttribute()方法也能取得不是 HTML 语言正式属性的自定义属性的值"}, :properties {:color "yellow"}} {:id #uuid "63d0cfe4-19bd-47ad-8c99-e8434b4d2725", :page 442, :position {:bounding {:x1 187.90171813964844, :y1 288.0875244140625, :x2 324.931884765625, :y2 308.88751220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 187.90171813964844, :y1 288.0875244140625, :x2 324.931884765625, :y2 308.88751220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 442}, :content {:text "属性名不区分大小写"}, :properties {:color "yellow"}} {:id #uuid "63d0d02e-9a5e-456d-99f7-caa60cf8fbbd", :page 442, :position {:bounding {:x1 142.22500610351562, :y1 472.43751525878906, :x2 725.7440795898438, :y2 493.25001525878906, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 618.9000244140625, :y1 472.43751525878906, :x2 725.7440795898438, :y2 493.2375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 472.4499969482422, :x2 596.8748779296875, :y2 493.25001525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 172.1999969482422, :y1 475.65000915527344, :x2 596.8748779296875, :y2 490.6374969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 442}, :content {:text "通过 DOM 对象访问的属性中有两个返回的值跟使用 getAttribute()取得的值不一样"}, :properties {:color "yellow"}} {:id #uuid "63d0d03a-3257-4e2b-ac0c-36a49a874b39", :page 442, :position {:bounding {:x1 0, :y1 492.8000030517578, :x2 792.3624877929688, :y2 560.5250091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 456.16729736328125, :y1 494.83750915527344, :x2 582.4371948242188, :y2 515.6374969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 603.4375, :y1 494.83750915527344, :x2 786.3887329101562, :y2 515.6374969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 484.8500061035156, :y1 498.0375213623047, :x2 582.4371948242188, :y2 513.0250091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 603.4375, :y1 498.0375213623047, :x2 786.3887329101562, :y2 513.0250091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 508.8000030517578, :x2 0, :y2 531.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 517.3249969482422, :x2 762.7438354492188, :y2 538.1250152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 777.1625366210938, :y1 517.3249969482422, :x2 792.3624877929688, :y2 538.1250152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 520.5250091552734, :x2 762.7438354492188, :y2 535.5124969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 777.1625366210938, :y1 520.5250091552734, :x2 792.3624877929688, :y2 535.5124969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 539.7250213623047, :x2 142.54000854492188, :y2 560.5250091552734, :width 864.9999999999999, :height 1080.0639853747714}), :page 442}, :content {:text "使用 getAttribute()访问 style 属性时，返回的是 CSS 字符串。而在通过 DOM 对象的属性访问时，style 属性返回的是一个（CSSStyleDeclaration）对象"}, :properties {:color "yellow"}} {:id #uuid "63d0d055-878d-4f0a-b22c-091bd8c0140a", :page 442, :position {:bounding {:x1 0, :y1 556.8000030517578, :x2 786.6611328125, :y2 672.5750274658203, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 572.8000030517578, :x2 0, :y2 595.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 649.6036376953125, :y1 584.5000152587891, :x2 786.6611328125, :y2 605.3000030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 588.8000030517578, :x2 0, :y2 611.2000274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 446.5625, :y1 605.9875030517578, :x2 657.2123413085938, :y2 626.7874908447266, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 606.9875030517578, :x2 435.5018615722656, :y2 627.7874908447266, :width 864.9999999999999, :height 1080.0639853747714} {:x1 679.25, :y1 606.9875030517578, :x2 785.8411865234375, :y2 627.7874908447266, :width 864.9999999999999, :height 1080.0639853747714} {:x1 446.5625, :y1 609.1875152587891, :x2 657.2123413085938, :y2 624.1750030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 610.1875152587891, :x2 435.5018615722656, :y2 625.1750030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 679.25, :y1 610.1875152587891, :x2 785.8411865234375, :y2 625.1750030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 629.3875274658203, :x2 773.4226684570312, :y2 650.1875152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 632.5875396728516, :x2 773.4226684570312, :y2 647.5750274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1624984741211, :y1 651.7750396728516, :x2 754.9035034179688, :y2 672.5750274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1624984741211, :y1 654.9749908447266, :x2 479.3374938964844, :y2 669.9625396728516, :width 864.9999999999999, :height 1080.0639853747714}), :page 442}, :content {:text "在元素上使用事件属性时（比如 onclick），属性的值是一段 JavaScript 代码。如果使用 getAttribute()访问事件属性，则返回的是字符串形式的源代码。而通过 DOM 对象的属性访问事件属性时返回的则是一个 JavaScript函数（未指定该属性则返回 null）。这是因为 onclick 及其他事件属性是可以接受函数作为值的"}, :properties {:color "yellow"}} {:id #uuid "63d0d07a-4a2c-4adf-831d-9c54cb23c5ac", :page 442, :position {:bounding {:x1 158.91250610351562, :y1 723.8250122070312, :x2 215.879150390625, :y2 744.625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.91250610351562, :y1 723.8250122070312, :x2 215.879150390625, :y2 744.625, :width 864.9999999999999, :height 1080.0639853747714}), :page 442}, :content {:text "设置属性"}, :properties {:color "green"}} {:id #uuid "63d0d083-93ba-4099-aebe-de6abd94f368", :page 442, :position {:bounding {:x1 0, :y1 668.8000183105469, :x2 788.4423217773438, :y2 788.0375061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 668.8000183105469, :x2 0, :y2 691.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 560.0635375976562, :y1 744.75, :x2 788.4423217773438, :y2 765.5500183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 767.2375183105469, :x2 188.2577667236328, :y2 788.0375061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 442}, :content {:text "法接收两个参数：要设置的属性名和属性的值"}, :properties {:color "yellow"}} {:id #uuid "63d0d0f6-b170-4f10-a7ab-ee357afe4e92", :page 443, :position {:bounding {:x1 0, :y1 124.80000305175781, :x2 758.765380859375, :y2 312.40000915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 124.80000305175781, :x2 0, :y2 147.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 269.21250915527344, :x2 334.3186950683594, :y2 290.0124969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 349.9125061035156, :y1 269.21250915527344, :x2 758.765380859375, :y2 290.0124969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 204.75, :y1 272.06251525878906, :x2 334.3186950683594, :y2 286.3000030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 349.9125061035156, :y1 272.4125213623047, :x2 758.765380859375, :y2 287.40000915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 291.6000213623047, :x2 370.10853576660156, :y2 312.40000915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 443}, :content {:text "最后一个方法 removeAttribute()用于从元素中删除属性。这样不单单是清除属性的值，而是会把整个属性完全从元素中去掉，如下所示："}, :properties {:color "yellow"}} {:id #uuid "63d0d142-7b80-4b2e-883e-70e938778627", :page 443, :position {:bounding {:x1 123.61097717285156, :y1 369.3500061035156, :x2 245.6583251953125, :y2 390.4875183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 212.91250610351562, :y1 369.3500061035156, :x2 245.6583251953125, :y2 389.3500061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 123.61097717285156, :y1 369.6875, :x2 198.2972412109375, :y2 390.4875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 127.51250457763672, :y1 372.5500183105469, :x2 198.2972412109375, :y2 386.7875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 212.91250610351562, :y1 372.5500183105469, :x2 215.7624969482422, :y2 386.7875061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 443}, :content {:text "attributes 属性"}, :properties {:color "green"}} {:id #uuid "63d0d150-de22-4196-8fab-39427b836b8e", :page 443, :position {:bounding {:x1 0, :y1 204.8000030517578, :x2 754.3759155273438, :y2 432.5625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 204.8000030517578, :x2 0, :y2 227.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 573.4213256835938, :y1 389.3625183105469, :x2 635.697265625, :y2 409.3625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 650.3125, :y1 389.3625183105469, :x2 754.3759155273438, :y2 409.3625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 650.3125, :y1 392.5625, :x2 754.3759155273438, :y2 406.8000183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 411.76251220703125, :x2 501.4755554199219, :y2 432.5625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 414.9624938964844, :x2 379.0554504394531, :y2 429.9499816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 443}, :content {:text "ttributes 属性包含一个 NamedNodeMap 实例，是一个类似 NodeList 的“实时”集合。元"}, :properties {:color "yellow"}} {:id #uuid "63d0d167-138a-4513-bc09-5310cf4c350d", :page 443, :position {:bounding {:x1 109.20000457763672, :y1 546.2000122070312, :x2 701.8485717773438, :y2 567, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 546.2000122070312, :x2 179.9847412109375, :y2 566.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 194.60000610351562, :y1 546.2000122070312, :x2 701.8485717773438, :y2 567, :width 864.9999999999999, :height 1080.0639853747714} {:x1 194.60000610351562, :y1 549.3999938964844, :x2 624.7000122070312, :y2 564.3875122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 443}, :content {:text "attributes 属性中的每个节点的 nodeName 是对应属性的名字，nodeValue 是属性的值"}, :properties {:color "yellow"}} {:id #uuid "63d0d197-4779-45ac-91c0-beea10fa1504", :page 443, :position {:bounding {:x1 110.8125, :y1 668.6625213623047, :x2 724.0740966796875, :y2 689.4625091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 668.6625213623047, :x2 724.0740966796875, :y2 689.4625091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 565.7750244140625, :y1 671.5124969482422, :x2 645.4750366210938, :y2 685.7500152587891, :width 864.9999999999999, :height 1080.0639853747714}), :page 443}, :content {:text "同样，也可以用这种语法设置属性的值，即先取得属性节点，再将其 nodeValue 设置为新值"}, :properties {:color "yellow"}} {:id #uuid "63d0d1b0-ea49-4f5b-9307-3108719f75c3", :page 443, :position {:bounding {:x1 0, :y1 460.7999954223633, :x2 745.5216064453125, :y2 806.6375122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 460.7999954223633, :x2 0, :y2 483.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 385.2837219238281, :y1 763.3500061035156, :x2 745.5216064453125, :y2 784.1499938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 388.625, :y1 766.5499877929688, :x2 745.5216064453125, :y2 781.5375061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 785.8374938964844, :x2 111.14000701904297, :y2 806.6375122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 443}, :content {:text "，就是 removeNamedItem()返回表示被删除属性的 Attr节点"}, :properties {:color "yellow"}} {:id #uuid "63d0d213-d855-4201-93f8-c4cac7659293", :page 443, :position {:bounding {:x1 109.20000457763672, :y1 930.0000305175781, :x2 550.2843627929688, :y2 950.0000305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 930.0000305175781, :x2 179.9847412109375, :y2 950.0000305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 194.60000610351562, :y1 930.0000305175781, :x2 550.2843627929688, :y2 950.0000305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 194.60000610351562, :y1 933.2000274658203, :x2 194.8446502685547, :y2 947.4375305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 443}, :content {:text "attributes 属性最有用的场景是需要迭代元素上所有属性的时候"}, :properties {:color "yellow"}} {:id #uuid "63d0d222-c6c4-4cf8-ba83-e60179f8959c", :page 444, :position {:bounding {:x1 158.9375, :y1 374.18749237060547, :x2 215.90415954589844, :y2 394.98751068115234, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9375, :y1 374.18749237060547, :x2 215.90415954589844, :y2 394.98751068115234, :width 864.9999999999999, :height 1080.0639853747714}), :page 444}, :content {:text "创建元素"}, :properties {:color "green"}} {:id #uuid "63d0d23c-a44e-4d0b-8674-264008e46b5b", :page 444, :position {:bounding {:x1 142.22500610351562, :y1 395.11251068115234, :x2 517.0421752929688, :y2 415.9124984741211, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 395.11251068115234, :x2 517.0421752929688, :y2 415.9124984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 205.97500610351562, :y1 397.9749984741211, :x2 401.0709228515625, :y2 412.21251678466797, :width 864.9999999999999, :height 1080.0639853747714}), :page 444}, :content {:text "可以使用 document.createElement()方法创建新元素"}, :properties {:color "yellow"}} {:id #uuid "63d0d249-e310-4d29-83af-b64e90722ff4", :page 444, :position {:bounding {:x1 142.22500610351562, :y1 489.81250762939453, :x2 792.1749877929688, :y2 510.6124954223633, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 489.81250762939453, :x2 291.1320495605469, :y2 510.6124954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 303.2375183105469, :y1 489.81250762939453, :x2 792.1749877929688, :y2 510.6124954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 175.15000915527344, :y1 492.66251373291016, :x2 291.1320495605469, :y2 506.9000015258789, :width 864.9999999999999, :height 1080.0639853747714} {:x1 303.2375183105469, :y1 493.0125198364258, :x2 783.3424682617188, :y2 508.00000762939453, :width 864.9999999999999, :height 1080.0639853747714}), :page 444}, :content {:text "使用 createElement()方法创建新元素的同时也会将其 ownerDocument 属性设置为 document。"}, :properties {:color "yellow"}} {:id #uuid "63d0d257-97f5-4fb5-b542-1e706c7b8449", :page 444, :position {:bounding {:x1 0, :y1 588.8000259399414, :x2 785.4375, :y2 642.7750015258789, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 588.8000259399414, :x2 0, :y2 611.1999893188477, :width 864.9999999999999, :height 1080.0639853747714} {:x1 631.9000244140625, :y1 599.4875259399414, :x2 752.3662109375, :y2 620.2875137329102, :width 864.9999999999999, :height 1080.0639853747714} {:x1 770.2374877929688, :y1 599.4875259399414, :x2 785.4375, :y2 620.2875137329102, :width 864.9999999999999, :height 1080.0639853747714} {:x1 157.8297576904297, :y1 599.5000381469727, :x2 611.9854125976562, :y2 620.3000259399414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 386.3500061035156, :y1 602.3500137329102, :x2 611.9854125976562, :y2 616.5875015258789, :width 864.9999999999999, :height 1080.0639853747714} {:x1 631.9000244140625, :y1 602.6875381469727, :x2 752.3662109375, :y2 617.6750259399414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 770.2374877929688, :y1 602.6875381469727, :x2 785.4375, :y2 617.6750259399414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 621.9750137329102, :x2 539.4537963867188, :y2 642.7750015258789, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 625.1750259399414, :x2 496.6564025878906, :y2 640.1625137329102, :width 864.9999999999999, :height 1080.0639853747714}), :page 444}, :content {:text "要把元素添加到文档树，可以使用 appendChild()、insertBefore()或 replaceChild()。比如，以下代码会把刚才创建的元素添加到文档的<body>元素中"}, :properties {:color "yellow"}} {:id #uuid "63d0d273-c0ca-4de3-aae5-3e432a91f1d0", :page 444, :position {:bounding {:x1 158.9250030517578, :y1 721.375, :x2 215.8916473388672, :y2 742.1750183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 721.375, :x2 215.8916473388672, :y2 742.1750183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 444}, :content {:text "元素后代"}, :properties {:color "green"}} {:id #uuid "63d0d29b-7f23-4c15-8582-2a9f14f10864", :page 445, :position {:bounding {:x1 0, :y1 12.800018310546875, :x2 757.1724243164062, :y2 164.38754272460938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 12.800018310546875, :x2 0, :y2 35.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 652.221435546875, :y1 121.1875, :x2 757.1724243164062, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 143.58749389648438, :x2 378.3316650390625, :y2 164.38754272460938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 146.78750610351562, :x2 366.6244201660156, :y2 161.77499389648438, :width 864.9999999999999, :height 1080.0639853747714}), :page 445}, :content {:text "通常在执行某个操作之后需要先检测一下节点的 nodeType，"}, :properties {:color "yellow"}} {:id #uuid "63d0d2ea-29c8-4df9-beb6-dee04c60ecd7", :page 445, :position {:bounding {:x1 110.8125, :y1 298.3500061035156, :x2 738.7037963867188, :y2 319.1499938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 298.3500061035156, :x2 738.7037963867188, :y2 319.1499938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 505.13751220703125, :y1 301.1999816894531, :x2 692.5068359375, :y2 315.4375305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 445}, :content {:text "要取得某个元素的子节点和其他后代节点，可以使用元素的 getElementsByTagName()方法。"}, :properties {:color "yellow"}} {:id #uuid "63d0d2fc-43c6-44dc-9af2-385ee226abfd", :page 445, :position {:bounding {:x1 152.46250915527344, :y1 443.93751525878906, :x2 239.93765258789062, :y2 469.5375213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 443.93751525878906, :x2 239.93765258789062, :y2 469.5375213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 196.1374969482422, :y1 447.93751525878906, :x2 199.78750610351562, :y2 466.15000915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 445}, :content {:text "Text 类型"}, :properties {:color "green"}} {:id #uuid "63d0d315-20bf-41a8-ac82-1e3989181935", :page 445, :position {:bounding {:x1 109.20000457763672, :y1 638.7125091552734, :x2 679.6654663085938, :y2 659.5125274658203, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 638.7125091552734, :x2 679.6654663085938, :y2 659.5125274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 143.3625030517578, :y1 641.9125213623047, :x2 600.0307006835938, :y2 656.9000091552734, :width 864.9999999999999, :height 1080.0639853747714}), :page 445}, :content {:text "Text 节点中包含的文本可以通过 nodeValue 属性访问，也可以通过 data 属性访问，"}, :properties {:color "yellow"}} {:id #uuid "63d0d327-feeb-4ca7-a099-1eb24173a329", :page 445, :position {:bounding {:x1 110.8125, :y1 908.0500183105469, :x2 537.24560546875, :y2 928.8500061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 908.0500183105469, :x2 537.24560546875, :y2 928.8500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 445}, :content {:text "默认情况下，包含文本内容的每个元素最多只能有一个文本节点"}, :properties {:color "yellow"}} {:id #uuid "63d0d3b9-34b7-48c1-b7c5-31ef4af30b78", :page 446, :position {:bounding {:x1 140.6125030517578, :y1 505.9750213623047, :x2 794.0236206054688, :y2 527.1125183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 505.9750213623047, :x2 343.375244140625, :y2 525.9750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 354.0874938964844, :y1 506.31251525878906, :x2 794.0236206054688, :y2 527.1125183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 354.0874938964844, :y1 509.51251220703125, :x2 649.6924438476562, :y2 524.5000305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 446}, :content {:text "document.createTextNode()可以用来创建新文本节点，它接收一个参数，即要插入节点的文本。"}, :properties {:color "yellow"}} {:id #uuid "63d0d3c3-55d0-421b-a9e8-ce36bf6f81b8", :page 446, :position {:bounding {:x1 158.91250610351562, :y1 485.38751220703125, :x2 244.5333709716797, :y2 506.18751525878906, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.91250610351562, :y1 485.38751220703125, :x2 244.5333709716797, :y2 506.18751525878906, :width 864.9999999999999, :height 1080.0639853747714}), :page 446}, :content {:text "创建文本节点"}, :properties {:color "green"}} {:id #uuid "63d0d3ce-9259-450b-9b6f-756a74fd664f", :page 447, :position {:bounding {:x1 127.51250457763672, :y1 148.375, :x2 227.3750457763672, :y2 169.17501831054688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.51250457763672, :y1 148.375, :x2 227.3750457763672, :y2 169.17501831054688, :width 864.9999999999999, :height 1080.0639853747714}), :page 447}, :content {:text "规范化文本节点"}, :properties {:color "green"}} {:id #uuid "63d0d3f0-8483-4d5d-9ff5-8fb9a05118b1", :page 447, :position {:bounding {:x1 0, :y1 76.80001831054688, :x2 754.7730712890625, :y2 257.375, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 76.80001831054688, :x2 0, :y2 99.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 648.429443359375, :y1 214.17501831054688, :x2 754.7730712890625, :y2 234.97503662109375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 392.51251220703125, :y1 236.5625, :x2 712.2974243164062, :y2 257.36248779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 236.57501220703125, :x2 381.7119140625, :y2 257.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 239.7750244140625, :x2 381.7119140625, :y2 254.76251220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 447}, :content {:text "在包含两个或多个相邻文本节点的父节点上调用 normalize()时，所有同胞文本节点会被合并为一个文本节点"}, :properties {:color "yellow"}} {:id #uuid "63d0d42a-e21b-491b-a8fa-e55504624ab9", :page 447, :position {:bounding {:x1 127.5, :y1 604.1875152587891, :x2 213.12088012695312, :y2 624.9875183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.5, :y1 604.1875152587891, :x2 213.12088012695312, :y2 624.9875183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 447}, :content {:text "拆分文本节点"}, :properties {:color "green"}} {:id #uuid "63d0d43c-e7a0-4a48-8f8b-6b9ca0169fd5", :page 447, :position {:bounding {:x1 0, :y1 364.80001163482666, :x2 755.579833984375, :y2 668.4000244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 364.80001163482666, :x2 0, :y2 387.20001316070557, :width 864.9999999999999, :height 1080.0639853747714} {:x1 470.6000061035156, :y1 624.8625183105469, :x2 542.2234497070312, :y2 644.8625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 564.5375366210938, :y1 625.2000122070312, :x2 755.579833984375, :y2 646.0000305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 564.5375366210938, :y1 628.4000091552734, :x2 755.579833984375, :y2 643.3875122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 647.6000061035156, :x2 485.3506317138672, :y2 668.4000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 650.8000183105469, :x2 225.24575805664062, :y2 665.7875061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 447}, :content {:text "splitText()。这个方法可以在指定的偏移位置拆分 nodeValue，将一个文本节点拆分成两个文本节点"}, :properties {:color "yellow"}} {:id #uuid "63d0d45c-61a4-4d38-9905-db4f93bc6de3", :page 448, :position {:bounding {:x1 183.875, :y1 120.11248779296875, :x2 304.0751647949219, :y2 146.51248168945312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 120.11248779296875, :x2 304.0751647949219, :y2 146.51248168945312, :width 864.9999999999999, :height 1080.0639853747714}), :page 448}, :content {:text "Comment 类型"}, :properties {:color "green"}} {:id #uuid "63d0d471-2da5-4773-b618-f54b034e8e46", :page 448, :position {:bounding {:x1 140.6125030517578, :y1 292.48751068115234, :x2 580.6039428710938, :y2 313.2874984741211, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 292.48751068115234, :x2 580.6039428710938, :y2 313.2874984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 206.4499969482422, :y1 296.0374984741211, :x2 573.1000366210938, :y2 311.02501678466797, :width 864.9999999999999, :height 1080.0639853747714}), :page 448}, :content {:text "Comment 类型与 Text 类型继承同一个基类（CharacterData），"}, :properties {:color "yellow"}} {:id #uuid "63d0d47e-47c6-42a9-89a8-fe940025fc82", :page 448, :position {:bounding {:x1 142.22500610351562, :y1 360.0999984741211, :x2 431.55426025390625, :y2 380.90001678466797, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 360.0999984741211, :x2 431.55426025390625, :y2 380.90001678466797, :width 864.9999999999999, :height 1080.0639853747714}), :page 448}, :content {:text "注释节点可以作为父节点的子节点来访问。"}, :properties {:color "yellow"}} {:id #uuid "63d0d495-3bc8-4aa0-90e5-57769d5faed3", :page 448, :position {:bounding {:x1 183.875, :y1 597.9250030517578, :x2 358.6251525878906, :y2 623.5250091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 597.9250030517578, :x2 358.6251525878906, :y2 623.5250091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 314.8374938964844, :y1 601.9250030517578, :x2 318.4875183105469, :y2 620.1374969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 448}, :content {:text "CDATASection 类型"}, :properties {:color "green"}} {:id #uuid "63d0d63f-c47f-434e-a045-7323cb6d4b30", :page 448, :position {:bounding {:x1 140.6125030517578, :y1 635.8625030517578, :x2 497.0943908691406, :y2 656.6624908447266, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 635.8625030517578, :x2 497.0943908691406, :y2 656.6624908447266, :width 864.9999999999999, :height 1080.0639853747714} {:x1 243.0749969482422, :y1 639.0625152587891, :x2 464.12237548828125, :y2 654.0500030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 448}, :content {:text "CDATASection 类型表示 XML 中特有的 CDATA 区块"}, :properties {:color "yellow"}} {:id #uuid "63d0d648-9e43-4eae-aea0-803de757ee87", :page 448, :position {:bounding {:x1 0, :y1 572.8000030517578, :x2 785.3175659179688, :y2 679.4000091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 572.8000030517578, :x2 0, :y2 595.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 511.78753662109375, :y1 635.8625030517578, :x2 785.3175659179688, :y2 656.6624908447266, :width 864.9999999999999, :height 1080.0639853747714} {:x1 511.78753662109375, :y1 639.0625152587891, :x2 785.3175659179688, :y2 653.3000030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 658.6000213623047, :x2 262.5993957519531, :y2 679.4000091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 284.9250183105469, :y1 658.6000213623047, :x2 467.59259033203125, :y2 679.4000091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 661.8000030517578, :x2 262.5993957519531, :y2 676.7875213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 448}, :content {:text "CDATASection 类型继承 Text 类型，因此拥有包括 splitText()在内的所有字符串操作方法"}, :properties {:color "yellow"}} {:id #uuid "63d0d692-5fbe-4eef-8043-55eb50a7b371", :page 449, :position {:bounding {:x1 152.46250915527344, :y1 120.11251831054688, :x2 327.22515869140625, :y2 146.51251220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 120.11251831054688, :x2 327.22515869140625, :y2 146.51251220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "DocumentType 类型"}, :properties {:color "green"}} {:id #uuid "63d0d6a1-1ea8-44f1-ae53-1afa77d5519c", :page 449, :position {:bounding {:x1 109.20000457763672, :y1 157.95001220703125, :x2 546.7409057617188, :y2 178.75, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 157.95001220703125, :x2 546.7409057617188, :y2 178.75, :width 864.9999999999999, :height 1080.0639853747714} {:x1 215.9375, :y1 161.48751831054688, :x2 500.2985534667969, :y2 176.47500610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "DocumentType 类型的节点包含文档的文档类型（doctype）信息"}, :properties {:color "yellow"}} {:id #uuid "63d0d6bb-2958-400a-83ac-30ba521da37f", :page 449, :position {:bounding {:x1 205.3125, :y1 314.887508392334, :x2 594.928466796875, :y2 335.68752670288086, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 205.3125, :y1 314.887508392334, :x2 594.928466796875, :y2 335.68752670288086, :width 864.9999999999999, :height 1080.0639853747714} {:x1 316.8999938964844, :y1 318.42499923706055, :x2 541.7750244140625, :y2 333.41250228881836, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "DocumentType 对象保存在 document.doctype 属性中"}, :properties {:color "yellow"}} {:id #uuid "63d0d6e6-809d-4ead-8215-37986fe12bed", :page 449, :position {:bounding {:x1 584.2750244140625, :y1 337.27502059936523, :x2 744.5722045898438, :y2 358.075008392334, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 584.2750244140625, :y1 337.27502059936523, :x2 744.5722045898438, :y2 358.075008392334, :width 864.9999999999999, :height 1080.0639853747714} {:x1 584.2750244140625, :y1 340.47500228881836, :x2 625.5381469726562, :y2 354.71252059936523, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "name 是文档类型的名称"}, :properties {:color "yellow"}} {:id #uuid "63d0d6fb-a1ec-4e4e-a835-199293c816b2", :page 449, :position {:bounding {:x1 80.73750305175781, :y1 359.762508392334, :x2 458.0490417480469, :y2 380.56252670288086, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 80.73750305175781, :y1 359.762508392334, :x2 135.05357360839844, :y2 379.762508392334, :width 864.9999999999999, :height 1080.0639853747714} {:x1 149.0500030517578, :y1 359.762508392334, :x2 458.0490417480469, :y2 380.56252670288086, :width 864.9999999999999, :height 1080.0639853747714} {:x1 149.0500030517578, :y1 362.96252059936523, :x2 352.5249938964844, :y2 377.950008392334, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "entities 是这个文档类型描述的实体的 NamedNodeM"}, :properties {:color "yellow"}} {:id #uuid "63d0d70e-6a84-4a17-8b28-242188936fea", :page 449, :position {:bounding {:x1 0, :y1 172.80000686645508, :x2 755.5761108398438, :y2 403.3000144958496, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 172.80000686645508, :x2 0, :y2 195.20000839233398, :width 864.9999999999999, :height 1080.0639853747714} {:x1 490.625, :y1 359.762508392334, :x2 755.5761108398438, :y2 379.762508392334, :width 864.9999999999999, :height 1080.0639853747714} {:x1 567.5750122070312, :y1 362.96252059936523, :x2 755.5761108398438, :y2 377.200008392334, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 382.49999618530273, :x2 239.9862823486328, :y2 403.3000144958496, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 385.700008392334, :x2 239.9862823486328, :y2 400.68749618530273, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "notations 是这个文档类型描述的表示法的 NamedNodeMap"}, :properties {:color "yellow"}} {:id #uuid "63d0d730-6304-47cb-b86d-15ac5e7d15db", :page 449, :position {:bounding {:x1 152.46250915527344, :y1 573.7375144958496, :x2 370.8751525878906, :y2 600.137508392334, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 573.7375144958496, :x2 370.8751525878906, :y2 600.137508392334, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "DocumentFragment 类型"}, :properties {:color "green"}} {:id #uuid "63d0d751-6984-48b1-ba00-325d7e2c3672", :page 449, :position {:bounding {:x1 110.8125, :y1 813.7250213623047, :x2 750.8331298828125, :y2 834.5250091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 813.7250213623047, :x2 750.8331298828125, :y2 834.5250091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 330.5375061035156, :y1 816.9250335693359, :x2 376.1412658691406, :y2 831.9125213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "不能直接把文档片段添加到文档。相反，文档片段的作用是充当其他要被添加到文档的节点的仓库"}, :properties {:color "yellow"}} {:id #uuid "63d0d77a-eebf-4651-9f3e-f2e90f5055ba", :page 449, :position {:bounding {:x1 0, :y1 556.7999954223633, :x2 753.8961791992188, :y2 974.0125122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 556.7999954223633, :x2 0, :y2 579.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 693, :y1 930.8125, :x2 753.8961791992188, :y2 951.6124877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 384.1798400878906, :y1 930.8250122070312, :x2 673.0853881835938, :y2 951.625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 443.6625061035156, :y1 933.6749877929688, :x2 673.0853881835938, :y2 948.6624755859375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 693, :y1 934.0125122070312, :x2 753.8961791992188, :y2 949, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 953.2124938964844, :x2 247.37161254882812, :y2 974.0125122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "可以通过 appendChild()或 insertBefore()方法将文档片段的内容添加到文档"}, :properties {:color "yellow"}} {:id #uuid "63d0d7d8-c8f1-487b-aaf3-ef178d23c28d", :page 450, :position {:bounding {:x1 0, :y1 166.92498779296875, :x2 793.6320190429688, :y2 291.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 458.5660095214844, :y1 166.92498779296875, :x2 793.6320190429688, :y2 187.7249755859375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.125, :y1 189.32501220703125, :x2 356.9775085449219, :y2 210.125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.125, :y1 192.5250244140625, :x2 323.55047607421875, :y2 207.51251220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 268.79998779296875, :x2 0, :y2 291.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 450}, :content {:text "下面的代码示例使用文档片段创建了所有列表项，然后一次性将它们添加到了<ul>元素"}, :properties {:color "yellow"}} {:id #uuid "63d0d7ec-e85c-411d-8e12-bfa45296de31", :page 449, :position {:bounding {:x1 248.2552947998047, :y1 975.6125259399414, :x2 507.14646911621094, :y2 996.4125213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 248.2552947998047, :y1 975.6125259399414, :x2 507.14646911621094, :y2 996.4125213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 449}, :content {:text "文档片段本身永远不会被添加到文档树"}, :properties {:color "yellow"}} {:id #uuid "63d0d7f6-f28d-4e96-b7ee-0a5ba9e9c92c", :page 450, :position {:bounding {:x1 183.875, :y1 477.42503356933594, :x2 271.337646484375, :y2 503.02500915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 477.42503356933594, :x2 217.3563232421875, :y2 503.02500915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 227.53750610351562, :y1 477.42503356933594, :x2 271.337646484375, :y2 503.02500915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 227.53750610351562, :y1 481.42503356933594, :x2 231.1875, :y2 499.6374969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 450}, :content {:text "Attr 类型"}, :properties {:color "green"}} {:id #uuid "63d0d869-83a3-4da8-a82d-a7576b3bc85a", :page 450, :position {:bounding {:x1 142.22500610351562, :y1 515.7125091552734, :x2 407.2779846191406, :y2 536.5125274658203, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 515.7125091552734, :x2 407.2779846191406, :y2 536.5125274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 221.0625, :y1 517.9125213623047, :x2 344.9875183105469, :y2 532.9000091552734, :width 864.9999999999999, :height 1080.0639853747714}), :page 450}, :content {:text "元素数据在 DOM 中通过 Attr 类型表示"}, :properties {:color "yellow"}} {:id #uuid "63d0d895-7bf0-420d-9bac-ced25bf4e760", :page 450, :position {:bounding {:x1 142.21250915527344, :y1 695.0375213623047, :x2 549.6924438476562, :y2 715.8375244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.21250915527344, :y1 695.0375213623047, :x2 549.6924438476562, :y2 715.8375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 388.4250183105469, :y1 697.2375183105469, :x2 432.32061767578125, :y2 712.2250366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 450}, :content {:text "属性节点尽管是节点，却不被认为是 DOM 文档树的一部分。"}, :properties {:color "yellow"}} {:id #uuid "63d0d8aa-3583-4e74-a187-508081874806", :page 450, :position {:bounding {:x1 142.21250915527344, :y1 807.1875305175781, :x2 712.0189819335938, :y2 827.9875183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.21250915527344, :y1 807.1875305175781, :x2 404.6792297363281, :y2 827.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 428.1000061035156, :y1 807.1875305175781, :x2 712.0189819335938, :y2 827.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 205.97500610351562, :y1 810.0375366210938, :x2 404.6792297363281, :y2 824.2750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 428.1000061035156, :y1 810.3875122070312, :x2 556.3806762695312, :y2 825.3750305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 450}, :content {:text "可以使用 document.createAttribute()方法创建新的 Attr 节点，参数为属性名。"}, :properties {:color "yellow"}} {:id #uuid "63d0d909-8fa3-4b30-a624-bc7633176d2d", :page 451, :position {:bounding {:x1 124.9308090209961, :y1 309.26250076293945, :x2 247.26121520996094, :y2 340.4625129699707, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 124.9308090209961, :y1 309.26250076293945, :x2 124.933837890625, :y2 340.4625129699707, :width 864.9999999999999, :height 1080.0639853747714} {:x1 146, :y1 309.26250076293945, :x2 186.4921417236328, :y2 340.4625129699707, :width 864.9999999999999, :height 1080.0639853747714} {:x1 197.52500915527344, :y1 309.26250076293945, :x2 247.26121520996094, :y2 340.4625129699707, :width 864.9999999999999, :height 1080.0639853747714} {:x1 146, :y1 314.0625190734863, :x2 186.4921417236328, :y2 336.1750068664551, :width 864.9999999999999, :height 1080.0639853747714} {:x1 197.52500915527344, :y1 314.0625190734863, :x2 201.9499969482422, :y2 336.1750068664551, :width 864.9999999999999, :height 1080.0639853747714}), :page 451}, :content {:text "DOM 编程"}, :properties {:color "green"}} {:id #uuid "63d0d91b-4144-418b-9f90-f3cb1c81779b", :page 451, :position {:bounding {:x1 152.46250915527344, :y1 433.125, :x2 229.2877960205078, :y2 459.5249938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 433.125, :x2 229.2877960205078, :y2 459.5249938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 451}, :content {:text "动态脚本"}, :properties {:color "green"}} {:id #uuid "63d0d94d-5232-475d-9266-cbf248a28edf", :page 451, :position {:bounding {:x1 0, :y1 332.7999954223633, :x2 754.6878051757812, :y2 734.7250061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 332.7999954223633, :x2 0, :y2 355.20000076293945, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 348.7999954223633, :x2 0, :y2 371.20000076293945, :width 864.9999999999999, :height 1080.0639853747714} {:x1 520.16943359375, :y1 669.1374969482422, :x2 742.8103637695312, :y2 689.9375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 684.75, :y1 671.9875030517578, :x2 742.8103637695312, :y2 686.2250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 691.5249938964844, :x2 754.6878051757812, :y2 712.3250122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 694.7250061035156, :x2 754.6878051757812, :y2 709.7124938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 713.9250183105469, :x2 187.35057067871094, :y2 734.7250061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 451}, :content {:text "注意，在上面最后一行把<script>元素添加到页面之前，是不会开始下载外部文件的。当然也可以把它添加到<head>元素，同样可以实现动态脚本加载"}, :properties {:color "yellow"}} {:id #uuid "63d0d95b-55ca-4bb5-ac97-91c0f9443d61", :page 451, :position {:bounding {:x1 199.7069854736328, :y1 516.9499969482422, :x2 725.3629760742188, :y2 537.75, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 199.7069854736328, :y1 516.9499969482422, :x2 725.3629760742188, :y2 537.75, :width 864.9999999999999, :height 1080.0639853747714} {:x1 301.4250183105469, :y1 519.8000030517578, :x2 357.5407409667969, :y2 534.0374908447266, :width 864.9999999999999, :height 1080.0639853747714}), :page 451}, :content {:text "有两种方式通过<script>动态为网页添加脚本：引入外部文件和直接插入源代码"}, :properties {:color "yellow"}} {:id #uuid "63d0d9ca-77fa-405a-a1e2-570ac5641af5", :page 452, :position {:bounding {:x1 0, :y1 261.8125, :x2 784.6749877929688, :y2 371.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 687.5183715820312, :y1 261.8125, :x2 759.1353759765625, :y2 282.61248779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 769.4750366210938, :y1 261.8125, :x2 784.6749877929688, :y2 282.61248779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 701.0750122070312, :y1 264.66253662109375, :x2 759.1353759765625, :y2 278.9000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 769.4750366210938, :y1 265.01251220703125, :x2 784.6749877929688, :y2 280, :width 864.9999999999999, :height 1080.0639853747714} {:x1 430.9250183105469, :y1 283.29998779296875, :x2 479.65966796875, :y2 304.10003662109375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 284.29998779296875, :x2 419.8394470214844, :y2 305.10003662109375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 430.9250183105469, :y1 286.5, :x2 433.9250183105469, :y2 301.48748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 287.5, :x2 419.8394470214844, :y2 302.48748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 348.79998779296875, :x2 0, :y2 371.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 452}, :content {:text "但<script>元素上有一个 text 属性，可以用来添加 JavaScript 代码，"}, :properties {:color "yellow"}} {:id #uuid "63d0da30-7fbc-4eb6-bda2-fc6c66e93d6b", :page 452, :position {:bounding {:x1 142.22500610351562, :y1 843.7125549316406, :x2 611.6884155273438, :y2 864.5125427246094, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 843.7125549316406, :x2 611.6884155273438, :y2 864.5125427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 452}, :content {:text "以这种方式加载的代码会在全局作用域中执行，并在调用返回后立即生"}, :properties {:color "yellow"}} {:id #uuid "63d0da4b-1135-4efe-b608-d6a9a3285df3", :page 452, :position {:bounding {:x1 187.81626892089844, :y1 888.5874938964844, :x2 567.7907104492188, :y2 909.3875122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 187.81626892089844, :y1 888.5874938964844, :x2 435.5853576660156, :y2 909.3875122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 445.9375, :y1 888.5874938964844, :x2 567.7907104492188, :y2 909.3875122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 220.97500610351562, :y1 891.4500122070312, :x2 435.5853576660156, :y2 905.6875, :width 864.9999999999999, :height 1080.0639853747714}), :page 452}, :content {:text "通过 innerHTML 属性创建的<script>元素永远不会执行"}, :properties {:color "yellow"}} {:id #uuid "63d0da52-c3c2-4777-9945-05e747adc0a8", :page 453, :position {:bounding {:x1 152.46250915527344, :y1 119.45001220703125, :x2 229.2877960205078, :y2 145.85000610351562, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 119.45001220703125, :x2 229.2877960205078, :y2 145.85000610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 453}, :content {:text "动态样式"}, :properties {:color "green"}} {:id #uuid "63d0da8f-5972-467d-952c-35738a89ccb0", :page 453, :position {:bounding {:x1 0, :y1 28.800003051757812, :x2 744.6781616210938, :y2 201.57501220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 28.800003051757812, :x2 0, :y2 51.19999694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 157.28750610351562, :x2 744.6781616210938, :y2 178.08749389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 137.46250915527344, :y1 160.48751831054688, :x2 744.6781616210938, :y2 175.47500610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 180.77499389648438, :x2 232.20278930664062, :y2 201.57501220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 453}, :content {:text "CSS 样式在 HTML 页面中可以通过两个元素加载。<link>元素用于包含 CSS 外部文件，而<style>元素用于添加嵌入样式"}, :properties {:color "yellow"}} {:id #uuid "63d0db27-44c8-435d-bebe-abf80df2df3e", :page 453, :position {:bounding {:x1 0, :y1 668.8000030517578, :x2 754.428955078125, :y2 980.4624938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 668.8000030517578, :x2 0, :y2 691.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 641.1124877929688, :y1 937.1749877929688, :x2 754.428955078125, :y2 957.9750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 641.1124877929688, :y1 940.375, :x2 754.428955078125, :y2 955.3624877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 959.6625061035156, :x2 507.3954162597656, :y2 980.4624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 962.8624877929688, :x2 473.2509765625, :y2 977.8500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 453}, :content {:text " IE，解决方案是访问元素的 styleSheet 属性，这个属性又有一个 cssText 属性"}, :properties {:color "yellow"}} {:id #uuid "63d0db43-e9ad-432e-a46d-da1367562c9b", :page 454, :position {:bounding {:x1 183.875, :y1 676.875, :x2 260.7002868652344, :y2 703.2749938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 676.875, :x2 260.7002868652344, :y2 703.2749938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 454}, :content {:text "操作表格"}, :properties {:color "green"}} {:id #uuid "63d0db5c-e269-4913-9311-0a6dc3e28512", :page 455, :position {:bounding {:x1 0, :y1 444.8000030517578, :x2 748.1556396484375, :y2 638.4125061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 444.8000030517578, :x2 0, :y2 467.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 339.2303161621094, :y1 595.2250061035156, :x2 748.1556396484375, :y2 616.0250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 471.375, :y1 597.4250183105469, :x2 748.1556396484375, :y2 612.4125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 617.6125183105469, :x2 263.4892883300781, :y2 638.4125061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 455}, :content {:text "为了方便创建表格，HTML DOM 给<table>、<tbody>和<tr>元素添加了一些属性和方法"}, :properties {:color "yellow"}} {:id #uuid "63d0dbb6-9ca4-440d-9710-b833e02b44fb", :page 456, :position {:bounding {:x1 183.875, :y1 902.9750061035156, :x2 307.5937194824219, :y2 929.3750305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 902.9750061035156, :x2 307.5937194824219, :y2 929.3750305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 221.8249969482422, :y1 906.9750061035156, :x2 225.625, :y2 925.9500122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 456}, :content {:text "使用 NodeList"}, :properties {:color "green"}} {:id #uuid "63d0dbc8-b87b-40e0-9d45-1ce43386e94f", :page 456, :position {:bounding {:x1 0, :y1 860.8000183105469, :x2 786.0223388671875, :y2 984.112548828125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 860.8000183105469, :x2 0, :y2 883.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 941.9125061035156, :x2 786.0223388671875, :y2 962.7125244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 176, :y1 944.7750244140625, :x2 786.0223388671875, :y2 959.0125122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 963.3125, :x2 279.3734359741211, :y2 984.112548828125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 966.5125122070312, :x2 119.75728607177734, :y2 981.5, :width 864.9999999999999, :height 1080.0639853747714}), :page 456}, :content {:text "理解 NodeList 对象和相关的 NamedNodeMap、HTMLCollection，是理解 DOM 编程的关键。这3 个集合类型都是“实时的"}, :properties {:color "yellow"}} {:id #uuid "63d0dc09-000f-42c4-87e8-2419880380e3", :page 457, :position {:bounding {:x1 0, :y1 316.800012588501, :x2 759.6232299804688, :y2 560.7124881744385, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 316.800012588501, :x2 0, :y2 339.20000648498535, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 517.5125064849854, :x2 759.6232299804688, :y2 538.3125247955322, :width 864.9999999999999, :height 1080.0639853747714} {:x1 219.7375030517578, :y1 520.3749942779541, :x2 759.6232299804688, :y2 534.612512588501, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 539.9125003814697, :x2 187.34271240234375, :y2 560.7124881744385, :width 864.9999999999999, :height 1080.0639853747714}), :page 457}, :content {:text "任何时候要迭代 NodeList，最好再初始化一个变量保存当时查询时的长度，然后用循环变量与这个变量进行比较"}, :properties {:color "yellow"}} {:id #uuid "63d0dc32-25e5-4c52-9271-81bb71e1eb74", :page 457, :position {:bounding {:x1 146.0124969482422, :y1 909.4250183105469, :x2 402.1361999511719, :y2 939.8250427246094, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 146.0124969482422, :y1 909.4250183105469, :x2 339.6466979980469, :y2 939.8250427246094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 350.8625183105469, :y1 909.4250183105469, :x2 402.1361999511719, :y2 939.8250427246094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 350.8625183105469, :y1 914.2250061035156, :x2 355.13751220703125, :y2 935.5750427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 457}, :content {:text "MutationObserver 接口"}, :properties {:color "green"}} {:id #uuid "63d0dc41-fc21-462a-8bab-c48e49e6a954", :page 457, :position {:bounding {:x1 306.6499938964844, :y1 951.7250061035156, :x2 728.4613037109375, :y2 972.5249938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 306.6499938964844, :y1 951.7250061035156, :x2 728.4613037109375, :y2 972.5249938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 443.2749938964844, :y1 954.9250183105469, :x2 582.0493774414062, :y2 969.9125366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 457}, :content {:text "MutationObserver 接口，可以在 DOM 被修改时异步执行回调"}, :properties {:color "yellow"}} {:id #uuid "63d0dc4e-3de7-4187-be7f-684f7ede7ed2", :page 458, :position {:bounding {:x1 183.875, :y1 218.31251525878906, :x2 260.7002868652344, :y2 244.71250915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 218.31251525878906, :x2 260.7002868652344, :y2 244.71250915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 458}, :content {:text "基本用法"}, :properties {:color "green"}} {:id #uuid "63d0dc92-017b-4477-83bc-680f5a523045", :page 458, :position {:bounding {:x1 158.9250030517578, :y1 312.6124954223633, :x2 264.2583312988281, :y2 332.6124954223633, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 312.6124954223633, :x2 264.2583312988281, :y2 332.6124954223633, :width 864.9999999999999, :height 1080.0639853747714}), :page 458}, :content {:text "observe()方法"}, :properties {:color "green"}} {:id #uuid "63d0dca4-9309-45b5-8182-d547fae854a9", :page 458, :position {:bounding {:x1 0, :y1 332.7999954223633, :x2 784.7750244140625, :y2 376.1624984741211, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 332.7999954223633, :x2 0, :y2 355.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 573.8466796875, :y1 332.87500762939453, :x2 784.7750244140625, :y2 353.6749954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 637.4000244140625, :y1 335.7374954223633, :x2 784.7750244140625, :y2 350.7249984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 355.3624954223633, :x2 341.607421875, :y2 376.1624984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 358.56250762939453, :x2 303.0501708984375, :y2 373.5499954223633, :width 864.9999999999999, :height 1080.0639853747714}), :page 458}, :content {:text "要把这个 observer 与 DOM 关联起来，需要使用 observe()方法"}, :properties {:color "yellow"}} {:id #uuid "63d0dcbb-e728-4dba-a41b-4c76c62b234d", :page 458, :position {:bounding {:x1 0, :y1 348.7999954223633, :x2 785.5040283203125, :y2 398.56249237060547, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 348.7999954223633, :x2 0, :y2 371.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 417.1259765625, :y1 355.3624954223633, :x2 785.5040283203125, :y2 376.1624984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 672.7000122070312, :y1 357.56250762939453, :x2 785.5040283203125, :y2 372.5499954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 316.7124938964844, :y1 377.4124984741211, :x2 351.3775329589844, :y2 397.4124984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 377.7625045776367, :x2 301.4165954589844, :y2 398.56249237060547, :width 864.9999999999999, :height 1080.0639853747714} {:x1 316.7124938964844, :y1 380.61251068115234, :x2 316.9056396484375, :y2 394.8499984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 380.96251678466797, :x2 301.4165954589844, :y2 395.9500045776367, :width 864.9999999999999, :height 1080.0639853747714}), :page 458}, :content {:text "接收两个必需的参数：要观察其变化的 DOM 节点，以及一个 MutationObserverInit 对象"}, :properties {:color "yellow"}} {:id #uuid "63d0dd19-e0bc-446d-8400-b420b3eb787e", :page 458, :position {:bounding {:x1 0, :y1 460.8000030517578, :x2 789.9506225585938, :y2 568.1125030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 460.8000030517578, :x2 0, :y2 483.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 339.2875061035156, :y1 524.5749969482422, :x2 789.9506225585938, :y2 545.3750152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 390.7124938964844, :y1 528.1125030517578, :x2 789.9506225585938, :y2 543.0999908447266, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 547.3125152587891, :x2 142.6011505126953, :y2 568.1125030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 458}, :content {:text "<body>元素后代的修改或其他非属性修改都不会触发回调进入任务队列"}, :properties {:color "yellow"}} {:id #uuid "63d0dd3f-9127-4503-8705-40c3c72ffbb6", :page 458, :position {:bounding {:x1 143.5500030517578, :y1 601.3874969482422, :x2 542.3502197265625, :y2 618.9875030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 143.5500030517578, :y1 601.3874969482422, :x2 340.5875549316406, :y2 618.9875030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 378.8374938964844, :y1 601.3874969482422, :x2 460.7899475097656, :y2 618.9875030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 485.1000061035156, :y1 601.3874969482422, :x2 542.3502197265625, :y2 618.9875030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 458}, :content {:text "observer.observe(document.body, { attributes: true });"}, :properties {:color "yellow"}} {:id #uuid "63d0dd63-a1e0-4ea6-8961-5be74b0494ae", :page 458, :position {:bounding {:x1 154.7375030517578, :y1 745.5124969482422, :x2 323.6899108886719, :y2 766.3124847412109, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 154.7375030517578, :y1 745.5124969482422, :x2 323.6899108886719, :y2 766.3124847412109, :width 864.9999999999999, :height 1080.0639853747714} {:x1 158.9250030517578, :y1 747.7125091552734, :x2 206.90000915527344, :y2 762.6999969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 458}, :content {:text " 回调与 MutationRecord"}, :properties {:color "green"}} {:id #uuid "63d0dd80-9ff3-4dd7-a14e-259a9847e013", :page 458, :position {:bounding {:x1 142.22500610351562, :y1 765.5250091552734, :x2 496.47076416015625, :y2 786.3249969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 765.5250091552734, :x2 496.47076416015625, :y2 786.3249969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 296.1125183105469, :y1 768.3874969482422, :x2 418.6125183105469, :y2 782.6249847412109, :width 864.9999999999999, :height 1080.0639853747714}), :page 458}, :content {:text "每个回调都会收到一个 MutationRecord 实例的数组"}, :properties {:color "yellow"}} {:id #uuid "63d0dd87-1527-4f77-be0d-2f002c79cfb6", :page 458, :position {:bounding {:x1 0, :y1 620.8000030517578, :x2 786.7574462890625, :y2 808.7250213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 620.8000030517578, :x2 0, :y2 643.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 510.45001220703125, :y1 765.1875152587891, :x2 786.7574462890625, :y2 785.9875030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 510.45001220703125, :y1 768.3874969482422, :x2 786.7574462890625, :y2 782.6249847412109, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 787.9250335693359, :x2 441.22900390625, :y2 808.7250213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 791.1249847412109, :x2 294.7618713378906, :y2 806.1125335693359, :width 864.9999999999999, :height 1080.0639853747714}), :page 458}, :content {:text "MutationRecord 实例包含的信息包括发生了什么变化，以及 DOM 的哪一部分受到了影响"}, :properties {:color "yellow"}} {:id #uuid "63d0ddb1-5e22-400d-8424-698155b2d8cb", :page 459, :position {:bounding {:x1 0, :y1 460.8000030517578, :x2 765.4584350585938, :y2 658.2375030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 460.8000030517578, :x2 0, :y2 483.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 614.9500274658203, :x2 765.4584350585938, :y2 635.7500152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 249.72500610351562, :y1 617.8125152587891, :x2 765.4584350585938, :y2 632.8000030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 637.4375152587891, :x2 278.7185974121094, :y2 658.2375030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 459}, :content {:text "连续修改会生成多个 MutationRecord 实例，下次回调执行时就会收到包含所有这些实例的数组，顺序为变化事件发生的顺序："}, :properties {:color "yellow"}} {:id #uuid "63d0ddc0-3a8a-4403-8577-010e3c8c9cf1", :page 460, :position {:bounding {:x1 142.22500610351562, :y1 453.18750381469727, :x2 602.9895629882812, :y2 473.98752212524414, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 453.18750381469727, :x2 602.9895629882812, :y2 473.98752212524414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 416.4250183105469, :y1 456.0375099182129, :x2 555.9000244140625, :y2 470.27499771118164, :width 864.9999999999999, :height 1080.0639853747714}), :page 460}, :content {:text "传给回调函数的第二个参数是观察变化的 MutationObserver 的实例"}, :properties {:color "yellow"}} {:id #uuid "63d0de66-0c18-4272-ae28-1a93dcfa04f0", :page 460, :position {:bounding {:x1 158.9250030517578, :y1 628, :x2 289.8708190917969, :y2 648.7999877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 261.38751220703125, :y1 628, :x2 289.8708190917969, :y2 648.7999877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 158.9250030517578, :y1 628.6499938964844, :x2 248.83169555664062, :y2 648.6499938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 460}, :content {:text "disconnect()方法"}, :properties {:color "green"}} {:id #uuid "63d0e1af-1aaa-41f3-8f4d-ce6cb1555bfa", :page 460, :position {:bounding {:x1 235.33377075195312, :y1 671.4125061035156, :x2 602.8433227539062, :y2 692.2124938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 235.33377075195312, :y1 671.4125061035156, :x2 543.8941040039062, :y2 692.2124938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 556.6625366210938, :y1 671.4125061035156, :x2 602.8433227539062, :y2 692.2124938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 453.8999938964844, :y1 674.2625122070312, :x2 543.8941040039062, :y2 688.5, :width 864.9999999999999, :height 1080.0639853747714}), :page 460}, :content {:text "要提前终止执行回调，可以调用 disconnect()方法。"}, :properties {:color "yellow"}} {:id #uuid "63d0e21d-d1a4-48e6-a47d-f16ed890f881", :page 460, :position {:bounding {:x1 0, :y1 732.7999877929688, :x2 787.6998291015625, :y2 937.1000061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 732.7999877929688, :x2 0, :y2 755.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 893.8999938964844, :x2 787.6998291015625, :y2 914.6999816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 392.7875061035156, :y1 897.1000061035156, :x2 787.6998291015625, :y2 912.0874938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 915.9499816894531, :x2 202.044189453125, :y2 935.9499816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 214.6125030517578, :y1 916.2999877929688, :x2 229.8125, :y2 937.1000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 919.1499938964844, :x2 202.044189453125, :y2 933.3874816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 460}, :content {:text "要想让已经加入任务队列的回调执行，可以使用 setTimeout()让已经入列的回调执行完毕再调用 disconnect()："}, :properties {:color "yellow"}} {:id #uuid "63d0e31b-eb5b-408c-849f-f130557ddbe2", :page 461, :position {:bounding {:x1 127.51250457763672, :y1 269.43750762939453, :x2 292.5640563964844, :y2 290.2374954223633, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.51250457763672, :y1 269.43750762939453, :x2 292.5640563964844, :y2 290.2374954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 157.5, :y1 272.63748931884766, :x2 160.5, :y2 287.62500762939453, :width 864.9999999999999, :height 1080.0639853747714}), :page 461}, :content {:text "复用 MutationObserver"}, :properties {:color "green"}} {:id #uuid "63d0e40f-473e-4a41-8c08-f7287039a998", :page 461, :position {:bounding {:x1 0, :y1 124.80000305175781, :x2 756.1845092773438, :y2 333.66251373291016, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 124.80000305175781, :x2 0, :y2 147.20000457763672, :width 864.9999999999999, :height 1080.0639853747714} {:x1 725.9765014648438, :y1 290.4625015258789, :x2 756.1845092773438, :y2 311.2625198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 312.8624954223633, :x2 560.7520141601562, :y2 333.66251373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 316.06250762939453, :x2 300.4875183105469, :y2 331.0500259399414, :width 864.9999999999999, :height 1080.0639853747714}), :page 461}, :content {:text "。此时，MutationRecord 的 target 属性可以标识发生变化事件的目标节点"}, :properties {:color "yellow"}} {:id #uuid "63d0e417-a382-4ea3-a988-1678de716891", :page 461, :position {:bounding {:x1 110.8125, :y1 290.4500045776367, :x2 725.9765014648438, :y2 311.25000762939453, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 290.4500045776367, :x2 725.9765014648438, :y2 311.25000762939453, :width 864.9999999999999, :height 1080.0639853747714} {:x1 174.5749969482422, :y1 293.3250045776367, :x2 525.5431518554688, :y2 308.31250762939453, :width 864.9999999999999, :height 1080.0639853747714}), :page 461}, :content {:text "多次调用 observe()方法，可以复用一个 MutationObserver 对象观察多个不同的目标节点"}, :properties {:color "yellow"}} {:id #uuid "63d0e422-2c0d-43b3-8d7e-2e555ab41f8e", :page 461, :position {:bounding {:x1 109.20000457763672, :y1 632.8249893188477, :x2 605.1806793212891, :y2 653.9750137329102, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 632.8249893188477, :x2 199.106689453125, :y2 652.8249893188477, :width 864.9999999999999, :height 1080.0639853747714} {:x1 211.6750030517578, :y1 633.1750259399414, :x2 605.1806793212891, :y2 653.9750137329102, :width 864.9999999999999, :height 1080.0639853747714}), :page 461}, :content {:text "disconnect()方法是一个“一刀切”的方案，调用它会停止观察所有目标："}, :properties {:color "yellow"}} {:id #uuid "63d0e481-466c-440d-8c86-1dbaf8fc19b2", :page 462, :position {:bounding {:x1 158.9250030517578, :y1 119.72500610351562, :x2 323.9765625, :y2 140.52499389648438, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 119.72500610351562, :x2 323.9765625, :y2 140.52499389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 188.90000915527344, :y1 122.92498779296875, :x2 191.90000915527344, :y2 137.91250610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 462}, :content {:text "重用 MutationObserver"}, :properties {:color "green"}} {:id #uuid "63d0e48e-e982-4f77-94cc-1cebfefc9892", :page 462, :position {:bounding {:x1 183.875, :y1 612.0625133514404, :x2 503.5441589355469, :y2 637.6624889373779, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 612.0625133514404, :x2 379.4072570800781, :y2 637.6624889373779, :width 864.9999999999999, :height 1080.0639853747714} {:x1 402.13751220703125, :y1 612.0625133514404, :x2 503.5441589355469, :y2 637.6624889373779, :width 864.9999999999999, :height 1080.0639853747714} {:x1 402.13751220703125, :y1 616.0625133514404, :x2 405.7875061035156, :y2 634.2750377655029, :width 864.9999999999999, :height 1080.0639853747714}), :page 462}, :content {:text "MutationObserverInit 与观察范围"}, :properties {:color "green"}} {:id #uuid "63d0e49b-bc2d-4fbe-8670-1d6f2096e613", :page 462, :position {:bounding {:x1 140.6125030517578, :y1 650.0000152587891, :x2 562.4907836914062, :y2 670.0000152587891, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 650.0000152587891, :x2 296.1040954589844, :y2 670.0000152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 311.3999938964844, :y1 650.0000152587891, :x2 562.4907836914062, :y2 670.0000152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 311.3999938964844, :y1 653.2000274658203, :x2 311.73480224609375, :y2 667.4375152587891, :width 864.9999999999999, :height 1080.0639853747714}), :page 462}, :content {:text "MutationObserverInit 对象用于控制对目标节点的观察范围"}, :properties {:color "yellow"}} {:id #uuid "63d0e74a-d12b-4857-810d-c28c1faa04c6", :page 463, :position {:bounding {:x1 122.0904541015625, :y1 460.38751220703125, :x2 184.47915649414062, :y2 481.1875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 122.0904541015625, :y1 460.38751220703125, :x2 184.47915649414062, :y2 481.1875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 123.32500457763672, :y1 463.5874938964844, :x2 123.62384033203125, :y2 478.57501220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 463}, :content {:text " 观察属性"}, :properties {:color "green"}} {:id #uuid "63d0e7b7-3cc4-4aed-b458-03335d2c0d1a", :page 464, :position {:bounding {:x1 158.9250030517578, :y1 379.41249084472656, :x2 244.54588317871094, :y2 400.2124786376953, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 379.41249084472656, :x2 244.54588317871094, :y2 400.2124786376953, :width 864.9999999999999, :height 1080.0639853747714}), :page 464}, :content {:text "观察字符数据"}, :properties {:color "green"}} {:id #uuid "63d0e7c6-c30c-49cd-a225-cac783f3a021", :page 464, :position {:bounding {:x1 0, :y1 400.08750915527344, :x2 792.5912475585938, :y2 451.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 400.08750915527344, :x2 720.8739624023438, :y2 420.88751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 742.7250366210938, :y1 400.08750915527344, :x2 792.5912475585938, :y2 420.08750915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 277.2375183105469, :y1 403.2875061035156, :x2 720.8739624023438, :y2 418.2749938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 742.7250366210938, :y1 403.2875061035156, :x2 792.5912475585938, :y2 417.52500915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 422.82501220703125, :x2 302.34671783447266, :y2 443.62501525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 428.8000030517578, :x2 0, :y2 451.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 464}, :content {:text "MutationObserver 可以观察文本节点（如 Text、Comment 或 ProcessingInstruction 节点）中字符的添加、删除和修改"}, :properties {:color "yellow"}} {:id #uuid "63d0e833-3b62-40b2-a0e0-f2b9c93f2791", :page 464, :position {:bounding {:x1 0, :y1 422.4750061035156, :x2 785.3463745117188, :y2 467.20001220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 713.125, :y1 422.4750061035156, :x2 785.3463745117188, :y2 442.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 492.5434265136719, :y1 422.82501220703125, :x2 697.8291015625, :y2 443.62501525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 542.3375244140625, :y1 425.6750030517578, :x2 697.8291015625, :y2 439.9125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 713.125, :y1 425.6750030517578, :x2 785.3463745117188, :y2 439.9125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 444.8000030517578, :x2 0, :y2 467.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 444.87501525878906, :x2 355.6414489746094, :y2 465.6750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 448.07501220703125, :x2 336.23883056640625, :y2 463.06251525878906, :width 864.9999999999999, :height 1080.0639853747714}), :page 464}, :content {:text "需要在 MutationObserverInit 对象中将 characterData 属性设置为 true，"}, :properties {:color "yellow"}} {:id #uuid "63d0e841-4086-480e-ad28-67ed8125697d", :page 464, :position {:bounding {:x1 151.6125030517578, :y1 787.5874938964844, :x2 792.2750244140625, :y2 808.7250061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 659.7999877929688, :y1 787.5874938964844, :x2 792.2750244140625, :y2 808.3874816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 151.6125030517578, :y1 787.9250183105469, :x2 647.7843627929688, :y2 808.7250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 659.7999877929688, :y1 790.7875061035156, :x2 772.8763427734375, :y2 805.0249938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 431.51251220703125, :y1 791.1250305175781, :x2 647.7843627929688, :y2 806.1125183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 464}, :content {:text "如果想在变化记录中保存原来的字符数据，可以将 characterDataOldValue 属性设置为 true："}, :properties {:color "yellow"}} {:id #uuid "63d0eaad-45b2-4b14-a896-690d566260f0", :page 465, :position {:bounding {:x1 127.51250457763672, :y1 194.38751220703125, :x2 198.80625915527344, :y2 215.1875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.51250457763672, :y1 194.38751220703125, :x2 198.80625915527344, :y2 215.1875, :width 864.9999999999999, :height 1080.0639853747714}), :page 465}, :content {:text "观察子节点"}, :properties {:color "green"}} {:id #uuid "63d0eabd-d8d0-414d-ad83-2a164466f675", :page 465, :position {:bounding {:x1 0, :y1 76.80000305175781, :x2 746.7684936523438, :y2 258.2624816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 76.80000305175781, :x2 0, :y2 99.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 632.001708984375, :y1 215.3125, :x2 746.7684936523438, :y2 236.11251831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 676.2125244140625, :y1 218.17501831054688, :x2 746.7684936523438, :y2 232.41250610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 237.46249389648438, :x2 171.08641052246094, :y2 257.4624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 183.21250915527344, :y1 237.46249389648438, :x2 312.555908203125, :y2 258.2624816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 328.1875, :y1 237.46249389648438, :x2 460.75, :y2 258.2624816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 240.66250610351562, :x2 171.08641052246094, :y2 254.89999389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 183.21250915527344, :y1 240.66250610351562, :x2 312.555908203125, :y2 255.6500244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 328.1875, :y1 240.66250610351562, :x2 441.2638244628906, :y2 255.6500244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 465}, :content {:text "需要在 MutationObserverInit 对象中将 childList 属性设置为 true。"}, :properties {:color "yellow"}} {:id #uuid "63d0ec1c-1fdb-4d23-9b64-48fe31c15e35", :page 466, :position {:bounding {:x1 158.9250030517578, :y1 752.4875335693359, :x2 215.8916473388672, :y2 773.2875213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 752.4875335693359, :x2 215.8916473388672, :y2 773.2875213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 466}, :content {:text "观察子树"}, :properties {:color "green"}} {:id #uuid "63d0ec24-d377-4945-b0f2-e862870b2f93", :page 466, :position {:bounding {:x1 0, :y1 795.5500183105469, :x2 779.7633666992188, :y2 883.2000122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 656.6625366210938, :y1 795.5500183105469, :x2 779.7633666992188, :y2 816.3500061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 421.95001220703125, :y1 795.9000244140625, :x2 641.3666381835938, :y2 816.7000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 485.875, :y1 798.75, :x2 641.3666381835938, :y2 812.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 656.6625366210938, :y1 798.75, :x2 779.7633666992188, :y2 812.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 818.2875061035156, :x2 240.35000610351562, :y2 839.0875244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 821.4875183105469, :x2 220.95120239257812, :y2 836.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 860.8000183105469, :x2 0, :y2 883.2000122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 466}, :content {:text "这需要在 MutationObserverInit 对象中将 subtree属性设置为 true。"}, :properties {:color "yellow"}} {:id #uuid "63d0ec33-d8a6-476a-b3ae-53c54b2a780a", :page 467, :position {:bounding {:x1 201.6891326904297, :y1 429.9375, :x2 595.4877777099609, :y2 450.7375183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 201.6891326904297, :y1 429.9375, :x2 595.4877777099609, :y2 450.7375183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 467}, :content {:text "被观察子树中的节点被移出子树之后仍然能够触发变化事件"}, :properties {:color "yellow"}} {:id #uuid "63d0ee6f-ed0f-4049-bc2c-15db706ebac4", :page 467, :position {:bounding {:x1 152.46250915527344, :y1 867.875, :x2 325.3194274902344, :y2 894.2750244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 867.875, :x2 325.3194274902344, :y2 894.2750244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 467}, :content {:text "异步回调与记录队列"}, :properties {:color "green"}} {:id #uuid "63d0ee91-0ee6-469e-aad9-1b48826f5e20", :page 467, :position {:bounding {:x1 0, :y1 620.8000030517578, :x2 760.0805053710938, :y2 972.4874877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 620.8000030517578, :x2 0, :y2 643.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 636.8000030517578, :x2 0, :y2 659.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 698.79345703125, :y1 906.8125, :x2 760.0805053710938, :y2 927.6125183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 929.2000122070312, :x2 749.514892578125, :y2 950, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 932.3999938964844, :x2 749.514892578125, :y2 947.3875122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 951.6875, :x2 272.9878845214844, :y2 972.4874877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 954.8875122070312, :x2 272.9878845214844, :y2 969.875, :width 864.9999999999999, :height 1080.0639853747714}), :page 467}, :content {:text "。为了在大量变化事件发生时不影响性能，每次变化的信息（由观察者实例决定）会保存在 MutationRecord实例中，然后添加到记录队列"}, :properties {:color "yellow"}} {:id #uuid "63d0eec4-6f93-4bb2-8d8a-c7a22aea7efe", :page 468, :position {:bounding {:x1 158.9250030517578, :y1 119.72502136230469, :x2 215.8916473388672, :y2 140.52500915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 119.72502136230469, :x2 215.8916473388672, :y2 140.52500915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 468}, :content {:text "记录队列"}, :properties {:color "green"}} {:id #uuid "63d0ef54-7e4d-4c19-8f3d-bb7b9ca9373c", :page 468, :position {:bounding {:x1 158.9250030517578, :y1 302.3625030517578, :x2 298.4083251953125, :y2 323.16249084472656, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 269.9250183105469, :y1 302.3625030517578, :x2 298.4083251953125, :y2 323.16249084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 158.9250030517578, :y1 303.02503967285156, :x2 258.63665771484375, :y2 323.02503967285156, :width 864.9999999999999, :height 1080.0639853747714}), :page 468}, :content {:text "takeRecords()方法"}, :properties {:color "green"}} {:id #uuid "63d0ef5e-2611-438e-8764-62aed7023fb0", :page 468, :position {:bounding {:x1 0, :y1 323.37501525878906, :x2 788.6472778320312, :y2 403.2000274658203, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 323.37501525878906, :x2 472.776123046875, :y2 344.1750030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 484.07501220703125, :y1 323.3875274658203, :x2 788.6472778320312, :y2 344.18751525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 172.1999969482422, :y1 326.5750274658203, :x2 472.776123046875, :y2 341.56251525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 484.07501220703125, :y1 326.58753967285156, :x2 788.6472778320312, :y2 341.5750274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 345.78749084472656, :x2 285.19305419921875, :y2 366.58753967285156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 348.9875030517578, :x2 253.3249969482422, :y2 363.97499084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 380.8000030517578, :x2 0, :y2 403.2000274658203, :width 864.9999999999999, :height 1080.0639853747714}), :page 468}, :content {:text "调用 MutationObserver 实例的 takeRecords()方法可以清空记录队列，取出并返回其中的所有 MutationRecord 实例"}, :properties {:color "yellow"}} {:id #uuid "63d0ef66-8d28-44cf-b3e9-68709a4b03ab", :page 468, :position {:bounding {:x1 183.875, :y1 648.5124969482422, :x2 375.938232421875, :y2 674.9124908447266, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 648.5124969482422, :x2 375.938232421875, :y2 674.9124908447266, :width 864.9999999999999, :height 1080.0639853747714}), :page 468}, :content {:text "性能、内存与垃圾回收"}, :properties {:color "green"}} {:id #uuid "63d0f052-127b-4d48-aef5-ec646d2d7805", :page 468, :position {:bounding {:x1 0, :y1 748.8000183105469, :x2 785.3087158203125, :y2 913.3875122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 748.8000183105469, :x2 0, :y2 771.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 571.6061401367188, :y1 870.1875305175781, :x2 785.3087158203125, :y2 890.9875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 582.6625366210938, :y1 873.0375061035156, :x2 785.3087158203125, :y2 887.2750244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 892.5875244140625, :x2 660.4194259643555, :y2 913.3875122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 468}, :content {:text "。MutationObserver 拥有对要观察的目标节点的弱引用。因为是弱引用，所以不会妨碍垃圾回收程序回收目标节"}, :properties {:color "yellow"}} {:id #uuid "63d0f106-d9e0-4daf-a17a-dde297f4a9fd", :page 468, :position {:bounding {:x1 0, :y1 780.7999877929688, :x2 785.9286499023438, :y2 958.1625061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 780.7999877929688, :x2 0, :y2 803.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 172.66476440429688, :y1 914.9750061035156, :x2 785.9286499023438, :y2 935.7749938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 312.5375061035156, :y1 917.8249816894531, :x2 785.9286499023438, :y2 932.0625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 937.3624877929688, :x2 528.8299560546875, :y2 958.1625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 940.5625, :x2 405.625, :y2 955.5499877929688, :width 864.9999999999999, :height 1080.0639853747714}), :page 468}, :content {:text "，目标节点却拥有对 MutationObserver 的强引用。如果目标节点从 DOM 中被移除，随后被垃圾回收，则关联的 MutationObserver 也会被垃圾回收。"}, :properties {:color "yellow"}} {:id #uuid "63d0f115-4368-4560-866c-3cb3f15299ac", :page 469, :position {:bounding {:x1 0, :y1 92.80001831054688, :x2 749.4274291992188, :y2 273.5874938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 92.80001831054688, :x2 0, :y2 115.20004272460938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 376.2892761230469, :y1 230.39999389648438, :x2 749.4274291992188, :y2 251.20004272460938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 381.57501220703125, :y1 233.60000610351562, :x2 749.4274291992188, :y2 248.58749389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 252.78750610351562, :x2 624.9000244140625, :y2 273.5874938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 255.98751831054688, :x2 606.0524291992188, :y2 270.9750061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 469}, :content {:text "。如果需要尽快地释放内存，建议从每个 MutationRecord中抽取出最有用的信息，然后保存到一个新对象中，最后抛弃 MutationRecord。"}, :properties {:color "yellow"}} {:id #uuid "63d0f12c-1689-4c47-bad8-8dc5f6b87917", :page 470, :position {:bounding {:x1 177.40000915527344, :y1 543.6125183105469, :x2 293.0270690917969, :y2 574.8125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 177.40000915527344, :y1 543.6125183105469, :x2 293.0270690917969, :y2 574.8125, :width 864.9999999999999, :height 1080.0639853747714}), :page 470}, :content {:text "Selectors API"}, :properties {:color "green"}} {:id #uuid "63d0f56a-9f02-4bda-84b2-e726de804610", :page 470, :position {:bounding {:x1 142.22500610351562, :y1 582.8375244140625, :x2 638.3961791992188, :y2 603.6375122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 582.8375244140625, :x2 192.2034454345703, :y2 603.6375122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 202.9499969482422, :y1 582.8375244140625, :x2 638.3961791992188, :y2 603.6375122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 202.9499969482422, :y1 586.0375366210938, :x2 613.59814453125, :y2 601.0250244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 470}, :content {:text "JavaScript 库中最流行的一种能力就是根据 CSS 选择符的模式匹配 DOM 元素"}, :properties {:color "yellow"}} {:id #uuid "63d0f8dd-c5ba-40bf-b112-c1b544d0002c", :page 470, :position {:bounding {:x1 183.875, :y1 838.2625122070312, :x2 325.385498046875, :y2 863.8625183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 838.2625122070312, :x2 325.385498046875, :y2 863.8625183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 470}, :content {:text "querySelector()"}, :properties {:color "green"}} {:id #uuid "63d0f8e9-7592-4e57-af4a-5c466ad75854", :page 470, :position {:bounding {:x1 140.6125030517578, :y1 872.6875305175781, :x2 683.7044677734375, :y2 893.8375244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 872.6875305175781, :x2 253.1331024169922, :y2 892.6875305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 268.70001220703125, :y1 873.0375366210938, :x2 683.7044677734375, :y2 893.8375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 268.70001220703125, :y1 876.2375183105469, :x2 363.32501220703125, :y2 891.2250366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 470}, :content {:text "querySelector()方法接收 CSS 选择符参数，返回匹配该模式的第一个后代元素"}, :properties {:color "yellow"}} {:id #uuid "63d0f95d-80bd-4a26-9b3a-65251dc5fc0a", :page 471, :position {:bounding {:x1 134.57846069335938, :y1 321.1624984741211, :x2 316.6535949707031, :y2 348.17501068115234, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 321.1624984741211, :x2 316.6535949707031, :y2 346.7625045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 134.57846069335938, :y1 321.77501678466797, :x2 134.58197021484375, :y2 348.17501068115234, :width 864.9999999999999, :height 1080.0639853747714}), :page 471}, :content {:text "querySelectorAll()"}, :properties {:color "green"}} {:id #uuid "63d0f96c-794e-436d-bead-4260713f372c", :page 471, :position {:bounding {:x1 0, :y1 156.79999542236328, :x2 757.5230712890625, :y2 401.40001678466797, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 156.79999542236328, :x2 0, :y2 179.20000457763672, :width 864.9999999999999, :height 1080.0639853747714} {:x1 485.2425842285156, :y1 358.11251068115234, :x2 757.5230712890625, :y2 378.9124984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 380.5999984741211, :x2 187.33248901367188, :y2 401.40001678466797, :width 864.9999999999999, :height 1080.0639853747714}), :page 471}, :content {:text "也接收一个用于查询的参数，但它会返回所有匹配的节点"}, :properties {:color "yellow"}} {:id #uuid "63d0f975-f971-4a34-a306-c56e9d9f418f", :page 471, :position {:bounding {:x1 293.9274597167969, :y1 380.5999984741211, :x2 593.7448120117188, :y2 401.40001678466797, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 293.9274597167969, :y1 380.5999984741211, :x2 593.7448120117188, :y2 401.40001678466797, :width 864.9999999999999, :height 1080.0639853747714} {:x1 445.0874938964844, :y1 383.46251678466797, :x2 513.5932006835938, :y2 397.7000045776367, :width 864.9999999999999, :height 1080.0639853747714}), :page 471}, :content {:text "这个方法返回的是一个 NodeList 的静态实例"}, :properties {:color "yellow"}} {:id #uuid "63d0fa4d-abc0-44b1-914e-3096d4b664b6", :page 471, :position {:bounding {:x1 0, :y1 268.8000030517578, :x2 753.375, :y2 557.1000213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 268.8000030517578, :x2 0, :y2 291.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 515.0500030517578, :x2 242.12060546875, :y2 535.8500213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 257.6875, :y1 515.0500030517578, :x2 430.0973815917969, :y2 535.8500213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 453.2375183105469, :y1 515.0500030517578, :x2 753.375, :y2 535.8500213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 125.80000305175781, :y1 518.2500152587891, :x2 242.12060546875, :y2 533.2375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 257.6875, :y1 518.2500152587891, :x2 430.0973815917969, :y2 533.2375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 453.2375183105469, :y1 518.2500152587891, :x2 753.375, :y2 533.2375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 537.1000213623047, :x2 220.92405700683594, :y2 557.1000213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 540.3000030517578, :x2 141.3055877685547, :y2 554.5375213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 471}, :content {:text "与 querySelector()一样，querySelectorAll()也可以在 Document、DocumentFragment 和 Element 类型上使用"}, :properties {:color "yellow"}} {:id #uuid "63d0fb20-70f4-4793-b68f-e0973a24bb49", :page 471, :position {:bounding {:x1 110.8125, :y1 692.1250152587891, :x2 691.084716796875, :y2 713.2750396728516, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 377.3374938964844, :y1 692.1250152587891, :x2 691.084716796875, :y2 712.1250152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 692.4749908447266, :x2 365.8687744140625, :y2 713.2750396728516, :width 864.9999999999999, :height 1080.0639853747714} {:x1 159.58750915527344, :y1 695.3250274658203, :x2 365.8687744140625, :y2 709.5625152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 377.3374938964844, :y1 695.3250274658203, :x2 470.03399658203125, :y2 709.5625152587891, :width 864.9999999999999, :height 1080.0639853747714}), :page 471}, :content {:text "返回的 NodeList 对象可以通过 for-of 循环、item()方法或中括号语法取得个别元素"}, :properties {:color "yellow"}} {:id #uuid "63d0fb26-bff0-42fe-9981-d59b9bd41e7b", :page 471, :position {:bounding {:x1 134.9250030517578, :y1 651.6750030517578, :x2 380.7616271972656, :y2 669.2750091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 134.9250030517578, :y1 651.6750030517578, :x2 346.9427795410156, :y2 669.2750091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 357.6000061035156, :y1 651.6750030517578, :x2 380.7616271972656, :y2 669.2750091552734, :width 864.9999999999999, :height 1080.0639853747714}), :page 471}, :content {:text "取得所有是<p>元素子元素的<strong>元素"}, :properties {:color "yellow"}} {:id #uuid "63d0fb35-ef74-4e98-8ff3-8ab822ed489a", :page 471, :position {:bounding {:x1 0, :y1 588.8000183105469, :x2 741.723388671875, :y2 995.8250122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 588.8000183105469, :x2 0, :y2 611.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 952.6375122070312, :x2 236.2920379638672, :y2 973.4375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 250.5749969482422, :y1 952.6375122070312, :x2 741.723388671875, :y2 973.4375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 125.80000305175781, :y1 955.8375244140625, :x2 236.2920379638672, :y2 970.8250122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 250.5749969482422, :y1 955.8375244140625, :x2 741.723388671875, :y2 970.8250122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 974.6875, :x2 109.54241180419922, :y2 994.6875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 123.4375, :y1 975.0250244140625, :x2 230.00588989257812, :y2 995.8250122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 977.8875122070312, :x2 109.54241180419922, :y2 992.125, :width 864.9999999999999, :height 1080.0639853747714}), :page 471}, :content {:text "与 querySelector()方法一样，如果选择符有语法错误或碰到不支持的选择符，则 querySelectorAll()方法会抛出错误"}, :properties {:color "yellow"}} {:id #uuid "63d0fb83-9378-4cdb-ad92-15d5e5c076cf", :page 471, :position {:bounding {:x1 112.1500015258789, :y1 666.5750122070312, :x2 488.4026794433594, :y2 684.1750183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 112.1500015258789, :y1 666.5750122070312, :x2 184.7193145751953, :y2 684.1750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 195.6374969482422, :y1 666.5750122070312, :x2 392.82708740234375, :y2 684.1750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 430.9375, :y1 666.5750122070312, :x2 488.4026794433594, :y2 684.1750183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 471}, :content {:text "let strongs = document.querySelectorAll(\"p strong\");"}, :properties {:color "red"}} {:id #uuid "63d0fb8b-f6bc-4ce6-b091-234ae64a1bef", :page 472, :position {:bounding {:x1 183.875, :y1 118.5875015258789, :x2 274.8260192871094, :y2 144.18750762939453, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 118.5875015258789, :x2 274.8260192871094, :y2 144.18750762939453, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "matches()"}, :properties {:color "green"}} {:id #uuid "63d0fba1-5b4b-4a67-aaf1-77fd439e162d", :page 472, :position {:bounding {:x1 0, :y1 257.82498931884766, :x2 784.6749877929688, :y2 355.19998931884766, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 257.82498931884766, :x2 577.7081298828125, :y2 278.62500762939453, :width 864.9999999999999, :height 1080.0639853747714} {:x1 593.2875366210938, :y1 257.82498931884766, :x2 746.3348999023438, :y2 278.62500762939453, :width 864.9999999999999, :height 1080.0639853747714} {:x1 769.4750366210938, :y1 257.82498931884766, :x2 784.6749877929688, :y2 278.62500762939453, :width 864.9999999999999, :height 1080.0639853747714} {:x1 465.1000061035156, :y1 260.6749954223633, :x2 577.7081298828125, :y2 274.91251373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 593.2875366210938, :y1 261.0250015258789, :x2 746.3348999023438, :y2 276.01248931884766, :width 864.9999999999999, :height 1080.0639853747714} {:x1 769.4750366210938, :y1 261.0250015258789, :x2 784.6749877929688, :y2 276.01248931884766, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 280.22501373291016, :x2 172.9550018310547, :y2 301.0250015258789, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 332.7999954223633, :x2 0, :y2 355.19998931884766, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "使用这个方法可以方便地检测某个元素会不会被 querySelector()或 querySelectorAll()方法返回。"}, :properties {:color "yellow"}} {:id #uuid "63d0fba7-c1c4-4979-a21e-ee1021004780", :page 472, :position {:bounding {:x1 177.41250610351562, :y1 361.1124954223633, :x2 267.1519775390625, :y2 392.31250762939453, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 177.41250610351562, :y1 361.1124954223633, :x2 267.1519775390625, :y2 392.31250762939453, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "元素遍历"}, :properties {:color "green"}} {:id #uuid "63d10b4a-48e0-4c04-b88b-5ab8ec0f6816", :page 472, :position {:bounding {:x1 145.790283203125, :y1 405.4125061035156, :x2 598.0282592773438, :y2 426.2125244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 145.790283203125, :y1 405.4125061035156, :x2 598.0282592773438, :y2 426.2125244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 163.9499969482422, :y1 408.6125183105469, :x2 486.7610626220703, :y2 423.6000061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "E9 之前的版本不会把元素间的空格当成空白节点，而其他浏览器则会"}, :properties {:color "yellow"}} {:id #uuid "63d10b54-1e19-4eef-a94c-a49bc2c36cd7", :page 472, :position {:bounding {:x1 142.2375030517578, :y1 472.6875, :x2 489.1925354003906, :y2 493.4875183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.2375030517578, :y1 472.6875, :x2 252.7474822998047, :y2 493.4875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 279.0249938964844, :y1 472.6875, :x2 489.1925354003906, :y2 493.4875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 279.0249938964844, :y1 475.88751220703125, :x2 425.4822692871094, :y2 490.875, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "Element Traversal API 为 DOM 元素添加了 5 个属性："}, :properties {:color "yellow"}} {:id #uuid "63d10b93-59b4-43a6-8be7-c486d95d4b1a", :page 472, :position {:bounding {:x1 161.4875030517578, :y1 495.7250061035156, :x2 614.7125244140625, :y2 516.5250244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 161.4875030517578, :y1 495.7250061035156, :x2 614.7125244140625, :y2 516.5250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 306.6499938964844, :y1 499.26251220703125, :x2 611.1310424804688, :y2 514.25, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "childElementCount，返回子元素数量（不包含文本节点和注释）；"}, :properties {:color "yellow"}} {:id #uuid "63d10ba1-c837-4f64-a6d7-73958a157bee", :page 472, :position {:bounding {:x1 161.4875030517578, :y1 518.2125244140625, :x2 555.9888916015625, :y2 539.3500061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 161.4875030517578, :y1 518.2125244140625, :x2 287.8692321777344, :y2 538.2125244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 306.6499938964844, :y1 518.5500183105469, :x2 555.9888916015625, :y2 539.3500061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 306.6499938964844, :y1 521.75, :x2 461.15655517578125, :y2 536.7375183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "firstElementChild，指向第一个 Element 类型的子元素"}, :properties {:color "yellow"}} {:id #uuid "63d10ba8-1302-4b2d-bc51-fb9b1922fdf6", :page 472, :position {:bounding {:x1 165.90965270996094, :y1 540.6000061035156, :x2 562.3607177734375, :y2 561.75, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 165.90965270996094, :y1 540.6000061035156, :x2 285.7344055175781, :y2 560.6000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 298.1125183105469, :y1 540.9500122070312, :x2 562.3607177734375, :y2 561.75, :width 864.9999999999999, :height 1080.0639853747714} {:x1 298.1125183105469, :y1 544.1500244140625, :x2 467.6065368652344, :y2 559.1375122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "astElementChild，指向最后一个 Element 类型的子元素"}, :properties {:color "yellow"}} {:id #uuid "63d10bb0-e8c4-4951-b06f-d85ff23dc9fe", :page 472, :position {:bounding {:x1 156.61822509765625, :y1 563, :x2 670.4000244140625, :y2 583.9500122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 349.3500061035156, :y1 563, :x2 463.4497985839844, :y2 583, :width 864.9999999999999, :height 1080.0639853747714} {:x1 474.0249938964844, :y1 563, :x2 670.4000244140625, :y2 583, :width 864.9999999999999, :height 1080.0639853747714} {:x1 156.61822509765625, :y1 563.9500122070312, :x2 334.88116455078125, :y2 583.9500122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 161.4875030517578, :y1 566.2000122070312, :x2 334.88116455078125, :y2 580.4375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 349.3500061035156, :y1 566.2000122070312, :x2 463.4497985839844, :y2 580.4375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 474.0249938964844, :y1 566.2000122070312, :x2 536.6500244140625, :y2 580.4375, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "previousElementSibling ， 指 向 前 一 个 Element 类 型 的 同 胞 元 素 "}, :properties {:color "yellow"}} {:id #uuid "63d10bb7-41ae-4b64-92e4-ef03e6f29baf", :page 472, :position {:bounding {:x1 161.4875030517578, :y1 607.875, :x2 579.2031860351562, :y2 629.0125122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 161.4875030517578, :y1 607.875, :x2 303.3619689941406, :y2 627.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 315.1875, :y1 608.2125244140625, :x2 579.2031860351562, :y2 629.0125122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 315.1875, :y1 611.4125061035156, :x2 469.40655517578125, :y2 626.4000244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 472}, :content {:text "nextElementSibling，指向后一个 Element 类型的同胞元素"}, :properties {:color "yellow"}} {:id #uuid "63d10d98-c8ac-4136-aa8e-20e406ade9bc", :page 473, :position {:bounding {:x1 146, :y1 300.6250171661377, :x2 207.39297485351562, :y2 331.8249988555908, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 146, :y1 300.6250171661377, :x2 207.39297485351562, :y2 331.8249988555908, :width 864.9999999999999, :height 1080.0639853747714}), :page 473}, :content {:text "HTML5"}, :properties {:color "green"}} {:id #uuid "63d10db7-a968-4a9b-a365-6b0b7703a60a", :page 473, :position {:bounding {:x1 152.46250915527344, :y1 529.7500152587891, :x2 253.16897583007812, :y2 556.1500091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 529.7500152587891, :x2 253.16897583007812, :y2 556.1500091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 191.40000915527344, :y1 533.7500152587891, :x2 195.1999969482422, :y2 552.7250213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 473}, :content {:text "CSS 类扩展"}, :properties {:color "green"}} {:id #uuid "63d10e3e-66fb-48b7-977a-ff19033decfe", :page 473, :position {:bounding {:x1 0, :y1 316.80001068115234, :x2 757.2348022460938, :y2 633.1000213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 316.80001068115234, :x2 0, :y2 339.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 589.7200317382812, :y1 589.9000091552734, :x2 757.2348022460938, :y2 610.7000274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 612.3000030517578, :x2 323.6280212402344, :y2 633.1000213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 473}, :content {:text "包括动态修改类名，以及根据给定的一个或一组类名查询元素"}, :properties {:color "yellow"}} {:id #uuid "63d10e46-5e9e-4541-b2fa-268c76afc0fb", :page 473, :position {:bounding {:x1 127.51250457763672, :y1 661.3875274658203, :x2 327.2255172729492, :y2 681.3875274658203, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.51250457763672, :y1 661.3875274658203, :x2 327.2255172729492, :y2 681.3875274658203, :width 864.9999999999999, :height 1080.0639853747714}), :page 473}, :content {:text "getElementsByClassName()"}, :properties {:color "green"}} {:id #uuid "63d10e6e-3ba1-4940-a079-b438a722f453", :page 473, :position {:bounding {:x1 0, :y1 428.8000144958496, :x2 759.2025146484375, :y2 791.0750122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 428.8000144958496, :x2 0, :y2 451.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 109.20000457763672, :y1 747.5375061035156, :x2 759.2025146484375, :y2 767.5375061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 314.2375183105469, :y1 751.0875244140625, :x2 759.2025146484375, :y2 766.0750122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 770.2750244140625, :x2 284.157470703125, :y2 791.0750122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 773.4750061035156, :x2 284.157470703125, :y2 788.4625244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 473}, :content {:text "getElementsByClassName()方法接收一个参数，即包含一个或多个类名的字符串，返回类名中包含相应类的元素的 NodeList"}, :properties {:color "yellow"}} {:id #uuid "63d10ea1-ee83-4dcc-8a1d-8391885e5920", :page 473, :position {:bounding {:x1 0, :y1 556.8000183105469, :x2 747.4867553710938, :y2 944.675048828125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 556.8000183105469, :x2 0, :y2 579.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 505.2127380371094, :y1 902.6375122070312, :x2 747.4867553710938, :y2 923.4375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 633.6124877929688, :y1 905.487548828125, :x2 747.4867553710938, :y2 919.7250366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 924.675048828125, :x2 387.8330383300781, :y2 944.675048828125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 927.875, :x2 171.8945770263672, :y2 942.112548828125, :width 864.9999999999999, :height 1080.0639853747714}), :page 473}, :content {:text "在特定元素上调用 getElementsByClassName()则返回该元素后代中匹配的元素"}, :properties {:color "yellow"}} {:id #uuid "63d10ed6-d5d4-45f1-af0c-f6dbc382e7f6", :page 474, :position {:bounding {:x1 155.02284240722656, :y1 171.42500686645508, :x2 268.5208435058594, :y2 192.56250381469727, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 235.77500915527344, :y1 171.42500686645508, :x2 268.5208435058594, :y2 191.42500686645508, :width 864.9999999999999, :height 1080.0639853747714} {:x1 155.02284240722656, :y1 171.76250076293945, :x2 220.10302734375, :y2 192.56250381469727, :width 864.9999999999999, :height 1080.0639853747714} {:x1 158.9250030517578, :y1 174.62500381469727, :x2 220.10302734375, :y2 188.86250686645508, :width 864.9999999999999, :height 1080.0639853747714} {:x1 235.77500915527344, :y1 174.62500381469727, :x2 238.625, :y2 188.86250686645508, :width 864.9999999999999, :height 1080.0639853747714}), :page 474}, :content {:text "classList 属性"}, :properties {:color "green"}} {:id #uuid "63d10f17-1635-4b3f-8a94-92b26de5a9e1", :page 474, :position {:bounding {:x1 578.620361328125, :y1 191.78749465942383, :x2 770.7013549804688, :y2 212.58749771118164, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 578.620361328125, :y1 191.78749465942383, :x2 770.7013549804688, :y2 212.58749771118164, :width 864.9999999999999, :height 1080.0639853747714} {:x1 596.2250366210938, :y1 194.63750076293945, :x2 675.9249877929688, :y2 208.87500381469727, :width 864.9999999999999, :height 1080.0639853747714}), :page 474}, :content {:text "但 className 是一个字符串"}, :properties {:color "yellow"}} {:id #uuid "63d10f3f-2bee-4a0e-aa9d-82c5e6f3ca7f", :page 474, :position {:bounding {:x1 112.1500015258789, :y1 308.87500381469727, :x2 340.6008071899414, :y2 329.674991607666, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 112.1500015258789, :y1 308.87500381469727, :x2 340.6008071899414, :y2 329.674991607666, :width 864.9999999999999, :height 1080.0639853747714}), :page 474}, :content {:text "再把包含剩余类的字符串设置回去"}, :properties {:color "yellow"}} {:id #uuid "63d10f6d-859b-479a-9781-0d310c75a17c", :page 474, :position {:bounding {:x1 142.22500610351562, :y1 576.4375343322754, :x2 511.8662109375, :y2 597.2375221252441, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 576.4375343322754, :x2 511.8662109375, :y2 597.2375221252441, :width 864.9999999999999, :height 1080.0639853747714} {:x1 203.03750610351562, :y1 579.2875099182129, :x2 413.9977722167969, :y2 593.5249977111816, :width 864.9999999999999, :height 1080.0639853747714}), :page 474}, :content {:text "这就是从<div>元素的类名中删除\"user\"类要写的代码"}, :properties {:color "yellow"}} {:id #uuid "63d10fae-5d96-4aec-a493-ce3f5d6edcd2", :page 474, :position {:bounding {:x1 198.6875, :y1 643.3624877929688, :x2 773.6939086914062, :y2 664.5125122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 421.6499938964844, :y1 643.3624877929688, :x2 773.6939086914062, :y2 663.3624877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 198.6875, :y1 643.7124938964844, :x2 405.9655456542969, :y2 664.5125122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 421.6499938964844, :y1 646.5625, :x2 422.053466796875, :y2 660.7999877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 336.9125061035156, :y1 646.9125061035156, :x2 405.9655456542969, :y2 661.8999938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 474}, :content {:text "通过给所有元素增加 classList 属性为这些操作提供了更简单也更安全的实现方式"}, :properties {:color "yellow"}} {:id #uuid "63d1101a-666b-49e1-a8c5-b5b17cce172a", :page 475, :position {:bounding {:x1 152.46250915527344, :y1 380.4625015258789, :x2 229.2877960205078, :y2 406.8624954223633, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 380.4625015258789, :x2 229.2877960205078, :y2 406.8624954223633, :width 864.9999999999999, :height 1080.0639853747714}), :page 475}, :content {:text "焦点管理"}, :properties {:color "green"}} {:id #uuid "63d11027-1935-4f41-8a46-b8d080402d11", :page 475, :position {:bounding {:x1 0, :y1 220.80001068115234, :x2 754.703125, :y2 462.60001373291016, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 220.80001068115234, :x2 0, :y2 243.20000457763672, :width 864.9999999999999, :height 1080.0639853747714} {:x1 400.8209228515625, :y1 419.4000015258789, :x2 754.703125, :y2 440.2000198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 443.5500183105469, :y1 422.60001373291016, :x2 754.703125, :y2 437.5875015258789, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 441.7999954223633, :x2 212.8514862060547, :y2 462.60001373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 445.00000762939453, :x2 188.51080322265625, :y2 459.9874954223633, :width 864.9999999999999, :height 1080.0639853747714}), :page 475}, :content {:text "首先是 document.activeElement，始终包含当前拥有焦点的 DOM 元素"}, :properties {:color "yellow"}} {:id #uuid "63d1105d-f8d8-4dee-99bf-38faf36e3aad", :page 475, :position {:bounding {:x1 200.9499969482422, :y1 543.8375015258789, :x2 713.0736694335938, :y2 564.6375198364258, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 200.9499969482422, :y1 543.8375015258789, :x2 713.0736694335938, :y2 564.6375198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 200.9499969482422, :y1 547.0375137329102, :x2 713.0736694335938, :y2 562.0250015258789, :width 864.9999999999999, :height 1080.0639853747714}), :page 475}, :content {:text "document.activeElement 在页面刚加载完之后会设置为 document.body"}, :properties {:color "yellow"}} {:id #uuid "63d11074-9805-44a8-a62d-91c7648a63af", :page 475, :position {:bounding {:x1 155.78750610351562, :y1 588.9625015258789, :x2 656.9632568359375, :y2 609.7624893188477, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 155.78750610351562, :y1 588.9625015258789, :x2 656.9632568359375, :y2 609.7624893188477, :width 864.9999999999999, :height 1080.0639853747714} {:x1 155.78750610351562, :y1 592.1625137329102, :x2 317.28021240234375, :y2 607.1500015258789, :width 864.9999999999999, :height 1080.0639853747714}), :page 475}, :content {:text " document.hasFocus()方法，该方法返回布尔值，表示文档是否拥有焦点"}, :properties {:color "yellow"}} {:id #uuid "63d110a3-3744-4936-8a4c-d5e23e52fed4", :page 475, :position {:bounding {:x1 152.46250915527344, :y1 771.9375305175781, :x2 327.22515869140625, :y2 798.3375244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 771.9375305175781, :x2 327.22515869140625, :y2 798.3375244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 475}, :content {:text "HTMLDocument 扩展"}, :properties {:color "green"}} {:id #uuid "63d110cb-18b0-4271-b6e7-6584feca73e8", :page 475, :position {:bounding {:x1 122.10295867919922, :y1 883.2875061035156, :x2 245.6583251953125, :y2 904.0875549316406, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 122.10295867919922, :y1 883.2875061035156, :x2 245.6583251953125, :y2 904.0875549316406, :width 864.9999999999999, :height 1080.0639853747714} {:x1 123.3375015258789, :y1 886.4875183105469, :x2 215.7624969482422, :y2 901.4750061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 475}, :content {:text " readyState 属性"}, :properties {:color "yellow"}} {:id #uuid "63d11126-e68b-4224-aee1-bfc73dd63d07", :page 475, :position {:bounding {:x1 130.0749969482422, :y1 947.7374877929688, :x2 326.90753173828125, :y2 967.7374877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 130.0749969482422, :y1 947.7374877929688, :x2 326.90753173828125, :y2 967.7374877929688, :width 864.9999999999999, :height 1080.0639853747714}), :page 475}, :content {:text "loading，表示文档正在加载"}, :properties {:color "yellow"}} {:id #uuid "63d1112d-f1f3-4928-bf80-9cbb4de50ffe", :page 475, :position {:bounding {:x1 130.0749969482422, :y1 970.1374969482422, :x2 335.3629455566406, :y2 990.1374816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 130.0749969482422, :y1 970.1374969482422, :x2 335.3629455566406, :y2 990.1374816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 475}, :content {:text "complete，表示文档加载完成"}, :properties {:color "yellow"}} {:id #uuid "63d11142-5153-4d77-b3be-b7aafcfed731", :page 476, :position {:bounding {:x1 158.9250030517578, :y1 251.3125, :x2 277.0708312988281, :y2 272.1125183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 251.3125, :x2 277.0708312988281, :y2 272.1125183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 476}, :content {:text "compatMode 属性"}, :properties {:color "yellow"}} {:id #uuid "63d11191-9d3c-4634-85a8-7b9283a013f5", :page 476, :position {:bounding {:x1 465.1222839355469, :y1 294.0625, :x2 782.8515014648438, :y2 314.8625183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 465.1222839355469, :y1 294.0625, :x2 782.8515014648438, :y2 314.8625183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 476}, :content {:text "唯一的任务是指示浏览器当前处于什么渲染模式"}, :properties {:color "yellow"}} {:id #uuid "63d1119d-d656-460e-85a0-9d11a5a0b206", :page 476, :position {:bounding {:x1 158.9250030517578, :y1 476.7500114440918, :x2 225.8333282470703, :y2 496.7500114440918, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 476.7500114440918, :x2 225.8333282470703, :y2 496.7500114440918, :width 864.9999999999999, :height 1080.0639853747714} {:x1 193.0749969482422, :y1 479.9499931335449, :x2 195.9250030517578, :y2 494.1875114440918, :width 864.9999999999999, :height 1080.0639853747714}), :page 476}, :content {:text "head 属性"}, :properties {:color "yellow"}} {:id #uuid "63d111ac-140c-4548-aa07-6fd478f8ccd1", :page 476, :position {:bounding {:x1 420.7856140136719, :y1 519.5000152587891, :x2 560.5025024414062, :y2 540.3000030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 420.7856140136719, :y1 519.5000152587891, :x2 560.5025024414062, :y2 540.3000030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 478.8625183105469, :y1 522.3625030517578, :x2 532.3246459960938, :y2 536.6000213623047, :width 864.9999999999999, :height 1080.0639853747714}), :page 476}, :content {:text "直接取得<head>元素"}, :properties {:color "yellow"}} {:id #uuid "63d111b5-8cb2-4f54-8aa1-4a90cfb5959d", :page 476, :position {:bounding {:x1 183.875, :y1 582.0875091552734, :x2 279.9066162109375, :y2 608.4875030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 582.0875091552734, :x2 279.9066162109375, :y2 608.4875030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 476}, :content {:text "字符集属性"}, :properties {:color "green"}} {:id #uuid "63d111ef-b6d3-4f8d-a4b0-aa58c98c62a4", :page 476, :position {:bounding {:x1 0, :y1 588.8000183105469, :x2 786.77490234375, :y2 664.2250061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 588.8000183105469, :x2 0, :y2 611.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 613.5, :y1 620.6875, :x2 786.77490234375, :y2 640.6875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 500.18310546875, :y1 621.0249938964844, :x2 603.0970458984375, :y2 641.8250122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 511.0249938964844, :y1 623.8875122070312, :x2 603.0970458984375, :y2 638.125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 613.5, :y1 623.8875122070312, :x2 786.77490234375, :y2 638.125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 643.4250183105469, :x2 336.152099609375, :y2 664.2250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 646.625, :x2 172.9550018310547, :y2 661.6125183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 476}, :content {:text "，characterSet 属性表示文档实际使用的字符集，也可以用来指定新字符集"}, :properties {:color "yellow"}} {:id #uuid "63d111fa-6c9a-4d73-9856-47d0b8ae445c", :page 476, :position {:bounding {:x1 183.875, :y1 743.4875183105469, :x2 318.31927490234375, :y2 769.8875122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 743.4875183105469, :x2 318.31927490234375, :y2 769.8875122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 476}, :content {:text "自定义数据属性"}, :properties {:color "green"}} {:id #uuid "63d1123f-928e-4f18-870b-20be94bce28f", :page 476, :position {:bounding {:x1 0, :y1 748.7999992370605, :x2 780.2682495117188, :y2 919.9625091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 748.7999992370605, :x2 0, :y2 771.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 633.2250366210938, :y1 876.7750091552734, :x2 780.2682495117188, :y2 896.7750091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 693.1000366210938, :y1 879.9750061035156, :x2 780.2682495117188, :y2 894.2125091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 899.1625061035156, :x2 419.939453125, :y2 919.9625091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 902.3625030517578, :x2 360, :y2 917.3500061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 476}, :content {:text "dataset 属 性 是 一 个 DOMStringMap 的实例，包含一组键/值对映射"}, :properties {:color "yellow"}} {:id #uuid "63d112b0-d49b-4cca-9cb0-8393c673d83a", :page 477, :position {:bounding {:x1 0, :y1 204.79999542236328, :x2 756.656005859375, :y2 413.07498931884766, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 204.79999542236328, :x2 0, :y2 227.20001983642578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 369.87500762939453, :x2 756.656005859375, :y2 390.6749954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 497.6875, :y1 373.0750198364258, :x2 756.656005859375, :y2 388.06250762939453, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 392.2750015258789, :x2 187.346923828125, :y2 413.07498931884766, :width 864.9999999999999, :height 1080.0639853747714}), :page 477}, :content {:text "自定义数据属性非常适合需要给元素附加某些数据的场景，比如链接追踪和在聚合应用程序中标识页面的不同部分"}, :properties {:color "yellow"}} {:id #uuid "63d112de-58a8-4a30-b689-bb5966835a02", :page 477, :position {:bounding {:x1 152.46250915527344, :y1 427.4375, :x2 229.2877960205078, :y2 453.8374938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 427.4375, :x2 229.2877960205078, :y2 453.8374938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 477}, :content {:text "插入标记"}, :properties {:color "green"}} {:id #uuid "63d11316-e931-47f7-9d25-4a45cc902794", :page 477, :position {:bounding {:x1 0, :y1 252.80001068115234, :x2 754.9336547851562, :y2 509.5625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 252.80001068115234, :x2 0, :y2 275.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 403.0848083496094, :y1 466.375, :x2 754.9336547851562, :y2 487.1750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 587.5, :y1 468.57501220703125, :x2 754.9336547851562, :y2 483.5625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 488.76251220703125, :x2 217.9459686279297, :y2 509.5625, :width 864.9999999999999, :height 1080.0639853747714}), :page 477}, :content {:text "但向文档中一次性插入大量 HTML 时还是比较麻烦。相比先创建一堆节点"}, :properties {:color "yellow"}} {:id #uuid "63d11321-4211-494a-a552-6ebb2314ae06", :page 477, :position {:bounding {:x1 122.14045715332031, :y1 539.4375, :x2 237.12083435058594, :y2 560.2374877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 122.14045715332031, :y1 539.4375, :x2 237.12083435058594, :y2 560.2374877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 123.375, :y1 542.6375122070312, :x2 207.21250915527344, :y2 557.625, :width 864.9999999999999, :height 1080.0639853747714}), :page 477}, :content {:text " innerHTML 属性"}, :properties {:color "green"}} {:id #uuid "63d11342-5bed-46dd-aba1-da095eef37e6", :page 477, :position {:bounding {:x1 110.80000305175781, :y1 559.3500061035156, :x2 744.1242065429688, :y2 580.1499938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.80000305175781, :y1 559.3500061035156, :x2 744.1242065429688, :y2 580.1499938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 159.58750915527344, :y1 562.2124938964844, :x2 502.70001220703125, :y2 576.4500122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 477}, :content {:text "在读取 innerHTML 属性时，会返回元素所有后代的 HTML 字符串，包括元素、注释和文本节点"}, :properties {:color "yellow"}} {:id #uuid "63d11375-c8a3-4773-9013-fa6ba5f4dc4c", :page 477, :position {:bounding {:x1 110.8125, :y1 951.4125366210938, :x2 741.2568359375, :y2 972.2125549316406, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 951.4125366210938, :x2 741.2568359375, :y2 972.2125549316406, :width 864.9999999999999, :height 1080.0639853747714} {:x1 250.9499969482422, :y1 954.2625427246094, :x2 518.099365234375, :y2 968.5000305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 477}, :content {:text "在写入模式下，赋给 innerHTML 属性的值会被解析为 DOM 子树，并替代元素之前的所有节点"}, :properties {:color "yellow"}} {:id #uuid "63d113b8-8501-421e-ae32-7d6bdf66b2fe", :page 478, :position {:bounding {:x1 0, :y1 379.4624786376953, :x2 745.8759155273438, :y2 421.8875274658203, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 563.1078491210938, :y1 379.4624786376953, :x2 745.8759155273438, :y2 400.2625274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 396.8000030517578, :x2 0, :y2 419.2000274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 157.21250915527344, :y1 401.0874786376953, :x2 486.66241455078125, :y2 421.8875274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 157.21250915527344, :y1 404.28749084472656, :x2 324.907958984375, :y2 419.2749786376953, :width 864.9999999999999, :height 1080.0639853747714}), :page 478}, :content {:text "这是因为返回的字符串是将原始字符串对应的 DOM 子树序列化之后的结果。"}, :properties {:color "yellow"}} {:id #uuid "63d113fd-045c-4c03-9f4e-c73f07713a88", :page 478, :position {:bounding {:x1 0, :y1 460.7999939918518, :x2 781.8779907226562, :y2 533.0500245094299, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 460.7999939918518, :x2 0, :y2 483.2000184059143, :width 864.9999999999999, :height 1080.0639853747714} {:x1 158.43899536132812, :y1 490.8500123023987, :x2 322.5853271484375, :y2 511.65000009536743, :width 864.9999999999999, :height 1080.0639853747714} {:x1 333.125, :y1 490.8500123023987, :x2 587.2978515625, :y2 511.65000009536743, :width 864.9999999999999, :height 1080.0639853747714} {:x1 597.8375244140625, :y1 490.8500123023987, :x2 781.8779907226562, :y2 511.65000009536743, :width 864.9999999999999, :height 1080.0639853747714} {:x1 264.5249938964844, :y1 493.71250009536743, :x2 322.5853271484375, :y2 507.9499878883362, :width 864.9999999999999, :height 1080.0639853747714} {:x1 333.125, :y1 494.0499939918518, :x2 587.2978515625, :y2 509.0375123023987, :width 864.9999999999999, :height 1080.0639853747714} {:x1 597.8375244140625, :y1 494.0499939918518, :x2 781.8779907226562, :y2 509.0375123023987, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 512.2500367164612, :x2 306.08380126953125, :y2 533.0500245094299, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 515.4499878883362, :x2 174.96250915527344, :y2 530.4375367164612, :width 864.9999999999999, :height 1080.0639853747714}), :page 478}, :content {:text "只要这样插入的<script>元素指定了 defer 属性，且<script>之前是“受控元素”（scoped element），那就是可以执行的"}, :properties {:color "yellow"}} {:id #uuid "63d1143b-1779-46b6-98b4-15b455de1499", :page 478, :position {:bounding {:x1 0, :y1 556.8000183105469, :x2 792.1749877929688, :y2 666.2125244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 556.8000183105469, :x2 0, :y2 579.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 729.9530639648438, :y1 622.9250183105469, :x2 791.0189819335938, :y2 643.7250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 645.4125061035156, :x2 271.36328125, :y2 666.2125244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 281.70001220703125, :y1 645.4125061035156, :x2 792.1749877929688, :y2 666.2125244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 648.6125183105469, :x2 271.36328125, :y2 663.6000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 281.70001220703125, :y1 648.6125183105469, :x2 784.5875244140625, :y2 663.6000061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 478}, :content {:text "。为了达到目的，必须在<script>前面加上一个受控元素，例如文本节点或没有结束标签的元素（如<input>）。"}, :properties {:color "yellow"}} {:id #uuid "63d11463-5011-4e66-84b8-7030e29ac9e8", :page 478, :position {:bounding {:x1 0, :y1 716.8000183105469, :x2 789.6920776367188, :y2 865.7500305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 716.8000183105469, :x2 0, :y2 739.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 728.8773803710938, :y1 822.5500183105469, :x2 789.6920776367188, :y2 843.3500061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 844.9500122070312, :x2 428.3382263183594, :y2 865.7500305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 848.1500244140625, :x2 273.2684326171875, :y2 863.1375122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 478}, :content {:text "第三行使用了一个隐藏的<input>字段来达成同样的目的"}, :properties {:color "yellow"}} {:id #uuid "63d11493-b520-432e-bca6-acdb865c18e8", :page 479, :position {:bounding {:x1 123.62239837646484, :y1 269.9625186920166, :x2 237.12083435058594, :y2 290.76250648498535, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 123.62239837646484, :y1 269.9625186920166, :x2 237.12083435058594, :y2 290.76250648498535, :width 864.9999999999999, :height 1080.0639853747714} {:x1 127.51250457763672, :y1 272.82500648498535, :x2 208.3309326171875, :y2 287.0624942779541, :width 864.9999999999999, :height 1080.0639853747714}), :page 479}, :content {:text "outerHTML 属性"}, :properties {:color "green"}} {:id #uuid "63d114cc-7d5b-4178-bb2a-54668ec13480", :page 479, :position {:bounding {:x1 110.80000305175781, :y1 289.9750003814697, :x2 707.8028564453125, :y2 310.7750186920166, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.80000305175781, :y1 289.9750003814697, :x2 707.8028564453125, :y2 310.7750186920166, :width 864.9999999999999, :height 1080.0639853747714} {:x1 141.16250610351562, :y1 293.175012588501, :x2 644.3292846679688, :y2 308.1625003814697, :width 864.9999999999999, :height 1080.0639853747714}), :page 479}, :content {:text "读取 outerHTML 属性时，会返回调用它的元素（及所有后代元素）的 HTML 字符串。"}, :properties {:color "yellow"}} {:id #uuid "63d114df-12de-4f7b-9e7b-170b39ff50ab", :page 479, :position {:bounding {:x1 0, :y1 284.800012588501, :x2 755.46240234375, :y2 533.0000247955322, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 284.800012588501, :x2 0, :y2 307.20000648498535, :width 864.9999999999999, :height 1080.0639853747714} {:x1 664.1056518554688, :y1 489.8125247955322, :x2 755.46240234375, :y2 510.612512588501, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 512.2000370025635, :x2 725.8500366210938, :y2 533.0000247955322, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 515.3999881744385, :x2 719.8174438476562, :y2 530.3875370025635, :width 864.9999999999999, :height 1080.0639853747714}), :page 479}, :content {:text "，浏览器因解析和解释 HTML 代码的机制不同，返回的字符串也可能不同。（跟 innerHTML 的情况是一样的。）"}, :properties {:color "yellow"}} {:id #uuid "63d115f9-70e2-4c94-9814-ecd5aac8fbbd", :page 479, :position {:bounding {:x1 127.51250457763672, :y1 691.5625, :x2 462.4081726074219, :y2 712.3625183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 298.3000183105469, :y1 691.5625, :x2 462.4081726074219, :y2 712.3625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 127.51250457763672, :y1 692.2250061035156, :x2 284.9254379272461, :y2 712.2250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 298.3000183105469, :y1 694.7625122070312, :x2 313.5, :y2 709.75, :width 864.9999999999999, :height 1080.0639853747714}), :page 479}, :content {:text "insertAdjacentHTML()与 insertAdjacentText()"}, :properties {:color "green"}} {:id #uuid "63d11633-2a64-4941-b356-6c660241062a", :page 479, :position {:bounding {:x1 0, :y1 444.8000030517578, :x2 753.489990234375, :y2 755.7875366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 444.8000030517578, :x2 0, :y2 467.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 351.0375061035156, :y1 712.5750122070312, :x2 512.3547973632812, :y2 733.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 525.7250366210938, :y1 712.5874938964844, :x2 689.8331909179688, :y2 733.3875122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 715.2999877929688, :y1 712.5874938964844, :x2 753.489990234375, :y2 733.3875122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 354.8500061035156, :y1 715.4500122070312, :x2 512.3547973632812, :y2 729.6875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 525.7250366210938, :y1 715.7875061035156, :x2 689.8331909179688, :y2 730.7749938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 715.2999877929688, :y1 715.7875061035156, :x2 753.489990234375, :y2 730.7749938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 734.9875183105469, :x2 663.5449829101562, :y2 755.7875366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 738.1875, :x2 619.236083984375, :y2 753.1749877929688, :width 864.9999999999999, :height 1080.0639853747714}), :page 479}, :content {:text " insertAdjacentHTML()和 insertAdjacentText()。这两个方法最早源自 IE，它们都接收两个参数：要插入标记的位置和要插入的 HTML 或文本"}, :properties {:color "yellow"}} {:id #uuid "63d116f6-e0e3-408e-9d11-cc17d78d903a", :page 480, :position {:bounding {:x1 158.9250030517578, :y1 352.4624938964844, :x2 258.7875671386719, :y2 373.26251220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 352.4624938964844, :x2 258.7875671386719, :y2 373.26251220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 480}, :content {:text "内存与性能问题"}, :properties {:color "green"}} {:id #uuid "63d11744-ff81-4d38-8c22-112fd1f13966", :page 480, :position {:bounding {:x1 0, :y1 418.2749938964844, :x2 792.1749877929688, :y2 515.2000122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 658.793212890625, :y1 418.2749938964844, :x2 792.1749877929688, :y2 439.07501220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 700.0250244140625, :y1 421.125, :x2 792.1749877929688, :y2 436.1125183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 440.4125061035156, :x2 369.46295166015625, :y2 461.2124938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 382.8374938964844, :y1 440.75, :x2 789.4722290039062, :y2 461.54998779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 443.6125183105469, :x2 369.46295166015625, :y2 458.6000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 382.8374938964844, :y1 443.95001220703125, :x2 789.4722290039062, :y2 458.9375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 462.1500244140625, :x2 163.5865478515625, :y2 482.95001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 174.66250610351562, :y1 462.1500244140625, :x2 223.3949737548828, :y2 482.95001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 465.35003662109375, :x2 163.5865478515625, :y2 480.3375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 174.66250610351562, :y1 465.35003662109375, :x2 174.7827606201172, :y2 480.3375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 476.79998779296875, :x2 0, :y2 499.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 492.79998779296875, :x2 0, :y2 515.2000122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 480}, :content {:text "在使用 innerHTML、 outerHTML 和 insertAdjacentHTML()之前，最好手动删除要被替换的元素上关联的事件处理程序和 JavaScript 对象。"}, :properties {:color "yellow"}} {:id #uuid "63d11758-0386-4933-83ac-3fc58c3b3b76", :page 480, :position {:bounding {:x1 0, :y1 485.53749084472656, :x2 784.9091796875, :y2 547.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 525.0435791015625, :y1 485.53749084472656, :x2 784.9091796875, :y2 506.33750915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 696.4249877929688, :y1 488.7375030517578, :x2 784.9091796875, :y2 503.72499084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 507.58750915527344, :x2 526.4082641601562, :y2 528.3874969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 510.78749084472656, :x2 318.67315673828125, :y2 525.7749786376953, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 524.8000030517578, :x2 0, :y2 547.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 480}, :content {:text "一般来讲，插入大量的新 HTML 使用 innerHTML 比使用多次 DOM 操作创建节点再插入来得更便捷"}, :properties {:color "yellow"}} {:id #uuid "63d1178b-3a59-46f6-91ce-e4f9092b16d3", :page 480, :position {:bounding {:x1 158.9250030517578, :y1 886.9249877929688, :x2 230.21878051757812, :y2 907.7249908447266, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 886.9249877929688, :x2 230.21878051757812, :y2 907.7249908447266, :width 864.9999999999999, :height 1080.0639853747714}), :page 480}, :content {:text "跨站点脚本"}, :properties {:color "green"}} {:id #uuid "63d11806-9785-4266-b358-ef1a5b22cbf6", :page 481, :position {:bounding {:x1 152.46250915527344, :y1 155.5, :x2 294.6012878417969, :y2 181.0999755859375, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 155.5, :x2 294.6012878417969, :y2 181.0999755859375, :width 864.9999999999999, :height 1080.0639853747714}), :page 481}, :content {:text "scrollIntoView()"}, :properties {:color "green"}} {:id #uuid "63d11834-3d41-443a-98e5-8d2185f2d20e", :page 481, :position {:bounding {:x1 0, :y1 76.79998779296875, :x2 757.8571166992188, :y2 280.5250244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 76.79998779296875, :x2 0, :y2 99.19998168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 109.20000457763672, :y1 236.98748779296875, :x2 222.2238006591797, :y2 256.98748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 245.8249969482422, :y1 237.32501220703125, :x2 757.8571166992188, :y2 258.125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 245.8249969482422, :y1 240.5250244140625, :x2 757.8571166992188, :y2 255.51251220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 259.7249755859375, :x2 156.87026977539062, :y2 280.5250244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 481}, :content {:text "scrollIntoView()方法存在于所有 HTML 元素上，可以滚动浏览器窗口或容器元素以便包含元素进入视口"}, :properties {:color "yellow"}} {:id #uuid "63d1187d-2b8b-45e1-a675-ee50bedcd372", :page 481, :position {:bounding {:x1 125.21822357177734, :y1 282.72499084472656, :x2 326.3287048339844, :y2 302.72499084472656, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 125.21822357177734, :y1 282.72499084472656, :x2 326.3287048339844, :y2 302.72499084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 130.0749969482422, :y1 284.97499084472656, :x2 218.3249969482422, :y2 299.21250915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 481}, :content {:text "alignToTop 是一个布尔值。"}, :properties {:color "yellow"}} {:id #uuid "63d11890-7871-4ea7-88fc-3a36c4139879", :page 481, :position {:bounding {:x1 125.21822357177734, :y1 349.03749084472656, :x2 435.4674377441406, :y2 369.9875030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 309.3999938964844, :y1 349.03749084472656, :x2 435.4674377441406, :y2 369.03749084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 125.21822357177734, :y1 349.9875030517578, :x2 289.7752685546875, :y2 369.9875030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 130.0749969482422, :y1 352.2375030517578, :x2 289.7752685546875, :y2 366.47499084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 309.3999938964844, :y1 352.2375030517578, :x2 312.25, :y2 366.47499084472656, :width 864.9999999999999, :height 1080.0639853747714}), :page 481}, :content {:text "scrollIntoViewOptions 是一个选项对象。"}, :properties {:color "yellow"}} {:id #uuid "63d1190a-6bf7-4324-9f00-4c4b9ee9981c", :page 481, :position {:bounding {:x1 146, :y1 732.6625061035156, :x2 235.73948669433594, :y2 763.8625183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 146, :y1 732.6625061035156, :x2 235.73948669433594, :y2 763.8625183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 481}, :content {:text "专有扩展"}, :properties {:color "green"}} {:id #uuid "63d1191b-b59c-4930-9fb1-dcdf16d4b213", :page 481, :position {:bounding {:x1 152.46250915527344, :y1 903.5375366210938, :x2 283.5751647949219, :y2 929.1375122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 903.5375366210938, :x2 227.51756286621094, :y2 929.1375122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 239.78750610351562, :y1 903.5375366210938, :x2 283.5751647949219, :y2 929.1375122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 239.78750610351562, :y1 907.5375366210938, :x2 243.4375, :y2 925.7500305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 481}, :content {:text "children 属性"}, :properties {:color "green"}} {:id #uuid "63d11932-7861-4752-a6d8-931b4bad7a2f", :page 481, :position {:bounding {:x1 80.73750305175781, :y1 963.8750305175781, :x2 619.0784912109375, :y2 984.6750183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 80.73750305175781, :y1 963.8750305175781, :x2 619.0784912109375, :y2 984.6750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 149.0500030517578, :y1 967.0750427246094, :x2 525.2625122070312, :y2 982.0625610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 481}, :content {:text "children 属性是一个 HTMLCollection，只包含元素的 Element 类型的子节点"}, :properties {:color "yellow"}} {:id #uuid "63d1198a-e467-44f8-91d0-5b3ecba0c24e", :page 482, :position {:bounding {:x1 183.875, :y1 221.2624969482422, :x2 331.400146484375, :y2 247.6625213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 292.9875183105469, :y1 221.2624969482422, :x2 331.400146484375, :y2 247.6625213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 183.875, :y1 221.9125213623047, :x2 274.79437255859375, :y2 247.5124969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 482}, :content {:text "contains()方法"}, :properties {:color "green"}} {:id #uuid "63d1199b-f1d3-4de8-8f6d-babfa339aec9", :page 482, :position {:bounding {:x1 0, :y1 282.58751678466797, :x2 787.5086059570312, :y2 355.2000045776367, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 460.7112731933594, :y1 282.58751678466797, :x2 546.0319213867188, :y2 303.3875045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 559.125, :y1 282.58751678466797, :x2 787.5086059570312, :y2 303.3875045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 473.7375183105469, :y1 285.4500045776367, :x2 546.0319213867188, :y2 299.68749237060547, :width 864.9999999999999, :height 1080.0639853747714} {:x1 559.125, :y1 285.7874984741211, :x2 787.5086059570312, :y2 300.77501678466797, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 304.98751068115234, :x2 310.0925521850586, :y2 325.7874984741211, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 332.80001068115234, :x2 0, :y2 355.2000045776367, :width 864.9999999999999, :height 1080.0639853747714}), :page 482}, :content {:text "。contains()方法应该在要搜索的祖先元素上调用，参数是待确定的目标节点"}, :properties {:color "yellow"}} {:id #uuid "63d11a03-e0cc-421e-860b-21a5479cac59", :page 482, :position {:bounding {:x1 326.9375, :y1 399.6750030517578, :x2 742.2243041992188, :y2 420.4750061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 326.9375, :y1 399.6750030517578, :x2 742.2243041992188, :y2 420.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 326.9375, :y1 402.875, :x2 540.4662475585938, :y2 417.8625030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 482}, :content {:text " compareDocumentPosition()方法也可以确定节点间的关系"}, :properties {:color "yellow"}} {:id #uuid "63d11a89-4d83-4d01-940b-a2b70000aacf", :page 482, :position {:bounding {:x1 165.97845458984375, :y1 795.1000061035156, :x2 260.7002868652344, :y2 822.7625122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 795.1000061035156, :x2 260.7002868652344, :y2 821.5000305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 165.97845458984375, :y1 796.3625183105469, :x2 165.9819793701172, :y2 822.7625122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 482}, :content {:text "插入标记"}, :properties {:color "green"}} {:id #uuid "63d11aa0-aad4-47e6-9ae8-850aee4e349b", :page 482, :position {:bounding {:x1 140.6125030517578, :y1 904.2875061035156, :x2 678.1705932617188, :y2 924.2875061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 904.2875061035156, :x2 678.1705932617188, :y2 924.2875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 217.46250915527344, :y1 907.4875183105469, :x2 217.6556396484375, :y2 921.7250061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 482}, :content {:text "innerText 属性对应元素中包含的所有文本内容，无论文本在子树中哪个层级。"}, :properties {:color "yellow"}} {:id #uuid "63d11ad5-5cbd-474f-8ab0-82055fa0ddaa", :page 483, :position {:bounding {:x1 110.8125, :y1 483.4499969482422, :x2 598.3326416015625, :y2 504.25001525878906, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 483.4499969482422, :x2 598.3326416015625, :y2 504.25001525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 144.58750915527344, :y1 486.31251525878906, :x2 558.4992065429688, :y2 501.3000030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 483}, :content {:text "设置 innerText 会移除元素之前所有的后代节点，完全改变 DOM 子树。"}, :properties {:color "yellow"}} {:id #uuid "63d11b0b-d874-400b-bc90-ee5f29d18df0", :page 483, :position {:bounding {:x1 0, :y1 412.8000030517578, :x2 754.1416625976562, :y2 670.8000335693359, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 538.7596435546875, :y1 627.9499969482422, :x2 754.1416625976562, :y2 648.7500152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 583.7125244140625, :y1 631.1500091552734, :x2 754.1416625976562, :y2 646.1374969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 650.0000152587891, :x2 433.8409118652344, :y2 670.8000335693359, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 653.1999969482422, :x2 314.2242431640625, :y2 667.4374847412109, :width 864.9999999999999, :height 1080.0639853747714}), :page 483}, :content {:text "通过将 innerText 设置为等于 innerText，可以去除所有 HTML 标签而只剩文本，"}, :properties {:color "yellow"}} {:id #uuid "63d11b2c-e847-419d-80b7-7c3be6b742b1", :page 483, :position {:bounding {:x1 109.20000457763672, :y1 846.4125061035156, :x2 617.91748046875, :y2 867.2124938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 846.4125061035156, :x2 617.91748046875, :y2 867.2124938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 186.0500030517578, :y1 849.6124877929688, :x2 297.8374938964844, :y2 864.5999755859375, :width 864.9999999999999, :height 1080.0639853747714}), :page 483}, :content {:text "outerText 与 innerText 是类似的，只不过作用范围包含调用它的节点"}, :properties {:color "yellow"}} {:id #uuid "63d11b4c-618e-4be3-89e1-2830d505fa80", :page 483, :position {:bounding {:x1 80.73750305175781, :y1 891.625, :x2 586.8267211914062, :y2 912.4249877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 80.73750305175781, :y1 891.625, :x2 586.8267211914062, :y2 912.4249877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 185.8625030517578, :y1 894.4874877929688, :x2 265.57501220703125, :y2 908.7250061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 483}, :content {:text "写入文本值时，outerText 不止会移除所有后代节点，而是会替换整个元素"}, :properties {:color "yellow"}} {:id #uuid "63d11b5c-ad39-4961-b460-96cba18ab2fe", :page 484, :position {:bounding {:x1 183.875, :y1 223.625, :x2 222.2876434326172, :y2 250.02499389648438, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 223.625, :x2 222.2876434326172, :y2 250.02499389648438, :width 864.9999999999999, :height 1080.0639853747714}), :page 484}, :content {:text "滚动"}, :properties {:color "green"}} {:id #uuid "63d11c35-c38d-4ab8-b22a-9673898d7c57", :page 485, :position {:bounding {:x1 0, :y1 124.80001068115234, :x2 760.3001098632812, :y2 464.50001525878906, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 124.80001068115234, :x2 0, :y2 147.20000457763672, :width 864.9999999999999, :height 1080.0639853747714} {:x1 642.2775268554688, :y1 421.3000183105469, :x2 760.3001098632812, :y2 442.1000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 653.625, :y1 424.50001525878906, :x2 760.3001098632812, :y2 439.4875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 443.70001220703125, :x2 758.3412475585938, :y2 464.50001525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 446.90000915527344, :x2 718.4993896484375, :y2 461.88751220703125, :width 864.9999999999999, :height 1080.0639853747714}), :page 485}, :content {:text "。实际上，DOM2和 DOM3 是按照模块化的思路来制定标准的，每个模块之间有一定关联，但分别针对某个 DOM 子集。"}, :properties {:color "yellow"}} {:id #uuid "63d11caa-d8e4-4bf5-b194-6036109e0783", :page 486, :position {:bounding {:x1 183.875, :y1 219.5875244140625, :x2 303.87530517578125, :y2 245.98748779296875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 219.5875244140625, :x2 303.87530517578125, :y2 245.98748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 222.8874969482422, :y1 223.5875244140625, :x2 226.6875, :y2 242.5625, :width 864.9999999999999, :height 1080.0639853747714}), :page 486}, :content {:text "XML 命名空间"}, :properties {:color "green"}} {:id #uuid "63d11d8c-681a-4f87-9307-0c4ab8508c80", :page 486, :position {:bounding {:x1 0, :y1 476.80002212524414, :x2 786.356201171875, :y2 522.7500343322754, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 476.80002212524414, :x2 0, :y2 499.1999855041504, :width 864.9999999999999, :height 1080.0639853747714} {:x1 536.0457763671875, :y1 479.5625343322754, :x2 786.356201171875, :y2 500.36252212524414, :width 864.9999999999999, :height 1080.0639853747714} {:x1 600.4000244140625, :y1 482.4125099182129, :x2 786.356201171875, :y2 496.64999771118164, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 501.9499855041504, :x2 313.9214782714844, :y2 522.7500343322754, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 505.14999771118164, :x2 268.8988037109375, :y2 520.1374855041504, :width 864.9999999999999, :height 1080.0639853747714}), :page 486}, :content {:text "可以使用 xmlns 给命名空间创建一个前缀，格式为“xmlns: 前缀”"}, :properties {:color "yellow"}} {:id #uuid "63d11e2f-9ec3-4829-988c-81dea3c60a9c", :page 487, :position {:bounding {:x1 110.8125, :y1 204.58749389648438, :x2 698.6893310546875, :y2 225.38748168945312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 204.58749389648438, :x2 698.6893310546875, :y2 225.38748168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 260.5375061035156, :y1 207.44998168945312, :x2 302.03448486328125, :y2 221.68753051757812, :width 864.9999999999999, :height 1080.0639853747714}), :page 487}, :content {:text "在这个例子中，通过给<svg>元素设置自己的命名空间，将其标识为当前文档的外来元素"}, :properties {:color "yellow"}} {:id #uuid "63d11ef3-b484-4ec7-a09e-d5d9bb31cdd7", :page 487, :position {:bounding {:x1 110.8125, :y1 476.56250762939453, :x2 663.1517944335938, :y2 497.71253204345703, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 508.75, :y1 476.56250762939453, :x2 663.1517944335938, :y2 496.56250762939453, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 476.91251373291016, :x2 498.68414306640625, :y2 497.71253204345703, :width 864.9999999999999, :height 1080.0639853747714} {:x1 351.0500183105469, :y1 479.7625198364258, :x2 498.68414306640625, :y2 494.75000762939453, :width 864.9999999999999, :height 1080.0639853747714} {:x1 508.75, :y1 479.7625198364258, :x2 648.8409423828125, :y2 494.00000762939453, :width 864.9999999999999, :height 1080.0639853747714}), :page 487}, :content {:text "在节点使用命名空间前缀的情况下，nodeName 等于 prefix + \":\" + localName。"}, :properties {:color "yellow"}} {:id #uuid "63d12088-f443-4855-a272-9574afa065c1", :page 488, :position {:bounding {:x1 0, :y1 812.8000364303589, :x2 786.6611328125, :y2 979.5125427246094, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 812.8000364303589, :x2 0, :y2 835.2000360488892, :width 864.9999999999999, :height 1080.0639853747714} {:x1 140.6125030517578, :y1 935.9750366210938, :x2 786.6611328125, :y2 956.775032043457, :width 864.9999999999999, :height 1080.0639853747714} {:x1 249.52500915527344, :y1 939.5125350952148, :x2 786.6611328125, :y2 954.5000381469727, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 958.7125396728516, :x2 279.6374282836914, :y2 979.5125427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 488}, :content {:text "NamedNodeMap 也增加了以下处理命名空间的方法。因为 NamedNodeMap 主要表示属性，所以这些方法大都适用于属性："}, :properties {:color "yellow"}} {:id #uuid "63d12154-d159-4998-a0e0-2dcdd7eebfd2", :page 489, :position {:bounding {:x1 0, :y1 172.80000686645508, :x2 753.2750244140625, :y2 420.88751220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 172.80000686645508, :x2 0, :y2 195.20000839233398, :width 864.9999999999999, :height 1080.0639853747714} {:x1 669.2875366210938, :y1 377.6000061035156, :x2 753.2750244140625, :y2 397.6000061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 738.0750122070312, :y1 381.13751220703125, :x2 753.2750244140625, :y2 396.125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 400.0875244140625, :x2 576.3468017578125, :y2 420.88751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 403.2875061035156, :x2 497.159423828125, :y2 417.5250244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 489}, :content {:text "publicId、 systemId 属性表示文档类型声明中有效但无法使用 DOM1 API 访问的数据"}, :properties {:color "yellow"}} {:id #uuid "63d121cc-845e-4e69-9d38-c5289b8f2c59", :page 490, :position {:bounding {:x1 0, :y1 214.88748168945312, :x2 785.81494140625, :y2 323.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 367.0874938964844, :y1 214.88748168945312, :x2 785.81494140625, :y2 235.68746948242188, :width 864.9999999999999, :height 1080.0639853747714} {:x1 441.8999938964844, :y1 218.08749389648438, :x2 785.81494140625, :y2 233.07498168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 238.28750610351562, :x2 505.7336120605469, :y2 259.0874938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 241.48751831054688, :x2 505.7336120605469, :y2 256.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 300.8000183105469, :x2 0, :y2 323.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 490}, :content {:text "DOM2 Core 还针对 document.implementation 对象增加了两个新方法：createDocumentType()和 createDocument()"}, :properties {:color "yellow"}} {:id #uuid "63d12275-7780-4f4f-83c4-933c8f6f666d", :page 490, :position {:bounding {:x1 142.22500610351562, :y1 844.2250061035156, :x2 640.5541381835938, :y2 865.0250244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 844.2250061035156, :x2 640.5541381835938, :y2 865.0250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 189.3874969482422, :y1 848.4250183105469, :x2 640.5541381835938, :y2 863.4125061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 490}, :content {:text "DOM3 新增了两个用于比较节点的方法：isSameNode()和 isEqualNode()"}, :properties {:color "yellow"}} {:id #uuid "63d1234d-b374-4723-a7bb-62c63ad1bf85", :page 491, :position {:bounding {:x1 0, :y1 92.79998779296875, :x2 760.796142578125, :y2 270.1874694824219, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 92.79998779296875, :x2 0, :y2 115.19998168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 440.7981872558594, :y1 226.98751831054688, :x2 552.2119750976562, :y2 247.78750610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 564.6375122070312, :y1 226.98751831054688, :x2 760.796142578125, :y2 247.78750610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 453.5249938964844, :y1 229.85000610351562, :x2 552.2119750976562, :y2 244.08749389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 564.6375122070312, :y1 230.18746948242188, :x2 760.796142578125, :y2 245.17501831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 249.38748168945312, :x2 293.9294662475586, :y2 270.1874694824219, :width 864.9999999999999, :height 1080.0639853747714}), :page 491}, :content {:text "。setUserData()方法接收 3 个参数：键、值、处理函数，用于给节点追加数据"}, :properties {:color "yellow"}} {:id #uuid "63d123e5-dac8-4ca6-926d-6180f27323a0", :page 491, :position {:bounding {:x1 80.73750305175781, :y1 686.4375152587891, :x2 633.9115600585938, :y2 707.2375030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 80.73750305175781, :y1 686.4375152587891, :x2 633.9115600585938, :y2 707.2375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 208.8249969482422, :y1 689.9750213623047, :x2 558.5674438476562, :y2 704.9625091552734, :width 864.9999999999999, :height 1080.0639853747714}), :page 491}, :content {:text "contentDocument。这个属性包含代表子内嵌窗格中内容的 document 对象的指针"}, :properties {:color "yellow"}} {:id #uuid "63d1240e-f5c0-4063-8d68-19d3c1fcc381", :page 491, :position {:bounding {:x1 336.4250183105469, :y1 796.5624847412109, :x2 663.485595703125, :y2 817.3624877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 336.4250183105469, :y1 796.5624847412109, :x2 663.485595703125, :y2 817.3624877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 340.8125, :y1 799.4124908447266, :x2 634.1470947265625, :y2 814.3999786376953, :width 864.9999999999999, :height 1080.0639853747714}), :page 491}, :content {:text " contentWindow，返回相应窗格的 window 对象"}, :properties {:color "yellow"}} {:id #uuid "63d12460-9bd0-4b4d-92ed-459bc24b753a", :page 492, :position {:bounding {:x1 177.41250610351562, :y1 119.16249084472656, :x2 222.2340545654297, :y2 150.3625030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 177.41250610351562, :y1 119.16249084472656, :x2 222.2340545654297, :y2 150.3625030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 492}, :content {:text "样式"}, :properties {:color "green"}} {:id #uuid "63d124c7-7031-4990-8e41-ecad2d7b0289", :page 492, :position {:bounding {:x1 395.7375183105469, :y1 185.9499969482422, :x2 743.4000244140625, :y2 206.75001525878906, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 395.7375183105469, :y1 185.9499969482422, :x2 743.4000244140625, :y2 206.75001525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 395.7375183105469, :y1 189.15000915527344, :x2 724.6943359375, :y2 204.1374969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 492}, :content {:text "DOM2 Style 为这 3 种应用样式的机制都提供了 API。"}, :properties {:color "yellow"}} {:id #uuid "63d12550-d146-40e2-9a9f-d9620b77b297", :page 492, :position {:bounding {:x1 183.875, :y1 222.1125030517578, :x2 299.1129455566406, :y2 248.5124969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 222.1125030517578, :x2 299.1129455566406, :y2 248.5124969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 492}, :content {:text "存取元素样式"}, :properties {:color "green"}} {:id #uuid "63d12558-a19b-4aad-b02c-e7c4271655c3", :page 492, :position {:bounding {:x1 142.22500610351562, :y1 260.0500030517578, :x2 693.4412841796875, :y2 281.84999084472656, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 458.8125, :y1 260.0500030517578, :x2 693.4412841796875, :y2 280.84999084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 261.0500030517578, :x2 447.7319030761719, :y2 281.84999084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 458.8125, :y1 263.25001525878906, :x2 646.4249877929688, :y2 278.2375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 205.97500610351562, :y1 263.91249084472656, :x2 447.7319030761719, :y2 278.15000915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 492}, :content {:text "任何支持 style 属性的 HTML 元素在 JavaScript 中都会有一个对应的 style 属性。"}, :properties {:color "yellow"}} {:id #uuid "63d125f1-e07c-4eec-8bed-f7fde7dd93b0", :page 492, :position {:bounding {:x1 0, :y1 328.31248474121094, :x2 788.7318115234375, :y2 371.5124969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 394.4226379394531, :y1 328.31248474121094, :x2 788.7318115234375, :y2 349.11253356933594, :width 864.9999999999999, :height 1080.0639853747714} {:x1 437, :y1 331.5124969482422, :x2 788.7318115234375, :y2 346.49998474121094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 348.80003356933594, :x2 0, :y2 371.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 456.375, :y1 349.71250915527344, :x2 765.1940307617188, :y2 370.5124969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 350.71250915527344, :x2 445.31158447265625, :y2 371.5124969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 456.375, :y1 352.9125213623047, :x2 459.375, :y2 367.90000915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 353.9125213623047, :x2 445.31158447265625, :y2 368.90000915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 492}, :content {:text "。因为 CSS 属性名使用连字符表示法（用连字符分隔两个单词 ， 如 background-image ）， 所 以 在 JavaScript 中 这 些 属 性 必 须 转 换 为 驼 峰 大 小 写 形 式 （ 如"}, :properties {:color "yellow"}} {:id #uuid "63d12744-b0d2-4b3c-a500-8cb8ae679756", :page 492, :position {:bounding {:x1 0, :y1 492.7999954223633, :x2 786.2313232421875, :y2 598.9375076293945, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 492.7999954223633, :x2 0, :y2 515.2000198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 470.32501220703125, :y1 554.650032043457, :x2 786.2313232421875, :y2 575.4500198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 549.5375366210938, :y1 557.849983215332, :x2 786.2313232421875, :y2 572.837532043457, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 578.1375198364258, :x2 244.52500915527344, :y2 598.9375076293945, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 581.337532043457, :x2 220.0265350341797, :y2 596.3250198364258, :width 864.9999999999999, :height 1080.0639853747714}), :page 492}, :content {:text "DOM2 Style 规定它在 style 对象中对应的属性应该是 cssFloat。"}, :properties {:color "yellow"}} {:id #uuid "63d12793-7108-48ca-b40c-12f8081106cb", :page 492, :position {:bounding {:x1 309.50262451171875, :y1 908.5125122070312, :x2 492.250732421875, :y2 929.3125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 309.50262451171875, :y1 908.5125122070312, :x2 492.250732421875, :y2 929.3125, :width 864.9999999999999, :height 1080.0639853747714}), :page 492}, :content {:text "实践中，最好一直加上单位"}, :properties {:color "yellow"}} {:id #uuid "63d127e1-8661-4fc0-963d-8176715db82c", :page 493, :position {:bounding {:x1 130.0749969482422, :y1 293.72501373291016, :x2 424.91998291015625, :y2 314.5250244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 130.0749969482422, :y1 293.72501373291016, :x2 424.91998291015625, :y2 314.5250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 189.85000610351562, :y1 297.26251220703125, :x2 376.2957458496094, :y2 312.25001525878906, :width 864.9999999999999, :height 1080.0639853747714}), :page 493}, :content {:text "cssText，包含 style 属性中的 CSS 代码。"}, :properties {:color "yellow"}} {:id #uuid "63d12810-5c22-4dee-bdca-5ed92667dbf2", :page 493, :position {:bounding {:x1 0, :y1 348.8000183105469, :x2 755.5761108398438, :y2 627.5875091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 348.8000183105469, :x2 0, :y2 371.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 233.01829528808594, :y1 585.4500274658203, :x2 755.5761108398438, :y2 606.2500152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 342.8000183105469, :y1 588.3000030517578, :x2 755.5761108398438, :y2 603.2875213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 607.5875091552734, :x2 310.83563232421875, :y2 627.5875091552734, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 610.7875213623047, :x2 123.64781951904297, :y2 625.0250091552734, :width 864.9999999999999, :height 1080.0639853747714}), :page 493}, :content {:text "在写模式下，给 cssText 赋值会重写整个 style 属性的值，意味着之前通过 style 属性设置的属性都会丢失。"}, :properties {:color "yellow"}} {:id #uuid "63d12830-12c8-4fb6-9d63-3f9a1a1509a3", :page 494, :position {:bounding {:x1 140.6125030517578, :y1 120.85002136230469, :x2 562.86474609375, :y2 141.9875030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 120.85002136230469, :x2 277.0126647949219, :y2 140.8500213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 295.3625183105469, :y1 121.18751525878906, :x2 562.86474609375, :y2 141.9875030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 295.3625183105469, :y1 124.38749694824219, :x2 396.63751220703125, :y2 139.37501525878906, :width 864.9999999999999, :height 1080.0639853747714}), :page 494}, :content {:text "getPropertyValue()方法返回 CSS 属性值的字符串表示。"}, :properties {:color "yellow"}} {:id #uuid "63d1283b-1847-4f90-8b29-a5b3d7d3aa86", :page 494, :position {:bounding {:x1 428.1667175292969, :y1 143.58750915527344, :x2 792.1749877929688, :y2 164.3874969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 428.1667175292969, :y1 143.58750915527344, :x2 792.1749877929688, :y2 164.3874969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 591.6749877929688, :y1 146.43751525878906, :x2 771.2686157226562, :y2 161.4250030517578, :width 864.9999999999999, :height 1080.0639853747714}), :page 494}, :content {:text "。这个对象有两个属性：cssText 和 cssValueType。"}, :properties {:color "yellow"}} {:id #uuid "63d1289d-b682-4991-a6ed-95ed106d7bb4", :page 494, :position {:bounding {:x1 112.13750457763672, :y1 143.2375030517578, :x2 428.1667175292969, :y2 164.3874969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 112.13750457763672, :y1 143.2375030517578, :x2 276.4123764038086, :y2 163.2375030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 291.4624938964844, :y1 143.58750915527344, :x2 428.1667175292969, :y2 164.3874969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 291.4624938964844, :y1 146.7875213623047, :x2 396.4125061035156, :y2 161.77500915527344, :width 864.9999999999999, :height 1080.0639853747714}), :page 494}, :content {:text "getPropertyCSSValue()获取 CSSValue 对象"}, :properties {:color "yellow"}} {:id #uuid "63d128c6-7248-4272-823b-3404b665762f", :page 494, :position {:bounding {:x1 319.0313415527344, :y1 523.5, :x2 777.6471557617188, :y2 544.3000030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 319.0313415527344, :y1 523.5, :x2 777.6471557617188, :y2 544.3000030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 323.07501220703125, :y1 525.7000045776367, :x2 637.9389038085938, :y2 540.6875, :width 864.9999999999999, :height 1080.0639853747714}), :page 494}, :content {:text "。DOM2 Style 在 document.defaultView 上增加了 getComputedStyle()"}, :properties {:color "yellow"}} {:id #uuid "63d128ff-13bb-4e67-b5da-773ef37b423b", :page 495, :position {:bounding {:x1 0, :y1 172.80001831054688, :x2 753.8961791992188, :y2 367.5250244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 172.80001831054688, :x2 0, :y2 195.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 483.3266296386719, :y1 324.3375244140625, :x2 753.8961791992188, :y2 345.13751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 512.5375366210938, :y1 327.53753662109375, :x2 753.8961791992188, :y2 342.5250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 478.57501220703125, :y1 346.38751220703125, :x2 604.5512084960938, :y2 366.38751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 346.72503662109375, :x2 464.5882263183594, :y2 367.5250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 478.57501220703125, :y1 349.5875244140625, :x2 481.4250183105469, :y2 363.82501220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 349.92498779296875, :x2 464.5882263183594, :y2 364.91253662109375, :width 864.9999999999999, :height 1080.0639853747714}), :page 495}, :content {:text "即使 computedStyle.border 在所有浏览器中都不会返回值，computedStyle.borderLeftWidth 也一定会返回值。"}, :properties {:color "yellow"}} {:id #uuid "63d1294d-e796-4ce9-87e4-5cf664e5ef00", :page 495, :position {:bounding {:x1 110.4375, :y1 495.12500607967377, :x2 530.5057983398438, :y2 515.9250243902206, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.4375, :y1 495.12500607967377, :x2 530.5057983398438, :y2 515.9250243902206, :width 864.9999999999999, :height 1080.0639853747714}), :page 495}, :content {:text "关于计算样式要记住一点，在所有浏览器中计算样式都是只读的"}, :properties {:color "yellow"}} {:id #uuid "63d129c6-ab66-4099-8dcb-a90022bb3ffe", :page 494, :position {:bounding {:x1 0, :y1 500.75, :x2 787.5792846679688, :y2 547.2000122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 500.75, :x2 787.5792846679688, :y2 521.5500030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 182.83750915527344, :y1 503.9499969482422, :x2 787.5792846679688, :y2 518.9374847412109, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 523.5, :x2 319.0313491821289, :y2 544.3000030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 524.8000030517578, :x2 0, :y2 547.2000122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 494}, :content {:text "style 对象中包含支持 style 属性的元素为这个属性设置的样式信息，但不包含从其他样式表层叠继承的同样影响该元素的样式信息"}, :properties {:color "red"}} {:id #uuid "63d129d2-3cff-428e-807e-e07341a43d21", :page 495, :position {:bounding {:x1 152.46250915527344, :y1 620.0375366210938, :x2 248.49412536621094, :y2 646.4375305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 620.0375366210938, :x2 248.49412536621094, :y2 646.4375305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 495}, :content {:text "操作样式表"}, :properties {:color "green"}} {:id #uuid "63d129df-8579-4fd4-9771-ff572a2b9986", :page 495, :position {:bounding {:x1 0, :y1 364.8000030517578, :x2 761.3062133789062, :y2 702.1750030517578, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 364.8000030517578, :x2 0, :y2 387.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 109.20000457763672, :y1 658.6375045776367, :x2 761.3062133789062, :y2 679.4375152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 220.21250915527344, :y1 661.8375091552734, :x2 761.3062133789062, :y2 676.8250122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 681.375, :x2 566.3170776367188, :y2 702.1750030517578, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.7249984741211, :y1 684.5749969482422, :x2 566.3170776367188, :y2 699.5625, :width 864.9999999999999, :height 1080.0639853747714}), :page 495}, :content {:text "CSSStyleSheet 类型表示 CSS 样式表，包括使用<link>元素和通过<style>元素定义的样式表。注意，这两个元素本身分别是 HTMLLinkElement 和 HTMLStyleElement"}, :properties {:color "yellow"}} {:id #uuid "63d12b29-355a-43c4-95f4-b1a8b8a34ab5", :page 496, :position {:bounding {:x1 140.6125030517578, :y1 344.9624938964844, :x2 530.4082641601562, :y2 364.9625244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 344.9624938964844, :x2 530.4082641601562, :y2 364.9625244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 311.3999938964844, :y1 348.1625061035156, :x2 311.6618347167969, :y2 362.4000244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 496}, :content {:text "document.styleSheets 表示文档中可用的样式表集合。"}, :properties {:color "yellow"}} {:id #uuid "63d12b57-bcc8-43c1-af08-4c66351fd8e4", :page 496, :position {:bounding {:x1 0, :y1 522.5375061035156, :x2 785.5811767578125, :y2 565.7375183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 455.9554138183594, :y1 522.5375061035156, :x2 785.5811767578125, :y2 543.3374938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 472.4125061035156, :y1 524.7375183105469, :x2 785.5811767578125, :y2 539.7250061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 540.8000183105469, :x2 0, :y2 563.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 544.5874938964844, :x2 269.6876754760742, :y2 564.5874938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 300.01251220703125, :y1 544.9375, :x2 411.9324645996094, :y2 565.7375183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 547.7875061035156, :x2 269.6876754760742, :y2 562.0249938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 300.01251220703125, :y1 548.1375122070312, :x2 359.0689392089844, :y2 563.125, :width 864.9999999999999, :height 1080.0639853747714}), :page 496}, :content {:text "。IE、Opera、Chrome 也包含 rel 属性设置为\"alternate stylesheet\"的<link>元素。"}, :properties {:color "yellow"}} {:id #uuid "63d12c08-c1ff-4f4d-9356-38fbcf5488d7", :page 496, :position {:bounding {:x1 140.6125030517578, :y1 637.5750122070312, :x2 596.6295013427734, :y2 657.5750122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 637.5750122070312, :x2 596.6295013427734, :y2 657.5750122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 496}, :content {:text "CSSRule 类型表示样式表中的一条规则。这个类型也是一个通用基类"}, :properties {:color "yellow"}} {:id #uuid "63d12c10-54fe-48f1-95bf-d27db70bdc88", :page 496, :position {:bounding {:x1 157.4410400390625, :y1 617.9875183105469, :x2 221.5458221435547, :y2 638.7875061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 157.4410400390625, :y1 617.9875183105469, :x2 221.5458221435547, :y2 638.7875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 189.6999969482422, :y1 621.1875, :x2 189.93980407714844, :y2 636.1750183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 496}, :content {:text "CSS 规则"}, :properties {:color "green"}} {:id #uuid "63d12c28-677f-47e7-a33a-1fe8f86561a6", :page 497, :position {:bounding {:x1 110.8125, :y1 231.16250610351562, :x2 651.9258422851562, :y2 251.96249389648438, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 231.16250610351562, :x2 651.9258422851562, :y2 251.96249389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 407.6750183105469, :y1 234.36248779296875, :x2 621.4125366210938, :y2 249.35000610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 497}, :content {:text "假设这条规则位于页面中的第一个样式表中，而且是该样式表中唯一一条 CSS 规则"}, :properties {:color "yellow"}} {:id #uuid "63d12d2b-628b-4917-8c6a-d69d59f97f31", :page 497, :position {:bounding {:x1 0, :y1 268.7999954223633, :x2 758.3859252929688, :y2 451.7874984741211, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 268.7999954223633, :x2 0, :y2 291.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 408.58751678466797, :x2 758.3859252929688, :y2 429.3875045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 327.4250183105469, :y1 411.4500045776367, :x2 758.3859252929688, :y2 425.68749237060547, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 430.98751068115234, :x2 385.3238067626953, :y2 451.7874984741211, :width 864.9999999999999, :height 1080.0639853747714}), :page 497}, :content {:text "使用这些接口，可以像确定元素 style 对象中包含的样式一样，确定一条样式规则的样式信息。与元素的场景一样，也可以修改规则中的样式"}, :properties {:color "yellow"}} {:id #uuid "63d12d40-5b67-469a-9347-6fc67c5d31f1", :page 496, :position {:bounding {:x1 339.78875732421875, :y1 951.4375457763672, :x2 733.9822998046875, :y2 972.5875396728516, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 653.6375122070312, :y1 951.4375457763672, :x2 733.9822998046875, :y2 971.4375457763672, :width 864.9999999999999, :height 1080.0639853747714} {:x1 339.78875732421875, :y1 951.7875366210938, :x2 632.5734252929688, :y2 972.5875396728516, :width 864.9999999999999, :height 1080.0639853747714} {:x1 384.5500183105469, :y1 954.6375427246094, :x2 632.5734252929688, :y2 969.6250457763672, :width 864.9999999999999, :height 1080.0639853747714} {:x1 653.6375122070312, :y1 954.6375427246094, :x2 653.8304443359375, :y2 968.8750457763672, :width 864.9999999999999, :height 1080.0639853747714}), :page 496}, :content {:text "此外，cssText 是只读的，而 style.cssText 可以被重写"}, :properties {:color "yellow"}} {:id #uuid "63d12d47-b7cb-4ef9-80e9-cdca5c831783", :page 497, :position {:bounding {:x1 123.62259674072266, :y1 576.5250091552734, :x2 184.47915649414062, :y2 597.3250274658203, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 123.62259674072266, :y1 576.5250091552734, :x2 184.47915649414062, :y2 597.3250274658203, :width 864.9999999999999, :height 1080.0639853747714}), :page 497}, :content {:text "创建规则"}, :properties {:color "green"}} {:id #uuid "63d12d7d-d12e-4469-8c68-afa1c6c690ca", :page 497, :position {:bounding {:x1 195.26785278320312, :y1 596.4500274658203, :x2 545.289306640625, :y2 617.2500152587891, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 195.26785278320312, :y1 596.4500274658203, :x2 344.49224853515625, :y2 617.2500152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 362.5375061035156, :y1 596.4500274658203, :x2 545.289306640625, :y2 617.2500152587891, :width 864.9999999999999, :height 1080.0639853747714} {:x1 254.65000915527344, :y1 599.6500091552734, :x2 344.49224853515625, :y2 614.6375274658203, :width 864.9999999999999, :height 1080.0639853747714}), :page 497}, :content {:text "可以使用 insertRule()方法向样式表中添加新规则"}, :properties {:color "yellow"}} {:id #uuid "63d12dc8-3635-4cf9-afe2-4d06377f1fe6", :page 497, :position {:bounding {:x1 127.51250457763672, :y1 763.2125091552734, :x2 184.47915649414062, :y2 784.0124969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.51250457763672, :y1 763.2125091552734, :x2 184.47915649414062, :y2 784.0124969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 497}, :content {:text "删除规则"}, :properties {:color "green"}} {:id #uuid "63d12de8-4a5d-4aef-8f38-d5597cde6c41", :page 497, :position {:bounding {:x1 381.70001220703125, :y1 783.875, :x2 743.114501953125, :y2 805.0250244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 381.70001220703125, :y1 783.875, :x2 470.0303649902344, :y2 803.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 484.26251220703125, :y1 784.2250061035156, :x2 743.114501953125, :y2 805.0250244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 497}, :content {:text "deleteRule()，它接收一个参数：要删除规则的索引"}, :properties {:color "yellow"}} {:id #uuid "63d12e03-3141-48cf-9814-4b6a0992a2a7", :page 497, :position {:bounding {:x1 152.46250915527344, :y1 914.0750427246094, :x2 229.2877960205078, :y2 940.4750366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 914.0750427246094, :x2 229.2877960205078, :y2 940.4750366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 497}, :content {:text "元素尺寸"}, :properties {:color "green"}} {:id #uuid "63d12e13-0ab6-4d91-9b2a-67e0edbac2c3", :page 498, :position {:bounding {:x1 158.9375, :y1 148.37500762939453, :x2 215.90415954589844, :y2 169.17501068115234, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9375, :y1 148.37500762939453, :x2 215.90415954589844, :y2 169.17501068115234, :width 864.9999999999999, :height 1080.0639853747714}), :page 498}, :content {:text "偏移尺寸"}, :properties {:color "green"}} {:id #uuid "63d12e79-8b5c-4a28-8c09-27282c083bae", :page 498, :position {:bounding {:x1 0, :y1 476.80000019073486, :x2 772.5960693359375, :y2 809.7625122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 476.80000019073486, :x2 0, :y2 499.20000171661377, :width 864.9999999999999, :height 1080.0639853747714} {:x1 522.0250244140625, :y1 766.2375183105469, :x2 772.5960693359375, :y2 787.0375061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 766.5750122070312, :x2 506.08990478515625, :y2 787.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 443.6625061035156, :y1 769.4375, :x2 506.08990478515625, :y2 783.6750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 522.0250244140625, :y1 769.4375, :x2 772.5960693359375, :y2 783.6750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 788.9624938964844, :x2 340.5553207397461, :y2 809.7625122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 498}, :content {:text "要确定一个元素在页面中的偏移量，可以把它的 offsetLeft 和 offsetTop 属性分别与 offsetParent的相同属性相加，一直加到根元素"}, :properties {:color "yellow"}} {:id #uuid "63d12e9e-a070-4e47-ab1e-8811cd42c732", :page 499, :position {:bounding {:x1 0, :y1 204.80000686645508, :x2 733.2008056640625, :y2 405.1875190734863, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 204.80000686645508, :x2 0, :y2 227.20000076293945, :width 864.9999999999999, :height 1080.0639853747714} {:x1 561.3125, :y1 362.0000190734863, :x2 733.2008056640625, :y2 382.8000068664551, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.2044219970703, :y1 362.01250076293945, :x2 546.9716186523438, :y2 382.8125190734863, :width 864.9999999999999, :height 1080.0639853747714} {:x1 187, :y1 364.8625068664551, :x2 546.9716186523438, :y2 379.85002517700195, :width 864.9999999999999, :height 1080.0639853747714} {:x1 561.3125, :y1 365.20000076293945, :x2 733.2008056640625, :y2 380.1875190734863, :width 864.9999999999999, :height 1080.0639853747714} {:x1 394.4250183105469, :y1 384.0500068664551, :x2 589.9638671875, :y2 404.85002517700195, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 384.38750076293945, :x2 377.0290832519531, :y2 405.1875190734863, :width 864.9999999999999, :height 1080.0639853747714} {:x1 394.4250183105469, :y1 387.2500190734863, :x2 497.1750183105469, :y2 402.2375068664551, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 387.5875129699707, :x2 377.0290832519531, :y2 402.57500076293945, :width 864.9999999999999, :height 1080.0639853747714}), :page 499}, :content {:text "包含在<div>元素中所有元素都以<body>为其 offsetParent，因此 getElementleft()和 getElementTop()返回的值与 offsetLeft 和 offsetTop 返回的值相同"}, :properties {:color "yellow"}} {:id #uuid "63d12ea5-a40e-4b21-8b78-5d2f2a36e98f", :page 499, :position {:bounding {:x1 127.51250457763672, :y1 494.875, :x2 198.80625915527344, :y2 515.6750183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 127.51250457763672, :y1 494.875, :x2 198.80625915527344, :y2 515.6750183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 499}, :content {:text "客户端尺寸"}, :properties {:color "green"}} {:id #uuid "63d12ec0-542d-463c-bd08-f9dfb6abe4ea", :page 499, :position {:bounding {:x1 0, :y1 348.8000068664551, :x2 762.0949096679688, :y2 956.1625061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 348.8000068664551, :x2 0, :y2 371.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 912.8875427246094, :x2 762.0949096679688, :y2 933.6875305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 569.5625, :y1 935.0249938964844, :x2 681.5252685546875, :y2 955.8249816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 935.3625183105469, :x2 559.1397094726562, :y2 956.1625061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 569.5625, :y1 938.2250061035156, :x2 681.5252685546875, :y2 953.2124938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 938.5625305175781, :x2 559.1397094726562, :y2 953.5500183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 499}, :content {:text "客户端尺寸实际上就是元素内部的空间，因此不包含滚动条占用的空间。这两个属性最常用于确定浏览器视口尺寸，即检测 document.documentElement 的 clientWidth 和 clientHeight"}, :properties {:color "yellow"}} {:id #uuid "63d12eec-db7b-4f75-a70b-003fdff1f032", :page 500, :position {:bounding {:x1 158.9250030517578, :y1 177.50003051757812, :x2 215.8916473388672, :y2 198.30001831054688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 158.9250030517578, :y1 177.50003051757812, :x2 215.8916473388672, :y2 198.30001831054688, :width 864.9999999999999, :height 1080.0639853747714}), :page 500}, :content {:text "滚动尺寸"}, :properties {:color "green"}} {:id #uuid "63d12f44-5302-4366-a59e-54ff39f380c9", :page 500, :position {:bounding {:x1 0, :y1 540.8000106811523, :x2 784.6749877929688, :y2 965.5625305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 540.8000106811523, :x2 0, :y2 563.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 704.1124877929688, :y1 922.0250244140625, :x2 784.6749877929688, :y2 942.8250427246094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 411.7255859375, :y1 922.375, :x2 693.7638549804688, :y2 943.1750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 627.1625366210938, :y1 925.2250061035156, :x2 693.7638549804688, :y2 939.4624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 704.1124877929688, :y1 925.2250061035156, :x2 784.6749877929688, :y2 939.4624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 944.7625427246094, :x2 323.96949005126953, :y2 965.5625305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 500}, :content {:text "如果元素在垂直方向上滚动，则 scrollTop 会大于 0，表示元素顶部不可见区域的高度"}, :properties {:color "yellow"}} {:id #uuid "63d12f5f-8d49-4904-b25b-d01ed5e4ec1c", :page 501, :position {:bounding {:x1 123.3375015258789, :y1 259.3500061035156, :x2 213.1458740234375, :y2 280.1499938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 123.3375015258789, :y1 259.3500061035156, :x2 213.1458740234375, :y2 280.1499938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 501}, :content {:text " 确定元素尺寸"}, :properties {:color "green"}} {:id #uuid "63d12f72-0ba3-4bf8-b430-a5e0191adcfc", :page 501, :position {:bounding {:x1 146, :y1 718.3374862670898, :x2 190.8215789794922, :y2 749.5374984741211, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 146, :y1 718.3374862670898, :x2 190.8215789794922, :y2 749.5374984741211, :width 864.9999999999999, :height 1080.0639853747714}), :page 501}, :content {:text "遍历"}, :properties {:color "green"}} {:id #uuid "63d12f79-23a8-470c-a021-5efa9ce46e62", :page 501, :position {:bounding {:x1 0, :y1 140.7999997138977, :x2 754.1036376953125, :y2 322.5499997138977, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 140.7999997138977, :x2 0, :y2 163.20000886917114, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 279.2624936103821, :x2 488.4837341308594, :y2 300.06251192092896, :width 864.9999999999999, :height 1080.0639853747714} {:x1 506.2749938964844, :y1 279.2624936103821, :x2 754.1036376953125, :y2 300.06251192092896, :width 864.9999999999999, :height 1080.0639853747714} {:x1 309.875, :y1 282.12501192092896, :x2 488.4837341308594, :y2 296.3624997138977, :width 864.9999999999999, :height 1080.0639853747714} {:x1 506.2749938964844, :y1 282.46250581741333, :x2 754.1036376953125, :y2 297.4499936103821, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 300.75001192092896, :x2 174.62086486816406, :y2 321.5499997138977, :width 864.9999999999999, :height 1080.0639853747714} {:x1 185.4875030517578, :y1 301.75001192092896, :x2 498.3363952636719, :y2 322.5499997138977, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 303.9499936103821, :x2 174.62086486816406, :y2 318.93751192092896, :width 864.9999999999999, :height 1080.0639853747714} {:x1 185.4875030517578, :y1 304.9499936103821, :x2 482.1581115722656, :y2 319.93751192092896, :width 864.9999999999999, :height 1080.0639853747714}), :page 501}, :content {:text "浏览器在每个元素上都暴露了 getBoundingClientRect()方法，返回一个 DOMRect 对象，包含6 个属性：left、top、right、bottom、height 和 width。"}, :properties {:color "yellow"}} {:id #uuid "63d12fc3-d0f4-4f10-a8c2-72a9b0c5671a", :page 501, :position {:bounding {:x1 110.8125, :y1 762.7250061035156, :x2 632.213134765625, :y2 783.5250244140625, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 762.7250061035156, :x2 264.5715637207031, :y2 783.5250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 288.1625061035156, :y1 762.7250061035156, :x2 632.213134765625, :y2 783.5250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 288.1625061035156, :y1 765.9250183105469, :x2 604.0856323242188, :y2 780.9125366210938, :width 864.9999999999999, :height 1080.0639853747714}), :page 501}, :content {:text "DOM2 Traversal and Range 模块定义了两个类型用于辅助顺序遍历 DOM 结构"}, :properties {:color "yellow"}} {:id #uuid "63d12fcf-ba0b-4746-bc89-1c41aeb6c6da", :page 501, :position {:bounding {:x1 0, :y1 220.80001068115234, :x2 746.948486328125, :y2 806.5750732421875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 220.80001068115234, :x2 0, :y2 243.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 647.5947265625, :y1 763.7250061035156, :x2 746.948486328125, :y2 784.5250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 722.9874877929688, :y1 765.9250183105469, :x2 746.948486328125, :y2 780.9125366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 785.7750244140625, :x2 650.7325439453125, :y2 806.5750732421875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 788.9750366210938, :x2 519.407958984375, :y2 803.9625244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 501}, :content {:text "这两个类型—— NodeIterator 和 TreeWalker——从某个起点开始执行对 DOM 结构的深度优先遍历"}, :properties {:color "yellow"}} {:id #uuid "63d12ffa-f6b8-4ee2-8dc5-c536f1359daf", :page 502, :position {:bounding {:x1 188.2971954345703, :y1 545.0250091552734, :x2 418.658203125, :y2 565.8249969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 188.2971954345703, :y1 545.0250091552734, :x2 418.658203125, :y2 565.8249969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 502}, :content {:text "任何节点都可以成为遍历的根节点"}, :properties {:color "yellow"}} {:id #uuid "63d13006-4f6a-46f8-8da3-a9d58f13982f", :page 503, :position {:bounding {:x1 152.46250915527344, :y1 222.77499389648438, :x2 269.2849426269531, :y2 248.37496948242188, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 222.77499389648438, :x2 269.2849426269531, :y2 248.37496948242188, :width 864.9999999999999, :height 1080.0639853747714}), :page 503}, :content {:text "NodeIterator"}, :properties {:color "green"}} {:id #uuid "63d13026-a742-40b3-b562-6c425912eb6a", :page 503, :position {:bounding {:x1 0, :y1 92.79998779296875, :x2 753.375, :y2 302.9125061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 92.79998779296875, :x2 0, :y2 115.19998168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 109.20000457763672, :y1 259.3749694824219, :x2 717.853515625, :y2 280.1749572753906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 738.1749877929688, :y1 259.7250061035156, :x2 753.375, :y2 280.5249938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 211.6750030517578, :y1 262.5749816894531, :x2 717.853515625, :y2 276.8124694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 738.1749877929688, :y1 262.9250183105469, :x2 753.375, :y2 277.9125061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 282.1125183105469, :x2 172.1034393310547, :y2 302.9125061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 503}, :content {:text "NodeIterator 类型是两个类型中比较简单的，可以通过 document.createNodeIterator()方法创建其实例"}, :properties {:color "yellow"}} {:id #uuid "63d130ac-a191-4c67-ac7e-73d727d2a3ae", :page 503, :position {:bounding {:x1 0, :y1 492.8000030517578, :x2 754.4374389648438, :y2 868.3125305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 329.70001220703125, :y1 824.7749938964844, :x2 363.7657165527344, :y2 844.7749938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 380.9375, :y1 824.7749938964844, :x2 754.4374389648438, :y2 845.5750122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 380.9375, :y1 827.9750061035156, :x2 754.4374389648438, :y2 842.9624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 847.5125122070312, :x2 248.1461944580078, :y2 868.3125305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 503}, :content {:text "filter 参数可以用来指定自定义 NodeFilter 对象，或者一个作为节点过滤器的函数。"}, :properties {:color "yellow"}} {:id #uuid "63d13129-d26f-4aab-b441-ffca0f5b6745", :page 504, :position {:bounding {:x1 142.22500610351562, :y1 388.6124954223633, :x2 631.0287475585938, :y2 410.41251373291016, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 246.22500610351562, :y1 388.6124954223633, :x2 571.3115844726562, :y2 409.41251373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 582.375, :y1 388.6124954223633, :x2 631.0287475585938, :y2 409.41251373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 389.6124954223633, :x2 235.1378631591797, :y2 410.41251373291016, :width 864.9999999999999, :height 1080.0639853747714} {:x1 183.60000610351562, :y1 391.81250762939453, :x2 235.1378631591797, :y2 406.7999954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 246.22500610351562, :y1 391.81250762939453, :x2 571.3115844726562, :y2 406.7999954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 582.375, :y1 391.81250762939453, :x2 631.0287475585938, :y2 406.7999954223633, :width 864.9999999999999, :height 1080.0639853747714}), :page 504}, :content {:text "通常，JavaScript 会使用这种形式，因为更简单也更像普通 JavaScript 代码。"}, :properties {:color "yellow"}} {:id #uuid "63d13156-60e3-46ad-a58b-970d0e9fb488", :page 504, :position {:bounding {:x1 142.22500610351562, :y1 936.5125122070312, :x2 485.95147705078125, :y2 957.3125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 936.5125122070312, :x2 485.95147705078125, :y2 957.3125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 297.26251220703125, :y1 939.3624877929688, :x2 452.1210632324219, :y2 953.6000061035156, :width 864.9999999999999, :height 1080.0639853747714}), :page 504}, :content {:text "这个例子中第一次调用 nextNode()返回<div>元素"}, :properties {:color "yellow"}} {:id #uuid "63d131b8-705c-4c73-bda5-e64ee3f36899", :page 504, :position {:bounding {:x1 140.6125030517578, :y1 499.0499954223633, :x2 614.2750244140625, :y2 519.849983215332, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 140.6125030517578, :y1 499.0499954223633, :x2 614.2750244140625, :y2 519.849983215332, :width 864.9999999999999, :height 1080.0639853747714} {:x1 243.0749969482422, :y1 502.25000762939453, :x2 591.6643676757812, :y2 516.4874954223633, :width 864.9999999999999, :height 1080.0639853747714}), :page 504}, :content {:text "NodeIterator 的两个主要方法是 nextNode()和 previousNode()。"}, :properties {:color "yellow"}} {:id #uuid "63d131dc-3d34-419e-8cf2-86c9cf775b54", :page 505, :position {:bounding {:x1 152.46250915527344, :y1 600.4874992370605, :x2 254.1549530029297, :y2 626.0875358581543, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 600.4874992370605, :x2 254.1549530029297, :y2 626.0875358581543, :width 864.9999999999999, :height 1080.0639853747714}), :page 505}, :content {:text "TreeWalker"}, :properties {:color "green"}} {:id #uuid "63d13202-8728-4697-862a-0aa18ade29e8", :page 505, :position {:bounding {:x1 109.20000457763672, :y1 794.0375061035156, :x2 626.3902587890625, :y2 815.1749877929688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 109.20000457763672, :y1 794.0375061035156, :x2 195.08502197265625, :y2 814.0375366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 529.4249877929688, :y1 794.0375061035156, :x2 626.3902587890625, :y2 814.0375366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 205.3125, :y1 794.375, :x2 513.760498046875, :y2 815.1749877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 194.60000610351562, :y1 797.2375183105469, :x2 195.08502197265625, :y2 811.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 529.4249877929688, :y1 797.2375183105469, :x2 529.5237426757812, :y2 811.4750061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 205.3125, :y1 797.5750122070312, :x2 513.760498046875, :y2 812.5625, :width 864.9999999999999, :height 1080.0639853747714}), :page 505}, :content {:text "TreeWalker 对 象 要 调 用 document.createTreeWalker() 方 法 来 创 建 ，"}, :properties {:color "yellow"}} {:id #uuid "63d13228-c479-42b1-985a-557c920a7283", :page 506, :position {:bounding {:x1 0, :y1 249.32498168945312, :x2 770.4342651367188, :y2 371.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 667.5875244140625, :y1 249.32498168945312, :x2 770.4342651367188, :y2 270.1249694824219, :width 864.9999999999999, :height 1080.0639853747714} {:x1 216.7802276611328, :y1 249.66250610351562, :x2 338.1194763183594, :y2 270.4624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 355.32501220703125, :y1 249.66250610351562, :x2 655.3908081054688, :y2 270.4624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 303.9875183105469, :y1 252.52499389648438, :x2 338.1194763183594, :y2 266.7624816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 667.5875244140625, :y1 252.52499389648438, :x2 770.4342651367188, :y2 267.5124816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 355.32501220703125, :y1 252.86251831054688, :x2 655.3908081054688, :y2 267.8500061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 271.7124938964844, :x2 486.68243408203125, :y2 292.5124816894531, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 274.9125061035156, :x2 486.68243408203125, :y2 289.8999938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 348.8000183105469, :x2 0, :y2 371.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 506}, :content {:text "节点过滤器（filter）除了可以返回 NodeFilter.FILTER_ACCEPT 和 NodeFilter. FILTER_SKIP，还可以返回 NodeFilter.FILTER_REJECT"}, :properties {:color "yellow"}} {:id #uuid "63d1324e-56c8-46e1-81fd-9a527931b8a0", :page 506, :position {:bounding {:x1 0, :y1 316.5874938964844, :x2 785.405029296875, :y2 419.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 514.9125366210938, :y1 316.5874938964844, :x2 706.7130737304688, :y2 336.5874938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 719.9625244140625, :y1 316.5874938964844, :x2 785.405029296875, :y2 336.5874938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 719.9625244140625, :y1 319.7875061035156, :x2 785.405029296875, :y2 334.0249938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 339.3249816894531, :x2 353.03284454345703, :y2 360.1250305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 396.8000183105469, :x2 0, :y2 419.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 506}, :content {:text "NodeFilter.FILTER_REJECT 则表示跳过该节点以及该节点的整个子树。"}, :properties {:color "yellow"}} {:id #uuid "63d1327d-1dd5-4aba-b6e3-fff045462dc3", :page 506, :position {:bounding {:x1 0, :y1 684.800012588501, :x2 785.3616333007812, :y2 739.550012588501, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 684.800012588501, :x2 0, :y2 707.2000370025635, :width 864.9999999999999, :height 1080.0639853747714} {:x1 629.0499877929688, :y1 696.2625370025635, :x2 785.3616333007812, :y2 717.0625247955322, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 696.2749881744385, :x2 611.2164916992188, :y2 717.0750370025635, :width 864.9999999999999, :height 1080.0639853747714} {:x1 203.8000030517578, :y1 699.1250247955322, :x2 611.2164916992188, :y2 713.362512588501, :width 864.9999999999999, :height 1080.0639853747714} {:x1 629.0499877929688, :y1 699.4624881744385, :x2 785.3616333007812, :y2 714.4500370025635, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 718.7500247955322, :x2 267.8104553222656, :y2 739.550012588501, :width 864.9999999999999, :height 1080.0639853747714} {:x1 287.01251220703125, :y1 718.7500247955322, :x2 704.7875366210938, :y2 739.550012588501, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 721.9500370025635, :x2 267.8104553222656, :y2 736.9375247955322, :width 864.9999999999999, :height 1080.0639853747714} {:x1 287.01251220703125, :y1 721.9500370025635, :x2 683.2360229492188, :y2 736.9375247955322, :width 864.9999999999999, :height 1080.0639853747714}), :page 506}, :content {:text "注意，此时的 TreeWalker 只返回元素（这是因为传给 createTreeWalker()的第二个参数）。最后就可以使用 nextSibling()访问每个<li>元素，直到再也没有元素，此时方法返回 null。"}, :properties {:color "yellow"}} {:id #uuid "63d13283-b284-49b0-a273-cce93025889d", :page 506, :position {:bounding {:x1 351.0500183105469, :y1 741.1499938964844, :x2 743.3883666992188, :y2 761.9500122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 351.0500183105469, :y1 741.1499938964844, :x2 743.3883666992188, :y2 761.9500122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 355.0375061035156, :y1 744, :x2 449.2024841308594, :y2 758.2374877929688, :width 864.9999999999999, :height 1080.0639853747714}), :page 506}, :content {:text " currentNode 的属性，表示遍历过程中上一次返回的节点"}, :properties {:color "yellow"}} {:id #uuid "63d13305-1796-4ff0-aca7-b44c7f048f27", :page 506, :position {:bounding {:x1 156.34364318847656, :y1 879.4500122070312, :x2 222.2340545654297, :y2 912.1250305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 177.41250610351562, :y1 879.4500122070312, :x2 222.2340545654297, :y2 910.6499938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 156.34364318847656, :y1 880.9250183105469, :x2 156.34666442871094, :y2 912.1250305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 506}, :content {:text "范围"}, :properties {:color "green"}} {:id #uuid "63d13312-d43c-4ce0-b26a-414aa309fdfa", :page 507, :position {:bounding {:x1 152.46250915527344, :y1 120.7125244140625, :x2 239.36265563964844, :y2 147.11248779296875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 120.7125244140625, :x2 239.36265563964844, :y2 147.11248779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 196.7375030517578, :y1 124.7125244140625, :x2 200.53750610351562, :y2 143.6875, :width 864.9999999999999, :height 1080.0639853747714}), :page 507}, :content {:text "DOM 范围"}, :properties {:color "green"}} {:id #uuid "63d13320-5c2d-4add-8fc1-938ea67da783", :page 507, :position {:bounding {:x1 110.8125, :y1 157.28749084472656, :x2 709.03955078125, :y2 179.08750915527344, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 157.28749084472656, :x2 472.2516174316406, :y2 178.08750915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 482.6499938964844, :y1 158.28749084472656, :x2 709.03955078125, :y2 179.08750915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 156.2624969482422, :y1 161.4875030517578, :x2 472.2516174316406, :y2 176.47499084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 482.6499938964844, :y1 161.4875030517578, :x2 650.7049560546875, :y2 176.47499084472656, :width 864.9999999999999, :height 1080.0639853747714}), :page 507}, :content {:text "DOM2 在 Document 类型上定义了一个 createRange()方法，暴露在 document 对象上。"}, :properties {:color "yellow"}} {:id #uuid "63d13361-b6f9-484c-935e-39c1f65c3b9a", :page 507, :position {:bounding {:x1 110.8125, :y1 297.87500607967377, :x2 501.07476806640625, :y2 318.6749938726425, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 297.87500607967377, :x2 501.07476806640625, :y2 318.6749938726425, :width 864.9999999999999, :height 1080.0639853747714} {:x1 207.3125, :y1 300.7250121831894, :x2 252.85000610351562, :y2 314.96249997615814, :width 864.9999999999999, :height 1080.0639853747714}), :page 507}, :content {:text "每个范围都是 Range 类型的实例，拥有相应的属性和方法"}, :properties {:color "yellow"}} {:id #uuid "63d13383-7aa9-4b7b-980f-122363dd2568", :page 507, :position {:bounding {:x1 152.46250915527344, :y1 534.75, :x2 229.2877960205078, :y2 561.1499938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 534.75, :x2 229.2877960205078, :y2 561.1499938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 507}, :content {:text "简单选择"}, :properties {:color "green"}} {:id #uuid "63d133a7-2cf1-46c2-91e6-d239302f255f", :page 507, :position {:bounding {:x1 0, :y1 300.8000030517578, :x2 740.2283325195312, :y2 616.875, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 300.8000030517578, :x2 0, :y2 323.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 306.4560546875, :y1 573.6875, :x2 556.6766967773438, :y2 594.4875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 566.9125366210938, :y1 573.6875, :x2 740.2283325195312, :y2 594.4875183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 403.1875, :y1 576.8875122070312, :x2 556.6766967773438, :y2 591.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 566.9125366210938, :y1 576.8875122070312, :x2 740.2283325195312, :y2 591.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 596.0750122070312, :x2 110.57756805419922, :y2 616.875, :width 864.9999999999999, :height 1080.0639853747714}), :page 507}, :content {:text "最简单的方式，就是使用 selectNode()或 selectNodeContents()方法"}, :properties {:color "yellow"}} {:id #uuid "63d133ca-87b4-44f2-ab8d-980c7b716ad4", :page 507, :position {:bounding {:x1 0, :y1 316.8000030517578, :x2 753.6500244140625, :y2 639.3625183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 316.8000030517578, :x2 0, :y2 339.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 632.778564453125, :y1 596.0750122070312, :x2 753.6500244140625, :y2 616.875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 639.5875244140625, :y1 598.9375, :x2 753.6500244140625, :y2 613.1750183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 618.5625, :x2 302.3038024902344, :y2 639.3625183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 507}, :content {:text "。selectNode()方法选择整个节点，包括其后代节点"}, :properties {:color "yellow"}} {:id #uuid "63d133d1-91bd-426e-bbd2-e59fb4cee9b8", :page 507, :position {:bounding {:x1 328.375, :y1 618.5625, :x2 614.9517822265625, :y2 639.3625183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 328.375, :y1 618.5625, :x2 483.73834228515625, :y2 639.3625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 496.3125, :y1 618.5625, :x2 614.9517822265625, :y2 639.3625183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 328.375, :y1 621.7625122070312, :x2 483.73834228515625, :y2 636.75, :width 864.9999999999999, :height 1080.0639853747714}), :page 507}, :content {:text " selectNodeContents()只选择节点的后代"}, :properties {:color "yellow"}} {:id #uuid "63d134e4-b8aa-44a5-b060-e284ab772a58", :page 508, :position {:bounding {:x1 0, :y1 121.1875, :x2 784.7750244140625, :y2 259.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 121.1875, :x2 267.9500427246094, :y2 141.98748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 278.4750061035156, :y1 121.1875, :x2 413.097900390625, :y2 141.98748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 428.1000061035156, :y1 121.1875, :x2 784.7750244140625, :y2 141.98748779296875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 176, :y1 124.04998779296875, :x2 267.9500427246094, :y2 138.28750610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 278.4750061035156, :y1 124.38751220703125, :x2 413.097900390625, :y2 139.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 428.1000061035156, :y1 124.38751220703125, :x2 784.7750244140625, :y2 139.375, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 143.58749389648438, :x2 277.8845901489258, :y2 164.38751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 236.80001831054688, :x2 0, :y2 259.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 508}, :content {:text "调用 selectNode()时，startContainer、endContainer 和 commonAncestorContainer 都等于传入节点的父节点。"}, :properties {:color "yellow"}} {:id #uuid "63d13523-4bff-45df-93bd-b9dce54a912b", :page 508, :position {:bounding {:x1 0, :y1 210.85000610351562, :x2 792.7514038085938, :y2 323.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 366.0500183105469, :y1 210.85000610351562, :x2 500.9604187011719, :y2 231.64999389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 516.0499877929688, :y1 210.85000610351562, :x2 792.7514038085938, :y2 231.64999389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 210.86248779296875, :x2 352.65606689453125, :y2 231.66250610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 195.0749969482422, :y1 213.71249389648438, :x2 352.65606689453125, :y2 227.94998168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 366.0500183105469, :y1 214.04998779296875, :x2 500.9604187011719, :y2 229.03750610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 516.0499877929688, :y1 214.04998779296875, :x2 792.7514038085938, :y2 229.03750610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 232.89999389648438, :x2 331.9277038574219, :y2 252.89999389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 236.10000610351562, :x2 191.83750915527344, :y2 250.33749389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 300.8000183105469, :x2 0, :y2 323.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 508}, :content {:text "在调用 selectNodeContents()时，startContainer、endContainer 和 commonAncestor Container 属性就是传入的节点"}, :properties {:color "yellow"}} {:id #uuid "63d13588-dc77-4f77-887a-4fc4478dc1d1", :page 508, :position {:bounding {:x1 0, :y1 412.2374954223633, :x2 785.217529296875, :y2 467.2000198364258, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 161.4875030517578, :y1 412.2374954223633, :x2 257.29547119140625, :y2 432.2374954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 281.0375061035156, :y1 412.2374954223633, :x2 785.217529296875, :y2 433.03748321533203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 281.0375061035156, :y1 415.43750762939453, :x2 785.217529296875, :y2 429.6749954223633, :width 864.9999999999999, :height 1080.0639853747714} {:x1 161.47500610351562, :y1 434.97501373291016, :x2 549.1754760742188, :y2 455.7750015258789, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 444.7999954223633, :x2 0, :y2 467.2000198364258, :width 864.9999999999999, :height 1080.0639853747714}), :page 508}, :content {:text "setStartAfter(refNode)，把范围的起点设置到 refNode 之后，从而将 refNode 排除在选区之外，让其下一个同胞节点成为选区的第一个子节点"}, :properties {:color "yellow"}} {:id #uuid "63d135a3-c48d-4d4a-a54d-6d58fa93400b", :page 508, :position {:bounding {:x1 183.875, :y1 692.3375244140625, :x2 260.7002868652344, :y2 718.7375183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 692.3375244140625, :x2 260.7002868652344, :y2 718.7375183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 508}, :content {:text "复杂选择"}, :properties {:color "green"}} {:id #uuid "63d135b4-8e95-4998-a225-47775b0613a8", :page 508, :position {:bounding {:x1 0, :y1 652.8000183105469, :x2 789.0634155273438, :y2 772.3875122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 652.8000183105469, :x2 0, :y2 675.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 142.22500610351562, :y1 729.1000061035156, :x2 397.5234680175781, :y2 749.9000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 414.4375, :y1 729.1000061035156, :x2 789.0634155273438, :y2 749.9000244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 333.6875, :y1 731.9500122070312, :x2 397.5234680175781, :y2 746.1875, :width 864.9999999999999, :height 1080.0639853747714} {:x1 414.4375, :y1 732.3000183105469, :x2 789.0634155273438, :y2 747.2875061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 751.5875244140625, :x2 171.41461181640625, :y2 772.3875122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 508}, :content {:text "要创建复杂的范围，需要使用 setStart()和 setEnd()方法。这两个方法都接收两个参数：参照节点和偏移量"}, :properties {:color "yellow"}} {:id #uuid "63d1376e-a8ea-41e1-8ef8-b5a9352e7362", :page 509, :position {:bounding {:x1 0, :y1 76.80001831054688, :x2 753.6912841796875, :y2 232.80001831054688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 76.80001831054688, :x2 0, :y2 99.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 156.46600341796875, :y1 189.60000610351562, :x2 753.6912841796875, :y2 210.39999389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 280.75, :y1 192.4625244140625, :x2 753.6912841796875, :y2 207.45001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 212.00003051757812, :x2 126.61061096191406, :y2 232.80001831054688, :width 864.9999999999999, :height 1080.0639853747714}), :page 509}, :content {:text "要选择节点（使用 range1），必须先确定给定节点（p1）在其父节点 childNodes 集合中的索引"}, :properties {:color "yellow"}} {:id #uuid "63d137d0-24f7-499c-8c51-8b51a22d227c", :page 509, :position {:bounding {:x1 0, :y1 108.80001831054688, :x2 753.2750244140625, :y2 276.4375305175781, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 108.80001831054688, :x2 0, :y2 131.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 631.1637573242188, :y1 234.38754272460938, :x2 719.7973022460938, :y2 255.18753051757812, :width 864.9999999999999, :height 1080.0639853747714} {:x1 738.0750122070312, :y1 234.38754272460938, :x2 753.2750244140625, :y2 255.18753051757812, :width 864.9999999999999, :height 1080.0639853747714} {:x1 645.9500122070312, :y1 237.58749389648438, :x2 719.7973022460938, :y2 252.57504272460938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 738.0750122070312, :y1 237.58749389648438, :x2 753.2750244140625, :y2 252.57504272460938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 256.4375305175781, :x2 423.12855529785156, :y2 276.4375305175781, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 259.6375427246094, :x2 141.12258911132812, :y2 273.8750305175781, :width 864.9999999999999, :height 1080.0639853747714}), :page 509}, :content {:text "但 setStart()和 setEnd()真正的威力还是选择节点中的某个部分。"}, :properties {:color "yellow"}} {:id #uuid "63d13857-2e41-4c42-85e5-193a272e1035", :page 509, :position {:bounding {:x1 0, :y1 412.80001068115234, :x2 753.2750244140625, :y2 762.7000350952148, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 412.80001068115234, :x2 0, :y2 435.2000045776367, :width 864.9999999999999, :height 1080.0639853747714} {:x1 728.5875244140625, :y1 720.3125228881836, :x2 753.2750244140625, :y2 740.3125228881836, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 720.6499862670898, :x2 713.5982666015625, :y2 741.4500350952148, :width 864.9999999999999, :height 1080.0639853747714} {:x1 728.5875244140625, :y1 723.5125350952148, :x2 753.2750244140625, :y2 737.7500228881836, :width 864.9999999999999, :height 1080.0639853747714} {:x1 141.75, :y1 723.8499984741211, :x2 713.5982666015625, :y2 738.8374862670898, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 742.7000350952148, :x2 198.41250610351562, :y2 762.7000350952148, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 745.8999862670898, :x2 198.41250610351562, :y2 760.1375350952148, :width 864.9999999999999, :height 1080.0639853747714}), :page 509}, :content {:text "因为 helloNode 和 worldNode 是文本节点，所以它们会成为范围的 startContainer 和 endContainer，"}, :properties {:color "yellow"}} {:id #uuid "63d138d7-2bc3-4531-bab0-f9cb578a5bb3", :page 509, :position {:bounding {:x1 152.46250915527344, :y1 845.4875183105469, :x2 229.2877960205078, :y2 871.8875122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 845.4875183105469, :x2 229.2877960205078, :y2 871.8875122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 509}, :content {:text "操作范围"}, :properties {:color "green"}} {:id #uuid "63d138ec-30b5-418e-9cc3-2e4478fc2891", :page 509, :position {:bounding {:x1 110.8125, :y1 884.4125061035156, :x2 671.1398315429688, :y2 905.2124938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 884.4125061035156, :x2 671.1398315429688, :y2 905.2124938964844, :width 864.9999999999999, :height 1080.0639853747714}), :page 509}, :content {:text "创建范围之后，浏览器会在内部创建一个文档片段节点，用于包含范围选区中的节点"}, :properties {:color "yellow"}} {:id #uuid "63d138fa-04d1-44d8-b5c9-dd7d1725d581", :page 509, :position {:bounding {:x1 0, :y1 540.8000183105469, :x2 758.4909057617188, :y2 972.4125213623047, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 540.8000183105469, :x2 0, :y2 563.2000274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 423.3688049316406, :y1 929.2125244140625, :x2 758.4909057617188, :y2 950.0125274658203, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 951.6125335693359, :x2 379.77001953125, :y2 972.4125213623047, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 954.8125305175781, :x2 248.44920349121094, :y2 969.8000335693359, :width 864.9999999999999, :height 1080.0639853747714}), :page 509}, :content {:text "不过，范围能够确定缺失的开始和结束标签，从而可以重构出有效的 DOM 结构，以便后续操作"}, :properties {:color "yellow"}} {:id #uuid "63d13929-6e80-4555-a958-481c5f85e20b", :page 510, :position {:bounding {:x1 173.0547637939453, :y1 121.18753051757812, :x2 449.5498046875, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 173.0547637939453, :y1 121.18753051757812, :x2 449.5498046875, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 307.4125061035156, :y1 124.05001831054688, :x2 417.65997314453125, :y2 139.03750610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 510}, :content {:text "同时还需要补上封闭\"He\"的结束标签</b>"}, :properties {:color "yellow"}} {:id #uuid "63d13966-596c-46b2-9480-e984433e103d", :page 510, :position {:bounding {:x1 0, :y1 348.800012588501, :x2 788.5939331054688, :y2 623.237512588501, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 348.800012588501, :x2 0, :y2 371.20000648498535, :width 864.9999999999999, :height 1080.0639853747714} {:x1 487.4875183105469, :y1 580.0375003814697, :x2 788.5939331054688, :y2 600.8374881744385, :width 864.9999999999999, :height 1080.0639853747714} {:x1 340.1800537109375, :y1 580.050012588501, :x2 472.274169921875, :y2 600.8500003814697, :width 864.9999999999999, :height 1080.0639853747714} {:x1 350.7749938964844, :y1 582.8999881744385, :x2 472.274169921875, :y2 597.1375370025635, :width 864.9999999999999, :height 1080.0639853747714} {:x1 487.4875183105469, :y1 583.237512588501, :x2 788.5939331054688, :y2 598.2250003814697, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 602.4375247955322, :x2 173.0547637939453, :y2 623.237512588501, :width 864.9999999999999, :height 1080.0639853747714}), :page 510}, :content {:text "：deleteContents()。顾名思义，这个方法会从文档中删除范围包含的节点"}, :properties {:color "yellow"}} {:id #uuid "63d13a06-db29-4322-be32-20a70212a29e", :page 510, :position {:bounding {:x1 0, :y1 556.8000183105469, :x2 791.1271362304688, :y2 932.8250122070312, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 556.8000183105469, :x2 0, :y2 579.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 572.8000183105469, :x2 0, :y2 595.2000122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 366.2375183105469, :y1 867.1500244140625, :x2 506.4356384277344, :y2 887.9500122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 521.6500244140625, :y1 867.1500244140625, :x2 784.7775268554688, :y2 887.9500122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 217.1750030517578, :y1 867.1625366210938, :x2 346.7720642089844, :y2 887.9625244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 366.2375183105469, :y1 870.3500366210938, :x2 506.4356384277344, :y2 885.3375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 521.6500244140625, :y1 870.3500366210938, :x2 784.7775268554688, :y2 885.3375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 217.1750030517578, :y1 870.3624877929688, :x2 346.7720642089844, :y2 885.3500366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 317.5625, :y1 889.5375366210938, :x2 791.1271362304688, :y2 910.3375244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 889.5499877929688, :x2 298.0970458984375, :y2 910.3500366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 317.5625, :y1 892.7374877929688, :x2 791.1271362304688, :y2 907.7250366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 892.75, :x2 298.0970458984375, :y2 907.7374877929688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 912.0250244140625, :x2 203.50137329101562, :y2 932.8250122070312, :width 864.9999999999999, :height 1080.0639853747714}), :page 510}, :content {:text " extractContents()跟 deleteContents()类似，也会从文档中移除范围选区。但不同的是，extractContents()方法返回范围对应的文档片段。这样，就可以把范围选中的内容插入文档中其他地方"}, :properties {:color "yellow"}} {:id #uuid "63d13a1e-53ac-42ed-afed-a7fffc40cee6", :page 511, :position {:bounding {:x1 369.6418151855469, :y1 321.9624938964844, :x2 619.3294677734375, :y2 342.76251220703125, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 369.6418151855469, :y1 321.9624938964844, :x2 515.8336181640625, :y2 342.76251220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 528.0125122070312, :y1 321.9624938964844, :x2 619.3294677734375, :y2 342.76251220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 399.9125061035156, :y1 324.82501220703125, :x2 515.8336181640625, :y2 339.0625, :width 864.9999999999999, :height 1080.0639853747714}), :page 511}, :content {:text "使用 cloneContents()创建一个副本"}, :properties {:color "yellow"}} {:id #uuid "63d13a27-fb23-4282-aed0-8a1541488b74", :page 511, :position {:bounding {:x1 0, :y1 316.8000183105469, :x2 742.1940307617188, :y2 572.6625366210938, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 316.8000183105469, :x2 0, :y2 339.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 632.1875, :y1 529.0250244140625, :x2 742.1940307617188, :y2 549.0250244140625, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 551.8624877929688, :x2 453.8058776855469, :y2 572.6625366210938, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 555.0625, :x2 354.81605529785156, :y2 570.0499877929688, :width 864.9999999999999, :height 1080.0639853747714}), :page 511}, :content {:text "cloneContents()返回的文档片段包含范围中节点的副本，而非实际的节点"}, :properties {:color "yellow"}} {:id #uuid "63d13a54-2672-42a3-863e-3418f8d2e6e0", :page 511, :position {:bounding {:x1 152.46250915527344, :y1 674.3125152587891, :x2 229.2877960205078, :y2 700.7125091552734, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 674.3125152587891, :x2 229.2877960205078, :y2 700.7125091552734, :width 864.9999999999999, :height 1080.0639853747714}), :page 511}, :content {:text "范围插入"}, :properties {:color "green"}} {:id #uuid "63d13ac9-5c9f-43e8-9fa5-0232bc2a3f95", :page 512, :position {:bounding {:x1 0, :y1 170.66250610351562, :x2 789.2985229492188, :y2 291.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 185.3874969482422, :y1 170.66250610351562, :x2 434.257080078125, :y2 191.46255493164062, :width 864.9999999999999, :height 1080.0639853747714} {:x1 444.4125061035156, :y1 170.99996948242188, :x2 789.2985229492188, :y2 191.80001831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 185.3874969482422, :y1 173.86251831054688, :x2 434.257080078125, :y2 188.85000610351562, :width 864.9999999999999, :height 1080.0639853747714} {:x1 444.4125061035156, :y1 174.19998168945312, :x2 789.2985229492188, :y2 189.18746948242188, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 193.39999389648438, :x2 609.5026245117188, :y2 214.19998168945312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.13750457763672, :y1 196.60000610351562, :x2 323.5558166503906, :y2 211.58749389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 268.8000183105469, :x2 0, :y2 291.1999816894531, :width 864.9999999999999, :height 1080.0639853747714}), :page 512}, :content {:text "<span>正好插入到\"Hello\"中的\"llo\"之前，也就是范围选区的前面。同时，也要注意原始的 HTML 并没有添加或删除<b>元素，因为这里并没有使用之前提到的方法"}, :properties {:color "yellow"}} {:id #uuid "63d13b3e-3b41-455e-8926-6ef78b6a3e80", :page 512, :position {:bounding {:x1 0, :y1 238.27500915527344, :x2 787.89599609375, :y2 339.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 544.0375366210938, :y1 238.27500915527344, :x2 787.89599609375, :y2 259.0749969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 355.58868408203125, :y1 238.28749084472656, :x2 532.9668579101562, :y2 259.08750915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 390.2375183105469, :y1 241.1374969482422, :x2 532.9668579101562, :y2 255.37501525878906, :width 864.9999999999999, :height 1080.0639853747714} {:x1 544.0375366210938, :y1 241.47499084472656, :x2 787.89599609375, :y2 256.46250915527344, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 260.6750030517578, :x2 371.04505157470703, :y2 281.47499084472656, :width 864.9999999999999, :height 1080.0639853747714} {:x1 0, :y1 316.8000030517578, :x2 0, :y2 339.1999969482422, :width 864.9999999999999, :height 1080.0639853747714}), :page 512}, :content {:text "使用 surroundContents()方法插入包含范围的内容。这个方法接收一个参数，即包含范围内容的节点"}, :properties {:color "yellow"}} {:id #uuid "63d13bbf-dbfe-40a0-8824-452e5a73ac54", :page 512, :position {:bounding {:x1 142.22500610351562, :y1 570.2624969482422, :x2 521.078857421875, :y2 591.0624847412109, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 570.2624969482422, :x2 521.078857421875, :y2 591.0624847412109, :width 864.9999999999999, :height 1080.0639853747714} {:x1 202.1875, :y1 573.1249847412109, :x2 496.35797119140625, :y2 588.1124725341797, :width 864.9999999999999, :height 1080.0639853747714}), :page 512}, :content {:text "为了插入<span>元素，范围中必须包含完整的 DOM 结构"}, :properties {:color "yellow"}} {:id #uuid "63d13bd4-09c8-4afc-a7fd-cca168116223", :page 512, :position {:bounding {:x1 183.875, :y1 650.2125244140625, :x2 260.7002868652344, :y2 676.6125183105469, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 650.2125244140625, :x2 260.7002868652344, :y2 676.6125183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 512}, :content {:text "范围折叠"}, :properties {:color "green"}} {:id #uuid "63d13bdd-7e01-4f81-92e1-879c0eea963f", :page 512, :position {:bounding {:x1 142.22500610351562, :y1 689.1500244140625, :x2 564.1749877929688, :y2 709.9500427246094, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 689.1500244140625, :x2 564.1749877929688, :y2 709.9500427246094, :width 864.9999999999999, :height 1080.0639853747714} {:x1 446.4125061035156, :y1 691.3500061035156, :x2 564.1749877929688, :y2 706.3375244140625, :width 864.9999999999999, :height 1080.0639853747714}), :page 512}, :content {:text "如果范围并没有选择文档的任何部分，则称为折叠（collapsed）"}, :properties {:color "yellow"}} {:id #uuid "63d13c57-e9f0-499c-8e94-267642b68d8e", :page 513, :position {:bounding {:x1 110.8125, :y1 121.1875, :x2 761.7821655273438, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 121.1875, :x2 305.2962646484375, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 320.125, :y1 121.1875, :x2 761.7821655273438, :y2 141.98751831054688, :width 864.9999999999999, :height 1080.0639853747714} {:x1 234.72500610351562, :y1 124.05001831054688, :x2 305.2962646484375, :y2 138.28750610351562, :width 864.9999999999999, :height 1080.0639853747714}), :page 513}, :content {:text "折叠范围可以使用 collapse()方法，这个方法接收一个参数：布尔值，表示折叠到范围哪一端。"}, :properties {:color "yellow"}} {:id #uuid "63d13c63-05c4-4bb6-9479-83203fd53459", :page 513, :position {:bounding {:x1 0, :y1 28.800003051757812, :x2 746.7267456054688, :y2 186.77499389648438, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 28.800003051757812, :x2 0, :y2 51.20001220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 388.7124938964844, :y1 143.58749389648438, :x2 746.7267456054688, :y2 164.38751220703125, :width 864.9999999999999, :height 1080.0639853747714} {:x1 574.9500122070312, :y1 146.78750610351562, :x2 746.7267456054688, :y2 161.77499389648438, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.73750305175781, :y1 165.97500610351562, :x2 126.34126281738281, :y2 186.77499389648438, :width 864.9999999999999, :height 1080.0639853747714}), :page 513}, :content {:text "要确定范围是否已经被折叠，可以检测范围的 collapsed属性："}, :properties {:color "yellow"}} {:id #uuid "63d13c9c-d4fa-42cd-97d8-73fc5e20e976", :page 513, :position {:bounding {:x1 110.8125, :y1 230.875, :x2 537.1986694335938, :y2 251.67501831054688, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 110.8125, :y1 230.875, :x2 537.1986694335938, :y2 251.67501831054688, :width 864.9999999999999, :height 1080.0639853747714}), :page 513}, :content {:text "测试范围是否被折叠，能够帮助确定范围中的两个节点是否相邻"}, :properties {:color "yellow"}} {:id #uuid "63d13ca2-a28e-4219-9a11-ed8b43b4fe43", :page 513, :position {:bounding {:x1 152.46250915527344, :y1 455.9000129699707, :x2 229.2877960205078, :y2 482.3000068664551, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 152.46250915527344, :y1 455.9000129699707, :x2 229.2877960205078, :y2 482.3000068664551, :width 864.9999999999999, :height 1080.0639853747714}), :page 513}, :content {:text "范围比较"}, :properties {:color "green"}} {:id #uuid "63d13cc3-38c4-4e4d-9592-3a028087fc67", :page 513, :position {:bounding {:x1 0, :y1 284.8000030517578, :x2 756.3339233398438, :y2 538.0375061035156, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 284.8000030517578, :x2 0, :y2 307.1999969482422, :width 864.9999999999999, :height 1080.0639853747714} {:x1 110.8125, :y1 494.8374938964844, :x2 756.3339233398438, :y2 515.6375122070312, :width 864.9999999999999, :height 1080.0639853747714} {:x1 314.8125, :y1 497.6875, :x2 756.3339233398438, :y2 511.9250183105469, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 517.2375183105469, :x2 203.2128143310547, :y2 538.0375061035156, :width 864.9999999999999, :height 1080.0639853747714} {:x1 80.75, :y1 520.4375, :x2 203.2128143310547, :y2 535.4250183105469, :width 864.9999999999999, :height 1080.0639853747714}), :page 513}, :content {:text "如果有多个范围，则可以使用 compareBoundaryPoints()方法确定范围之间是否存在公共的边界（起点或终点）"}, :properties {:color "yellow"}} {:id #uuid "63d13d3b-6aa7-4050-9910-e0b8e535c7b7", :page 513, :position {:bounding {:x1 380.93267822265625, :y1 881.6625061035156, :x2 746.8013916015625, :y2 902.4624938964844, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 380.93267822265625, :y1 881.6625061035156, :x2 642.1392211914062, :y2 902.4624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 655.4375, :y1 881.6625061035156, :x2 746.8013916015625, :y2 902.4624938964844, :width 864.9999999999999, :height 1080.0639853747714} {:x1 484.6499938964844, :y1 884.5249938964844, :x2 642.1392211914062, :y2 898.7625427246094, :width 864.9999999999999, :height 1080.0639853747714}), :page 513}, :content {:text "，因为它们都是 selectNodeContents()默认返回的值"}, :properties {:color "yellow"}} {:id #uuid "63d13d45-8590-4fda-b28c-aa19c7a110ae", :page 514, :position {:bounding {:x1 183.875, :y1 241.66251373291016, :x2 260.7002868652344, :y2 268.06250762939453, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 241.66251373291016, :x2 260.7002868652344, :y2 268.06250762939453, :width 864.9999999999999, :height 1080.0639853747714}), :page 514}, :content {:text "复制范围"}, :properties {:color "green"}} {:id #uuid "63d13d72-75d0-4675-b1d7-5a917faa965e", :page 514, :position {:bounding {:x1 142.22500610351562, :y1 280.5875015258789, :x2 445.3720397949219, :y2 301.38748931884766, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 142.22500610351562, :y1 280.5875015258789, :x2 445.3720397949219, :y2 301.38748931884766, :width 864.9999999999999, :height 1080.0639853747714} {:x1 220.97500610351562, :y1 283.44998931884766, :x2 316.64715576171875, :y2 297.68750762939453, :width 864.9999999999999, :height 1080.0639853747714}), :page 514}, :content {:text "调用范围的 cloneRange()方法可以复制范围"}, :properties {:color "yellow"}} {:id #uuid "63d13d9a-0a9c-4e7e-8bdf-6e67a0b22410", :page 514, :position {:bounding {:x1 183.875, :y1 365.66251373291016, :x2 222.2876434326172, :y2 392.06250762939453, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 183.875, :y1 365.66251373291016, :x2 222.2876434326172, :y2 392.06250762939453, :width 864.9999999999999, :height 1080.0639853747714}), :page 514}, :content {:text "清理"}, :properties {:color "green"}} {:id #uuid "63d13da6-a01c-40ef-83e9-e600958fe7d1", :page 514, :position {:bounding {:x1 0, :y1 332.7999954223633, :x2 792.5912475585938, :y2 447.7999954223633, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 0, :y1 332.7999954223633, :x2 0, :y2 355.19998931884766, :width 864.9999999999999, :height 1080.0639853747714} {:x1 277.4892578125, :y1 404.59998321533203, :x2 792.5912475585938, :y2 425.40003204345703, :width 864.9999999999999, :height 1080.0639853747714} {:x1 338.7250061035156, :y1 407.46253204345703, :x2 792.5912475585938, :y2 421.7000198364258, :width 864.9999999999999, :height 1080.0639853747714} {:x1 112.1500015258789, :y1 427.00000762939453, :x2 310.12198638916016, :y2 447.7999954223633, :width 864.9999999999999, :height 1080.0639853747714}), :page 514}, :content {:text "最好调用 detach()方法把范围从创建它的文档中剥离。调用 detach()之后，就可以放心解除对范围的引用"}, :properties {:color "yellow"}} {:id #uuid "63d13dd5-cd53-4964-9f17-f4a6a6917c76", :page 515, :position {:bounding {:x1 146, :y1 703.9124984741211, :x2 213.32534790039062, :y2 735.1125106811523, :width 864.9999999999999, :height 1080.0639853747714}, :rects ({:x1 146, :y1 703.9124984741211, :x2 213.32534790039062, :y2 735.1125106811523, :width 864.9999999999999, :height 1080.0639853747714}), :page 515}, :content {:text "事件流"}, :properties {:color "green"}} {:id #uuid "63d1d1f1-fa9a-4a66-8b76-fe718b21f770", :page 515, :position {:bounding {:x1 0, :y1 380.8000183105469, :x2 802.4960815906525, :y2 905.9250335693359, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 380.8000183105469, :x2 0, :y2 403.2000427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 260.4540283679962, :y1 859.9125366210938, :x2 802.4960815906525, :y2 882.3125457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 883.5250396728516, :x2 149.08755803108215, :y2 905.9250335693359, :width 911.6666666666666, :height 1138.3333333333333}), :page 515}, :content {:text "当你点击一个按钮时，实际上不光点击了这个按钮，还点击了它的容器以及整个页面。"}, :properties {:color "yellow"}} {:id #uuid "63d1d203-960f-4762-b5c6-a79d5ddfda1e", :page 515, :position {:bounding {:x1 160.70000004768372, :y1 965.8125305175781, :x2 240.70000004768372, :y2 994.612548828125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 965.8125305175781, :x2 240.70000004768372, :y2 994.612548828125, :width 911.6666666666666, :height 1138.3333333333333}), :page 515}, :content {:text "事件冒泡"}, :properties {:color "green"}} {:id #uuid "63d1d23f-2748-44a5-aebb-10626b1bd129", :page 515, :position {:bounding {:x1 0, :y1 460.79998779296875, :x2 800.16392827034, :y2 1050.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 460.79998779296875, :x2 0, :y2 483.1999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 372.40257573127747, :y1 1004.5999984741211, :x2 800.16392827034, :y2 1027, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 1028.212501525879, :x2 437.6762955188751, :y2 1050.6125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 1032.212501525879, :x2 437.6762955188751, :y2 1048.0125045776367, :width 911.6666666666666, :height 1138.3333333333333}), :page 515}, :content {:text "事件被定义为从最具体的元素（文档树中最深的节点）开始触发，然后向上传播至没有那么具体的元素（文档）"}, :properties {:color "yellow"}} {:id #uuid "63d1d268-45a1-44b0-9765-9d1f90248b33", :page 516, :position {:bounding {:x1 193.80000615119934, :y1 749.9125061035156, :x2 273.80000615119934, :y2 778.7125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 749.9125061035156, :x2 273.80000615119934, :y2 778.7125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 516}, :content {:text "事件捕获"}, :properties {:color "green"}} {:id #uuid "63d1d27d-4765-4d44-9dda-d8e2bd2abe42", :page 516, :position {:bounding {:x1 0, :y1 556.7999992370605, :x2 829.5676758289337, :y2 836.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 556.7999992370605, :x2 0, :y2 579.2000007629395, :width 911.6666666666666, :height 1138.3333333333333} {:x1 733.3618652820587, :y1 790.9000091552734, :x2 829.5676758289337, :y2 813.3000030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 814.5124969482422, :x2 516.8136475086212, :y2 836.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 516}, :content {:text "最不具体的节点应该最先收到事件，而最具体的节点应该最后收到事件"}, :properties {:color "yellow"}} {:id #uuid "63d1d294-7023-486d-bd80-b2b0ed88c7bc", :page 516, :position {:bounding {:x1 543.7961914539337, :y1 999.1000061035156, :x2 816.3210327625275, :y2 1021.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 543.7961914539337, :y1 999.1000061035156, :x2 816.3210327625275, :y2 1021.5, :width 911.6666666666666, :height 1138.3333333333333}), :page 516}, :content {:text "事件捕获得到了所有现代浏览器的支持"}, :properties {:color "yellow"}} {:id #uuid "63d1d2c9-4fde-4924-8883-74b096050b2c", :page 517, :position {:bounding {:x1 160.70000004768372, :y1 427.9500045776367, :x2 271.80000615119934, :y2 456.7500228881836, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 427.9500045776367, :x2 271.80000615119934, :y2 456.7500228881836, :width 911.6666666666666, :height 1138.3333333333333} {:x1 207.35000920295715, :y1 432.7500228881836, :x2 211.35000920295715, :y2 452.7500228881836, :width 911.6666666666666, :height 1138.3333333333333}), :page 517}, :content {:text "DOM 事件流"}, :properties {:color "green"}} {:id #uuid "63d1d2e2-397e-4c52-a68f-881e22e57652", :page 517, :position {:bounding {:x1 339.25828862190247, :y1 467.6000003814697, :x2 648.4479248523712, :y2 490.0000247955322, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 339.25828862190247, :y1 467.6000003814697, :x2 648.4479248523712, :y2 490.0000247955322, :width 911.6666666666666, :height 1138.3333333333333} {:x1 353.4749939441681, :y1 471.6000003814697, :x2 508.6670410633087, :y2 487.3999881744385, :width 911.6666666666666, :height 1138.3333333333333}), :page 517}, :content {:text "为 3 个阶段：事件捕获、到达目标和事件冒泡"}, :properties {:color "yellow"}} {:id #uuid "63d1d2fe-0c20-4d5d-9e0a-f35bbedd1f72", :page 518, :position {:bounding {:x1 186.97500920295715, :y1 125.05000305175781, :x2 326.2562744617462, :y2 158.65000915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 186.97500920295715, :y1 125.05000305175781, :x2 326.2562744617462, :y2 158.65000915527344, :width 911.6666666666666, :height 1138.3333333333333}), :page 518}, :content {:text "事件处理程序"}, :properties {:color "green"}} {:id #uuid "63d1d323-e671-444b-ae6f-0ee514f297b4", :page 518, :position {:bounding {:x1 231.28129887580872, :y1 196.40000343322754, :x2 675.9999878406525, :y2 218.80001258850098, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 231.28129887580872, :y1 196.40000343322754, :x2 675.9999878406525, :y2 218.80001258850098, :width 911.6666666666666, :height 1138.3333333333333} {:x1 453.5000183582306, :y1 199.35000038146973, :x2 675.9999878406525, :y2 215.15000343322754, :width 911.6666666666666, :height 1138.3333333333333}), :page 518}, :content {:text "为响应事件而调用的函数被称为事件处理程序（或事件监听器）"}, :properties {:color "yellow"}} {:id #uuid "63d1d32b-9277-431d-b937-62d2dd73d67e", :page 518, :position {:bounding {:x1 193.80000615119934, :y1 282.050012588501, :x2 372.7000000476837, :y2 310.8500003814697, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 282.050012588501, :x2 372.7000000476837, :y2 310.8500003814697, :width 911.6666666666666, :height 1138.3333333333333} {:x1 248.31250309944153, :y1 286.8500003814697, :x2 252.31250309944153, :y2 306.8500003814697, :width 911.6666666666666, :height 1138.3333333333333}), :page 518}, :content {:text "HTML 事件处理程序"}, :properties {:color "green"}} {:id #uuid "63d1d35e-2c48-4af6-859b-af9f5105cb6d", :page 518, :position {:bounding {:x1 0, :y1 492.8000030517578, :x2 834.5285217761993, :y2 606.8125152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.8999969959259, :y1 560.8000030517578, :x2 834.5285217761993, :y2 583.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 165.70000004768372, :y1 564.8000030517578, :x2 834.5285217761993, :y2 580.5999908447266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 584.4124908447266, :x2 150.23843693733215, :y2 606.8125152587891, :width 911.6666666666666, :height 1138.3333333333333}), :page 518}, :content {:text "在 HTML 中定义的事件处理程序可以包含精确的动作指令，也可以调用在页面其他地方定义的脚本，"}, :properties {:color "yellow"}} {:id #uuid "63d1d394-4796-4fc6-9ca2-73e29e56e6e8", :page 518, :position {:bounding {:x1 0, :y1 668.8000030517578, :x2 835.296008348465, :y2 833.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 668.8000030517578, :x2 0, :y2 691.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 787.4767944812775, :y1 787.0125122070312, :x2 835.296008348465, :y2 809.4125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 810.6125183105469, :x2 569.35240483284, :y2 833.0125122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 814.6125183105469, :x2 532.9872925281525, :y2 830.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 518}, :content {:text "。这个函数有一个特殊的局部变量 event，其中保存的就是 event 对象"}, :properties {:color "yellow"}} {:id #uuid "63d1d41d-42b8-480d-9842-89a0a0dfba69", :page 519, :position {:bounding {:x1 0, :y1 668.8000030517578, :x2 801.8911621570587, :y2 1034.0249938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 668.8000030517578, :x2 0, :y2 691.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 569.3618042469025, :y1 988.0249938964844, :x2 801.8911621570587, :y2 1010.4250183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 748.8749878406525, :y1 990.9624938964844, :x2 801.8911621570587, :y2 1006.7625427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.06250309944153, :y1 1011.6250305175781, :x2 524.8317749500275, :y2 1034.0249938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.06250309944153, :y1 1015.6250305175781, :x2 316.42500615119934, :y2 1031.4250183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 519}, :content {:text "这也是很多开发者不使用 HTML事件处理程序，而使用 JavaScript 指定事件处理程序的主要原因"}, :properties {:color "yellow"}} {:id #uuid "63d1d444-7e60-4db5-9276-53ba31738239", :page 520, :position {:bounding {:x1 193.80000615119934, :y1 126.65000915527344, :x2 375.92000126838684, :y2 155.4499969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 126.65000915527344, :x2 239.90652775764465, :y2 155.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 251.63750004768372, :y1 126.65000915527344, :x2 375.92000126838684, :y2 155.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 251.63750004768372, :y1 131.4499969482422, :x2 255.63750004768372, :y2 151.4499969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 520}, :content {:text "DOM0 事件处理程序"}, :properties {:color "green"}} {:id #uuid "63d1d473-021e-4a0f-a7e3-0aa890cb2758", :page 520, :position {:bounding {:x1 0, :y1 166.1999969482422, :x2 828.935656785965, :y2 275.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 397.76097416877747, :y1 166.1999969482422, :x2 828.935656785965, :y2 188.59999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 615.6750366687775, :y1 169.15000915527344, :x2 828.935656785965, :y2 184.9500274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 189.90000915527344, :x2 166.3184540271759, :y2 212.3000030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 252.8000030517578, :x2 0, :y2 275.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 520}, :content {:text "传统方式是把一个函数赋值给（DOM 元素的）一个事件处理程序属性"}, :properties {:color "yellow"}} {:id #uuid "63d1d4bf-9559-422a-af9f-daa43d9731cc", :page 520, :position {:bounding {:x1 0, :y1 260.6999936103821, :x2 827.4968750476837, :y2 339.1999936103821, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 780.3000366687775, :y1 260.6999936103821, :x2 827.4968750476837, :y2 283.1000180244446, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.87500309944153, :y1 260.7250180244446, :x2 767.8968994617462, :y2 283.12501192092896, :width 911.6666666666666, :height 1138.3333333333333} {:x1 263.90001225471497, :y1 264.3500180244446, :x2 767.8968994617462, :y2 280.15003633499146, :width 911.6666666666666, :height 1138.3333333333333} {:x1 780.3000366687775, :y1 264.6999936103821, :x2 827.4968750476837, :y2 280.50001192092896, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 284.40000581741333, :x2 310.5073425769806, :y2 306.7999997138977, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 316.7999997138977, :x2 0, :y2 339.1999936103821, :width 911.6666666666666, :height 1138.3333333333333}), :page 520}, :content {:text "每个元素（包括 window 和 document）都有通常小写的事件处理程序属性，比如 onclick。只要把这个属性赋值为一个函数"}, :properties {:color "yellow"}} {:id #uuid "63d1d4e6-5094-414a-a9ef-f329d332ac56", :page 520, :position {:bounding {:x1 149.8999969959259, :y1 384.0499997138977, :x2 686.7841675281525, :y2 406.7999997138977, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 487.7000000476837, :y1 384.0499997138977, :x2 686.7841675281525, :y2 405.65000581741333, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.8999969959259, :y1 384.40000581741333, :x2 475.28120732307434, :y2 406.7999997138977, :width 911.6666666666666, :height 1138.3333333333333} {:x1 424.5999939441681, :y1 388.0499997138977, :x2 475.28120732307434, :y2 403.0499997138977, :width 911.6666666666666, :height 1138.3333333333333} {:x1 487.7000000476837, :y1 388.0499997138977, :x2 490.7000000476837, :y2 403.0499997138977, :width 911.6666666666666, :height 1138.3333333333333}), :page 520}, :content {:text "这里先从文档中取得按钮，然后给它的 onclick 事件处理程序赋值一个函数"}, :properties {:color "yellow"}} {:id #uuid "63d1d52a-e125-4e17-a1da-3ab2116e3d62", :page 520, :position {:bounding {:x1 149.8999969959259, :y1 649.8125305175781, :x2 781.650500535965, :y2 672.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 649.8125305175781, :x2 781.650500535965, :y2 672.2125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 407.0999939441681, :y1 653.4500122070312, :x2 612.954699754715, :y2 669.25, :width 911.6666666666666, :height 1138.3333333333333}), :page 520}, :content {:text "通过将事件处理程序属性的值设置为 null，可以移除通过 DOM0 方式添加的事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d1d53b-44cf-46aa-ac27-dd279e414883", :page 520, :position {:bounding {:x1 174.93789982795715, :y1 874.7500305175781, :x2 375.92000126838684, :y2 903.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 174.93789982795715, :y1 874.7500305175781, :x2 174.93789982795715, :y2 903.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 193.80000615119934, :y1 874.7500305175781, :x2 239.90652775764465, :y2 903.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 251.63750004768372, :y1 874.7500305175781, :x2 375.92000126838684, :y2 903.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 193.80000615119934, :y1 879.5500183105469, :x2 239.90652775764465, :y2 899.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 251.63750004768372, :y1 879.5500183105469, :x2 255.63750004768372, :y2 899.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 520}, :content {:text "DOM2 事件处理程序"}, :properties {:color "green"}} {:id #uuid "63d1d561-750b-48e6-b34a-611f9dd2f876", :page 520, :position {:bounding {:x1 0, :y1 732.8000106811523, :x2 822.6390869617462, :y2 960.5000305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 732.8000106811523, :x2 0, :y2 755.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 504.52656865119934, :y1 914.4000091552734, :x2 714.30699467659, :y2 936.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 742.6000244617462, :y1 914.4000091552734, :x2 822.6390869617462, :y2 936.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 580.4999878406525, :y1 918.0500183105469, :x2 714.30699467659, :y2 933.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 742.6000244617462, :y1 918.4000244140625, :x2 822.6390869617462, :y2 934.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 937.7500305175781, :x2 224.66875004768372, :y2 959.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 253.20000004768372, :y1 938.1000061035156, :x2 269.2262146472931, :y2 960.5000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 941.7500305175781, :x2 224.66875004768372, :y2 956.7500305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 520}, :content {:text "两个方法：addEventListener()和 removeEventListener()。"}, :properties {:color "yellow"}} {:id #uuid "63d1d583-4278-40b7-9ae5-de078459e832", :page 520, :position {:bounding {:x1 0, :y1 748.7999877929688, :x2 829.9313843250275, :y2 1007.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 748.7999877929688, :x2 0, :y2 771.199987411499, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 764.7999877929688, :x2 0, :y2 787.199987411499, :width 911.6666666666666, :height 1138.3333333333333} {:x1 571.4440796375275, :y1 938.0999908447266, :x2 829.288195848465, :y2 960.4999847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 601.8875000476837, :y1 942.0999908447266, :x2 829.288195848465, :y2 957.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 588.9999878406525, :y1 961.6999969482422, :x2 829.9313843250275, :y2 984.0999908447266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 961.7124938964844, :x2 576.7499878406525, :y2 984.1124877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 588.9999878406525, :y1 965.6999969482422, :x2 829.9313843250275, :y2 981.4999847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 965.7124938964844, :x2 576.7499878406525, :y2 981.5124969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 985.3124847412109, :x2 198.28006291389465, :y2 1007.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 520}, :content {:text "接收 3 个参数：事件名、事件处理函数和一个布尔值，true 表示在捕获阶段调用事件处理程序，false（默认值）表示在冒泡阶段调用事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d1d5bf-468e-487d-b035-5486a04b7b1e", :page 521, :position {:bounding {:x1 0, :y1 92.80000305175781, :x2 804.3336670398712, :y2 268.81251525878906, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 92.80000305175781, :x2 0, :y2 115.19999694824219, :width 911.6666666666666, :height 1138.3333333333333} {:x1 719.0021851062775, :y1 222.8000030517578, :x2 804.3336670398712, :y2 245.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 749.087512254715, :y1 225.75001525878906, :x2 804.3336670398712, :y2 241.5500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 246.41249084472656, :x2 501.8847916126251, :y2 268.81251525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 521}, :content {:text "使用 DOM2方式的主要优势是可以为同一个事件添加多个事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d1d5db-6be0-45c0-91d0-4ae53f603b5c", :page 521, :position {:bounding {:x1 0, :y1 268.80001068115234, :x2 794.6960327625275, :y2 487.21250915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 268.80001068115234, :x2 0, :y2 291.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 315.0999939441681, :y1 441.2000274658203, :x2 685.4062378406525, :y2 463.6000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 714.6000244617462, :y1 441.2000274658203, :x2 794.6960327625275, :y2 463.6000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.79999852180481, :y1 441.21250915527344, :x2 286.8203308582306, :y2 463.6125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 153.10000920295715, :y1 444.8500213623047, :x2 286.8203308582306, :y2 459.8500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 315.0999939441681, :y1 445.2000274658203, :x2 685.4062378406525, :y2 461.00001525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 714.6000244617462, :y1 445.2000274658203, :x2 794.6960327625275, :y2 461.00001525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 464.81251525878906, :x2 245.48292088508606, :y2 487.21250915527344, :width 911.6666666666666, :height 1138.3333333333333}), :page 521}, :content {:text "通过 addEventListener()添加的事件处理程序只能使用 removeEventListener()并传入与添加时同样的参数来移除"}, :properties {:color "yellow"}} {:id #uuid "63d1d5f7-6406-4694-82b3-04e902a51caf", :page 521, :position {:bounding {:x1 0, :y1 476.8000183105469, :x2 774.4069702625275, :y2 776.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 476.8000183105469, :x2 0, :y2 499.2000198364258, :width 911.6666666666666, :height 1138.3333333333333} {:x1 222.07500004768372, :y1 730.7000122070312, :x2 417.5950195789337, :y2 753.1000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 446.80000615119934, :y1 730.7000122070312, :x2 774.4069702625275, :y2 753.1000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 257.7000000476837, :y1 734.3500366210938, :x2 417.5950195789337, :y2 749.3500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 446.80000615119934, :y1 734.7000122070312, :x2 774.4069702625275, :y2 750.5000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 754.4000244140625, :x2 165.22806096076965, :y2 776.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 521}, :content {:text "传给 removeEventListener()的事件处理函数必须与传给 addEventListener()的是同一个"}, :properties {:color "yellow"}} {:id #uuid "63d1d620-a147-4a3b-b551-0eb113ae0a2a", :page 521, :position {:bounding {:x1 228.37813115119934, :y1 980.8125305175781, :x2 531.2330811023712, :y2 1003.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 228.37813115119934, :y1 980.8125305175781, :x2 531.2330811023712, :y2 1003.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 521}, :content {:text "事件处理程序会被添加到事件流的冒泡阶段"}, :properties {:color "yellow"}} {:id #uuid "63d1d62b-d711-491c-87c7-b977ffe4d37f", :page 521, :position {:bounding {:x1 0, :y1 652.8000106811523, :x2 802.2085449695587, :y2 1026.8250122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 652.8000106811523, :x2 0, :y2 675.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 770.3290894031525, :y1 980.8125305175781, :x2 802.2085449695587, :y2 1003.2125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 1004.4250183105469, :x2 595.325434923172, :y2 1026.8250122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 521}, :content {:text "把事件处理程序注册到捕获阶段通常用于在事件到达其指定目标之前拦截事件"}, :properties {:color "yellow"}} {:id #uuid "63d1d63a-0d1b-4751-8320-2d8e66658384", :page 522, :position {:bounding {:x1 193.80000615119934, :y1 126.64999389648438, :x2 337.0999939441681, :y2 155.45001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 126.64999389648438, :x2 337.0999939441681, :y2 155.45001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 212.73750615119934, :y1 131.45001220703125, :x2 216.73750615119934, :y2 151.45001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 522}, :content {:text "IE 事件处理程序"}, :properties {:color "green"}} {:id #uuid "63d1d663-3afd-4109-8ae5-d1bcdd492f12", :page 522, :position {:bounding {:x1 149.8999969959259, :y1 165.14999389648438, :x2 621.767199754715, :y2 188.60000610351562, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 165.14999389648438, :x2 481.02852177619934, :y2 187.54998779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 503.5999939441681, :y1 166.20001220703125, :x2 621.767199754715, :y2 188.60000610351562, :width 911.6666666666666, :height 1138.3333333333333} {:x1 164.85000920295715, :y1 169.14999389648438, :x2 481.02852177619934, :y2 184.95001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 503.5999939441681, :y1 170.20001220703125, :x2 621.767199754715, :y2 186, :width 911.6666666666666, :height 1138.3333333333333}), :page 522}, :content {:text "IE 实现了与 DOM 类似的方法，即 attachEvent()和 detachEvent()"}, :properties {:color "yellow"}} {:id #uuid "63d1d69a-1d8e-4056-bcf7-36451d3b8b62", :page 522, :position {:bounding {:x1 0, :y1 384.40000915527344, :x2 837.3640625476837, :y2 435.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 742.442492723465, :y1 384.40000915527344, :x2 837.3640625476837, :y2 406.8000030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 746.7625000476837, :y1 388.40000915527344, :x2 837.3640625476837, :y2 404.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 408.0124969482422, :x2 468.2833435535431, :y2 430.4125213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 412.0124969482422, :x2 352.5999939441681, :y2 427.81251525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 522}, :content {:text "。使用 DOM0方式时，事件处理程序中的 this 值等于目标元素"}, :properties {:color "yellow"}} {:id #uuid "63d1d6a1-9da6-41eb-846f-367e272f2193", :page 522, :position {:bounding {:x1 0, :y1 408.00001525878906, :x2 828.9882080554962, :y2 454.1000213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 500.3357422351837, :y1 408.00001525878906, :x2 630.128527879715, :y2 430.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 652.7000000476837, :y1 408.00001525878906, :x2 828.9882080554962, :y2 430.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 535.6000244617462, :y1 411.65000915527344, :x2 630.128527879715, :y2 426.65000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 652.7000000476837, :y1 412.00001525878906, :x2 828.9882080554962, :y2 427.8000030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 428.8000030517578, :x2 0, :y2 451.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 431.6999969482422, :x2 428.5234558582306, :y2 454.1000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 435.6999969482422, :x2 428.5234558582306, :y2 451.50001525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 522}, :content {:text "使用 attachEvent()时，事件处理程序是在全局作用域中运行的，因此 this 等于 window"}, :properties {:color "yellow"}} {:id #uuid "63d1d6e7-3975-4205-9d40-c83b148ef48c", :page 522, :position {:bounding {:x1 0, :y1 684.8000183105469, :x2 832.4643433094025, :y2 771.4624938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 684.8000183105469, :x2 0, :y2 707.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 800.4025757312775, :y1 726.5, :x2 832.4643433094025, :y2 748.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 749.0625, :x2 578.5324432849884, :y2 771.4624938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 753.0625, :x2 166.86271977424622, :y2 768.8625183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 522}, :content {:text "，与 DOM 方法不同，这里的事件处理程序会以添加它们的顺序反向触"}, :properties {:color "yellow"}} {:id #uuid "63d1d6f6-b261-491a-8569-f67f7af19c80", :page 522, :position {:bounding {:x1 149.8999969959259, :y1 797.4000244140625, :x2 821.5744507312775, :y2 819.8000335693359, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 797.4000244140625, :x2 279.9437439441681, :y2 819.8000335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 302.5000183582306, :y1 797.4000244140625, :x2 594.8554565906525, :y2 819.8000335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 613.4999878406525, :y1 797.4000244140625, :x2 821.5744507312775, :y2 819.8000335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 185.50000309944153, :y1 801.0500335693359, :x2 279.9437439441681, :y2 816.0500335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 302.5000183582306, :y1 801.4000244140625, :x2 594.8554565906525, :y2 817.2000274658203, :width 911.6666666666666, :height 1138.3333333333333}), :page 522}, :content {:text "使用 attachEvent()添加的事件处理程序将使用 detachEvent()来移除，只要提供相同的参数"}, :properties {:color "yellow"}} {:id #uuid "63d1d704-bf00-420f-bf4a-017cf5913735", :page 523, :position {:bounding {:x1 160.70000004768372, :y1 125.31251525878906, :x2 360.7000000476837, :y2 154.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 125.31251525878906, :x2 360.7000000476837, :y2 154.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 523}, :content {:text "跨浏览器事件处理程序"}, :properties {:color "green"}} {:id #uuid "63d1d726-2f83-4732-92b8-22966a2c66a8", :page 523, :position {:bounding {:x1 0, :y1 124.80000305175781, :x2 799.6796143054962, :y2 354.01251220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 124.80000305175781, :x2 0, :y2 147.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 577.1000244617462, :y1 308, :x2 799.6796143054962, :y2 330.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 389.61973881721497, :y1 308.01251220703125, :x2 563.2062866687775, :y2 330.4125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 469.0999939441681, :y1 311.6499938964844, :x2 563.2062866687775, :y2 326.6499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 577.1000244617462, :y1 312, :x2 799.6796143054962, :y2 327.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 331.6125183105469, :x2 245.3619339466095, :y2 354.01251220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 523}, :content {:text "添加的这个 addHandler()方法接收 3 个参数：目标元素、事件名和事件处理函数"}, :properties {:color "yellow"}} {:id #uuid "63d1d77c-e0b9-4044-8685-c80a89709d5c", :page 523, :position {:bounding {:x1 0, :y1 108.80000305175781, :x2 796.4282104969025, :y2 330.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 108.80000305175781, :x2 0, :y2 131.20000457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 570.9999878406525, :y1 284.0500183105469, :x2 796.4282104969025, :y2 305.6499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 393.9681580066681, :y1 284.3999938964844, :x2 554.9125244617462, :y2 306.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 490.0000183582306, :y1 288.0500183105469, :x2 554.9125244617462, :y2 303.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 570.9999878406525, :y1 288.0500183105469, :x2 796.4282104969025, :y2 303.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 308.01251220703125, :x2 373.5917160511017, :y2 330.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 523}, :content {:text "这个方法会在 EventUtil 对象（本章示例使用的对象）上添加一个方法，以实现跨浏览器事件处理"}, :properties {:color "yellow"}} {:id #uuid "63d1d7bf-2ea2-4c0b-bc57-c6ab2698d76a", :page 523, :position {:bounding {:x1 0, :y1 540.7999877929688, :x2 794.5875732898712, :y2 830.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 540.7999877929688, :x2 0, :y2 563.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 595.2480347156525, :y1 784.7999877929688, :x2 794.5875732898712, :y2 807.1999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 689.7875244617462, :y1 788.7999877929688, :x2 794.5875732898712, :y2 804.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 808.4125061035156, :x2 699.9940674304962, :y2 830.8125305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 812.4125061035156, :x2 565.2625000476837, :y2 828.2124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 523}, :content {:text "则，如果存在 IE 方式，则使用该方式。注意这时候必须在事件类型前加上\"on\"，才能保证在 IE8 及更早版本中有效"}, :properties {:color "yellow"}} {:id #uuid "63d1d813-ac06-41b3-b8f2-97a9d151e90c", :page 524, :position {:bounding {:x1 0, :y1 127.10000610351562, :x2 823.4579346179962, :y2 259.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 165.90001225471497, :y1 127.10000610351562, :x2 299.1977722644806, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 313.0999939441681, :y1 127.10000610351562, :x2 456.8716003894806, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 471.7000000476837, :y1 127.10000610351562, :x2 823.4579346179962, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 205.00000309944153, :y1 130.75, :x2 299.1977722644806, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 313.0999939441681, :y1 131.10000610351562, :x2 456.8716003894806, :y2 146.89999389648438, :width 911.6666666666666, :height 1138.3333333333333} {:x1 471.7000000476837, :y1 131.10000610351562, :x2 823.4579346179962, :y2 146.89999389648438, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 150.71249389648438, :x2 468.920535326004, :y2 173.11251831054688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 236.79998779296875, :x2 0, :y2 259.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 524}, :content {:text "里的 addHandler()和 removeHandler()方法并没有解决所有跨浏览器一致性问题，比如 IE的作用域问题、多个事件处理程序执行顺序问题等"}, :properties {:color "yellow"}} {:id #uuid "63d1d818-870f-4042-a77b-640d7fe138d7", :page 524, :position {:bounding {:x1 164.77579045295715, :y1 236.0500030517578, :x2 279.90123295783997, :y2 271.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 186.98750615119934, :y1 236.0500030517578, :x2 279.90123295783997, :y2 269.65000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 164.77579045295715, :y1 237.6000213623047, :x2 164.77881169319153, :y2 271.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 524}, :content {:text "事件对象"}, :properties {:color "green"}} {:id #uuid "63d1d85e-317e-4415-b580-51f9aa1e2bb3", :page 524, :position {:bounding {:x1 0, :y1 283.6999969482422, :x2 838.4262573719025, :y2 339.2000274658203, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 747.6750366687775, :y1 283.6999969482422, :x2 827.8671143054962, :y2 306.1000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 747.6750366687775, :y1 287.6999969482422, :x2 827.8671143054962, :y2 303.50001525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 307.40000915527344, :x2 838.4262573719025, :y2 329.8000030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 311.40000915527344, :x2 539.354602098465, :y2 327.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 316.8000030517578, :x2 0, :y2 339.2000274658203, :width 911.6666666666666, :height 1138.3333333333333}), :page 524}, :content {:text "这个对象包含了一些基本信息，比如导致事件的元素、发生的事件类型，以及可能与特定事件相关的任何其他数据。"}, :properties {:color "yellow"}} {:id #uuid "63d1d86f-1568-4357-9eae-3b6046e642e1", :page 524, :position {:bounding {:x1 193.80000615119934, :y1 393.0500030517578, :x2 324.7979919910431, :y2 421.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 393.0500030517578, :x2 324.7979919910431, :y2 421.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 240.45000004768372, :y1 397.8500061035156, :x2 244.45000004768372, :y2 417.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 524}, :content {:text "DOM 事件对象"}, :properties {:color "green"}} {:id #uuid "63d1d8dd-eaba-44bd-9484-ee77b271a105", :page 524, :position {:bounding {:x1 336.5999939441681, :y1 432.3499984741211, :x2 643.1688721179962, :y2 454.75, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 336.5999939441681, :y1 432.3499984741211, :x2 643.1688721179962, :y2 454.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 336.5999939441681, :y1 436.3499984741211, :x2 381.8166687488556, :y2 451.3499984741211, :width 911.6666666666666, :height 1138.3333333333333}), :page 524}, :content {:text "event 对象是传给事件处理程序的唯一参数"}, :properties {:color "yellow"}} {:id #uuid "63d1d8f2-3091-4ec8-88fb-40e7d12ddf28", :page 524, :position {:bounding {:x1 149.88750004768372, :y1 714.2124938964844, :x2 733.2961304187775, :y2 736.6124877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.88750004768372, :y1 714.2124938964844, :x2 733.2961304187775, :y2 736.6124877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 201.70000004768372, :y1 717.1625061035156, :x2 634.7000000476837, :y2 732.9625244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 524}, :content {:text "在通过 HTML 属性指定的事件处理程序中，同样可以使用变量 event 引用事件对象"}, :properties {:color "yellow"}} {:id #uuid "63d1d91c-c0a6-45c0-812d-a687198c799c", :page 525, :position {:bounding {:x1 0, :y1 252.8000030517578, :x2 795.292102098465, :y2 527.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 252.8000030517578, :x2 0, :y2 275.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 533.4999878406525, :y1 480.6499938964844, :x2 649.0234253406525, :y2 503.04998779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 661.3000366687775, :y1 480.6499938964844, :x2 795.292102098465, :y2 502.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.79999852180481, :y1 481, :x2 512.181262254715, :y2 503.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 275.0000183582306, :y1 484.6499938964844, :x2 512.181262254715, :y2 500.45001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 533.4999878406525, :y1 484.6499938964844, :x2 649.0234253406525, :y2 500.45001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 661.3000366687775, :y1 484.6499938964844, :x2 795.292102098465, :y2 499.6499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 504.6125183105469, :x2 132.6640350818634, :y2 527.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 525}, :content {:text "在事件处理程序内部，this 对象始终等于 currentTarget 的值，而 target 只包含事件的实际目标。"}, :properties {:color "yellow"}} {:id #uuid "63d1d97c-ab1c-4dc7-84c9-13aac1415a92", :page 525, :position {:bounding {:x1 277.44575810432434, :y1 691.3125, :x2 703.48814702034, :y2 713.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 277.44575810432434, :y1 691.3125, :x2 703.48814702034, :y2 713.7124938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 405.7000000476837, :y1 694.9500122070312, :x2 525.7000000476837, :y2 709.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 525}, :content {:text "比如下面的例子在 document.body 上添加了单击处理程序："}, :properties {:color "yellow"}} {:id #uuid "63d1d9d0-f801-489d-9761-8133723359c4", :page 526, :position {:bounding {:x1 0, :y1 357.2125129699707, :x2 811.4337646961212, :y2 451.20000076293945, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 644.8476440906525, :y1 357.2125129699707, :x2 811.4337646961212, :y2 379.6125068664551, :width 911.6666666666666, :height 1138.3333333333333} {:x1 736.900012254715, :y1 360.8499946594238, :x2 811.4337646961212, :y2 375.8499946594238, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 380.9000129699707, :x2 454.75010991096497, :y2 403.3000068664551, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 428.8000068664551, :x2 0, :y2 451.20000076293945, :width 911.6666666666666, :height 1138.3333333333333}), :page 526}, :content {:text "这个函数使用 event.type属性确定了事件类型，从而可以做出不同的响应"}, :properties {:color "yellow"}} {:id #uuid "63d1d9f5-740a-4971-9c12-eb61bc728a9a", :page 526, :position {:bounding {:x1 148.20000004768372, :y1 404.1500129699707, :x2 531.0143311023712, :y2 426.9000129699707, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.20000004768372, :y1 404.1500129699707, :x2 264.0609314441681, :y2 425.7500190734863, :width 911.6666666666666, :height 1138.3333333333333} {:x1 292.2000000476837, :y1 404.5000190734863, :x2 531.0143311023712, :y2 426.9000129699707, :width 911.6666666666666, :height 1138.3333333333333}), :page 526}, :content {:text "preventDefault()方法用于阻止特定事件的默认动作"}, :properties {:color "yellow"}} {:id #uuid "63d1da3b-5a8e-4bb0-add2-d9283e02108a", :page 526, :position {:bounding {:x1 0, :y1 551.4500122070312, :x2 827.7961304187775, :y2 597.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 741.8000366687775, :y1 551.4500122070312, :x2 827.7961304187775, :y2 573.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.8999969959259, :y1 551.8000183105469, :x2 365.5609314441681, :y2 574.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 393.7000000476837, :y1 551.8000183105469, :x2 727.5969116687775, :y2 574.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 249.70000004768372, :y1 555.4500122070312, :x2 365.5609314441681, :y2 570.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 741.8000366687775, :y1 555.4500122070312, :x2 827.7961304187775, :y2 570.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 393.7000000476837, :y1 555.8000183105469, :x2 727.5969116687775, :y2 571.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 572.8000183105469, :x2 0, :y2 595.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 575.4125061035156, :x2 205.80000615119934, :y2 597.8125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 579.4125061035156, :x2 182.90938115119934, :y2 595.2124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 526}, :content {:text "任何可以通过 preventDefault()取消默认行为的事件，其事件对象的 cancelable 属性都会设置为 true。"}, :properties {:color "yellow"}} {:id #uuid "63d1da44-c4f8-4010-bc5c-f3268973f9b7", :page 526, :position {:bounding {:x1 148.20000004768372, :y1 598.6500244140625, :x2 822.590441942215, :y2 621.4000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.20000004768372, :y1 598.6500244140625, :x2 275.9297058582306, :y2 620.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 301.2000000476837, :y1 599, :x2 822.590441942215, :y2 621.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 301.2000000476837, :y1 603, :x2 543.8754761219025, :y2 618.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 526}, :content {:text "stopPropagation()方法用于立即阻止事件流在 DOM 结构中传播，取消后续的事件捕获或冒泡"}, :properties {:color "yellow"}} {:id #uuid "63d1da8a-03f5-479e-80b4-bb9c55e5691f", :page 526, :position {:bounding {:x1 148.20000004768372, :y1 872.3500366210938, :x2 524.5246613025665, :y2 893.9500427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.20000004768372, :y1 872.3500366210938, :x2 524.5246613025665, :y2 893.9500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 238.20000004768372, :y1 876.3500366210938, :x2 238.5874969959259, :y2 891.3500366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 526}, :content {:text "eventPhase 属性可用于确定事件流当前所处的阶段"}, :properties {:color "yellow"}} {:id #uuid "63d1db07-df35-48be-870e-75a033451812", :page 527, :position {:bounding {:x1 223.28752446174622, :y1 317.15001678466797, :x2 747.2768433094025, :y2 339.90001678466797, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 537.400012254715, :y1 317.15001678466797, :x2 657.3812744617462, :y2 339.55004119873047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 678.7000000476837, :y1 317.15001678466797, :x2 747.2768433094025, :y2 338.74999237060547, :width 911.6666666666666, :height 1138.3333333333333} {:x1 223.28752446174622, :y1 317.49999237060547, :x2 525.1234619617462, :y2 339.90001678466797, :width 911.6666666666666, :height 1138.3333333333333} {:x1 258.7000000476837, :y1 321.15001678466797, :x2 525.1234619617462, :y2 336.15001678466797, :width 911.6666666666666, :height 1138.3333333333333} {:x1 537.400012254715, :y1 321.15001678466797, :x2 657.3812744617462, :y2 336.95003509521484, :width 911.6666666666666, :height 1138.3333333333333} {:x1 678.7000000476837, :y1 321.15001678466797, :x2 681.7000000476837, :y2 336.15001678466797, :width 911.6666666666666, :height 1138.3333333333333}), :page 527}, :content {:text "而当 eventPhase 等于 2 时，this、target 和 currentTarget 三者相等"}, :properties {:color "yellow"}} {:id #uuid "63d1db31-7f17-40ab-8e91-d1f8c8d60453", :page 527, :position {:bounding {:x1 160.70000004768372, :y1 421.3499984741211, :x2 264.0000183582306, :y2 450.15001678466797, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 421.3499984741211, :x2 264.0000183582306, :y2 450.15001678466797, :width 911.6666666666666, :height 1138.3333333333333} {:x1 179.63750004768372, :y1 426.15001678466797, :x2 183.63750004768372, :y2 446.15001678466797, :width 911.6666666666666, :height 1138.3333333333333}), :page 527}, :content {:text "IE 事件对象"}, :properties {:color "green"}} {:id #uuid "63d1dbc2-a2e7-423f-b307-4b3583c0ca7e", :page 526, :position {:bounding {:x1 0, :y1 812.8000183105469, :x2 834.1404297351837, :y2 918.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 812.8000183105469, :x2 0, :y2 835.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 573.4113647937775, :y1 872.7000122070312, :x2 834.1404297351837, :y2 895.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 896.0500183105469, :x2 256.65001225471497, :y2 918.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 900.0500183105469, :x2 256.65001225471497, :y2 915.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 526}, :content {:text "事件处理程序在捕获阶段被调用，则 eventPhase 等于 1"}, :properties {:color "yellow"}} {:id #uuid "63d1dbc9-cf24-41d9-ab65-4c4755eadb48", :page 526, :position {:bounding {:x1 304.76753544807434, :y1 896.4000244140625, :x2 684.2499878406525, :y2 918.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 304.76753544807434, :y1 896.4000244140625, :x2 684.2499878406525, :y2 918.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 545.6000244617462, :y1 900.0500183105469, :x2 684.2499878406525, :y2 915.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 526}, :content {:text "事件处理程序在目标上被调用，则 eventPhase 等于 2"}, :properties {:color "yellow"}} {:id #uuid "63d1dbcf-92d6-4c0d-bf56-6da2ba0b0ed1", :page 526, :position {:bounding {:x1 0, :y1 828.8000183105469, :x2 828.479602098465, :y2 942.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 828.8000183105469, :x2 0, :y2 851.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 732.3515503406525, :y1 896.4000244140625, :x2 828.479602098465, :y2 918.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 920.0125122070312, :x2 416.15001225471497, :y2 942.4125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 924.0125122070312, :x2 404.70003056526184, :y2 939.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 526}, :content {:text "事件处理程序在冒泡阶段被调用，则 eventPhase 等于 3"}, :properties {:color "yellow"}} {:id #uuid "63d1dc4f-eef3-4327-a425-b012c3f7c25f", :page 527, :position {:bounding {:x1 0, :y1 204.8000030517578, :x2 799.9199097156525, :y2 507.01251220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 204.8000030517578, :x2 0, :y2 227.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 768.0468628406525, :y1 461.00000762939453, :x2 799.9199097156525, :y2 483.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 484.61251068115234, :x2 681.906848192215, :y2 507.01251220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 488.6125030517578, :x2 567.3234741687775, :y2 504.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 527}, :content {:text "如果事件处理程序是使用 DOM0 方式指定的，则 event 对象只是 window 对象的一个属性"}, :properties {:color "yellow"}} {:id #uuid "63d1dc83-4b14-42e0-8f99-d2e3aa204790", :page 527, :position {:bounding {:x1 0, :y1 332.80000495910645, :x2 788.3783447742462, :y2 670.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 332.80000495910645, :x2 0, :y2 355.20000648498535, :width 911.6666666666666, :height 1138.3333333333333} {:x1 666.9999878406525, :y1 624.1000061035156, :x2 788.3783447742462, :y2 646.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 374.6097595691681, :y1 624.1125183105469, :x2 644.4285156726837, :y2 646.5125122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 549.900012254715, :y1 627.75, :x2 644.4285156726837, :y2 642.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 666.9999878406525, :y1 628.1000061035156, :x2 788.3783447742462, :y2 643.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 647.7000122070312, :x2 341.5191299915314, :y2 670.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 527}, :content {:text "如果事件处理程序是使用 attachEvent()指定的，则 event对象会作为唯一的参数传给处理函数"}, :properties {:color "yellow"}} {:id #uuid "63d1dd03-05a3-49f9-920b-aa938ca4f1ca", :page 527, :position {:bounding {:x1 0, :y1 428.80001068115234, :x2 794.6835815906525, :y2 793.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 428.80001068115234, :x2 0, :y2 451.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.79999852180481, :y1 747.8000183105469, :x2 247.52852177619934, :y2 770.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 270.0999939441681, :y1 747.8000183105469, :x2 794.6835815906525, :y2 770.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 153.00000309944153, :y1 751.4500122070312, :x2 247.52852177619934, :y2 766.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 270.0999939441681, :y1 751.8000183105469, :x2 794.6835815906525, :y2 767.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 771.4125061035156, :x2 277.4546158313751, :y2 793.8125, :width 911.6666666666666, :height 1138.3333333333333}), :page 527}, :content {:text "使用 attachEvent()时，event 对象仍然是 window 对象的属性（像 DOM0 方式那样），只是出于方便也将其作为参数传入"}, :properties {:color "yellow"}} {:id #uuid "63d1ddc1-2e7f-4469-b8f8-5266eeb06151", :page 528, :position {:bounding {:x1 148.20000004768372, :y1 536.3500003814697, :x2 821.8376953601837, :y2 559.1000003814697, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.20000004768372, :y1 536.3500003814697, :x2 230.5640594959259, :y2 557.9500370025635, :width 911.6666666666666, :height 1138.3333333333333} {:x1 247.20000004768372, :y1 536.3500003814697, :x2 510.54539799690247, :y2 558.749963760376, :width 911.6666666666666, :height 1138.3333333333333} {:x1 538.7000000476837, :y1 536.7000370025635, :x2 821.8376953601837, :y2 559.1000003814697, :width 911.6666666666666, :height 1138.3333333333333} {:x1 247.20000004768372, :y1 540.3500003814697, :x2 510.54539799690247, :y2 556.1499881744385, :width 911.6666666666666, :height 1138.3333333333333} {:x1 538.7000000476837, :y1 540.7000370025635, :x2 586.70006108284, :y2 556.5000247955322, :width 911.6666666666666, :height 1138.3333333333333}), :page 528}, :content {:text "returnValue 属性等价于 DOM 的 preventDefault()方法，都是用于取消给定事件默认的行为"}, :properties {:color "yellow"}} {:id #uuid "63d1ddd5-4419-4d4f-93a9-d4a040e783c4", :page 528, :position {:bounding {:x1 148.20000004768372, :y1 707.2500305175781, :x2 756.1061279773712, :y2 730.0000305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.20000004768372, :y1 707.2500305175781, :x2 243.9234344959259, :y2 728.8500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 256.2000000476837, :y1 707.2500305175781, :x2 476.82969975471497, :y2 729.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 502.0999939441681, :y1 707.6000366210938, :x2 756.1061279773712, :y2 730.0000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 256.2000000476837, :y1 711.2500305175781, :x2 476.82969975471497, :y2 727.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 528}, :content {:text "cancelBubble 属性与 DOMstopPropagation()方法用途一样，都可以阻止事件冒泡"}, :properties {:color "yellow"}} {:id #uuid "63d1ddf6-143d-4c03-94c8-cdda2103a325", :page 528, :position {:bounding {:x1 0, :y1 828.8000183105469, :x2 828.823352098465, :y2 974.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 828.8000183105469, :x2 0, :y2 851.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 315.90001225471497, :y1 929.2500305175781, :x2 555.5165283679962, :y2 951.6500549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 567.8000366687775, :y1 929.2500305175781, :x2 828.823352098465, :y2 951.6500549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.8999969959259, :y1 929.6000061035156, :x2 303.4968750476837, :y2 952.0000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 252.90001225471497, :y1 933.2500305175781, :x2 303.4968750476837, :y2 948.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 315.90001225471497, :y1 933.2500305175781, :x2 555.5165283679962, :y2 948.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 567.8000366687775, :y1 933.2500305175781, :x2 828.823352098465, :y2 948.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 952.8500061035156, :x2 586.6445190906525, :y2 974.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 956.8500061035156, :x2 230.92500615119934, :y2 971.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 528}, :content {:text "通过在按钮的 onclick 事件处理程序中将 cancelBubble 设置为 true，可以阻止事件冒泡到 document.body，也就阻止了调用注册在它上面的事件处理程序。"}, :properties {:color "yellow"}} {:id #uuid "63d1de2e-22e8-497c-8ca7-379e78e0c8e7", :page 528, :position {:bounding {:x1 193.80000615119934, :y1 988.2125244140625, :x2 353.80000615119934, :y2 1017.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 988.2125244140625, :x2 353.80000615119934, :y2 1017.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 528}, :content {:text "跨浏览器事件对象"}, :properties {:color "green"}} {:id #uuid "63d1deb0-ad40-4c20-8525-75b4a6e2dc05", :page 529, :position {:bounding {:x1 0, :y1 492.8000030517578, :x2 797.396106004715, :y2 786.5624847412109, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 478.5000183582306, :y1 741.2499847412109, :x2 550.8373901844025, :y2 762.8500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 568.6000244617462, :y1 741.6000213623047, :x2 797.396106004715, :y2 763.9999847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 568.6000244617462, :y1 745.6000213623047, :x2 797.396106004715, :y2 761.4000091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 764.1625213623047, :x2 686.5612900257111, :y2 786.5624847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 768.1625213623047, :x2 100.33962559700012, :y2 783.9625091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 529}, :content {:text "getEvent()，其返回对 event 对象的引用。 IE 中事件对象的位置不同，而使用这个方法可以不用管事件处理程序是如何指定的"}, :properties {:color "yellow"}} {:id #uuid "63d1df18-c8fc-4589-af42-f11e2fad0fe7", :page 529, :position {:bounding {:x1 220.00000309944153, :y1 967.1500244140625, :x2 560.1486084461212, :y2 989.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 220.00000309944153, :y1 967.1500244140625, :x2 296.3734314441681, :y2 988.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 319.0000183582306, :y1 967.5000305175781, :x2 560.1486084461212, :y2 989.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 529}, :content {:text "getTarget()，其返回事件目标。在这个方法中"}, :properties {:color "yellow"}} {:id #uuid "63d1df53-a5e3-4a92-bec0-869c36ce593c", :page 530, :position {:bounding {:x1 248.8999969959259, :y1 198.84999084472656, :x2 601.2468140125275, :y2 221.59999084472656, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 248.8999969959259, :y1 198.84999084472656, :x2 364.76094365119934, :y2 220.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 392.90001225471497, :y1 199.1999969482422, :x2 601.2468140125275, :y2 221.59999084472656, :width 911.6666666666666, :height 1138.3333333333333}), :page 530}, :content {:text "preventDefault()，其用于阻止事件的默认行为"}, :properties {:color "yellow"}} {:id #uuid "63d1df8b-206b-4471-accc-ab260ee579fe", :page 530, :position {:bounding {:x1 149.88750004768372, :y1 409.5, :x2 811.4704468250275, :y2 431.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 386.5999939441681, :y1 409.5, :x2 811.4704468250275, :y2 431.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.88750004768372, :y1 409.5124969482422, :x2 361.31734013557434, :y2 431.9125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 233.50000309944153, :y1 413.1499938964844, :x2 361.31734013557434, :y2 428.1499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 386.5999939441681, :y1 413.5, :x2 788.0502808094025, :y2 429.3000030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 530}, :content {:text "第四个方法 stopPropagation()以类似的方式运行。同样先检测用于停止事件流的 DOM 方法"}, :properties {:color "yellow"}} {:id #uuid "63d1dfa6-26d0-4e34-8b5d-6ab9098ed369", :page 530, :position {:bounding {:x1 186.98750615119934, :y1 713.5500335693359, :x2 279.90123295783997, :y2 747.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 186.98750615119934, :y1 713.5500335693359, :x2 279.90123295783997, :y2 747.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 530}, :content {:text "事件类型"}, :properties {:color "green"}} {:id #uuid "63d1dfba-7a23-472d-afdb-b3f2b77def49", :page 530, :position {:bounding {:x1 149.80000615119934, :y1 783.8500366210938, :x2 405.1881287097931, :y2 806.2500305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.80000615119934, :y1 783.8500366210938, :x2 405.1881287097931, :y2 806.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 241.81250309944153, :y1 787.8500366210938, :x2 244.97500920295715, :y2 803.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 530}, :content {:text "DOM3 Events 定义了如下事件类型。"}, :properties {:color "yellow"}} {:id #uuid "63d1e06d-9242-440a-bff2-5433d55154da", :page 531, :position {:bounding {:x1 141.83789372444153, :y1 187.8125, :x2 280.7000000476837, :y2 217.95001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 187.8125, :x2 280.7000000476837, :y2 216.61248779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 141.83789372444153, :y1 189.14999389648438, :x2 141.83789372444153, :y2 217.95001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "用户界面事件"}, :properties {:color "green"}} {:id #uuid "63d1e0bb-9537-4d1a-abd0-934221901298", :page 531, :position {:bounding {:x1 137.10000920295715, :y1 275.74999618530273, :x2 796.587512254715, :y2 298.1500053405762, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 275.74999618530273, :x2 620.592395067215, :y2 298.1500053405762, :width 911.6666666666666, :height 1138.3333333333333} {:x1 633.400012254715, :y1 275.74999618530273, :x2 796.587512254715, :y2 298.1500053405762, :width 911.6666666666666, :height 1138.3333333333333} {:x1 633.400012254715, :y1 279.74999618530273, :x2 789.20006108284, :y2 295.54999923706055, :width 911.6666666666666, :height 1138.3333333333333} {:x1 236.10000920295715, :y1 280.10000228881836, :x2 620.592395067215, :y2 295.9000053405762, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "DOMActivate：元素被用户通过鼠标或键盘操作激活时触发（比 click 或 keydown 更通用）。"}, :properties {:color "yellow"}} {:id #uuid "63d1e0cc-c28a-45af-abb9-7642bcd1927b", :page 531, :position {:bounding {:x1 137.10000920295715, :y1 322.9499931335449, :x2 436.5161316394806, :y2 345.3499870300293, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 322.9499931335449, :x2 436.5161316394806, :y2 345.3499870300293, :width 911.6666666666666, :height 1138.3333333333333} {:x1 173.10000920295715, :y1 327.29999923706055, :x2 261.92344975471497, :y2 343.1000175476074, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "load：在 window 上当页面加载完成后触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e0d1-5987-4823-9cd5-96da205c7cda", :page 531, :position {:bounding {:x1 131.56250309944153, :y1 394.8500175476074, :x2 474.0362732410431, :y2 416.4499931335449, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 131.56250309944153, :y1 394.8500175476074, :x2 474.0362732410431, :y2 416.4499931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 137.10000920295715, :y1 397.8500175476074, :x2 287.6234314441681, :y2 413.6500358581543, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text " unload：在 window 上当页面完全卸载后触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e0d6-0811-4a29-81a3-5599699e6d7f", :page 531, :position {:bounding {:x1 137.10000920295715, :y1 441.04999923706055, :x2 686.5388062000275, :y2 463.79999923706055, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 441.04999923706055, :x2 274.82026982307434, :y2 462.6500053405762, :width 911.6666666666666, :height 1138.3333333333333} {:x1 285.80000615119934, :y1 441.4000053405762, :x2 686.5388062000275, :y2 463.79999923706055, :width 911.6666666666666, :height 1138.3333333333333} {:x1 182.10000920295715, :y1 445.4000053405762, :x2 274.82026982307434, :y2 461.1999931335449, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "abort：在<object>元素上当相应对象加载完成前被用户提前终止下载时触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e0db-4963-492c-9e0a-0372ab261180", :page 531, :position {:bounding {:x1 131.97818303108215, :y1 465.1000175476074, :x2 464.66865849494934, :y2 487.5000114440918, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.10000920295715, :y1 465.1000175476074, :x2 464.66865849494934, :y2 487.5000114440918, :width 911.6666666666666, :height 1138.3333333333333} {:x1 131.97818303108215, :y1 465.7500114440918, :x2 172.0171844959259, :y2 487.3500175476074, :width 911.6666666666666, :height 1138.3333333333333} {:x1 137.10000920295715, :y1 468.7500114440918, :x2 172.0171844959259, :y2 483.7500114440918, :width 911.6666666666666, :height 1138.3333333333333} {:x1 182.10000920295715, :y1 469.1000175476074, :x2 381.3418457508087, :y2 484.9000053405762, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "error：在 window 上当 JavaScript 报错时触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e116-a18a-4b8d-8f88-81d8ceb66f80", :page 531, :position {:bounding {:x1 137.10000920295715, :y1 535.5499992370605, :x2 729.445910692215, :y2 558.2999992370605, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 535.5499992370605, :x2 178.44375920295715, :y2 557.1500358581543, :width 911.6666666666666, :height 1138.3333333333333} {:x1 191.10000920295715, :y1 535.9000053405762, :x2 425.9375183582306, :y2 558.2999992370605, :width 911.6666666666666, :height 1138.3333333333333} {:x1 440.90001225471497, :y1 535.9000053405762, :x2 729.445910692215, :y2 558.2999992370605, :width 911.6666666666666, :height 1138.3333333333333} {:x1 191.10000920295715, :y1 539.9000053405762, :x2 425.9375183582306, :y2 555.700023651123, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "select：在文本框（<input>或 textarea）上当用户选择了一个或多个字符时触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e118-075a-4dd2-bbe3-318788003dfc", :page 531, :position {:bounding {:x1 131.97818303108215, :y1 559.5999870300293, :x2 541.651965379715, :y2 582.0000114440918, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 191.10000920295715, :y1 559.5999870300293, :x2 541.651965379715, :y2 582.0000114440918, :width 911.6666666666666, :height 1138.3333333333333} {:x1 131.97818303108215, :y1 560.2500114440918, :x2 177.76875615119934, :y2 581.8499870300293, :width 911.6666666666666, :height 1138.3333333333333} {:x1 137.10000920295715, :y1 563.2500114440918, :x2 177.76875615119934, :y2 578.2500114440918, :width 911.6666666666666, :height 1138.3333333333333} {:x1 191.10000920295715, :y1 563.5999870300293, :x2 282.82344365119934, :y2 579.4000358581543, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "resize：在 window 或窗格上当窗口或窗格被缩放时触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e11d-fae2-499f-ba55-9a0e14abbade", :page 531, :position {:bounding {:x1 137.10000920295715, :y1 582.8499870300293, :x2 520.8402588367462, :y2 605.5999870300293, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 582.8499870300293, :x2 175.30781865119934, :y2 604.450023651123, :width 911.6666666666666, :height 1138.3333333333333} {:x1 191.10000920295715, :y1 583.200023651123, :x2 520.8402588367462, :y2 605.5999870300293, :width 911.6666666666666, :height 1138.3333333333333} {:x1 191.10000920295715, :y1 587.200023651123, :x2 207.10000920295715, :y2 603.0000114440918, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "scroll：当用户滚动包含滚动条的元素时在元素上触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e12d-e7e0-4aab-b019-e84c057012ae", :page 531, :position {:bounding {:x1 0, :y1 380.80001068115234, :x2 795.9961426258087, :y2 750.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 380.80001068115234, :x2 0, :y2 403.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 437.17296147346497, :y1 704.8000183105469, :x2 795.9961426258087, :y2 727.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 451.3875000476837, :y1 708.8000183105469, :x2 795.9961426258087, :y2 724.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 728.5000305175781, :x2 558.0619385242462, :y2 750.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 732.5000305175781, :x2 395.61287236213684, :y2 748.300048828125, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "在 window 对象上，load 事件会在整个页面（包括所有外部资源如图片、JavaScript 文件和 CSS 文件）加载完成后触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e486-f1c5-4992-8340-418ca844e844", :page 531, :position {:bounding {:x1 181.21527409553528, :y1 752.1125183105469, :x2 348.56053471565247, :y2 774.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 181.21527409553528, :y1 752.1125183105469, :x2 348.56053471565247, :y2 774.5125122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 247.30000615119934, :y1 755.0625305175781, :x2 316.4500000476837, :y2 770.8625183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "第一种是 JavaScript 方式"}, :properties {:color "yellow"}} {:id #uuid "63d1e48f-735b-4e59-b400-84032d30b5ec", :page 531, :position {:bounding {:x1 116.78750157356262, :y1 930.8125, :x2 626.4480469226837, :y2 953.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.78750157356262, :y1 930.8125, :x2 626.4480469226837, :y2 953.2125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 199.80000615119934, :y1 934.4500122070312, :x2 592.900012254715, :y2 949.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 531}, :content {:text "第二种指定 load 事件处理程序的方式是向<body>元素添加 onload 属性"}, :properties {:color "yellow"}} {:id #uuid "63d1e4cd-8049-4d75-83b7-ec79e34f83a6", :page 532, :position {:bounding {:x1 0, :y1 540.8000183105469, :x2 832.5643799304962, :y2 651.0000152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 540.8000183105469, :x2 0, :y2 563.2000198364258, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.8999969959259, :y1 604.9125213623047, :x2 832.5643799304962, :y2 627.3125152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 204.10000920295715, :y1 607.8625183105469, :x2 832.5643799304962, :y2 623.6625213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 628.6000213623047, :x2 166.2823212146759, :y2 651.0000152587891, :width 911.6666666666666, :height 1138.3333333333333}), :page 532}, :content {:text "在通过 JavaScript 创建新<img>元素时，也可以给这个元素指定一个在加载完成后执行的事件处理程序。"}, :properties {:color "yellow"}} {:id #uuid "63d1e520-7b7c-49e3-86ca-72e9fe264cba", :page 533, :position {:bounding {:x1 116.79999852180481, :y1 183.29998779296875, :x2 626.1296265125275, :y2 205.70001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.79999852180481, :y1 183.29998779296875, :x2 626.1296265125275, :y2 205.70001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 184.00000309944153, :y1 186.95001220703125, :x2 441.9841797351837, :y2 201.95001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 533}, :content {:text "这里调用 Image 构造函数创建了一个新图片，并给它设置了事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d1e528-9745-4d47-a3df-e1dc92bfac1b", :page 533, :position {:bounding {:x1 0, :y1 140.79998779296875, :x2 795.2670776844025, :y2 386.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 140.79998779296875, :x2 0, :y2 163.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 458.5999939441681, :y1 340.54998779296875, :x2 515.03062748909, :y2 362.9499816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 530.7000000476837, :y1 340.8999938964844, :x2 795.2670776844025, :y2 363.29998779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 458.5999939441681, :y1 344.54998779296875, :x2 515.03062748909, :y2 359.54998779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 530.7000000476837, :y1 344.8999938964844, :x2 795.2670776844025, :y2 360.70001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 364.51251220703125, :x2 327.9521667957306, :y2 386.9125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 368.51251220703125, :x2 146.70000004768372, :y2 384.3125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 533}, :content {:text "<script>元素会在 JavaScript 文件加载完成后触发 load 事件，从而可以动态检测"}, :properties {:color "yellow"}} {:id #uuid "63d1e56b-4b2f-475e-8450-84ed6f06b7ae", :page 533, :position {:bounding {:x1 116.78750157356262, :y1 621.3625030517578, :x2 722.1637451648712, :y2 644.8000030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.78750157356262, :y1 621.3625030517578, :x2 271.03438115119934, :y2 643.7624969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 282.2000000476837, :y1 622.4000091552734, :x2 722.1637451648712, :y2 644.8000030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 131.73750615119934, :y1 625.3625030517578, :x2 271.03438115119934, :y2 641.1625213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 282.2000000476837, :y1 626.4000091552734, :x2 722.1637451648712, :y2 642.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 533}, :content {:text "IE 和 Opera 支持<link>元素触发 load 事件，因而支持动态检测样式表是否加载完成。"}, :properties {:color "yellow"}} {:id #uuid "63d1e590-8c3a-438a-93cf-d6d4b91e6de1", :page 533, :position {:bounding {:x1 284.72008061408997, :y1 841.1000061035156, :x2 749.5519897937775, :y2 863.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 284.72008061408997, :y1 841.1000061035156, :x2 481.8343689441681, :y2 863.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 493.0999939441681, :y1 841.1000061035156, :x2 749.5519897937775, :y2 863.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 335.2000000476837, :y1 844.75, :x2 481.8343689441681, :y2 859.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 533}, :content {:text "在指定 href 属性并把<link>节点添加到文档之前不会下载样式表"}, :properties {:color "yellow"}} {:id #uuid "63d1e5a6-e1c8-4a01-bd0d-d2c91ba887ce", :page 533, :position {:bounding {:x1 134.3999969959259, :y1 870.4499816894531, :x2 224.50000309944153, :y2 892.0499877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 870.4499816894531, :x2 224.50000309944153, :y2 892.0499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 188.3999969959259, :y1 874.4499816894531, :x2 191.3999969959259, :y2 889.4499816894531, :width 911.6666666666666, :height 1138.3333333333333}), :page 533}, :content {:text "unload 事件"}, :properties {:color "green"}} {:id #uuid "63d1e5b8-02d9-4fa2-bc28-1dfe6a0ac634", :page 533, :position {:bounding {:x1 366.6000244617462, :y1 891.8999938964844, :x2 645.8676025867462, :y2 914.2999877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 366.6000244617462, :y1 891.8999938964844, :x2 645.8676025867462, :y2 914.2999877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 379.0000183582306, :y1 895.5499877929688, :x2 433.28731083869934, :y2 910.5499877929688, :width 911.6666666666666, :height 1138.3333333333333}), :page 533}, :content {:text "，unload 事件会在文档卸载完成后触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e5c0-84e3-45f2-b90c-8b322be2611a", :page 533, :position {:bounding {:x1 0, :y1 588.7999877929688, :x2 794.7960693836212, :y2 937.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 588.7999877929688, :x2 0, :y2 611.1999893188477, :width 911.6666666666666, :height 1138.3333333333333} {:x1 656.1000244617462, :y1 891.5499877929688, :x2 794.7960693836212, :y2 913.9499816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 656.1000244617462, :y1 895.5499877929688, :x2 794.7960693836212, :y2 910.5499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 915.5124816894531, :x2 635.8173477649689, :y2 937.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 533}, :content {:text "unload 事件一般是在从一个页面导航到另一个页面时触发，最常用于清理引用，以避免内存泄漏"}, :properties {:color "yellow"}} {:id #uuid "63d1e5c9-76c8-475c-8de3-abf84102ae51", :page 533, :position {:bounding {:x1 383.9791443347931, :y1 939.1000061035156, :x2 549.5355713367462, :y2 961.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 383.9791443347931, :y1 939.1000061035156, :x2 549.5355713367462, :y2 961.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 448.3875000476837, :y1 942.0499877929688, :x2 514.3848145008087, :y2 957.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 533}, :content {:text "第一种是 JavaScript 方式"}, :properties {:color "yellow"}} {:id #uuid "63d1e5d3-be7a-44cf-8d86-dd7486e00d2c", :page 534, :position {:bounding {:x1 149.8999969959259, :y1 150.71249389648438, :x2 645.9000732898712, :y2 173.11251831054688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 150.71249389648438, :x2 645.9000732898712, :y2 173.11251831054688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 248.8999969959259, :y1 154.35000610351562, :x2 612.400012254715, :y2 169.35003662109375, :width 911.6666666666666, :height 1138.3333333333333}), :page 534}, :content {:text "第二种方式与 load 事件类似，就是给<body>元素添加 onunload 属性"}, :properties {:color "yellow"}} {:id #uuid "63d1e5e8-9612-45c3-9deb-50ef8e518967", :page 534, :position {:bounding {:x1 167.50000309944153, :y1 463.45001220703125, :x2 257.5999939441681, :y2 485.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 463.45001220703125, :x2 208.16875004768372, :y2 485.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 221.50000309944153, :y1 463.45001220703125, :x2 257.5999939441681, :y2 485.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 221.50000309944153, :y1 467.45001220703125, :x2 224.50000309944153, :y2 482.45001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 534}, :content {:text "resize 事件"}, :properties {:color "green"}} {:id #uuid "63d1e604-253b-49ba-b8fc-31034e4ad3d4", :page 534, :position {:bounding {:x1 149.8999969959259, :y1 484.45001220703125, :x2 780.4440796375275, :y2 507.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 539.7000000476837, :y1 484.45001220703125, :x2 780.4440796375275, :y2 506.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.8999969959259, :y1 484.8000183105469, :x2 526.3478882312775, :y2 507.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 485.5999939441681, :y1 488.45001220703125, :x2 526.3478882312775, :y2 503.45001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 539.7000000476837, :y1 488.45001220703125, :x2 731.2000000476837, :y2 503.45001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 534}, :content {:text "当浏览器窗口被缩放到新高度或宽度时，会触发 resize 事件。这个事件在 window 上触发"}, :properties {:color "yellow"}} {:id #uuid "63d1e634-4404-44ba-ba30-c6f3028aaa50", :page 534, :position {:bounding {:x1 213.18750309944153, :y1 773.8500061035156, :x2 608.7960693836212, :y2 796.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 556.2000000476837, :y1 773.8500061035156, :x2 608.7960693836212, :y2 795.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 213.18750309944153, :y1 774.2000122070312, :x2 542.868762254715, :y2 796.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 502.2000000476837, :y1 777.8500061035156, :x2 542.868762254715, :y2 792.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 556.2000000476837, :y1 777.8500061035156, :x2 556.3875000476837, :y2 792.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 534}, :content {:text "浏览器窗口在最大化和最小化时也会触发 resize 事件。"}, :properties {:color "yellow"}} {:id #uuid "63d1e639-57dc-473b-b9f5-b25dd6809b0b", :page 534, :position {:bounding {:x1 167.50000309944153, :y1 823.75, :x2 257.5999939441681, :y2 845.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 823.75, :x2 205.70781254768372, :y2 845.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 221.50000309944153, :y1 823.75, :x2 257.5999939441681, :y2 845.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 221.50000309944153, :y1 827.75, :x2 224.50000309944153, :y2 842.7500305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 534}, :content {:text "scroll 事件"}, :properties {:color "green"}} {:id #uuid "63d1e65d-8158-40a7-94aa-dbb4848e651b", :page 535, :position {:bounding {:x1 160.70000004768372, :y1 235.11249351501465, :x2 240.70000004768372, :y2 263.9125118255615, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 235.11249351501465, :x2 240.70000004768372, :y2 263.9125118255615, :width 911.6666666666666, :height 1138.3333333333333}), :page 535}, :content {:text "焦点事件"}, :properties {:color "green"}} {:id #uuid "63d1e66c-ae7b-44e0-8739-bf851dfd8faf", :page 535, :position {:bounding {:x1 0, :y1 92.79999923706055, :x2 793.900012254715, :y2 320.9499969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 92.79999923706055, :x2 0, :y2 115.20000076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 775.8000366687775, :y1 275.75, :x2 793.900012254715, :y2 298.1499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 467.7539551258087, :y1 276.1000061035156, :x2 565.2836182117462, :y2 298.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 594.9250366687775, :y1 276.1000061035156, :x2 757.9828369617462, :y2 298.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 775.8000366687775, :y1 279.75, :x2 793.900012254715, :y2 295.5500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 594.9250366687775, :y1 280.1000061035156, :x2 757.9828369617462, :y2 295.90000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 299.3500061035156, :x2 263.0469009876251, :y2 320.9499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 283.0999939441681, :y1 299.3500061035156, :x2 592.1406738758087, :y2 320.9499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 303.3500061035156, :x2 263.0469009876251, :y2 318.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 283.0999939441681, :y1 303.3500061035156, :x2 283.2874939441681, :y2 318.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 535}, :content {:text "些 事 件 可 以 与 document.hasFocus() 和 document.activeElement 一起为开发者提供用户在页面中导航的信息"}, :properties {:color "yellow"}} {:id #uuid "63d1e685-a29b-4f35-8d63-5cc4c2fceaf7", :page 535, :position {:bounding {:x1 116.81250309944153, :y1 512.3125, :x2 424.57344365119934, :y2 534.7125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.81250309944153, :y1 512.3125, :x2 424.57344365119934, :y2 534.7125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 326.5999939441681, :y1 515.9500122070312, :x2 424.57344365119934, :y2 531.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 535}, :content {:text "焦点事件中的两个主要事件是 focus 和 blur"}, :properties {:color "yellow"}} {:id #uuid "63d1e6af-1e6f-431f-9386-8381e71d0ede", :page 535, :position {:bounding {:x1 0, :y1 412.8000030517578, :x2 792.5203125476837, :y2 794.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 404.2000000476837, :y1 748.1500244140625, :x2 792.5203125476837, :y2 770.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 148.78752446174622, :y1 748.5125122070312, :x2 394.08906865119934, :y2 770.9125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 160.60000920295715, :y1 752.1500244140625, :x2 394.08906865119934, :y2 767.9500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 404.2000000476837, :y1 752.1500244140625, :x2 792.5203125476837, :y2 767.9500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 167.8999969959259, :y1 771.8500061035156, :x2 380.7567322254181, :y2 793.4500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 772.2000427246094, :x2 156.1578094959259, :y2 794.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 167.8999969959259, :y1 775.8500061035156, :x2 170.8999969959259, :y2 790.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 776.2000427246094, :x2 156.1578094959259, :y2 792.0000305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 535}, :content {:text "，blur、DOMFocusOut 和 focusout 的事件目标是失去焦点的元素，而 focus、DOMFocusIn和 focusin 的事件目标是获得焦点的元素"}, :properties {:color "yellow"}} {:id #uuid "63d1e6b6-d2d4-4361-84d4-cd6c3541c8be", :page 535, :position {:bounding {:x1 160.70000004768372, :y1 809.3125457763672, :x2 300.7000000476837, :y2 838.1125335693359, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 809.3125457763672, :x2 300.7000000476837, :y2 838.1125335693359, :width 911.6666666666666, :height 1138.3333333333333}), :page 535}, :content {:text "鼠标和滚轮事件"}, :properties {:color "green"}} {:id #uuid "63d1e702-1c1c-468c-a21b-9541e471bc27", :page 536, :position {:bounding {:x1 149.8999969959259, :y1 386.9124946594238, :x2 390.3001892566681, :y2 409.3125190734863, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 386.9124946594238, :x2 390.3001892566681, :y2 409.3125190734863, :width 911.6666666666666, :height 1138.3333333333333}), :page 536}, :content {:text "页面中的所有元素都支持鼠标事件"}, :properties {:color "yellow"}} {:id #uuid "63d1e707-2253-4323-b817-e261cc48f246", :page 536, :position {:bounding {:x1 0, :y1 386.9124946594238, :x2 835.5842163562775, :y2 435.20000076293945, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 406.32686161994934, :y1 386.9124946594238, :x2 835.5842163562775, :y2 409.3125190734863, :width 911.6666666666666, :height 1138.3333333333333} {:x1 438.90001225471497, :y1 390.5500068664551, :x2 835.5842163562775, :y2 406.3499946594238, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 410.5999946594238, :x2 438.7363312244415, :y2 433.0000190734863, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 412.8000068664551, :x2 0, :y2 435.20000076293945, :width 911.6666666666666, :height 1138.3333333333333}), :page 536}, :content {:text "除了 mouseenter 和 mouseleave，所有鼠标事件都会冒泡，都可以被取消，而这会影响浏览器的默认行为"}, :properties {:color "yellow"}} {:id #uuid "63d1e7de-2d42-4f9b-b346-9e803eb723d1", :page 536, :position {:bounding {:x1 167.48750615119934, :y1 993.0500183105469, :x2 246.58230900764465, :y2 1015.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.48750615119934, :y1 993.0500183105469, :x2 246.58230900764465, :y2 1015.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 536}, :content {:text "客户端坐标"}, :properties {:color "green"}} {:id #uuid "63d1e845-6716-416a-852b-ac6692043c53", :page 537, :position {:bounding {:x1 134.41250920295715, :y1 867.6625366210938, :x2 197.61250615119934, :y2 890.0625457763672, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.41250920295715, :y1 867.6625366210938, :x2 197.61250615119934, :y2 890.0625457763672, :width 911.6666666666666, :height 1138.3333333333333}), :page 537}, :content {:text "页面坐标"}, :properties {:color "green"}} {:id #uuid "63d1e85c-16fa-43a2-8f99-bf8ed68d64b6", :page 537, :position {:bounding {:x1 0, :y1 204.800048828125, :x2 796.19664311409, :y2 935.8125457763672, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 204.800048828125, :x2 0, :y2 227.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 556.213488817215, :y1 888.6625366210938, :x2 796.19664311409, :y2 911.0625457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 603.8124878406525, :y1 893.7125396728516, :x2 796.19664311409, :y2 909.5125427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.11249852180481, :y1 913.4125366210938, :x2 492.67686772346497, :y2 935.8125457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.11249852180481, :y1 917.4125366210938, :x2 427.0999939441681, :y2 933.2125396728516, :width 911.6666666666666, :height 1138.3333333333333}), :page 537}, :content {:text "面坐标是事件发生时鼠标光标在页面上的坐标，通过 event 对象的 pageX 和 pageY 可以获取"}, :properties {:color "yellow"}} {:id #uuid "63d1e865-f86a-43c1-81e5-be6a5020a051", :page 538, :position {:bounding {:x1 167.50000309944153, :y1 452.34999084472656, :x2 230.70000004768372, :y2 474.75001525878906, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 452.34999084472656, :x2 230.70000004768372, :y2 474.75001525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 538}, :content {:text "屏幕坐标"}, :properties {:color "green"}} {:id #uuid "63d1e873-5263-4d19-8001-9e9ec8dd60c2", :page 538, :position {:bounding {:x1 0, :y1 474.50001525878906, :x2 827.3152344226837, :y2 563.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 653.897570848465, :y1 474.50001525878906, :x2 827.3152344226837, :y2 496.90000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 722.7000000476837, :y1 478.15000915527344, :x2 827.3152344226837, :y2 493.15000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 497.75001525878906, :x2 513.4501831531525, :y2 520.1500396728516, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 501.75001525878906, :x2 271.5000183582306, :y2 517.5500335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 540.8000030517578, :x2 0, :y2 563.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 538}, :content {:text "可以通过 event 对象的 screenX 和 screenY 属性获取鼠标光标在屏幕上的坐标"}, :properties {:color "yellow"}} {:id #uuid "63d1e87b-09b2-4dfa-8dbd-cbe7056f3997", :page 539, :position {:bounding {:x1 130.28876042366028, :y1 275.51248931884766, :x2 181.78750920295715, :y2 297.91251373291016, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 130.28876042366028, :y1 275.51248931884766, :x2 181.78750920295715, :y2 297.91251373291016, :width 911.6666666666666, :height 1138.3333333333333}), :page 539}, :content {:text "修饰键"}, :properties {:color "green"}} {:id #uuid "63d1e922-07a7-406f-a368-f6c8518ee9ee", :page 539, :position {:bounding {:x1 0, :y1 172.79999542236328, :x2 796.4841797351837, :y2 389.81250762939453, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 172.79999542236328, :x2 0, :y2 195.19998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 259.2000000476837, :y1 343.44998931884766, :x2 315.7151062488556, :y2 365.84998321533203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 331.30000615119934, :y1 343.7999954223633, :x2 396.4734375476837, :y2 366.19998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 410.0999939441681, :y1 343.7999954223633, :x2 796.4841797351837, :y2 366.19998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 259.2000000476837, :y1 347.44998931884766, :x2 315.7151062488556, :y2 362.44998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 331.30000615119934, :y1 347.7999954223633, :x2 396.4734375476837, :y2 363.60001373291016, :width 911.6666666666666, :height 1138.3333333333333} {:x1 410.0999939441681, :y1 347.7999954223633, :x2 796.4841797351837, :y2 363.60001373291016, :width 911.6666666666666, :height 1138.3333333333333} {:x1 477.0999939441681, :y1 367.4000015258789, :x2 493.1288025379181, :y2 389.7999954223633, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 367.41251373291016, :x2 464.9266541004181, :y2 389.81250762939453, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 371.41251373291016, :x2 464.9266541004181, :y2 387.2125015258789, :width 911.6666666666666, :height 1138.3333333333333}), :page 539}, :content {:text "shiftKey、ctrlKey、altKey 和 metaKey。这几属性会在各自对应的修饰键被按下时包含布尔值 true，没有被按下时包含 false。"}, :properties {:color "yellow"}} {:id #uuid "63d1e954-61ab-429b-8f2d-b4f6ab759b84", :page 539, :position {:bounding {:x1 134.3999969959259, :y1 924.9500122070312, :x2 197.60000920295715, :y2 947.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 924.9500122070312, :x2 197.60000920295715, :y2 947.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 539}, :content {:text "相关元素"}, :properties {:color "green"}} {:id #uuid "63d1e96f-335d-4cd1-a332-7a93add88201", :page 540, :position {:bounding {:x1 149.8999969959259, :y1 360.1625213623047, :x2 641.33043217659, :y2 382.5625457763672, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 360.1625213623047, :x2 412.2027771472931, :y2 382.5625457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 434.0000183582306, :y1 360.8500213623047, :x2 641.33043217659, :y2 382.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 434.0000183582306, :y1 364.8500213623047, :x2 434.2162048816681, :y2 379.8500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 188.80000615119934, :y1 365.21250915527344, :x2 412.2027771472931, :y2 381.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 540}, :content {:text "DOM 通过 event 对象的 relatedTarget 属性提供了相关元素的信息。"}, :properties {:color "yellow"}} {:id #uuid "63d1e9a1-6dd8-478c-a672-259e74d1b5ca", :page 540, :position {:bounding {:x1 0, :y1 407.3500213623047, :x2 823.4579346179962, :y2 499.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 811.7875244617462, :y1 407.3500213623047, :x2 823.4579346179962, :y2 429.7500457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 811.7875244617462, :y1 411.3500213623047, :x2 823.4579346179962, :y2 427.15000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 432.1000213623047, :x2 307.65489506721497, :y2 454.49998474121094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 436.1000213623047, :x2 272.5999939441681, :y2 451.90000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 476.80003356933594, :x2 0, :y2 499.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 540}, :content {:text "IE会提供 fromElement 属性"}, :properties {:color "yellow"}} {:id #uuid "63d1e9a5-43ae-418b-884d-2156f0841d84", :page 540, :position {:bounding {:x1 0, :y1 431.05003356933594, :x2 819.3859741687775, :y2 515.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 678.9659912586212, :y1 431.05003356933594, :x2 819.3859741687775, :y2 453.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 690.0375244617462, :y1 435.05003356933594, :x2 819.3859741687775, :y2 450.8500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 455.6999969482422, :x2 294.4641296863556, :y2 478.1000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 492.80003356933594, :x2 0, :y2 515.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 540}, :content {:text "E 会提供 toElement属性，其中包含相关元素"}, :properties {:color "yellow"}} {:id #uuid "63d1e9c8-8223-435c-aa5a-1bb60acc31d7", :page 540, :position {:bounding {:x1 0, :y1 780.8000183105469, :x2 835.4045288562775, :y2 855.4125213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 780.8000183105469, :x2 0, :y2 803.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 436.8553650379181, :y1 809.4000091552734, :x2 835.4045288562775, :y2 831.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 453.30000615119934, :y1 833.0000152587891, :x2 485.3000671863556, :y2 855.4000091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 833.0125122070312, :x2 400.5768005847931, :y2 855.4125213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 837.0125122070312, :x2 400.5768005847931, :y2 852.8125152587891, :width 911.6666666666666, :height 1138.3333333333333}), :page 540}, :content {:text "个方法同样使用特性检测来确定要返回哪个值。可以像下面这样使用 EventUtil.getRelatedTarget()方法"}, :properties {:color "yellow"}} {:id #uuid "63d1ea0d-709f-43c0-a87b-b5313520aee8", :page 541, :position {:bounding {:x1 134.3999969959259, :y1 125.54998779296875, :x2 197.60000920295715, :y2 147.95001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 125.54998779296875, :x2 197.60000920295715, :y2 147.95001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 541}, :content {:text "鼠标按键"}, :properties {:color "green"}} {:id #uuid "63d1ea2c-e900-44a6-9ab7-6101ee6b020f", :page 541, :position {:bounding {:x1 0, :y1 60.80000114440918, :x2 795.4631226062775, :y2 240.912504196167, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 60.80000114440918, :x2 0, :y2 83.20000267028809, :width 911.6666666666666, :height 1138.3333333333333} {:x1 503.57506108283997, :y1 194.9000072479248, :x2 795.4631226062775, :y2 217.30000114440918, :width 911.6666666666666, :height 1138.3333333333333} {:x1 518.6750366687775, :y1 197.850004196167, :x2 795.4631226062775, :y2 213.6500072479248, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.07500004768372, :y1 218.51251029968262, :x2 295.26707768440247, :y2 240.912504196167, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.07500004768372, :y1 222.51251029968262, :x2 195.99624943733215, :y2 238.31249809265137, :width 911.6666666666666, :height 1138.3333333333333}), :page 541}, :content {:text "：0 表示鼠标主键、1 表示鼠标中键（通常也是滚轮键）、2 表示鼠标副键"}, :properties {:color "yellow"}} {:id #uuid "63d1ea34-f293-4f67-a2cf-341b5e406c2f", :page 541, :position {:bounding {:x1 128.62002873420715, :y1 555.4125213623047, :x2 229.32710576057434, :y2 577.8125152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 128.62002873420715, :y1 555.4125213623047, :x2 229.32710576057434, :y2 577.8125152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 129.92500615119934, :y1 559.4125213623047, :x2 130.2400085926056, :y2 575.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 541}, :content {:text " 额外事件信息"}, :properties {:color "green"}} {:id #uuid "63d1ea4d-a898-4145-b4c5-7dfb626a081e", :page 541, :position {:bounding {:x1 0, :y1 316.8000183105469, :x2 797.6762573719025, :y2 622.5000152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 316.8000183105469, :x2 0, :y2 339.2000198364258, :width 911.6666666666666, :height 1138.3333333333333} {:x1 717.5322144031525, :y1 576.4000244140625, :x2 797.6762573719025, :y2 598.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 202.3999969959259, :y1 599.7500152587891, :x2 576.5567352771759, :y2 621.3500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 600.1000213623047, :x2 188.27289128303528, :y2 622.5000152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 202.3999969959259, :y1 603.7500152587891, :x2 205.3999969959259, :y2 618.7500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 604.1000213623047, :x2 188.27289128303528, :y2 619.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 541}, :content {:text "。对鼠标事件来说，detail 包含一个数值，表示在给定位置上发生了多少次单击"}, :properties {:color "yellow"}} {:id #uuid "63d1ea6b-842e-4ab6-993d-b531e112f9cd", :page 541, :position {:bounding {:x1 134.3999969959259, :y1 912.9500122070312, :x2 260.5000183582306, :y2 934.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 912.9500122070312, :x2 260.5000183582306, :y2 934.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 224.3999969959259, :y1 916.9500122070312, :x2 227.3999969959259, :y2 931.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 541}, :content {:text "mousewheel 事件"}, :properties {:color "green"}} {:id #uuid "63d1ea75-36d7-491d-b6e9-65810788db45", :page 541, :position {:bounding {:x1 0, :y1 556.8000030517578, :x2 793.9161865711212, :y2 980.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 703.6000244617462, :y1 933.9500122070312, :x2 793.9161865711212, :y2 956.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 703.6000244617462, :y1 937.9500122070312, :x2 793.9161865711212, :y2 952.9500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 957.9000244140625, :x2 525.729602098465, :y2 980.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 961.9000244140625, :x2 341.4842178821564, :y2 977.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 541}, :content {:text "mousewheel事件会在用户使用鼠标滚轮时触发，包括在垂直方向上任意滚动"}, :properties {:color "yellow"}} {:id #uuid "63d1ea92-b250-41e1-970c-64fb72eee26e", :page 541, :position {:bounding {:x1 0, :y1 604.8000106811523, :x2 797.0722534656525, :y2 1050.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 604.8000106811523, :x2 0, :y2 627.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 427.30000615119934, :y1 1004.8500061035156, :x2 506.5703308582306, :y2 1026.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 517.3000366687775, :y1 1004.8500061035156, :x2 797.0722534656525, :y2 1026.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 517.3000366687775, :y1 1008.8500061035156, :x2 797.0722534656525, :y2 1023.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 1028.4500122070312, :x2 164.37031865119934, :y2 1050.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 175.10000920295715, :y1 1028.4500122070312, :x2 560.6703369617462, :y2 1050.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 571.400012254715, :y1 1028.4500122070312, :x2 663.8672363758087, :y2 1050.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 1032.4500122070312, :x2 164.37031865119934, :y2 1047.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 175.10000920295715, :y1 1032.4500122070312, :x2 560.6703369617462, :y2 1048.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 571.400012254715, :y1 1032.4500122070312, :x2 663.8672363758087, :y2 1048.25, :width 911.6666666666666, :height 1138.3333333333333}), :page 541}, :content {:text "wheelDelta 的新属性。当鼠标滚轮向前滚动时， wheelDelta 每次都是+120；而当鼠标滚轮向后滚动时，wheelDelta 每次都是–120"}, :properties {:color "yellow"}} {:id #uuid "63d1eaaa-423f-423d-aeea-68cecee9e463", :page 542, :position {:bounding {:x1 167.50000309944153, :y1 598.0500030517578, :x2 246.59480595588684, :y2 620.4500274658203, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 598.0500030517578, :x2 246.59480595588684, :y2 620.4500274658203, :width 911.6666666666666, :height 1138.3333333333333}), :page 542}, :content {:text "触摸屏设备"}, :properties {:color "green"}} {:id #uuid "63d1eab1-2e49-433c-a076-5ffc297145e4", :page 542, :position {:bounding {:x1 170.20000004768372, :y1 667.1500091552734, :x2 346.28538823127747, :y2 689.9000091552734, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 293.7000000476837, :y1 667.1500091552734, :x2 346.28538823127747, :y2 688.7500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 170.20000004768372, :y1 667.5000152587891, :x2 276.9039795398712, :y2 689.9000091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 293.7000000476837, :y1 671.1500091552734, :x2 293.88728642463684, :y2 686.1500091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 217.60000920295715, :y1 671.5000152587891, :x2 276.9039795398712, :y2 687.3000030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 542}, :content {:text "不支持 dblclick 事件。"}, :properties {:color "yellow"}} {:id #uuid "63d1eab7-efb9-43e1-9fce-a5067cb88d3a", :page 542, :position {:bounding {:x1 170.20000004768372, :y1 785.2500457763672, :x2 568.4640381336212, :y2 807.6500701904297, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 170.20000004768372, :y1 785.2500457763672, :x2 568.4640381336212, :y2 807.6500701904297, :width 911.6666666666666, :height 1138.3333333333333} {:x1 255.70000004768372, :y1 789.6000213623047, :x2 534.900012254715, :y2 805.4000091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 542}, :content {:text "mousemove 事件也会触发 mouseover 和 mouseout 事件"}, :properties {:color "yellow"}} {:id #uuid "63d1eabd-e466-4f9c-bd36-f68b51a0ec75", :page 542, :position {:bounding {:x1 170.20000004768372, :y1 808.8500366210938, :x2 679.8000366687775, :y2 831.6000366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 643.3000366687775, :y1 808.8500366210938, :x2 679.8000366687775, :y2 830.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 170.20000004768372, :y1 809.2000122070312, :x2 627.5078003406525, :y2 831.6000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 475.0000183582306, :y1 812.8500366210938, :x2 627.5078003406525, :y2 828.6500549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 643.3000366687775, :y1 812.8500366210938, :x2 646.3000366687775, :y2 827.8500366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 542}, :content {:text "双指点触屏幕并滑动导致页面滚动时会触发 mousewheel 和 scroll 事件"}, :properties {:color "yellow"}} {:id #uuid "63d1eac7-4205-4874-a051-50d3b65a8ec0", :page 542, :position {:bounding {:x1 176.28750920295715, :y1 837.8500366210938, :x2 255.38231205940247, :y2 860.2500305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 176.28750920295715, :y1 837.8500366210938, :x2 255.38231205940247, :y2 860.2500305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 542}, :content {:text "无障碍问题"}, :properties {:color "green"}} {:id #uuid "63d1eada-52d4-4893-831e-764097945565", :page 543, :position {:bounding {:x1 160.70000004768372, :y1 300.4124755859375, :x2 300.7000000476837, :y2 329.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 300.4124755859375, :x2 300.7000000476837, :y2 329.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 543}, :content {:text "键盘与输入事件"}, :properties {:color "green"}} {:id #uuid "63d1eae8-5578-4ebe-acad-f99ca09c91f3", :page 543, :position {:bounding {:x1 137.10000920295715, :y1 459.15000915527344, :x2 632.9643280506134, :y2 481.5500030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 459.15000915527344, :x2 632.9643280506134, :y2 481.5500030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 543}, :content {:text "keydown，用户按下键盘上某个键时触发，而且持续按住会重复触发。"}, :properties {:color "yellow"}} {:id #uuid "63d1eb12-a26b-4430-b1cd-d6b748c20097", :page 543, :position {:bounding {:x1 137.10000920295715, :y1 482.8500213623047, :x2 707.1975433826447, :y2 505.6000213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 482.8500213623047, :x2 199.05937504768372, :y2 504.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 209.10000920295715, :y1 483.1999969482422, :x2 707.1975433826447, :y2 505.6000213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 543}, :content {:text "keypress，用户按下键盘上某个键并产生字符时触发，而且持续按住会重复触发"}, :properties {:color "yellow"}} {:id #uuid "63d1eb1c-5e9e-4756-88db-67338b541c8a", :page 543, :position {:bounding {:x1 137.10000920295715, :y1 530.0500030517578, :x2 406.45860600471497, :y2 551.6500091552734, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 530.0500030517578, :x2 406.45860600471497, :y2 551.6500091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 543}, :content {:text "keyup，用户释放键盘上某个键时触发"}, :properties {:color "yellow"}} {:id #uuid "63d1eb26-acc3-4f3b-9ed9-5ec18f3ddabc", :page 543, :position {:bounding {:x1 116.78750157356262, :y1 577.2500152587891, :x2 636.3281128406525, :y2 600.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 549.7000000476837, :y1 577.2500152587891, :x2 636.3281128406525, :y2 598.8500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 361.5000183582306, :y1 577.6000213623047, :x2 539.64976811409, :y2 600.0000152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.78750157356262, :y1 577.6125030517578, :x2 344.9601318836212, :y2 600.0124969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 280.40001225471497, :y1 581.2500152587891, :x2 344.9601318836212, :y2 596.2500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 549.7000000476837, :y1 581.2500152587891, :x2 549.9706299304962, :y2 596.2500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 361.5000183582306, :y1 581.6000213623047, :x2 539.64976811409, :y2 597.4000091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 543}, :content {:text "输入事件只有一个，即 textInput。这个事件是对 keypress 事件的扩展"}, :properties {:color "yellow"}} {:id #uuid "63d1eb40-7143-4862-bd94-a1b2aaf9bc32", :page 543, :position {:bounding {:x1 134.3999969959259, :y1 859.5500183105469, :x2 166.00000309944153, :y2 881.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 859.5500183105469, :x2 166.00000309944153, :y2 881.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 543}, :content {:text "键码"}, :properties {:color "green"}} {:id #uuid "63d1eb55-a443-44b8-8c43-0aba7a14de70", :page 543, :position {:bounding {:x1 0, :y1 444.79999923706055, :x2 797.2922241687775, :y2 927.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 444.79999923706055, :x2 0, :y2 467.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.79999852180481, :y1 881.6000061035156, :x2 797.2922241687775, :y2 904, :width 911.6666666666666, :height 1138.3333333333333} {:x1 152.60000920295715, :y1 885.25, :x2 797.2922241687775, :y2 901.0499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 905.2999877929688, :x2 149.20976567268372, :y2 927.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 543}, :content {:text "对于 keydown 和 keyup 事件，event 对象的 keyCode 属性中会保存一个键码，对应键盘上特定的一个键"}, :properties {:color "yellow"}} {:id #uuid "63d1eb60-69d8-4323-8845-8add737afbcb", :page 544, :position {:bounding {:x1 167.50000309944153, :y1 923.25, :x2 230.70000004768372, :y2 945.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 923.25, :x2 230.70000004768372, :y2 945.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 544}, :content {:text "字符编码"}, :properties {:color "green"}} {:id #uuid "63d1eb80-9354-4947-84f1-ad6022c9c5dd", :page 545, :position {:bounding {:x1 0, :y1 236.79999160766602, :x2 795.2761108875275, :y2 478.71249771118164, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 236.79999160766602, :x2 0, :y2 259.2000160217285, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.79999852180481, :y1 432.7000160217285, :x2 795.2761108875275, :y2 455.1000099182129, :width 911.6666666666666, :height 1138.3333333333333} {:x1 215.80000615119934, :y1 436.3500099182129, :x2 795.2761108875275, :y2 451.3500099182129, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 456.31250381469727, :x2 475.5841248035431, :y2 478.71249771118164, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 460.31250381469727, :x2 281.7000000476837, :y2 476.11252212524414, :width 911.6666666666666, :height 1138.3333333333333}), :page 545}, :content {:text "这个方法检测 charCode 属性是否为数值（在不支持的浏览器中是 undefined）。如果是数值，则返回。否则，返回 keyCode 值。可以像下面这样使用："}, :properties {:color "yellow"}} {:id #uuid "63d1eb86-49ca-475a-a2f6-5178d4ac24f7", :page 545, :position {:bounding {:x1 130.82599186897278, :y1 586.1125030517578, :x2 231.08230900764465, :y2 608.5124969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 130.82599186897278, :y1 586.1125030517578, :x2 168.0074188709259, :y2 608.5124969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 180.0874969959259, :y1 586.1125030517578, :x2 231.08230900764465, :y2 608.5124969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 180.0874969959259, :y1 590.1125030517578, :x2 180.33711552619934, :y2 605.9124908447266, :width 911.6666666666666, :height 1138.3333333333333}), :page 545}, :content {:text "DOM3 的变化"}, :properties {:color "green"}} {:id #uuid "63d1ed2d-5fb8-450e-a634-b60a8275acbc", :page 545, :position {:bounding {:x1 0, :y1 364.799991607666, :x2 804.2640869617462, :y2 652.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 364.799991607666, :x2 0, :y2 387.1999931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 748.7875244617462, :y1 606.1499938964844, :x2 804.2640869617462, :y2 628.5500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 629.75, :x2 609.3801147937775, :y2 652.1499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 633.75, :x2 527.8000366687775, :y2 649.5500030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 545}, :content {:text "DOM3 Events 规范并未规定 charCode 属性，而是定义了 key 和 char 两个新属性"}, :properties {:color "yellow"}} {:id #uuid "63d1ed6c-22d2-48d2-a3b9-09e9cb71cf9d", :page 545, :position {:bounding {:x1 227.11494755744934, :y1 943.3500213623047, :x2 766.9116089344025, :y2 966.1125335693359, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 397.90001225471497, :y1 943.3500213623047, :x2 766.9116089344025, :y2 964.9500274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 227.11494755744934, :y1 943.7125244140625, :x2 383.40156865119934, :y2 966.1125335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 397.90001225471497, :y1 947.3500213623047, :x2 398.08751225471497, :y2 962.3500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 321.8750183582306, :y1 947.7125244140625, :x2 383.40156865119934, :y2 963.5125274658203, :width 911.6666666666666, :height 1138.3333333333333}), :page 545}, :content {:text "支持一个名为 location 的属性，该属性是一个数值，表示是在哪里按的键。"}, :properties {:color "yellow"}} {:id #uuid "63d1ed75-209a-4129-80d8-f24fca5f8a04", :page 546, :position {:bounding {:x1 246.03157353401184, :y1 298.2000045776367, :x2 607.0460693836212, :y2 320.61251068115234, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 575.2000000476837, :y1 298.2000045776367, :x2 607.0460693836212, :y2 320.5999984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 246.03157353401184, :y1 298.21251678466797, :x2 539.9415771961212, :y2 320.61251068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 280.5000183582306, :y1 301.8499984741211, :x2 539.9415771961212, :y2 316.8499984741211, :width 911.6666666666666, :height 1138.3333333333333}), :page 546}, :content {:text "是给 event 对象增加了 getModifierState()方法"}, :properties {:color "yellow"}} {:id #uuid "63d1ed9e-ad42-4046-8ea5-07b3a3ab47c7", :page 546, :position {:bounding {:x1 0, :y1 321.90001678466797, :x2 831.0722534656525, :y2 419.2000045776367, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 718.8583862781525, :y1 321.90001678466797, :x2 831.0722534656525, :y2 344.30001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 579.3000366687775, :y1 345.49999237060547, :x2 595.3000366687775, :y2 367.90001678466797, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 345.5125045776367, :x2 567.0500366687775, :y2 367.9124984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 349.5125045776367, :x2 567.0500366687775, :y2 365.31249237060547, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 396.80001068115234, :x2 0, :y2 419.2000045776367, :width 911.6666666666666, :height 1138.3333333333333}), :page 546}, :content {:text "如果给定的修饰键处于激活状态（键被按住），则方法返回 true，否则返回 false："}, :properties {:color "yellow"}} {:id #uuid "63d1ef2a-f100-410a-9830-22e1024e60f6", :page 546, :position {:bounding {:x1 167.50000309944153, :y1 506.55001068115234, :x2 284.5999939441681, :y2 528.1499862670898, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 506.55001068115234, :x2 231.97656559944153, :y2 528.1499862670898, :width 911.6666666666666, :height 1138.3333333333333} {:x1 248.50000309944153, :y1 506.55001068115234, :x2 284.5999939441681, :y2 528.1499862670898, :width 911.6666666666666, :height 1138.3333333333333} {:x1 248.50000309944153, :y1 510.55001068115234, :x2 251.50000309944153, :y2 525.5500106811523, :width 911.6666666666666, :height 1138.3333333333333}), :page 546}, :content {:text "textInput 事件"}, :properties {:color "green"}} {:id #uuid "63d1ef42-ad82-4800-a8a7-55dc02a8565a", :page 546, :position {:bounding {:x1 0, :y1 551.2500076293945, :x2 828.1921265125275, :y2 597.6125259399414, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 710.7000000476837, :y1 551.2500076293945, :x2 828.1921265125275, :y2 572.8500137329102, :width 911.6666666666666, :height 1138.3333333333333} {:x1 557.4301636219025, :y1 551.6000137329102, :x2 700.6594116687775, :y2 574.0000381469727, :width 911.6666666666666, :height 1138.3333333333333} {:x1 638.7000000476837, :y1 555.2500076293945, :x2 700.6594116687775, :y2 570.2500381469727, :width 911.6666666666666, :height 1138.3333333333333} {:x1 710.7000000476837, :y1 555.2500076293945, :x2 828.1921265125275, :y2 570.2500381469727, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 572.8000259399414, :x2 0, :y2 595.1999893188477, :width 911.6666666666666, :height 1138.3333333333333} {:x1 378.90001225471497, :y1 574.8500137329102, :x2 545.7260620594025, :y2 596.4499893188477, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 575.2125015258789, :x2 362.3601257801056, :y2 597.6125259399414, :width 911.6666666666666, :height 1138.3333333333333} {:x1 378.90001225471497, :y1 578.8500137329102, :x2 381.90001225471497, :y2 593.8500137329102, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 579.2125015258789, :x2 362.3601257801056, :y2 595.0124893188477, :width 911.6666666666666, :height 1138.3333333333333}), :page 546}, :content {:text "一个区别是 keypress 会在任何可以获得焦点的元素上触发，而 textInput 只在可编辑区域上触发"}, :properties {:color "yellow"}} {:id #uuid "63d1ef4f-d68b-454c-884d-5ea981ee6da9", :page 546, :position {:bounding {:x1 0, :y1 574.8500137329102, :x2 827.7001221179962, :y2 621.3000259399414, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 665.47740483284, :y1 574.8500137329102, :x2 724.560168504715, :y2 596.4499893188477, :width 911.6666666666666, :height 1138.3333333333333} {:x1 741.1000244617462, :y1 574.8500137329102, :x2 827.7001221179962, :y2 596.4499893188477, :width 911.6666666666666, :height 1138.3333333333333} {:x1 741.1000244617462, :y1 578.8500137329102, :x2 827.7001221179962, :y2 593.8500137329102, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 588.8000259399414, :x2 0, :y2 611.1999893188477, :width 911.6666666666666, :height 1138.3333333333333} {:x1 368.30000615119934, :y1 598.5500259399414, :x2 729.1625244617462, :y2 620.9500503540039, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 598.9000015258789, :x2 358.24974370002747, :y2 621.3000259399414, :width 911.6666666666666, :height 1138.3333333333333} {:x1 368.30000615119934, :y1 602.5500259399414, :x2 725.472277879715, :y2 617.5500259399414, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 602.9000015258789, :x2 358.24974370002747, :y2 618.6999893188477, :width 911.6666666666666, :height 1138.3333333333333}), :page 546}, :content {:text "extInput 只在有新字符被插入时才会触发，而 keypress 对任何可能影响文本的键都会触发（包括退格键）。"}, :properties {:color "yellow"}} {:id #uuid "63d1ef7d-4ef5-458c-8d53-9c1306b75aa0", :page 546, :position {:bounding {:x1 148.20000004768372, :y1 814.6499938964844, :x2 783.6722900867462, :y2 837.0499877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.20000004768372, :y1 814.6499938964844, :x2 783.6722900867462, :y2 837.0499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 193.20000004768372, :y1 818.6499938964844, :x2 443.3875000476837, :y2 834.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 546}, :content {:text "event 对象上还有一个名为 inputMethod 的属性，该属性表示向控件中输入文本的手段。"}, :properties {:color "yellow"}} {:id #uuid "63d1ef89-6ad6-4450-8ebb-d2468e4c2905", :page 547, :position {:bounding {:x1 134.38750004768372, :y1 203.05001831054688, :x2 260.9770996570587, :y2 225.44998168945312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.38750004768372, :y1 203.05001831054688, :x2 260.9770996570587, :y2 225.44998168945312, :width 911.6666666666666, :height 1138.3333333333333}), :page 547}, :content {:text "设备上的键盘事件"}, :properties {:color "green"}} {:id #uuid "63d1ef95-049a-4c97-a727-84096bb0fced", :page 547, :position {:bounding {:x1 160.70000004768372, :y1 823.0125122070312, :x2 240.70000004768372, :y2 851.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 823.0125122070312, :x2 240.70000004768372, :y2 851.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 547}, :content {:text "合成事件"}, :properties {:color "green"}} {:id #uuid "63d1efc2-87c8-4780-bf84-35ac473e32e7", :page 547, :position {:bounding {:x1 378.03526616096497, :y1 864.0000305175781, :x2 700.7619507312775, :y2 886.4000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 378.03526616096497, :y1 864.0000305175781, :x2 700.7619507312775, :y2 886.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 508.30000615119934, :y1 866.9500122070312, :x2 540.4125244617462, :y2 882.7500305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 547}, :content {:text "用于处理通常使用 IME 输入时的复杂输入序列"}, :properties {:color "yellow"}} {:id #uuid "63d1efd8-df3f-4930-b3dc-2bb09a50efa7", :page 547, :position {:bounding {:x1 137.10000920295715, :y1 934.5500183105469, :x2 701.5637695789337, :y2 957.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 934.5500183105469, :x2 257.6859314441681, :y2 956.1500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 281.0999939441681, :y1 934.9000244140625, :x2 701.5637695789337, :y2 957.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 281.0999939441681, :y1 938.9000244140625, :x2 345.8728210926056, :y2 954.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 547}, :content {:text "compositionstart，在 IME 的文本合成系统打开时触发，表示输入即将开始；"}, :properties {:color "yellow"}} {:id #uuid "63d1efde-69e4-4593-b99e-662c0147ce20", :page 547, :position {:bounding {:x1 131.56250309944153, :y1 958.5000305175781, :x2 530.4841797351837, :y2 980.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 290.0999939441681, :y1 958.5000305175781, :x2 530.4841797351837, :y2 980.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 131.56250309944153, :y1 959.1500244140625, :x2 275.57344365119934, :y2 980.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 137.10000920295715, :y1 962.1500244140625, :x2 275.57344365119934, :y2 977.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 547}, :content {:text " compositionupdate，在新字符插入输入字段时触发；"}, :properties {:color "yellow"}} {:id #uuid "63d1efe5-3f83-4e8c-af14-a3c2a4b45a4e", :page 547, :position {:bounding {:x1 137.10000920295715, :y1 981.8500366210938, :x2 715.5598022937775, :y2 1004.6000366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 981.8500366210938, :x2 252.51094365119934, :y2 1003.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 263.0999939441681, :y1 982.2000122070312, :x2 715.5598022937775, :y2 1004.6000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 263.0999939441681, :y1 986.2000122070312, :x2 327.7733643054962, :y2 1002, :width 911.6666666666666, :height 1138.3333333333333}), :page 547}, :content {:text "compositionend，在 IME 的文本合成系统关闭时触发，表示恢复正常键盘输入。"}, :properties {:color "yellow"}} {:id #uuid "63d1eff2-4615-4bcc-b0a5-6c4a137ec2cf", :page 547, :position {:bounding {:x1 0, :y1 268.79998779296875, :x2 802.2085449695587, :y2 1051.812515258789, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 268.79998779296875, :x2 0, :y2 291.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 770.3290894031525, :y1 1005.8125152587891, :x2 802.2085449695587, :y2 1028.2125091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.11249852180481, :y1 1029.4125213623047, :x2 459.9546082019806, :y2 1051.812515258789, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.11249852180481, :y1 1033.4125213623047, :x2 263.0000183582306, :y2 1049.2125091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 547}, :content {:text "。唯一增加的事件属性是 data，其中包含的值视情况而异"}, :properties {:color "yellow"}} {:id #uuid "63d1f002-1111-47a0-bfc2-526043867d33", :page 548, :position {:bounding {:x1 193.80000615119934, :y1 406.51250648498535, :x2 273.80000615119934, :y2 435.3124942779541, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 406.51250648498535, :x2 273.80000615119934, :y2 435.3124942779541, :width 911.6666666666666, :height 1138.3333333333333}), :page 548}, :content {:text "变化事件"}, :properties {:color "green"}} {:id #uuid "63d1f008-fb3f-4229-b3a3-96ccd2cbc524", :page 548, :position {:bounding {:x1 193.80000615119934, :y1 573.75, :x2 303.80000615119934, :y2 602.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 573.75, :x2 249.32536625862122, :y2 602.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 259.3875000476837, :y1 573.75, :x2 303.80000615119934, :y2 602.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 259.3875000476837, :y1 578.5500183105469, :x2 263.3875000476837, :y2 598.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 548}, :content {:text "HTML5 事件"}, :properties {:color "green"}} {:id #uuid "63d1f013-fe07-4586-9e65-b52b7301acb0", :page 548, :position {:bounding {:x1 0, :y1 492.40000915527344, :x2 786.4039795398712, :y2 536.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 659.0225098133087, :y1 492.40000915527344, :x2 786.4039795398712, :y2 514.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 165.70000004768372, :y1 514.0500183105469, :x2 278.8853027820587, :y2 536.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 291.86250615119934, :y1 514.0500183105469, :x2 556.5961182117462, :y2 536.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 165.70000004768372, :y1 518.0500183105469, :x2 278.8853027820587, :y2 533.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 291.86250615119934, :y1 518.0500183105469, :x2 457.3376953601837, :y2 533.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 548}, :content {:text "。变化事件已经被 Mutation Observers 所取代，可以参考第 14 章中的介绍。"}, :properties {:color "yellow"}} {:id #uuid "63d1f1d9-059a-4329-b53b-355414e67bca", :page 548, :position {:bounding {:x1 213.20000004768372, :y1 636.0500183105469, :x2 527.697863817215, :y2 658.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 213.20000004768372, :y1 636.0500183105469, :x2 527.697863817215, :y2 658.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 213.20000004768372, :y1 640.0500183105469, :x2 273.54072880744934, :y2 655.8500213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 548}, :content {:text "HTML5 详尽地列出了浏览器支持的所有事件"}, :properties {:color "yellow"}} {:id #uuid "63d1f1e0-6743-484f-8c99-3917ca29eb2a", :page 548, :position {:bounding {:x1 167.50000309944153, :y1 690.0500183105469, :x2 302.5999939441681, :y2 711.6500091552734, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 690.0500183105469, :x2 302.5999939441681, :y2 711.6500091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 266.5000183582306, :y1 694.0500183105469, :x2 269.5000183582306, :y2 709.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 548}, :content {:text "contextmenu 事件"}, :properties {:color "green"}} {:id #uuid "63d1f1f3-c186-4c12-9b1a-2d747a7378ad", :page 548, :position {:bounding {:x1 0, :y1 636.8000183105469, :x2 828.0961182117462, :y2 804.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 636.8000183105469, :x2 0, :y2 659.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 516.05894780159, :y1 758.7125091552734, :x2 828.0961182117462, :y2 781.1125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 611.6000244617462, :y1 762.3500061035156, :x2 828.0961182117462, :y2 777.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 782.4000244140625, :x2 743.3237183094025, :y2 804.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 548}, :content {:text "结果就出现了 contextmenu 事件，以专门用于表示何时该显示上下文菜单，从而允许开发者取消默认的上下文菜单并提供自定义菜单"}, :properties {:color "yellow"}} {:id #uuid "63d1f2d6-eb6b-43f7-9c63-258c5bf22fde", :page 548, :position {:bounding {:x1 0, :y1 668.8000183105469, :x2 830.9763062000275, :y2 852.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 668.8000183105469, :x2 0, :y2 691.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 148.20000004768372, :y1 805.6500244140625, :x2 830.9763062000275, :y2 828.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 247.20000004768372, :y1 809.6500244140625, :x2 830.9763062000275, :y2 825.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 829.6125183105469, :x2 182.27472233772278, :y2 852.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 548}, :content {:text "contextmenu 事件冒泡，因此只要给 document 指定一个事件处理程序就可以处理页面上的所有同类事件"}, :properties {:color "yellow"}} {:id #uuid "63d1f2f2-a41d-44fb-8df7-b396f8ba4811", :page 548, :position {:bounding {:x1 0, :y1 716.8000183105469, :x2 830.9602539539337, :y2 946.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 716.8000183105469, :x2 0, :y2 739.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 732.8000183105469, :x2 0, :y2 755.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 767.158313035965, :y1 876.8000183105469, :x2 830.9602539539337, :y2 899.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 725.900012254715, :y1 900.1500244140625, :x2 827.9960815906525, :y2 921.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 900.5000305175781, :x2 713.4811890125275, :y2 922.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 725.900012254715, :y1 904.1500244140625, :x2 827.9960815906525, :y2 919.1500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 904.5000305175781, :x2 713.4811890125275, :y2 920.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 924.1125183105469, :x2 198.32471013069153, :y2 946.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 548}, :content {:text "通常，自定义的上下文菜单都是通过 oncontextmenu 事件处理程序触发显示，并通过 onclick 事件处理程序触发隐藏的"}, :properties {:color "yellow"}} {:id #uuid "63d1f333-9ef7-437e-b804-4e1414b3b714", :page 549, :position {:bounding {:x1 0, :y1 412.800012588501, :x2 797.9763062000275, :y2 653.8999881744385, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 412.800012588501, :x2 0, :y2 435.20000648498535, :width 911.6666666666666, :height 1138.3333333333333} {:x1 573.5920898914337, :y1 607.800012588501, :x2 797.9763062000275, :y2 630.2000370025635, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 631.5000247955322, :x2 381.93172001838684, :y2 653.8999881744385, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 635.5000247955322, :x2 117.08752751350403, :y2 651.300012588501, :width 911.6666666666666, :height 1138.3333333333333}), :page 549}, :content {:text "这个事件处理程序首先取消默认行，确保不会显示浏览器默认的上下文菜单"}, :properties {:color "yellow"}} {:id #uuid "63d1f378-55b6-4ff9-867f-085be4650745", :page 549, :position {:bounding {:x1 134.3999969959259, :y1 778.9500122070312, :x2 278.5000183582306, :y2 800.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 778.9500122070312, :x2 229.5328094959259, :y2 800.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 242.3999969959259, :y1 778.9500122070312, :x2 278.5000183582306, :y2 800.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 242.3999969959259, :y1 782.9500122070312, :x2 245.3999969959259, :y2 797.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 549}, :content {:text "beforeunload 事件"}, :properties {:color "green"}} {:id #uuid "63d1f38f-7b43-4be1-896d-daa4ddcf97ff", :page 549, :position {:bounding {:x1 115.10000157356262, :y1 800.0499877929688, :x2 719.6128418445587, :y2 822.4499893188477, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.10000157356262, :y1 800.0499877929688, :x2 210.23282170295715, :y2 821.6499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 223.10000920295715, :y1 800.0499877929688, :x2 719.6128418445587, :y2 822.4499893188477, :width 911.6666666666666, :height 1138.3333333333333} {:x1 223.10000920295715, :y1 804.0499877929688, :x2 351.03258061408997, :y2 819.8499984741211, :width 911.6666666666666, :height 1138.3333333333333}), :page 549}, :content {:text "beforeunload 事件会在 window 上触发，用意是给开发者提供阻止页面被卸载的机会"}, :properties {:color "yellow"}} {:id #uuid "63d1f3d5-335d-4999-a718-a034023ca066", :page 550, :position {:bounding {:x1 167.50000309944153, :y1 272.3499984741211, :x2 347.5999939441681, :y2 293.9500045776367, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 272.3499984741211, :x2 347.5999939441681, :y2 293.9500045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 311.5000183582306, :y1 276.3499984741211, :x2 314.5000183582306, :y2 291.3499984741211, :width 911.6666666666666, :height 1138.3333333333333}), :page 550}, :content {:text "DOMContentLoaded 事件"}, :properties {:color "green"}} {:id #uuid "63d1f3de-a282-4bf7-93b0-fb02eb94f13a", :page 550, :position {:bounding {:x1 0, :y1 317.4000015258789, :x2 818.073840379715, :y2 403.2000045776367, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 182.2000458240509, :y1 317.4000015258789, :x2 818.073840379715, :y2 339.80001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 192.8999969959259, :y1 321.4000015258789, :x2 818.073840379715, :y2 337.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 341.0125045776367, :x2 369.5086853504181, :y2 363.4124984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 345.0125045776367, :x2 193.10620427131653, :y2 360.81249237060547, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 380.80001068115234, :x2 0, :y2 403.2000045776367, :width 911.6666666666666, :height 1138.3333333333333}), :page 550}, :content {:text "。而 DOMContentLoaded 事件会在 DOM 树构建完成后立即触发，而不用等待图片、JavaScript文件、CSS 文件或其他资源加载完成"}, :properties {:color "yellow"}} {:id #uuid "63d1f3f5-f299-415e-9b73-045cbfcb17c8", :page 550, :position {:bounding {:x1 0, :y1 388.2000198364258, :x2 829.6801636219025, :y2 451.2000198364258, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 749.5087158679962, :y1 388.2000198364258, :x2 829.6801636219025, :y2 410.6000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 411.90001678466797, :x2 396.7234375476837, :y2 434.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 415.90001678466797, :x2 339.7500183582306, :y2 431.7000198364258, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 428.8000183105469, :x2 0, :y2 451.2000198364258, :width 911.6666666666666, :height 1138.3333333333333}), :page 550}, :content {:text "实际的事件目标是 document，但会冒泡到 window"}, :properties {:color "yellow"}} {:id #uuid "63d1f403-7dd6-4b5f-8122-5f24e37beeb7", :page 550, :position {:bounding {:x1 0, :y1 540.8000183105469, :x2 821.882922410965, :y2 589.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 540.8000183105469, :x2 0, :y2 563.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 148.20000004768372, :y1 542.9500274658203, :x2 821.882922410965, :y2 565.3500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 292.2000000476837, :y1 546.9500274658203, :x2 821.882922410965, :y2 562.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 566.9000244140625, :x2 230.39209294319153, :y2 589.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 550}, :content {:text "DOMContentLoaded 事件通常用于添加事件处理程序或执行其他 DOM 操作。这个事件始终在 load事件之前触发。"}, :properties {:color "yellow"}} {:id #uuid "63d1f42c-e14e-4bf2-95df-1884fc4a5227", :page 550, :position {:bounding {:x1 149.8999969959259, :y1 388.2124938964844, :x2 733.4743530750275, :y2 410.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 388.2124938964844, :x2 733.4743530750275, :y2 410.6125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 201.30000615119934, :y1 391.8500061035156, :x2 603.2000000476837, :y2 406.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 550}, :content {:text "要处理 DOMContentLoaded 事件，需要给 document 或 window 添加事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d1f432-6536-49b7-bab5-c6daa0d65d82", :page 550, :position {:bounding {:x1 167.50000309944153, :y1 822.25, :x2 347.5999939441681, :y2 843.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 822.25, :x2 292.5296814441681, :y2 843.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 311.5000183582306, :y1 822.25, :x2 347.5999939441681, :y2 843.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 311.5000183582306, :y1 826.25, :x2 314.5000183582306, :y2 841.25, :width 911.6666666666666, :height 1138.3333333333333}), :page 550}, :content {:text "readystatechange 事件"}, :properties {:color "green"}} {:id #uuid "63d1f45e-9b2a-4062-a935-5caed02500c5", :page 550, :position {:bounding {:x1 0, :y1 748.8000183105469, :x2 829.1882202625275, :y2 889.7125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 748.8000183105469, :x2 0, :y2 771.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 684.97203373909, :y1 843.7000122070312, :x2 829.1882202625275, :y2 866.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 867.3125305175781, :x2 550.9779541492462, :y2 889.7125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 550}, :content {:text "这个有点神秘的事件旨在提供文档或元素加载状态的信息，但行为有时候并不稳定"}, :properties {:color "yellow"}} {:id #uuid "63d1f46e-f715-4f8f-901a-b51d4cf4ea5a", :page 550, :position {:bounding {:x1 0, :y1 764.7999877929688, :x2 827.7961304187775, :y2 913.3124847412109, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 764.7999877929688, :x2 0, :y2 787.1999893188477, :width 911.6666666666666, :height 1138.3333333333333} {:x1 741.900012254715, :y1 866.9499893188477, :x2 827.7961304187775, :y2 888.5499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 567.0067627429962, :y1 867.3124923706055, :x2 722.9296753406525, :y2 889.7124938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 597.900012254715, :y1 870.9499969482422, :x2 722.9296753406525, :y2 885.9499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 741.900012254715, :y1 870.9499969482422, :x2 827.7961304187775, :y2 885.9499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 307.2000000476837, :y1 890.5499877929688, :x2 343.7584717273712, :y2 912.1499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 890.9124908447266, :x2 292.8562500476837, :y2 913.3124847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 307.2000000476837, :y1 894.5499877929688, :x2 307.3875000476837, :y2 909.5499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 894.9124908447266, :x2 292.8562500476837, :y2 910.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 550}, :content {:text "支持 readystatechange 事件的每个对象都有一个 readyState 属性"}, :properties {:color "yellow"}} {:id #uuid "63d1f4ee-1d97-477a-b025-9d451bb38784", :page 551, :position {:bounding {:x1 116.79999852180481, :y1 384.71250915527344, :x2 529.1478607654572, :y2 407.11253356933594, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.79999852180481, :y1 384.71250915527344, :x2 529.1478607654572, :y2 407.11253356933594, :width 911.6666666666666, :height 1138.3333333333333} {:x1 152.3999969959259, :y1 388.3500213623047, :x2 191.3999969959259, :y2 403.3500213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 551}, :content {:text "在与 load 事件共同使用时，这个事件的触发顺序不能保证"}, :properties {:color "yellow"}} {:id #uuid "63d1f506-9b77-4db5-bae8-baeadee88c75", :page 551, :position {:bounding {:x1 260.45872807502747, :y1 674.0125122070312, :x2 659.0012085437775, :y2 696.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 260.45872807502747, :y1 674.0125122070312, :x2 659.0012085437775, :y2 696.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 551}, :content {:text "如果是，则移除事件处理程序，以保证其他阶段不再执行"}, :properties {:color "yellow"}} {:id #uuid "63d1f511-4364-484a-a3e6-d7ebba03ab3e", :page 551, :position {:bounding {:x1 134.3999969959259, :y1 838.4500427246094, :x2 338.80000615119934, :y2 860.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 838.4500427246094, :x2 338.80000615119934, :y2 860.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 206.3999969959259, :y1 842.4500427246094, :x2 305.7000000476837, :y2 857.4500427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 551}, :content {:text "pageshow 与 pagehide 事件"}, :properties {:color "green"}} {:id #uuid "63d1f52c-336e-4a04-b7a0-bf85ebdc5022", :page 551, :position {:bounding {:x1 0, :y1 604.8000106811523, :x2 800.7604248523712, :y2 1023.6500549316406, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 604.8000106811523, :x2 0, :y2 627.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 640.4602539539337, :y1 978.0000305175781, :x2 800.7604248523712, :y2 1000.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 1001.2500305175781, :x2 337.18196415901184, :y2 1023.6500549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 1005.2500305175781, :x2 235.44168400764465, :y2 1021.050048828125, :width 911.6666666666666, :height 1138.3333333333333}), :page 551}, :content {:text "。在新加载的页面上， pageshow 会在 load 事件之后触发"}, :properties {:color "yellow"}} {:id #uuid "63d1f532-f029-4675-a03e-2282caf23025", :page 551, :position {:bounding {:x1 211.68750309944153, :y1 978.0125122070312, :x2 464.1301453113556, :y2 1000.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 211.68750309944153, :y1 978.0125122070312, :x2 464.1301453113556, :y2 1000.4125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 211.68750309944153, :y1 982.0125122070312, :x2 287.5609314441681, :y2 997.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 551}, :content {:text " pageshow，其会在页面显示时触发"}, :properties {:color "yellow"}} {:id #uuid "63d1f53d-d6e4-44d3-8d53-ed8c1effef8f", :page 551, :position {:bounding {:x1 0, :y1 620.8000106811523, :x2 795.8921387195587, :y2 1047.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 620.8000106811523, :x2 0, :y2 643.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 369.24263310432434, :y1 1001.6000061035156, :x2 795.8921387195587, :y2 1024.0000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 541.8000366687775, :y1 1005.2500305175781, :x2 795.8921387195587, :y2 1020.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 1025.2125244140625, :x2 117.14802098274231, :y2 1047.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 551}, :content {:text "来自往返缓存的页面上，pageshow 会在页面状态完全恢复后触发"}, :properties {:color "yellow"}} {:id #uuid "63d1f544-a8d3-4393-b521-5483284f4ad2", :page 551, :position {:bounding {:x1 181.24408268928528, :y1 1025.2125244140625, :x2 699.11558842659, :y2 1047.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 181.24408268928528, :y1 1025.2125244140625, :x2 699.11558842659, :y2 1047.6125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 342.30000615119934, :y1 1028.8500061035156, :x2 680.3325684070587, :y2 1044.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 551}, :content {:text "虽然这个事件的目标是 document，但事件处理程序必须添加到 window 上"}, :properties {:color "yellow"}} {:id #uuid "63d1f5a8-115e-4484-9c19-455fb3c1f1e9", :page 552, :position {:bounding {:x1 0, :y1 471.54999923706055, :x2 828.872180223465, :y2 517.9125175476074, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 284.8398621082306, :y1 471.54999923706055, :x2 648.5995361804962, :y2 493.9499931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 664.900012254715, :y1 471.54999923706055, :x2 828.872180223465, :y2 493.1500053405762, :width 911.6666666666666, :height 1138.3333333333333} {:x1 347.80000615119934, :y1 475.54999923706055, :x2 648.5995361804962, :y2 491.3499870300293, :width 911.6666666666666, :height 1138.3333333333333} {:x1 664.900012254715, :y1 475.54999923706055, :x2 828.872180223465, :y2 490.54999923706055, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 492.79999923706055, :x2 0, :y2 515.1999931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 605.2000000476837, :y1 495.5000114440918, :x2 621.2274658679962, :y2 517.9000053405762, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 495.5124931335449, :x2 593.0266602039337, :y2 517.9125175476074, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 499.5124931335449, :x2 593.0266602039337, :y2 515.3125114440918, :width 911.6666666666666, :height 1138.3333333333333}), :page 552}, :content {:text "ageshow 的 event 对象中还包含一个名为 persisted 的属性。这个属性是一个布尔值，如果页面存储在了往返缓存中就是 true，否则就是 false。"}, :properties {:color "yellow"}} {:id #uuid "63d1f5c3-5d4c-432a-aa1b-dac39c8482f3", :page 552, :position {:bounding {:x1 0, :y1 732.8000183105469, :x2 827.4960205554962, :y2 824.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 732.8000183105469, :x2 0, :y2 755.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 326.2800476551056, :y1 778.8000183105469, :x2 827.4960205554962, :y2 801.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 345.2000000476837, :y1 782.4500122070312, :x2 827.4960205554962, :y2 797.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 802.4125061035156, :x2 165.4704315662384, :y2 824.8125, :width 911.6666666666666, :height 1138.3333333333333}), :page 552}, :content {:text "是 pagehide，这个事件会在页面从浏览器中卸载后，在 unload 事件之前触发"}, :properties {:color "yellow"}} {:id #uuid "63d1f5de-3d4f-4f66-92c0-eec43cc67a58", :page 552, :position {:bounding {:x1 0, :y1 748.8000183105469, :x2 829.5721924304962, :y2 848.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 748.8000183105469, :x2 0, :y2 771.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 354.5000183582306, :y1 802.0500183105469, :x2 829.5721924304962, :y2 824.4500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 354.5000183582306, :y1 806.0500183105469, :x2 829.5721924304962, :y2 821.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 826.1000366210938, :x2 226.83256840705872, :y2 848.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 830.1000366210938, :x2 166.2000458240509, :y2 845.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 552}, :content {:text "pagehide 事件同样是在 document 上触发，但事件处理程序必须被添加到 window"}, :properties {:color "yellow"}} {:id #uuid "63d1f5fd-02f4-4de5-8700-e758fbe0438a", :page 552, :position {:bounding {:x1 0, :y1 860.8000183105469, :x2 835.6960937976837, :y2 1003.1500549316406, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 860.8000183105469, :x2 0, :y2 883.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 659.3749878406525, :y1 957.5000305175781, :x2 835.6960937976837, :y2 979.9000549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 678.9999878406525, :y1 961.1500549316406, :x2 835.6960937976837, :y2 976.1500549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 980.7500305175781, :x2 182.9156219959259, :y2 1002.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 199.20000004768372, :y1 980.7500305175781, :x2 573.086535692215, :y2 1003.1500549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 984.7500305175781, :x2 182.9156219959259, :y2 999.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 199.20000004768372, :y1 984.7500305175781, :x2 265.30000615119934, :y2 1000.5500793457031, :width 911.6666666666666, :height 1138.3333333333333}), :page 552}, :content {:text "对 pagehide 事件来说， persisted 为 true 表示页面在卸载之后会被保存在往返缓存中"}, :properties {:color "yellow"}} {:id #uuid "63d1f61e-c380-4c11-a7b9-024f259580e7", :page 553, :position {:bounding {:x1 0, :y1 12.800003051757812, :x2 751.5883667469025, :y2 182.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 12.800003051757812, :x2 0, :y2 35.19999694824219, :width 911.6666666666666, :height 1138.3333333333333} {:x1 180.0874969959259, :y1 137.39999389648438, :x2 751.5883667469025, :y2 159.79998779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 227.48750615119934, :y1 141.39999389648438, :x2 751.5883667469025, :y2 157.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 132.60000920295715, :y1 159.79998779296875, :x2 147.97601628303528, :y2 182.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 553}, :content {:text "注册了 onunload 事件处理程序（即使是空函数）的页面会自动排除在往返缓存之外"}, :properties {:color "yellow"}} {:id #uuid "63d1f635-d6fa-4443-a3d3-5356cfbb42cb", :page 553, :position {:bounding {:x1 134.3999969959259, :y1 232.15000915527344, :x2 260.5000183582306, :y2 253.75, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 232.15000915527344, :x2 260.5000183582306, :y2 253.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 224.3999969959259, :y1 236.15000915527344, :x2 227.3999969959259, :y2 251.15000915527344, :width 911.6666666666666, :height 1138.3333333333333}), :page 553}, :content {:text "hashchange 事件"}, :properties {:color "green"}} {:id #uuid "63d1f64f-03dd-4dfc-a4a8-b27426ce070d", :page 553, :position {:bounding {:x1 0, :y1 76.80000305175781, :x2 796.2802002429962, :y2 299.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 76.80000305175781, :x2 0, :y2 99.20000267028809, :width 911.6666666666666, :height 1138.3333333333333} {:x1 366.1880371570587, :y1 253.60000610351562, :x2 796.2802002429962, :y2 276.00001525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 412.48750615119934, :y1 257.6000061035156, :x2 796.2802002429962, :y2 273.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 277.21250915527344, :x2 133.18233036994934, :y2 299.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 553}, :content {:text "用于在 URL 散列值（URL 最后#后面的部分）发生变化时通知开发者"}, :properties {:color "yellow"}} {:id #uuid "63d1f656-26d1-42b7-9aac-d52a1d565bc7", :page 553, :position {:bounding {:x1 115.10000157356262, :y1 300.45001220703125, :x2 475.2944519519806, :y2 322.8500213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.10000157356262, :y1 300.45001220703125, :x2 475.2944519519806, :y2 322.8500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 223.10000920295715, :y1 304.45001220703125, :x2 461.92344975471497, :y2 320.25001525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 553}, :content {:text "onhashchange 事件处理程序必须添加给 window，"}, :properties {:color "yellow"}} {:id #uuid "63d1f68c-bb8d-419f-9af3-51ab26d49724", :page 553, :position {:bounding {:x1 160.70000004768372, :y1 530.0125274658203, :x2 240.70000004768372, :y2 558.8125152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 530.0125274658203, :x2 240.70000004768372, :y2 558.8125152587891, :width 911.6666666666666, :height 1138.3333333333333}), :page 553}, :content {:text "设备事件"}, :properties {:color "green"}} {:id #uuid "63d1f69f-46f5-4e0e-aae3-e526da641fab", :page 553, :position {:bounding {:x1 134.3999969959259, :y1 647.6500244140625, :x2 323.5000183582306, :y2 669.2500152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 647.6500244140625, :x2 264.2953064441681, :y2 669.2500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 287.40001225471497, :y1 647.6500244140625, :x2 323.5000183582306, :y2 669.2500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 287.40001225471497, :y1 651.6500244140625, :x2 290.40001225471497, :y2 666.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 553}, :content {:text "orientationchange 事件"}, :properties {:color "green"}} {:id #uuid "63d1f6ac-e6ce-41be-9349-0198cc7a06b0", :page 554, :position {:bounding {:x1 310.47566533088684, :y1 150.3500213623047, :x2 685.3029663562775, :y2 173.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 600.7000000476837, :y1 150.3500213623047, :x2 685.3029663562775, :y2 171.9499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 310.47566533088684, :y1 150.71250915527344, :x2 576.7937500476837, :y2 173.1125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 438.7000000476837, :y1 154.3500213623047, :x2 576.7937500476837, :y2 169.3500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 600.7000000476837, :y1 154.3500213623047, :x2 603.7000000476837, :y2 169.3500213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 554}, :content {:text "相关信息都可以从 window.orientation 属性中获取"}, :properties {:color "yellow"}} {:id #uuid "63d1f6d6-9090-4d7b-b19e-1e3c58ea3078", :page 554, :position {:bounding {:x1 167.50000309944153, :y1 502.15000915527344, :x2 356.5999939441681, :y2 523.7500152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 502.15000915527344, :x2 291.72813725471497, :y2 523.7500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 320.5000183582306, :y1 502.15000915527344, :x2 356.5999939441681, :y2 523.7500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 320.5000183582306, :y1 506.15000915527344, :x2 323.5000183582306, :y2 521.1500091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 554}, :content {:text "deviceorientation 事件"}, :properties {:color "green"}} {:id #uuid "63d1f6de-683b-4329-9c21-2755b098ab52", :page 554, :position {:bounding {:x1 0, :y1 492.8000030517578, :x2 837.663684129715, :y2 569.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 492.8000030517578, :x2 0, :y2 515.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 597.087512254715, :y1 523.6000213623047, :x2 837.663684129715, :y2 546.0000152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 547.2125091552734, :x2 512.9336426258087, :y2 569.6125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 551.2125091552734, :x2 447.5999939441681, :y2 567.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 554}, :content {:text "如果可以获取设备的加速计信息，而且数据发生了变化，这个事件就会在 window 上触发。"}, :properties {:color "yellow"}} {:id #uuid "63d1f6f1-362f-44b6-bb26-89b85b817630", :page 555, :position {:bounding {:x1 132.60000920295715, :y1 126.74998474121094, :x2 782.4443237781525, :y2 149.49998474121094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 291.5000183582306, :y1 126.74998474121094, :x2 782.4443237781525, :y2 148.34999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 132.60000920295715, :y1 127.09999084472656, :x2 262.72813725471497, :y2 149.49998474121094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 138.50000309944153, :y1 130.74998474121094, :x2 262.72813725471497, :y2 145.74998474121094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 291.5000183582306, :y1 130.74998474121094, :x2 407.0914490222931, :y2 145.74998474121094, :width 911.6666666666666, :height 1138.3333333333333}), :page 555}, :content {:text " deviceorientation 触发时，event 对象中会包含各个轴相对于设备静置时坐标值的变化"}, :properties {:color "yellow"}} {:id #uuid "63d1f70a-cfc2-4c3f-914d-f5902bf88385", :page 556, :position {:bounding {:x1 167.50000309944153, :y1 327.35003662109375, :x2 311.5999939441681, :y2 348.95001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 327.35003662109375, :x2 264.1797058582306, :y2 348.95001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 275.5000183582306, :y1 327.35003662109375, :x2 311.5999939441681, :y2 348.95001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 275.5000183582306, :y1 331.35003662109375, :x2 278.5000183582306, :y2 346.35003662109375, :width 911.6666666666666, :height 1138.3333333333333}), :page 556}, :content {:text "devicemotion 事件"}, :properties {:color "green"}} {:id #uuid "63d1f713-efd3-45a8-96fb-550747459156", :page 556, :position {:bounding {:x1 0, :y1 348.79999351501465, :x2 838.6722900867462, :y2 419.20001792907715, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 566.4408447742462, :y1 348.79999351501465, :x2 838.6722900867462, :y2 371.20001792907715, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 372.4125118255615, :x2 276.4515564441681, :y2 394.8125057220459, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 396.79999351501465, :x2 0, :y2 419.20001792907715, :width 911.6666666666666, :height 1138.3333333333333}), :page 556}, :content {:text "这个事件用于提示设备实际上在移动，而不仅仅是改变了朝向"}, :properties {:color "yellow"}} {:id #uuid "63d1f755-7120-49e2-9c42-b493f9e29bb1", :page 556, :position {:bounding {:x1 285.6280701160431, :y1 585, :x2 632.5281250476837, :y2 607.4000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 285.6280701160431, :y1 585, :x2 632.5281250476837, :y2 607.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 605.4999878406525, :y1 588.6500244140625, :x2 632.5281250476837, :y2 603.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 556}, :content {:text "在使用这些属性前必须先检测它们的值是否为 null"}, :properties {:color "yellow"}} {:id #uuid "63d1f75e-6551-4a9e-876d-f1a7d513857f", :page 556, :position {:bounding {:x1 193.80000615119934, :y1 761.9125061035156, :x2 333.80000615119934, :y2 790.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 761.9125061035156, :x2 333.80000615119934, :y2 790.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 556}, :content {:text "触摸及手势事件"}, :properties {:color "green"}} {:id #uuid "63d1f7e6-4d10-4198-9277-c002d9f556d7", :page 557, :position {:bounding {:x1 116.79999852180481, :y1 268.81250381469727, :x2 652.7921631336212, :y2 291.21249771118164, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.79999852180481, :y1 268.81250381469727, :x2 652.7921631336212, :y2 291.21249771118164, :width 911.6666666666666, :height 1138.3333333333333} {:x1 231.60000920295715, :y1 271.76250076293945, :x2 489.43770146369934, :y2 287.56250381469727, :width 911.6666666666666, :height 1138.3333333333333}), :page 557}, :content {:text "除了这些公共的 DOM 属性，触摸事件还提供了以下 3 个属性用于跟踪触点。"}, :properties {:color "yellow"}} {:id #uuid "63d1f80d-c461-465a-a722-8832ee894ec3", :page 558, :position {:bounding {:x1 167.48750615119934, :y1 458.4500045776367, :x2 230.68750309944153, :y2 480.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.48750615119934, :y1 458.4500045776367, :x2 230.68750309944153, :y2 480.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 558}, :content {:text "手势事件"}, :properties {:color "green"}} {:id #uuid "63d1f825-dfe3-4022-b2d5-4f14d74d7cf1", :page 558, :position {:bounding {:x1 170.20000004768372, :y1 527.4500122070312, :x2 743.0643799304962, :y2 550.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 170.20000004768372, :y1 527.4500122070312, :x2 254.67344975471497, :y2 549.0500030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 278.2000000476837, :y1 527.8000030517578, :x2 743.0643799304962, :y2 550.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 558}, :content {:text "gesturestart：一个手指已经放在屏幕上，再把另一个手指放到屏幕上时触发。"}, :properties {:color "yellow"}} {:id #uuid "63d1f830-c397-42a2-b916-25acc43f9ad2", :page 558, :position {:bounding {:x1 164.66250920295715, :y1 551.4000091552734, :x2 623.8417236804962, :y2 573.8000030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 287.2000000476837, :y1 551.4000091552734, :x2 623.8417236804962, :y2 573.8000030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 164.66250920295715, :y1 552.0500030517578, :x2 273.78438115119934, :y2 573.6500091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 170.20000004768372, :y1 555.0500030517578, :x2 273.78438115119934, :y2 570.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 558}, :content {:text " gesturechange：任何一个手指在屏幕上的位置发生变化时触发"}, :properties {:color "yellow"}} {:id #uuid "63d1f837-367c-406e-a4dd-826d6122bc07", :page 558, :position {:bounding {:x1 170.20000004768372, :y1 574.7500152587891, :x2 484.5586121082306, :y2 597.5000152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 170.20000004768372, :y1 574.7500152587891, :x2 249.48437809944153, :y2 596.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 260.2000000476837, :y1 575.1000061035156, :x2 484.5586121082306, :y2 597.5000152587891, :width 911.6666666666666, :height 1138.3333333333333}), :page 558}, :content {:text "gestureend：其中一个手指离开屏幕时触发"}, :properties {:color "yellow"}} {:id #uuid "63d1f87a-e591-401f-af8f-dec791952242", :page 558, :position {:bounding {:x1 149.88750004768372, :y1 787.7000122070312, :x2 732.9338257312775, :y2 810.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.88750004768372, :y1 787.7000122070312, :x2 732.9338257312775, :y2 810.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 408.30000615119934, :y1 791.3500061035156, :x2 456.30000615119934, :y2 806.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 558}, :content {:text "与触摸事件类似，每个手势事件的 event 对象都包含所有标准的鼠标事件属性"}, :properties {:color "yellow"}} {:id #uuid "63d1f887-e0a7-4350-921a-8e529cf68559", :page 559, :position {:bounding {:x1 171.78750920295715, :y1 530.0125370025635, :x2 251.78750920295715, :y2 558.8125247955322, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 171.78750920295715, :y1 530.0125370025635, :x2 251.78750920295715, :y2 558.8125247955322, :width 911.6666666666666, :height 1138.3333333333333}), :page 559}, :content {:text "事件参考"}, :properties {:color "green"}} {:id #uuid "63d1f893-2cd7-46e1-81eb-1b09b826909f", :page 565, :position {:bounding {:x1 153.87500309944153, :y1 361.5500030517578, :x2 269.95393681526184, :y2 395.15000915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 153.87500309944153, :y1 361.5500030517578, :x2 269.95393681526184, :y2 395.15000915527344, :width 911.6666666666666, :height 1138.3333333333333}), :page 565}, :content {:text "内存与性能"}, :properties {:color "green"}} {:id #uuid "63d218e3-8561-4ffd-b16e-29a9eaa38672", :page 565, :position {:bounding {:x1 161.81250305101275, :y1 568.4625244140625, :x2 241.84807128831744, :y2 597.2625122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 568.4625244140625, :x2 241.84807128831744, :y2 597.2625122070312, :width 918, :height 1146.2413162705666}), :page 565}, :content {:text "事件委托"}, :properties {:color "green"}} {:id #uuid "63d21945-53bf-451e-af3f-d5eda025a5b3", :page 565, :position {:bounding {:x1 116.4807998649776, :y1 608.6750183105469, :x2 462.3897583000362, :y2 632.1375122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 398.44999999925494, :y1 608.6750183105469, :x2 462.3897583000362, :y2 631.0750122070312, :width 918, :height 1146.2413162705666} {:x1 116.4807998649776, :y1 609.7375183105469, :x2 381.432551573962, :y2 632.1375122070312, :width 918, :height 1146.2413162705666} {:x1 398.44999999925494, :y1 612.6750183105469, :x2 462.3897583000362, :y2 628.5875244140625, :width 918, :height 1146.2413162705666}), :page 565}, :content {:text "过多事件处理程序”的解决方案是使用事件委托"}, :properties {:color "yellow"}} {:id #uuid "63d2195f-2b9f-47ea-bd04-165b32655037", :page 565, :position {:bounding {:x1 0, :y1 444.8000144958496, :x2 801.4796630851924, :y2 655.9125213623047, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 444.8000144958496, :x2 0, :y2 467.20001220703125, :width 918, :height 1146.2413162705666} {:x1 478.6299926750362, :y1 609.7375183105469, :x2 801.4796630851924, :y2 632.1375122070312, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 633.5125122070312, :x2 309.4889099113643, :y2 655.9125213623047, :width 918, :height 1146.2413162705666}), :page 565}, :content {:text "事件委托利用事件冒泡，可以只使用一个事件处理程序来管理一种类型的事件"}, :properties {:color "yellow"}} {:id #uuid "63d21abe-0101-4cde-bc74-28737f0ec743", :page 566, :position {:bounding {:x1 0, :y1 151.7874755859375, :x2 842.8431884758174, :y2 275.1999816894531, :width 918, :height 1146.2413162705666}, :rects ({:x1 336.2125122062862, :y1 151.7874755859375, :x2 842.8431884758174, :y2 174.18746948242188, :width 918, :height 1146.2413162705666} {:x1 441.92500610277057, :y1 155.7874755859375, :x2 842.8431884758174, :y2 171.69998168945312, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 175.55001831054688, :x2 231.27719421312213, :y2 197.94998168945312, :width 918, :height 1146.2413162705666} {:x1 0, :y1 252.80001831054688, :x2 0, :y2 275.1999816894531, :width 918, :height 1146.2413162705666}), :page 566}, :content {:text "使用事件委托，只要给所有元素共同的祖先节点添加一个事件处理程序，就可以解决问题"}, :properties {:color "yellow"}} {:id #uuid "63d21bf6-91e0-40a4-bfb1-0d089256ea70", :page 566, :position {:bounding {:x1 0, :y1 588.8000183105469, :x2 836.8734619133174, :y2 656.8250122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 588.8000183105469, :x2 0, :y2 611.2000122070312, :width 918, :height 1146.2413162705666} {:x1 533.7819091789424, :y1 610.6499938964844, :x2 836.8734619133174, :y2 633.0500183105469, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 634.4250183105469, :x2 343.5212509147823, :y2 656.8250122070312, :width 918, :height 1146.2413162705666}), :page 566}, :content {:text "所有使用按钮的事件（大多数鼠标事件和键盘事件）都适用于这个解决方案"}, :properties {:color "yellow"}} {:id #uuid "63d21c01-f68d-4e0d-90b4-2292d53036b4", :page 566, :position {:bounding {:x1 150.93750305101275, :y1 824.7250061035156, :x2 832.7250244133174, :y2 847.1250305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 824.7250061035156, :x2 434.94258422777057, :y2 847.1250305175781, :width 918, :height 1146.2413162705666} {:x1 448.48750610277057, :y1 824.7250061035156, :x2 806.2396118156612, :y2 847.1250305175781, :width 918, :height 1146.2413162705666} {:x1 816.7250244133174, :y1 824.7250061035156, :x2 832.7250244133174, :y2 847.1250305175781, :width 918, :height 1146.2413162705666} {:x1 402.2750122062862, :y1 828.3625183105469, :x2 434.94258422777057, :y2 843.4624938964844, :width 918, :height 1146.2413162705666} {:x1 448.48750610277057, :y1 828.7250061035156, :x2 806.2396118156612, :y2 844.6375427246094, :width 918, :height 1146.2413162705666}), :page 566}, :content {:text "最适合使用事件委托的事件包括：click、mousedown、mouseup、keydown 和 keypress。"}, :properties {:color "yellow"}} {:id #uuid "63d21c16-e5b8-402a-9602-c881d03d463a", :page 566, :position {:bounding {:x1 195.13749999925494, :y1 909.6250457763672, :x2 355.2086364738643, :y2 938.4250335693359, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 909.6250457763672, :x2 355.2086364738643, :y2 938.4250335693359, :width 918, :height 1146.2413162705666}), :page 566}, :content {:text "删除事件处理程序"}, :properties {:color "green"}} {:id #uuid "63d21c6f-a504-44f5-bb0a-f2cd2e05111b", :page 567, :position {:bounding {:x1 0, :y1 28.800003051757812, :x2 802.0621215812862, :y2 197.95000457763672, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 28.800003051757812, :x2 0, :y2 51.20000457763672, :width 918, :height 1146.2413162705666} {:x1 230.03532714769244, :y1 151.78750610351562, :x2 802.0621215812862, :y2 174.18750762939453, :width 918, :height 1146.2413162705666} {:x1 245.07499999925494, :y1 155.78750610351562, :x2 802.0621215812862, :y2 171.70000457763672, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 175.5500030517578, :x2 101.71654052659869, :y2 197.95000457763672, :width 918, :height 1146.2413162705666}), :page 567}, :content {:text "被 innerHTML 删除的元素上如果有事件处理程序，就不会被垃圾收集程序正常清理"}, :properties {:color "yellow"}} {:id #uuid "63d21c7c-edb9-43ea-a706-b1844480532d", :page 567, :position {:bounding {:x1 85.68750305101275, :y1 514.9875106811523, :x2 598.9412872307003, :y2 537.3875045776367, :width 918, :height 1146.2413162705666}, :rects ({:x1 85.68750305101275, :y1 514.9875106811523, :x2 598.9412872307003, :y2 537.3875045776367, :width 918, :height 1146.2413162705666}), :page 567}, :content {:text "道某个元素会被删除，那么最好在删除它之前手工删除它的事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d21e0e-2ebd-4ae1-8314-8e7c850c8905", :page 567, :position {:bounding {:x1 117.60000152513385, :y1 999.7250061035156, :x2 470.4665176384151, :y2 1022.125, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 999.7250061035156, :x2 470.4665176384151, :y2 1022.125, :width 918, :height 1146.2413162705666}), :page 567}, :content {:text "另一个可能导致内存中残留引用的问题是页面卸载"}, :properties {:color "yellow"}} {:id #uuid "63d21e38-3360-4965-b49c-8e7b12a22765", :page 568, :position {:bounding {:x1 245.14685363695025, :y1 175.5500030517578, :x2 755.7082397453487, :y2 197.9499969482422, :width 918, :height 1146.2413162705666}, :rects ({:x1 245.14685363695025, :y1 175.5500030517578, :x2 755.7082397453487, :y2 197.9499969482422, :width 918, :height 1146.2413162705666} {:x1 279.82499999925494, :y1 179.1750030517578, :x2 355.3499938957393, :y2 194.27500915527344, :width 918, :height 1146.2413162705666}), :page 568}, :content {:text "好在 onunload 事件处理程序中趁页面尚未卸载先删除所有事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d21e43-3f09-42e7-a46a-715256f1b535", :page 568, :position {:bounding {:x1 188.28750915452838, :y1 372.56251525878906, :x2 281.2086059562862, :y2 406.16249084472656, :width 918, :height 1146.2413162705666}, :rects ({:x1 188.28750915452838, :y1 372.56251525878906, :x2 281.2086059562862, :y2 406.16249084472656, :width 918, :height 1146.2413162705666}), :page 568}, :content {:text "模拟事件"}, :properties {:color "green"}} {:id #uuid "63d21f41-bda7-4ab9-b768-e24a80a6eb43", :page 568, :position {:bounding {:x1 195.13749999925494, :y1 530.7375030517578, :x2 326.53352661058307, :y2 559.5374908447266, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 530.7375030517578, :x2 232.06222839280963, :y2 559.5374908447266, :width 918, :height 1146.2413162705666} {:x1 242.12500305101275, :y1 530.7375030517578, :x2 326.53352661058307, :y2 559.5374908447266, :width 918, :height 1146.2413162705666} {:x1 242.12500305101275, :y1 535.5374908447266, :x2 246.16250915452838, :y2 555.6750030517578, :width 918, :height 1146.2413162705666}), :page 568}, :content {:text "DOM 事件模拟"}, :properties {:color "green"}} {:id #uuid "63d21f81-1f5f-4a1f-91e1-68c0674da398", :page 568, :position {:bounding {:x1 150.93750305101275, :y1 570.6750030517578, :x2 707.4546997062862, :y2 593.0749969482422, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 570.6750030517578, :x2 484.22514648362994, :y2 593.0749969482422, :width 918, :height 1146.2413162705666} {:x1 510.7125122062862, :y1 570.6750030517578, :x2 707.4546997062862, :y2 593.0749969482422, :width 918, :height 1146.2413162705666} {:x1 311.23750610277057, :y1 574.3125152587891, :x2 484.22514648362994, :y2 589.4124908447266, :width 918, :height 1146.2413162705666} {:x1 510.7125122062862, :y1 574.6750030517578, :x2 655.8151733390987, :y2 590.5875091552734, :width 918, :height 1146.2413162705666}), :page 568}, :content {:text "任何时候，都可以使用 document.createEvent()方法创建一个 event 对象。"}, :properties {:color "yellow"}} {:id #uuid "63d21f87-4e0f-45f4-b3b7-776825b7025b", :page 568, :position {:bounding {:x1 183.11586303636432, :y1 594.4375152587891, :x2 471.5809509269893, :y2 616.8375091552734, :width 918, :height 1146.2413162705666}, :rects ({:x1 183.11586303636432, :y1 594.4375152587891, :x2 471.5809509269893, :y2 616.8375091552734, :width 918, :height 1146.2413162705666}), :page 568}, :content {:text "参数是一个表示要创建事件类型的字符串"}, :properties {:color "yellow"}} {:id #uuid "63d21fab-54fb-4232-aa78-2f1389b7358a", :page 568, :position {:bounding {:x1 150.93750305101275, :y1 808.5124969482422, :x2 657.6912719719112, :y2 830.9125213623047, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 808.5124969482422, :x2 585.6413452140987, :y2 830.9125213623047, :width 918, :height 1146.2413162705666} {:x1 609.6000244133174, :y1 808.5124969482422, :x2 657.6912719719112, :y2 830.9125213623047, :width 918, :height 1146.2413162705666} {:x1 473.6624938957393, :y1 812.1500091552734, :x2 585.6413452140987, :y2 827.2499847412109, :width 918, :height 1146.2413162705666}), :page 568}, :content {:text "事件模拟的最后一步是触发事件。为此要使用 dispatchEvent()方法，"}, :properties {:color "yellow"}} {:id #uuid "63d21fb6-bef6-45f1-ac30-e3bf12bb0368", :page 568, :position {:bounding {:x1 523.4885742180049, :y1 832.2750091552734, :x2 801.1164428703487, :y2 854.6750335693359, :width 918, :height 1146.2413162705666}, :rects ({:x1 523.4885742180049, :y1 832.2750091552734, :x2 801.1164428703487, :y2 854.6750335693359, :width 918, :height 1146.2413162705666} {:x1 714.1874877922237, :y1 836.2750091552734, :x2 764.0867187492549, :y2 852.1874847412109, :width 918, :height 1146.2413162705666}), :page 568}, :content {:text "参数，即表示要触发事件的 event 对象"}, :properties {:color "yellow"}} {:id #uuid "63d21fc5-b6eb-4ee0-8f3a-6decf87e00f0", :page 568, :position {:bounding {:x1 168.66250915452838, :y1 884.9875183105469, :x2 264.3119995109737, :y2 907.3875122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 168.66250915452838, :y1 884.9875183105469, :x2 264.3119995109737, :y2 907.3875122070312, :width 918, :height 1146.2413162705666}), :page 568}, :content {:text "模拟鼠标事件"}, :properties {:color "green"}} {:id #uuid "63d2200f-ce4e-440d-9cfc-f10a0dcbc265", :page 569, :position {:bounding {:x1 135.31250305101275, :y1 749.8500213623047, :x2 230.96199340745807, :y2 772.2500152587891, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.31250305101275, :y1 749.8500213623047, :x2 230.96199340745807, :y2 772.2500152587891, :width 918, :height 1146.2413162705666}), :page 569}, :content {:text "模拟键盘事件"}, :properties {:color "green"}} {:id #uuid "63d221e6-ef0e-47bb-ae90-1017dde0889c", :page 571, :position {:bounding {:x1 134.38750004768372, :y1 579.7624969482422, :x2 229.37710881233215, :y2 602.1624908447266, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.38750004768372, :y1 579.7624969482422, :x2 229.37710881233215, :y2 602.1624908447266, :width 911.6666666666666, :height 1138.3333333333333}), :page 571}, :content {:text "模拟其他事件"}, :properties {:color "green"}} {:id #uuid "63d22220-ef0e-4042-b4f0-b1570768b075", :page 571, :position {:bounding {:x1 134.3999969959259, :y1 827.3500061035156, :x2 257.8875000476837, :y2 849.7500305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.3999969959259, :y1 827.3500061035156, :x2 257.8875000476837, :y2 849.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 181.80000615119934, :y1 831.3500061035156, :x2 223.0141327381134, :y2 847.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 571}, :content {:text "自定义 DOM 事件"}, :properties {:color "green"}} {:id #uuid "63d2222b-c67d-46d6-9bbe-eacd8bd10dc6", :page 571, :position {:bounding {:x1 137.10000920295715, :y1 919.9500122070312, :x2 515.4999878406525, :y2 942.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 919.9500122070312, :x2 515.4999878406525, :y2 942.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 173.10000920295715, :y1 924.3000183105469, :x2 494.26875615119934, :y2 940.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 571}, :content {:text "type（字符串）：要触发的事件类型，如\"myevent\"。"}, :properties {:color "yellow"}} {:id #uuid "63d22235-df78-4601-8e70-56d701d02dba", :page 571, :position {:bounding {:x1 137.10000920295715, :y1 943.5500183105469, :x2 431.6716492176056, :y2 965.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 943.5500183105469, :x2 431.6716492176056, :y2 965.9500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 200.10000920295715, :y1 947.9000244140625, :x2 280.1960632801056, :y2 963.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 571}, :content {:text "bubbles（布尔值）：表示事件是否冒泡。"}, :properties {:color "yellow"}} {:id #uuid "63d2223f-dbed-4103-968b-ab341ee82fb1", :page 571, :position {:bounding {:x1 137.10000920295715, :y1 967.2500305175781, :x2 474.6396667957306, :y2 990.0000305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 967.2500305175781, :x2 212.89688420295715, :y2 988.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 227.10000920295715, :y1 967.6000061035156, :x2 474.6396667957306, :y2 990.0000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 227.10000920295715, :y1 971.6000061035156, :x2 307.10008549690247, :y2 987.4000244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 571}, :content {:text "cancelable（布尔值）：表示事件是否可以取消"}, :properties {:color "yellow"}} {:id #uuid "63d22244-63a2-413a-ab4b-7ffa512a0484", :page 571, :position {:bounding {:x1 137.10000920295715, :y1 990.8500061035156, :x2 568.8000366687775, :y2 1013.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 990.8500061035156, :x2 176.99531865119934, :y2 1012.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 516.3000366687775, :y1 990.8500061035156, :x2 568.8000366687775, :y2 1012.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 191.10000920295715, :y1 991.2000122070312, :x2 502.1953308582306, :y2 1013.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 516.3000366687775, :y1 994.8500061035156, :x2 516.4875366687775, :y2 1009.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 191.10000920295715, :y1 995.2000122070312, :x2 502.1953308582306, :y2 1011.0000305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 571}, :content {:text "detail（对象）：任意值。作为 event 对象的 detail 属性。"}, :properties {:color "yellow"}} {:id #uuid "63d224af-3eed-40f9-abe0-b96762d0624f", :page 572, :position {:bounding {:x1 193.80000615119934, :y1 474.8500213623047, :x2 297.0999939441681, :y2 503.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 474.8500213623047, :x2 297.0999939441681, :y2 503.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 212.73750615119934, :y1 479.6500244140625, :x2 216.73750615119934, :y2 499.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 572}, :content {:text "IE 事件模拟"}, :properties {:color "green"}} {:id #uuid "63d2255a-2aa3-439e-a67a-6bc6ee5068b9", :page 572, :position {:bounding {:x1 197.7835419178009, :y1 561.8000183105469, :x2 727.9440796375275, :y2 584.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 547.4999878406525, :y1 561.8000183105469, :x2 727.9440796375275, :y2 584.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 197.7835419178009, :y1 561.8125152587891, :x2 516.5203125476837, :y2 584.2125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 248.60000920295715, :y1 565.4500274658203, :x2 516.5203125476837, :y2 580.4500274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 547.4999878406525, :y1 565.8000183105469, :x2 675.7873413562775, :y2 581.6000213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 572}, :content {:text "要使用 document 对象的 createEventObject()方法来创建 event 对象。"}, :properties {:color "yellow"}} {:id #uuid "63d22568-f1f8-490e-a2f4-95da74cfe6b6", :page 572, :position {:bounding {:x1 0, :y1 572.8000183105469, :x2 828.6921265125275, :y2 655.1000366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 572.8000183105469, :x2 0, :y2 595.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 668.4999878406525, :y1 609.0000305175781, :x2 828.6921265125275, :y2 631.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 355.80931401252747, :y1 609.0125122070312, :x2 642.71519780159, :y2 631.4125366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 668.4999878406525, :y1 613.0000305175781, :x2 828.6921265125275, :y2 628.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 561.4500000476837, :y1 613.0125122070312, :x2 642.71519780159, :y2 628.8125305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 632.7000122070312, :x2 425.8384277820587, :y2 655.1000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 636.7000122070312, :x2 391.80000615119934, :y2 652.5000305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 572}, :content {:text "最后一步是在事件目标上调用 fireEvent()方法，这个方法接收两个参数：事件处理程序的名字和 event 对象"}, :properties {:color "yellow"}} {:id #uuid "63d225a8-086f-430c-b7ca-178e59e01d2b", :page 574, :position {:bounding {:x1 186.98750615119934, :y1 667.0500030517578, :x2 512.7399933338165, :y2 700.6500091552734, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 186.98750615119934, :y1 667.0500030517578, :x2 512.7399933338165, :y2 700.6500091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 233.5874969959259, :y1 672.6500091552734, :x2 238.25000309944153, :y2 695.9499969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 574}, :content {:text "使用 requestAnimationFrame"}, :properties {:color "green"}} {:id #uuid "63d226a1-4fcc-4dd7-8ed1-7c519839fbd6", :page 574, :position {:bounding {:x1 0, :y1 524.8000106811523, :x2 818.1014893054962, :y2 782.3125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 524.8000106811523, :x2 0, :y2 547.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 570.1874878406525, :y1 735.2625122070312, :x2 614.8519775867462, :y2 757.6625061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 627.9750244617462, :y1 735.2625122070312, :x2 818.1014893054962, :y2 757.6625366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 627.9750244617462, :y1 739.2625122070312, :x2 818.1014893054962, :y2 755.0625305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 498.7000000476837, :y1 759.9000244140625, :x2 573.0915405750275, :y2 782.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 759.9125061035156, :x2 479.6839783191681, :y2 782.3125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 498.7000000476837, :y1 763.9000244140625, :x2 573.0915405750275, :y2 779.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 763.9125061035156, :x2 479.6839783191681, :y2 779.7125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 574}, :content {:text "Firefox 4 率先在浏览器中为 JavaScript动画增加了一个名为 mozRequestAnimationFrame()方法的 API"}, :properties {:color "yellow"}} {:id #uuid "63d226a7-329f-448a-b7a9-8f612900588c", :page 574, :position {:bounding {:x1 174.93789982795715, :y1 840.1125183105469, :x2 313.80000615119934, :y2 870.2500305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 840.1125183105469, :x2 313.80000615119934, :y2 868.9125366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 174.93789982795715, :y1 841.4500427246094, :x2 174.93789982795715, :y2 870.2500305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 574}, :content {:text "早期定时动画"}, :properties {:color "green"}} {:id #uuid "63d226fc-98df-404d-9955-ab83582e50be", :page 574, :position {:bounding {:x1 193.38750004768372, :y1 878.8000030517578, :x2 721.4707520008087, :y2 901.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.38750004768372, :y1 878.8000030517578, :x2 561.6594116687775, :y2 901.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 593.3000366687775, :y1 878.8000030517578, :x2 721.4707520008087, :y2 901.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 209.18750309944153, :y1 882.8000030517578, :x2 561.6594116687775, :y2 898.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 574}, :content {:text "在 JavaScript 中创建动画基本上就是使用 setInterval()来控制动画的执行"}, :properties {:color "yellow"}} {:id #uuid "63d22744-10ce-4e2e-b8ed-01a230ac01b3", :page 575, :position {:bounding {:x1 0, :y1 172.8000030517578, :x2 796.5842163562775, :y2 409.31249237060547, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 172.8000030517578, :x2 0, :y2 195.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 301.5000183582306, :y1 363.30001068115234, :x2 554.7646362781525, :y2 385.7000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 572.2000000476837, :y1 363.30001068115234, :x2 796.5842163562775, :y2 385.7000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.78750157356262, :y1 363.3499984741211, :x2 269.8359863758087, :y2 385.74999237060547, :width 911.6666666666666, :height 1138.3333333333333} {:x1 184.3999969959259, :y1 366.9500045776367, :x2 269.8359863758087, :y2 381.9500045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 301.5000183582306, :y1 367.30001068115234, :x2 554.7646362781525, :y2 383.0999984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 572.2000000476837, :y1 367.30001068115234, :x2 796.5842163562775, :y2 383.0999984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 386.9124984741211, :x2 133.1480438709259, :y2 409.31249237060547, :width 911.6666666666666, :height 1138.3333333333333}), :page 575}, :content {:text "虽然使用 setInterval()的定时动画比使用多个 setTimeout()实现循环效率更高，但也不是没有问题"}, :properties {:color "yellow"}} {:id #uuid "63d22749-62bb-4b15-b174-33b5572fa105", :page 575, :position {:bounding {:x1 160.70000004768372, :y1 516.5124969482422, :x2 300.7000000476837, :y2 545.3125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 516.5124969482422, :x2 300.7000000476837, :y2 545.3125, :width 911.6666666666666, :height 1138.3333333333333}), :page 575}, :content {:text "时间间隔的问题"}, :properties {:color "green"}} {:id #uuid "63d22765-f0f0-4fa5-b481-cc84c3596e39", :page 575, :position {:bounding {:x1 160.70000004768372, :y1 872.8000183105469, :x2 393.5350525379181, :y2 900.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 872.8000183105469, :x2 393.5350525379181, :y2 900.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 575}, :content {:text "requestAnimationFrame"}, :properties {:color "green"}} {:id #uuid "63d22776-c5dc-4c3a-8c4a-8dd368e1bbe2", :page 575, :position {:bounding {:x1 165.23721623420715, :y1 980.4000244140625, :x2 510.32396245002747, :y2 1002.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 165.23721623420715, :y1 980.4000244140625, :x2 510.32396245002747, :y2 1002.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 312.1875183582306, :y1 983.3500061035156, :x2 381.3499939441681, :y2 999.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 575}, :content {:text "用以通知浏览器某些 JavaScript 代码要执行动画了"}, :properties {:color "yellow"}} {:id #uuid "63d2277c-9ddd-41c8-bdab-93346163ef41", :page 575, :position {:bounding {:x1 465.3513367176056, :y1 1027.6000061035156, :x2 751.8539917469025, :y2 1050, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 465.3513367176056, :y1 1027.6000061035156, :x2 751.8539917469025, :y2 1050, :width 911.6666666666666, :height 1138.3333333333333}), :page 575}, :content {:text "此参数是一个要在重绘屏幕前调用的函数"}, :properties {:color "yellow"}} {:id #uuid "63d2278a-a0d5-46e3-bdef-c7d3d5a71a99", :page 576, :position {:bounding {:x1 185.76805424690247, :y1 127.10003662109375, :x2 578.2045776844025, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 185.76805424690247, :y1 127.10003662109375, :x2 578.2045776844025, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 227.20000004768372, :y1 130.04998779296875, :x2 275.9879333972931, :y2 145.85003662109375, :width 911.6666666666666, :height 1138.3333333333333}), :page 576}, :content {:text "修改 DOM 样式以反映下一次重绘有什么变化的地方"}, :properties {:color "yellow"}} {:id #uuid "63d227a2-55f6-4cfa-aba8-b34ebf593b61", :page 576, :position {:bounding {:x1 0, :y1 314.1000061035156, :x2 832.1891968250275, :y2 419.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 314.1000061035156, :x2 370.7324402332306, :y2 336.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 396.80000615119934, :y1 314.1000061035156, :x2 832.1891968250275, :y2 336.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 181.5874969959259, :y1 318.1000061035156, :x2 370.7324402332306, :y2 333.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 396.80000615119934, :y1 318.1000061035156, :x2 832.1891968250275, :y2 333.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 337.7124938964844, :x2 230.3929169178009, :y2 360.1125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 396.8000183105469, :x2 0, :y2 419.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 576}, :content {:text "因为 requestAnimationFrame()只会调用一次传入的函数，所以每次更新用户界面时需要再手动调用它一次。"}, :properties {:color "yellow"}} {:id #uuid "63d227b7-ebb0-40b6-b43b-4430ce482e0b", :page 576, :position {:bounding {:x1 193.80000615119934, :y1 539.3000183105469, :x2 415.55357670783997, :y2 567.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 539.3000183105469, :x2 415.55357670783997, :y2 567.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 576}, :content {:text "cancelAnimationFrame"}, :properties {:color "green"}} {:id #uuid "63d227de-29ec-411c-adfc-e10fa01493a1", :page 576, :position {:bounding {:x1 0, :y1 556.8000183105469, :x2 828.7880737781525, :y2 624.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 556.8000183105469, :x2 0, :y2 579.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 327.5000183582306, :y1 577.8500061035156, :x2 508.6324951648712, :y2 599.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 534.6000244617462, :y1 578.2000122070312, :x2 828.7880737781525, :y2 600.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 534.6000244617462, :y1 582.2000122070312, :x2 828.7880737781525, :y2 598.0000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 351.90001225471497, :y1 601.8000183105469, :x2 464.1017029285431, :y2 624.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 601.8125305175781, :x2 326.79014897346497, :y2 624.2125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 605.8125305175781, :x2 326.79014897346497, :y2 621.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 576}, :content {:text "requestAnimationFrame()也返回一个请求 ID，可以用于通过另一个方法 cancelAnimationFrame()来取消重绘任务"}, :properties {:color "yellow"}} {:id #uuid "63d227f4-dc1d-49c7-b1cb-6398bdc9abc9", :page 576, :position {:bounding {:x1 193.80000615119934, :y1 739.0125122070312, :x2 525.9999878406525, :y2 767.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 739.0125122070312, :x2 525.9999878406525, :y2 767.8125305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 233.80000615119934, :y1 743.8125305175781, :x2 480.52217411994934, :y2 763.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 576}, :content {:text "通过 requestAnimationFrame 节流"}, :properties {:color "green"}} {:id #uuid "63d227fc-3fb9-4d64-9b82-e6feefcc22a0", :page 576, :position {:bounding {:x1 279.4256775379181, :y1 803.612548828125, :x2 489.03535771369934, :y2 826.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 279.4256775379181, :y1 803.612548828125, :x2 489.03535771369934, :y2 826.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 576}, :content {:text "会暴露出作为钩子的回调队列"}, :properties {:color "yellow"}} {:id #uuid "63d22837-55a9-4514-a5f0-e973e1463fea", :page 577, :position {:bounding {:x1 116.79999852180481, :y1 370.3000030517578, :x2 658.7509872913361, :y2 392.6999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.79999852180481, :y1 370.3000030517578, :x2 658.7509872913361, :y2 392.6999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 577}, :content {:text "这样会把所有回调的执行集中在重绘钩子，但不会过滤掉每次重绘的多余调用"}, :properties {:color "yellow"}} {:id #uuid "63d22849-0dfe-47a4-bdcd-4d20c358da5e", :page 577, :position {:bounding {:x1 0, :y1 396.8000030517578, :x2 802.30455327034, :y2 682.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 396.8000030517578, :x2 0, :y2 419.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 515.3491089344025, :y1 636.5, :x2 802.30455327034, :y2 658.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 660.1125183105469, :x2 229.35930943489075, :y2 682.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 577}, :content {:text "。更好的办法是配合使用一个计时器来限制操作执行的频率。"}, :properties {:color "yellow"}} {:id #uuid "63d2286c-66a4-47e5-aa32-045af0406bb7", :page 577, :position {:bounding {:x1 153.88750004768372, :y1 934.25, :x2 316.4778320789337, :y2 967.8500366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 153.88750004768372, :y1 934.25, :x2 316.4778320789337, :y2 967.8500366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 577}, :content {:text "基本的画布功能"}, :properties {:color "green"}} {:id #uuid "63d22883-e5e1-41bc-aae0-259ff4201a9d", :page 577, :position {:bounding {:x1 116.79999852180481, :y1 981.9000244140625, :x2 526.6686890125275, :y2 1004.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.79999852180481, :y1 981.9000244140625, :x2 526.6686890125275, :y2 1004.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 148.3999969959259, :y1 985.5500183105469, :x2 493.30000615119934, :y2 1000.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 577}, :content {:text "创建<canvas>元素时至少要设置其 width 和 height 属性"}, :properties {:color "yellow"}} {:id #uuid "63d2289c-b119-4643-a21f-be90e798622b", :page 578, :position {:bounding {:x1 0, :y1 174.3000030517578, :x2 829.3842041492462, :y2 291.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 620.9999878406525, :y1 174.3000030517578, :x2 829.3842041492462, :y2 196.6999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 481.8724548816681, :y1 174.31248474121094, :x2 599.9765503406525, :y2 196.71250915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 512.9999878406525, :y1 177.9499969482422, :x2 599.9765503406525, :y2 192.9499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 620.9999878406525, :y1 178.3000030517578, :x2 829.3842041492462, :y2 194.09999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 197.99998474121094, :x2 150.24238896369934, :y2 220.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 268.8000030517578, :x2 0, :y2 291.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 578}, :content {:text "使用 getContext()方法可以获取对绘图上下文的引用"}, :properties {:color "yellow"}} {:id #uuid "63d228a4-ee2f-4328-9acb-5fa80478fa41", :page 578, :position {:bounding {:x1 166.26982426643372, :y1 197.99998474121094, :x2 688.2350952625275, :y2 220.40000915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 166.26982426643372, :y1 197.99998474121094, :x2 688.2350952625275, :y2 220.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 450.5999939441681, :y1 201.65000915527344, :x2 606.80504155159, :y2 217.4500274658203, :width 911.6666666666666, :height 1138.3333333333333}), :page 578}, :content {:text "对于平面图形，需要给这个方法传入参数\"2d\"，表示要获取 2D 上下文对象"}, :properties {:color "yellow"}} {:id #uuid "63d228ce-62ed-44f0-857b-185251e75a40", :page 578, :position {:bounding {:x1 149.8999969959259, :y1 377.1999969482422, :x2 634.28697514534, :y2 399.6000213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 377.1999969482422, :x2 517.5765869617462, :y2 399.6000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 538.6000244617462, :y1 377.1999969482422, :x2 634.28697514534, :y2 399.6000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 181.50000309944153, :y1 380.8500213623047, :x2 517.5765869617462, :y2 395.8500213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 578}, :content {:text "使用<canvas>元素时，最好先测试一下 getContext()方法是否存在"}, :properties {:color "yellow"}} {:id #uuid "63d228f6-8e7d-46b8-a9c6-b41f8705248a", :page 578, :position {:bounding {:x1 150.20000004768372, :y1 448.00001525878906, :x2 556.0412476062775, :y2 470.4125213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 321.5999939441681, :y1 448.00001525878906, :x2 556.0412476062775, :y2 470.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 150.20000004768372, :y1 448.0124969482422, :x2 308.2086365222931, :y2 470.4125213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 220.70000004768372, :y1 451.65000915527344, :x2 308.2086365222931, :y2 466.65000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 321.5999939441681, :y1 452.00001525878906, :x2 451.7395203113556, :y2 467.8000030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 578}, :content {:text "可以使用 toDataURL()方法导出<canvas>元素上的图像"}, :properties {:color "yellow"}} {:id #uuid "63d2291b-62da-447c-88ff-869654507744", :page 578, :position {:bounding {:x1 186.97500920295715, :y1 912.5, :x2 338.1030762195587, :y2 946.1000366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 186.97500920295715, :y1 912.5, :x2 338.1030762195587, :y2 946.1000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 216.70000004768372, :y1 918.1000366210938, :x2 221.36250615119934, :y2 941.4000244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 578}, :content {:text "2D 绘图上下文"}, :properties {:color "green"}} {:id #uuid "63d22933-405c-433a-8856-8fb41be8015f", :page 579, :position {:bounding {:x1 160.70000004768372, :y1 125.31251525878906, :x2 260.7000000476837, :y2 154.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 125.31251525878906, :x2 260.7000000476837, :y2 154.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 579}, :content {:text "填充和描边"}, :properties {:color "green"}} {:id #uuid "63d2294d-1c68-49b1-8d31-b2a35b66c1df", :page 579, :position {:bounding {:x1 0, :y1 28.79999542236328, :x2 801.9565308094025, :y2 212.30001068115234, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 28.79999542236328, :x2 0, :y2 51.20000457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 432.0174744129181, :y1 166.20000457763672, :x2 801.9565308094025, :y2 188.5999984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 189.90001678466797, :x2 100.86096501350403, :y2 212.30001068115234, :width 911.6666666666666, :height 1138.3333333333333}), :page 579}, :content {:text "。填充以指定样式（颜色、渐变或图像）自动填充形状"}, :properties {:color "yellow"}} {:id #uuid "63d22955-6b6b-4f5f-9238-1175ee3f4abb", :page 579, :position {:bounding {:x1 132.38286137580872, :y1 189.90001678466797, :x2 289.99238896369934, :y2 212.30001068115234, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 132.38286137580872, :y1 189.90001678466797, :x2 289.99238896369934, :y2 212.30001068115234, :width 911.6666666666666, :height 1138.3333333333333}), :page 579}, :content {:text "描边只为图形边界着色"}, :properties {:color "yellow"}} {:id #uuid "63d2296b-aeff-4370-9065-96087e5fbf52", :page 579, :position {:bounding {:x1 0, :y1 44.80000114440918, :x2 806.9318726062775, :y2 235.89999771118164, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 44.80000114440918, :x2 0, :y2 67.20000076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 615.5788452625275, :y1 189.89999771118164, :x2 806.9318726062775, :y2 212.30000686645508, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 213.14999771118164, :x2 137.67969059944153, :y2 234.75000381469727, :width 911.6666666666666, :height 1138.3333333333333} {:x1 166.10000920295715, :y1 213.14999771118164, :x2 268.6296875476837, :y2 235.54999160766602, :width 911.6666666666666, :height 1138.3333333333333} {:x1 289.40001225471497, :y1 213.50000381469727, :x2 305.40001225471497, :y2 235.89999771118164, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 217.14999771118164, :x2 137.67969059944153, :y2 232.14999771118164, :width 911.6666666666666, :height 1138.3333333333333} {:x1 166.10000920295715, :y1 217.14999771118164, :x2 268.6296875476837, :y2 232.95000076293945, :width 911.6666666666666, :height 1138.3333333333333}), :page 579}, :content {:text "显示效果取决于两个属性： fillStyle 和 strokeStyle。"}, :properties {:color "yellow"}} {:id #uuid "63d229ab-78d1-4e3a-93e8-61ff362be950", :page 579, :position {:bounding {:x1 160.70000004768372, :y1 517.0125122070312, :x2 240.70000004768372, :y2 545.8125152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 517.0125122070312, :x2 240.70000004768372, :y2 545.8125152587891, :width 911.6666666666666, :height 1138.3333333333333}), :page 579}, :content {:text "绘制矩形"}, :properties {:color "green"}} {:id #uuid "63d229ba-34a6-47a7-b8cc-22eedabfa761", :page 579, :position {:bounding {:x1 0, :y1 284.8000030517578, :x2 794.1120483875275, :y2 604.0000152587891, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 284.8000030517578, :x2 0, :y2 307.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 572.66002202034, :y1 558.0000152587891, :x2 794.1120483875275, :y2 580.4000091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 745.900012254715, :y1 560.9500122070312, :x2 794.1120483875275, :y2 576.7500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 581.2500152587891, :x2 144.0640594959259, :y2 602.8500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 175.10000920295715, :y1 581.6000213623047, :x2 273.9515564441681, :y2 604.0000152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 297.0000183582306, :y1 581.6000213623047, :x2 392.5687439441681, :y2 604.0000152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 585.2500152587891, :x2 144.0640594959259, :y2 600.2500152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 175.10000920295715, :y1 585.6000213623047, :x2 273.9515564441681, :y2 601.4000091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 297.0000183582306, :y1 585.6000213623047, :x2 392.5687439441681, :y2 601.4000091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 579}, :content {:text "绘制矩形相关的方法有 3 个： fillRect()、strokeRect()和 clearRect()"}, :properties {:color "yellow"}} {:id #uuid "63d229c1-d34e-4c77-b5ac-3d110382b0ed", :page 579, :position {:bounding {:x1 0, :y1 300.80001068115234, :x2 802.20006108284, :y2 627.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 300.80001068115234, :x2 0, :y2 323.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 540.3875000476837, :y1 581.6000213623047, :x2 802.20006108284, :y2 604.0000152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 540.3875000476837, :y1 585.6000213623047, :x2 802.20006108284, :y2 601.4000091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 605.2125091552734, :x2 229.36306309700012, :y2 627.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 579}, :content {:text " 4 个参数：矩形 x 坐标、矩形 y 坐标、矩形宽度和矩形高度"}, :properties {:color "yellow"}} {:id #uuid "63d229cc-e42c-4ec8-a8d8-9b2eb8ffd0c3", :page 579, :position {:bounding {:x1 115.10000157356262, :y1 628.5500183105469, :x2 525.6488373279572, :y2 651.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.10000157356262, :y1 628.5500183105469, :x2 174.0640594959259, :y2 650.1500091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 205.10000920295715, :y1 628.9000091552734, :x2 525.6488373279572, :y2 651.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 579}, :content {:text "fillRect()方法用于以指定颜色在画布上绘制并填充矩形"}, :properties {:color "yellow"}} {:id #uuid "63d229f5-aded-4590-94f0-b1465a5933a4", :page 580, :position {:bounding {:x1 148.20000004768372, :y1 263.83749771118164, :x2 667.097277879715, :y2 286.6000099182129, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.20000004768372, :y1 263.83749771118164, :x2 233.15156865119934, :y2 285.43750381469727, :width 911.6666666666666, :height 1138.3333333333333} {:x1 454.2000000476837, :y1 263.8500099182129, :x2 667.097277879715, :y2 285.4500160217285, :width 911.6666666666666, :height 1138.3333333333333} {:x1 256.2000000476837, :y1 264.2000160217285, :x2 433.4297058582306, :y2 286.6000099182129, :width 911.6666666666666, :height 1138.3333333333333} {:x1 454.2000000476837, :y1 267.8500099182129, :x2 457.2000000476837, :y2 282.8500099182129, :width 911.6666666666666, :height 1138.3333333333333} {:x1 256.2000000476837, :y1 268.2000160217285, :x2 433.4297058582306, :y2 284.00000381469727, :width 911.6666666666666, :height 1138.3333333333333}), :page 580}, :content {:text "strokeRect()方法使用通过 strokeStyle 属性指定的颜色绘制矩形轮廓"}, :properties {:color "yellow"}} {:id #uuid "63d22bbe-3929-4d50-bade-9d832db20a85", :page 580, :position {:bounding {:x1 149.8999969959259, :y1 858.7000122070312, :x2 492.8567383289337, :y2 881.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 858.7000122070312, :x2 261.26875615119934, :y2 881.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 284.5000183582306, :y1 858.7000122070312, :x2 492.8567383289337, :y2 881.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 185.50000309944153, :y1 862.3500061035156, :x2 261.26875615119934, :y2 877.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 580}, :content {:text "使用 clearRect()方法可以擦除画布中某个区域"}, :properties {:color "yellow"}} {:id #uuid "63d22bc9-0280-4272-92c5-ddb64478dfc0", :page 581, :position {:bounding {:x1 160.70000004768372, :y1 512.8125076293945, :x2 240.70000004768372, :y2 541.6124954223633, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 512.8125076293945, :x2 240.70000004768372, :y2 541.6124954223633, :width 911.6666666666666, :height 1138.3333333333333}), :page 581}, :content {:text "绘制路径"}, :properties {:color "green"}} {:id #uuid "63d22bed-56d6-4e22-af79-49bc81a765be", :page 581, :position {:bounding {:x1 132.72671818733215, :y1 577.4000244140625, :x2 536.5375244617462, :y2 599.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 329.30000615119934, :y1 577.4000244140625, :x2 536.5375244617462, :y2 599.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 132.72671818733215, :y1 577.4125061035156, :x2 311.9475586414337, :y2 599.8125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 226.18750309944153, :y1 581.4125061035156, :x2 311.9475586414337, :y2 597.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 581}, :content {:text "必须首先调用 beginPath()方法以表示要开始绘制新路径"}, :properties {:color "yellow"}} {:id #uuid "63d22c2c-c973-4b31-9ca1-9ef1fb7d14f5", :page 581, :position {:bounding {:x1 0, :y1 460.800012588501, :x2 798.66832280159, :y2 977.800048828125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 460.800012588501, :x2 0, :y2 483.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 606.2995483875275, :y1 931.7000122070312, :x2 798.66832280159, :y2 954.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 223.80000615119934, :y1 955.0500183105469, :x2 352.3281433582306, :y2 977.4500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 955.4000244140625, :x2 195.37968754768372, :y2 977.800048828125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 379.2000000476837, :y1 955.4000244140625, :x2 513.0605347156525, :y2 977.800048828125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 223.80000615119934, :y1 959.0500183105469, :x2 352.3281433582306, :y2 974.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 959.4000244140625, :x2 195.37968754768372, :y2 975.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 581}, :content {:text "如果路径已经完成，则既可以指定 fillStyle 属性并调用 fill()方法来填充路径，"}, :properties {:color "yellow"}} {:id #uuid "63d22c35-7759-4b7e-a365-74551d7a4e9a", :page 581, :position {:bounding {:x1 0, :y1 476.800012588501, :x2 794.7385132312775, :y2 1001.4000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 476.800012588501, :x2 0, :y2 499.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 701.7000000476837, :y1 955.0500183105469, :x2 794.7385132312775, :y2 976.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 563.2582886219025, :y1 955.4000244140625, :x2 680.9296753406525, :y2 977.800048828125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 602.7000000476837, :y1 959.0500183105469, :x2 680.9296753406525, :y2 974.050048828125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 701.7000000476837, :y1 959.0500183105469, :x2 794.7385132312775, :y2 974.050048828125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 978.6500244140625, :x2 139.01562809944153, :y2 1000.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 157.10000920295715, :y1 979, :x2 269.2551453113556, :y2 1001.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 982.6500244140625, :x2 139.01562809944153, :y2 997.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 581}, :content {:text "指定 strokeStyle 属性并调用 stroke()方法来描画路径"}, :properties {:color "yellow"}} {:id #uuid "63d22c3a-1c17-484d-a522-ec949b343e81", :page 581, :position {:bounding {:x1 333.34382939338684, :y1 979, :x2 693.3535645008087, :y2 1001.4000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 333.34382939338684, :y1 979, :x2 402.6609375476837, :y2 1001.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 420.90001225471497, :y1 979, :x2 693.3535645008087, :y2 1001.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 366.90001225471497, :y1 982.6500244140625, :x2 402.6609375476837, :y2 997.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 581}, :content {:text "调用 clip()方法基于已有路径创建一个新剪切区域"}, :properties {:color "yellow"}} {:id #uuid "63d22da3-bfe1-49d2-ab89-ee3ed23f7db7", :page 582, :position {:bounding {:x1 149.8999969959259, :y1 896.1000061035156, :x2 593.955676317215, :y2 918.5000305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 896.1000061035156, :x2 593.955676317215, :y2 918.5000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 202.30000615119934, :y1 899.0500183105469, :x2 224.7749969959259, :y2 914.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 582}, :content {:text "路径是 2D 上下文的主要绘制机制，为绘制结果提供了很多控制"}, :properties {:color "yellow"}} {:id #uuid "63d22db5-8cd8-4b9c-b36b-f092ca4af019", :page 582, :position {:bounding {:x1 0, :y1 668.8000183105469, :x2 831.6682617664337, :y2 965.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 668.8000183105469, :x2 0, :y2 691.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 154.70000004768372, :y1 919.4500122070312, :x2 259.2265808582306, :y2 941.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 289.7000000476837, :y1 919.8000183105469, :x2 831.6682617664337, :y2 942.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 289.7000000476837, :y1 923.8000183105469, :x2 831.6682617664337, :y2 939.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 943.4125061035156, :x2 342.5735046863556, :y2 965.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 582}, :content {:text "isPointInPath()方法，接收 x 轴和 y 轴坐标作为参数。这个方法用于确定指定的点是否在路径上，可以在关闭路径前随时调用"}, :properties {:color "yellow"}} {:id #uuid "63d22dc2-f028-4e28-9177-9e6e50081614", :page 583, :position {:bounding {:x1 160.70000004768372, :y1 125.31251525878906, :x2 240.70000004768372, :y2 154.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 125.31251525878906, :x2 240.70000004768372, :y2 154.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 583}, :content {:text "绘制文本"}, :properties {:color "green"}} {:id #uuid "63d22ddd-df97-422b-8f52-a3d94f0b8f63", :page 583, :position {:bounding {:x1 0, :y1 28.80000066757202, :x2 769.7054932117462, :y2 212.2999973297119, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 28.80000066757202, :x2 0, :y2 51.200000286102295, :width 911.6666666666666, :height 1138.3333333333333} {:x1 412.0000183582306, :y1 165.15000343322754, :x2 769.7054932117462, :y2 187.5499973297119, :width 911.6666666666666, :height 1138.3333333333333} {:x1 431.3125183582306, :y1 169.15000343322754, :x2 769.7054932117462, :y2 184.95000648498535, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 189.90000343322754, :x2 189.31305241584778, :y2 212.2999973297119, :width 911.6666666666666, :height 1138.3333333333333} {:x1 214.80000615119934, :y1 189.90000343322754, :x2 230.82133793830872, :y2 212.2999973297119, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 193.90000343322754, :x2 189.31305241584778, :y2 209.70000648498535, :width 911.6666666666666, :height 1138.3333333333333}), :page 583}, :content {:text "2D 绘图上下文还提供了绘制文本的方法，即 fillText()和 strokeText()。"}, :properties {:color "yellow"}} {:id #uuid "63d22de5-1891-4994-9e64-7a261973d1f7", :page 583, :position {:bounding {:x1 0, :y1 44.80000114440918, :x2 795.6631348133087, :y2 235.91250038146973, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 44.80000114440918, :x2 0, :y2 67.20000267028809, :width 911.6666666666666, :height 1138.3333333333333} {:x1 360.33751225471497, :y1 189.90000343322754, :x2 795.6631348133087, :y2 212.30001258850098, :width 911.6666666666666, :height 1138.3333333333333} {:x1 363.0000183582306, :y1 192.85000038146973, :x2 795.6631348133087, :y2 208.65000343322754, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.07500004768372, :y1 213.51250648498535, :x2 117.13103032112122, :y2 235.91250038146973, :width 911.6666666666666, :height 1138.3333333333333}), :page 583}, :content {:text "4 个参数：要绘制的字符串、x 坐标、y 坐标和可选的最大像素宽度"}, :properties {:color "yellow"}} {:id #uuid "63d22eba-82d1-4027-af57-7d9fdd56bd57", :page 584, :position {:bounding {:x1 0, :y1 284.79999923706055, :x2 808.002551317215, :y2 453.5000114440918, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 284.79999923706055, :x2 0, :y2 307.1999931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 599.1152222156525, :y1 407.5000114440918, :x2 808.002551317215, :y2 429.9000053405762, :width 911.6666666666666, :height 1138.3333333333333} {:x1 607.8124878406525, :y1 411.5000114440918, :x2 808.002551317215, :y2 427.29999923706055, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 431.1000175476074, :x2 387.9934570789337, :y2 453.5000114440918, :width 911.6666666666666, :height 1138.3333333333333}), :page 584}, :content {:text "。类似地，通过修改 textBaseline属性，可以改变文本的垂直对齐方式。"}, :properties {:color "yellow"}} {:id #uuid "63d22ecb-57a6-4e42-9ce3-7880b24315f3", :page 584, :position {:bounding {:x1 0, :y1 332.79999923706055, :x2 832.811633348465, :y2 546.8499870300293, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 332.79999923706055, :x2 0, :y2 355.1999931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 348.79999923706055, :x2 0, :y2 371.1999931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 780.9095947742462, :y1 478.3125114440918, :x2 828.9882080554962, :y2 500.7125358581543, :width 911.6666666666666, :height 1138.3333333333333} {:x1 347.40001225471497, :y1 502.0000114440918, :x2 832.811633348465, :y2 524.4000358581543, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 502.01252365112305, :x2 328.8734314441681, :y2 524.4124870300293, :width 911.6666666666666, :height 1138.3333333333333} {:x1 347.40001225471497, :y1 506.0000114440918, :x2 832.811633348465, :y2 521.7999992370605, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 506.01252365112305, :x2 328.8734314441681, :y2 521.8125114440918, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 525.2500114440918, :x2 198.1734344959259, :y2 546.8499870300293, :width 911.6666666666666, :height 1138.3333333333333} {:x1 217.20000004768372, :y1 525.2500114440918, :x2 253.76402592658997, :y2 546.8499870300293, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 529.2500114440918, :x2 198.1734344959259, :y2 544.2500114440918, :width 911.6666666666666, :height 1138.3333333333333} {:x1 217.20000004768372, :y1 529.2500114440918, :x2 217.38750004768372, :y2 544.2500114440918, :width 911.6666666666666, :height 1138.3333333333333}), :page 584}, :content {:text "辅助确定文本大小的 measureText()方法。这个方法接收一个参数，即要绘制的文本，然后返回一个 TextMetrics 对象"}, :properties {:color "yellow"}} {:id #uuid "63d22eee-b63a-4478-a297-e77b5c03508a", :page 585, :position {:bounding {:x1 160.70000004768372, :y1 125.4124755859375, :x2 200.70000004768372, :y2 154.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 125.4124755859375, :x2 200.70000004768372, :y2 154.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 585}, :content {:text "变换"}, :properties {:color "green"}} {:id #uuid "63d22f5a-acaf-4738-b644-29054e8b80a1", :page 585, :position {:bounding {:x1 0, :y1 44.80000305175781, :x2 802.5085327625275, :y2 233.71250915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 44.80000305175781, :x2 0, :y2 67.19999694824219, :width 911.6666666666666, :height 1138.3333333333333} {:x1 659.0268433094025, :y1 187.71250915527344, :x2 802.5085327625275, :y2 210.1125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 211.31251525878906, :x2 566.0294144153595, :y2 233.71250915527344, :width 911.6666666666666, :height 1138.3333333333333}), :page 585}, :content {:text "对绘制上下文应用变换，可以导致以不同的变换矩阵应用绘制操作，从而产生不同的结果"}, :properties {:color "yellow"}} {:id #uuid "63d230a3-85e8-4c1a-bc95-33a6220a4fb0", :page 586, :position {:bounding {:x1 0, :y1 668.8000183105469, :x2 830.7762939929962, :y2 995.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 668.8000183105469, :x2 0, :y2 691.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 378.40001225471497, :y1 949.4500122070312, :x2 483.4297058582306, :y2 971.8499755859375, :width 911.6666666666666, :height 1138.3333333333333} {:x1 504.2000000476837, :y1 949.4500122070312, :x2 830.7762939929962, :y2 971.050048828125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.8999969959259, :y1 949.800048828125, :x2 349.94786381721497, :y2 972.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 297.30000615119934, :y1 953.4500122070312, :x2 349.94786381721497, :y2 968.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 378.40001225471497, :y1 953.4500122070312, :x2 483.4297058582306, :y2 969.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 504.2000000476837, :y1 953.4500122070312, :x2 830.7762939929962, :y2 968.4500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 973.4125366210938, :x2 150.08482670783997, :y2 995.8125, :width 911.6666666666666, :height 1138.3333333333333}), :page 586}, :content {:text "所有这些变换，包括 fillStyle 和 strokeStyle 属性，会一直保留在上下文中，直到再次修改它们"}, :properties {:color "yellow"}} {:id #uuid "63d230ab-25b4-433e-942b-c35368a01a08", :page 586, :position {:bounding {:x1 0, :y1 700.8000183105469, :x2 830.7762939929962, :y2 1043.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 700.8000183105469, :x2 0, :y2 723.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 510.2000000476837, :y1 997.0000305175781, :x2 830.7762939929962, :y2 1019.4000549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 374.6390564441681, :y1 997.0125427246094, :x2 498.1722595691681, :y2 1019.4125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 456.0999939441681, :y1 1000.6500549316406, :x2 498.1722595691681, :y2 1015.6500549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 510.2000000476837, :y1 1001.0000305175781, :x2 830.7762939929962, :y2 1016.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 1020.7000427246094, :x2 362.8856384754181, :y2 1043.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 586}, :content {:text "，可以调用 save()方法。调用这个方法后，所有这一时刻的设置会被放到一个暂存栈中。保存之后"}, :properties {:color "yellow"}} {:id #uuid "63d230b1-c836-4938-853e-2044d5d6f75b", :page 587, :position {:bounding {:x1 85.10000157356262, :y1 126.75, :x2 550.5610687732697, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 85.10000157356262, :y1 126.75, :x2 144.79532170295715, :y2 148.35000610351562, :width 911.6666666666666, :height 1138.3333333333333} {:x1 166.10000920295715, :y1 127.10000610351562, :x2 550.5610687732697, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333}), :page 587}, :content {:text "restore()方法。这个方法会从暂存栈中取出并恢复之前保存的设"}, :properties {:color "yellow"}} {:id #uuid "63d23142-c600-4093-a1e6-2d4163690796", :page 587, :position {:bounding {:x1 116.78750157356262, :y1 566.6999969482422, :x2 731.2604553699493, :y2 589.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 218.30000615119934, :y1 566.6999969482422, :x2 731.2604553699493, :y2 589.1000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.78750157356262, :y1 566.7125091552734, :x2 206.19063115119934, :y2 589.1125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 164.20000004768372, :y1 570.3500213623047, :x2 206.19063115119934, :y2 585.3500213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 587}, :content {:text "注意，save()方法只保存应用到绘图上下文的设置和变换，不保存绘图上下文的内容。"}, :properties {:color "yellow"}} {:id #uuid "63d2314f-80da-4b92-bf96-1e4d67977e74", :page 587, :position {:bounding {:x1 160.70000004768372, :y1 603.8125152587891, :x2 240.70000004768372, :y2 632.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000004768372, :y1 603.8125152587891, :x2 240.70000004768372, :y2 632.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 587}, :content {:text "绘制图像"}, :properties {:color "green"}} {:id #uuid "63d23161-090b-4a93-a59d-d13d57ddc3db", :page 587, :position {:bounding {:x1 355.5750000476837, :y1 644.8000183105469, :x2 786.20006108284, :y2 667.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 355.5750000476837, :y1 644.8000183105469, :x2 786.20006108284, :y2 667.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 587.8500244617462, :y1 648.8000183105469, :x2 744.4634277820587, :y2 664.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 587}, :content {:text "如果想把现有图像绘制到画布上，可以使用 drawImage()方法"}, :properties {:color "yellow"}} {:id #uuid "63d23207-45b8-4ef4-bb6c-3220f8b511bc", :page 587, :position {:bounding {:x1 467.0750000476837, :y1 668.4125061035156, :x2 786.20006108284, :y2 690.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 467.0750000476837, :y1 668.4125061035156, :x2 786.20006108284, :y2 690.8125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 641.1625244617462, :y1 672.4125061035156, :x2 752.6404297351837, :y2 688.2124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 587}, :content {:text "最简单的调用是传入一个 HTML 的<img>元素"}, :properties {:color "yellow"}} {:id #uuid "63d23213-2284-43e5-b49f-36805293f1f1", :page 587, :position {:bounding {:x1 0, :y1 444.8000030517578, :x2 802.5085327625275, :y2 830.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 444.8000030517578, :x2 0, :y2 467.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 260.46654057502747, :y1 784.0125122070312, :x2 802.5085327625275, :y2 806.4125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 807.6125183105469, :x2 117.16229557991028, :y2 830.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 587}, :content {:text "。如果想改变所绘制图像的大小，可以再传入另外两个参数：目标宽度和目标高度"}, :properties {:color "yellow"}} {:id #uuid "63d23235-d77f-40a4-b39a-6996558d41c2", :page 587, :position {:bounding {:x1 341.5859863758087, :y1 931.1125183105469, :x2 713.06724858284, :y2 953.5125427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 341.5859863758087, :y1 931.1125183105469, :x2 713.06724858284, :y2 953.5125427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 405.7000000476837, :y1 934.7500305175781, :x2 494.9687683582306, :y2 949.7500305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 587}, :content {:text "重载后的 drawImage()方法可以实现最大限度的控制"}, :properties {:color "yellow"}} {:id #uuid "63d23241-bb66-4ea7-8554-4c83cd0c8319", :page 588, :position {:bounding {:x1 149.8999969959259, :y1 378.5, :x2 684.7524292469025, :y2 400.90000915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 378.5, :x2 684.7524292469025, :y2 400.90000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 313.1875183582306, :y1 381.45001220703125, :x2 645.8606445789337, :y2 397.25001525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 588}, :content {:text "第一个参数除了可以是 HTML 的<img>元素，还可以是另一个<canvas>元素"}, :properties {:color "yellow"}} {:id #uuid "63d23292-4286-481c-aa0b-18a0686d1ff0", :page 588, :position {:bounding {:x1 193.80000615119934, :y1 533.7125091552734, :x2 233.80000615119934, :y2 562.5124969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 533.7125091552734, :x2 233.80000615119934, :y2 562.5124969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 588}, :content {:text "阴影"}, :properties {:color "green"}} {:id #uuid "63d232a3-3ed9-4dbe-8063-32cb5e21738f", :page 588, :position {:bounding {:x1 149.8999969959259, :y1 573.6499938964844, :x2 621.2518799304962, :y2 596.0499877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 573.6499938964844, :x2 621.2518799304962, :y2 596.0499877929688, :width 911.6666666666666, :height 1138.3333333333333}), :page 588}, :content {:text "2D 上下文可以根据以下属性的值自动为已有形状或路径生成阴影。"}, :properties {:color "yellow"}} {:id #uuid "63d232cc-5e4c-44c7-8b91-e141d25657e2", :page 588, :position {:bounding {:x1 171.37500305101275, :y1 602.2249908447266, :x2 655.3663818351924, :y2 624.625, :width 918, :height 1146.2413162705666}, :rects ({:x1 171.37500305101275, :y1 602.2249908447266, :x2 655.3663818351924, :y2 624.625, :width 918, :height 1146.2413162705666} {:x1 271.0625183098018, :y1 606.5874938964844, :x2 316.9909545890987, :y2 622.5, :width 918, :height 1146.2413162705666}), :page 588}, :content {:text "shadowColor：CSS 颜色值，表示要绘制的阴影颜色，默认为黑色。"}, :properties {:color "yellow"}} {:id #uuid "63d232d6-69db-4014-bfdf-48884462da7c", :page 588, :position {:bounding {:x1 178.54005737230182, :y1 625.9875030517578, :x2 682.1874877922237, :y2 648.75, :width 918, :height 1146.2413162705666}, :rects ({:x1 178.54005737230182, :y1 625.9875030517578, :x2 278.7092468254268, :y2 647.5874938964844, :width 918, :height 1146.2413162705666} {:x1 289.1875183098018, :y1 626.3499908447266, :x2 682.1874877922237, :y2 648.75, :width 918, :height 1146.2413162705666} {:x1 289.1875183098018, :y1 630.3499908447266, :x2 666.1500122062862, :y2 646.2624969482422, :width 918, :height 1146.2413162705666}), :page 588}, :content {:text "hadowOffsetX：阴影相对于形状或路径的 x 坐标的偏移量，默认为 0。"}, :properties {:color "yellow"}} {:id #uuid "63d232dc-c16f-4f56-8af2-5b86b15ee7ff", :page 588, :position {:bounding {:x1 171.37500305101275, :y1 649.75, :x2 682.1874877922237, :y2 672.5125122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 171.37500305101275, :y1 649.75, :x2 278.0153991691768, :y2 671.3500061035156, :width 918, :height 1146.2413162705666} {:x1 289.1875183098018, :y1 650.1125030517578, :x2 682.1874877922237, :y2 672.5125122070312, :width 918, :height 1146.2413162705666} {:x1 289.1875183098018, :y1 654.1125030517578, :x2 666.1500122062862, :y2 670.0249938964844, :width 918, :height 1146.2413162705666}), :page 588}, :content {:text "shadowOffsetY：阴影相对于形状或路径的 y 坐标的偏移量，默认为 0。"}, :properties {:color "yellow"}} {:id #uuid "63d232e2-3b9d-4792-8bee-85cc31325af5", :page 588, :position {:bounding {:x1 171.37500305101275, :y1 673.5125122070312, :x2 657.1984741203487, :y2 695.9125061035156, :width 918, :height 1146.2413162705666}, :rects ({:x1 171.37500305101275, :y1 673.5125122070312, :x2 657.1984741203487, :y2 695.9125061035156, :width 918, :height 1146.2413162705666} {:x1 262.0000183098018, :y1 677.875, :x2 544.8000366203487, :y2 693.7875061035156, :width 918, :height 1146.2413162705666}), :page 588}, :content {:text "shadowBlur：像素，表示阴影的模糊量。默认值为 0，表示不模糊。"}, :properties {:color "yellow"}} {:id #uuid "63d232eb-6415-48f4-b822-79c792dcf688", :page 589, :position {:bounding {:x1 161.81250305101275, :y1 317.6375045776367, :x2 201.83029479905963, :y2 346.43749237060547, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 317.6375045776367, :x2 201.83029479905963, :y2 346.43749237060547, :width 918, :height 1146.2413162705666}), :page 589}, :content {:text "渐变"}, :properties {:color "green"}} {:id #uuid "63d2331b-d724-4238-9571-b6065143a1ae", :page 589, :position {:bounding {:x1 0, :y1 44.80000305175781, :x2 799.9609252922237, :y2 405.0749969482422, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 44.80000305175781, :x2 0, :y2 67.19999694824219, :width 918, :height 1146.2413162705666} {:x1 687.6999999992549, :y1 358.9125061035156, :x2 799.9609252922237, :y2 381.3125, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 382.6750030517578, :x2 456.5228454582393, :y2 405.0749969482422, :width 918, :height 1146.2413162705666} {:x1 494.5000183098018, :y1 382.6750030517578, :x2 541.9851562492549, :y2 405.0749969482422, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 386.6750030517578, :x2 456.5228454582393, :y2 402.58750915527344, :width 918, :height 1146.2413162705666}), :page 589}, :content {:text "要创建一个新的线性渐变，可以调用上下文的 createLinearGradient()方法。"}, :properties {:color "yellow"}} {:id #uuid "63d2333a-72dc-4c91-8808-8adbc5c44c68", :page 589, :position {:bounding {:x1 0, :y1 108.79999542236328, :x2 800.8849365226924, :y2 500.2375183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 108.79999542236328, :x2 0, :y2 131.20000076293945, :width 918, :height 1146.2413162705666} {:x1 299.74116821214557, :y1 454.0625, :x2 511.0103942863643, :y2 476.4624938964844, :width 918, :height 1146.2413162705666} {:x1 528.2375366203487, :y1 454.0625, :x2 800.8849365226924, :y2 476.4624938964844, :width 918, :height 1146.2413162705666} {:x1 401.26249999925494, :y1 457.70001220703125, :x2 511.0103942863643, :y2 472.8000183105469, :width 918, :height 1146.2413162705666} {:x1 528.2375366203487, :y1 458.0625, :x2 800.8849365226924, :y2 473.9750061035156, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 477.8374938964844, :x2 342.9347106926143, :y2 500.2375183105469, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 481.8374938964844, :x2 261.8034545890987, :y2 497.75, :width 918, :height 1146.2413162705666}), :page 589}, :content {:text "接下来要使用 addColorStop()方法为渐变指定色标。这个方法接收两个参数：色标位置和 CSS 颜色字符串"}, :properties {:color "yellow"}} {:id #uuid "63d2335f-630c-4d87-aac8-e716154db379", :page 589, :position {:bounding {:x1 0, :y1 204.80000114440918, :x2 800.5883056633174, :y2 632.5500183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 204.80000114440918, :x2 0, :y2 227.20000076293945, :width 918, :height 1146.2413162705666} {:x1 263.2620727531612, :y1 586.375, :x2 494.32890624925494, :y2 608.7749938964844, :width 918, :height 1146.2413162705666} {:x1 507.2874938957393, :y1 586.375, :x2 563.2164184562862, :y2 608.7749938964844, :width 918, :height 1146.2413162705666} {:x1 576.1625244133174, :y1 586.375, :x2 800.5883056633174, :y2 608.7749938964844, :width 918, :height 1146.2413162705666} {:x1 454.3125183098018, :y1 589.3125, :x2 494.32890624925494, :y2 605.2250061035156, :width 918, :height 1146.2413162705666} {:x1 507.2874938957393, :y1 590.375, :x2 563.2164184562862, :y2 606.2875061035156, :width 918, :height 1146.2413162705666} {:x1 576.1625244133174, :y1 590.375, :x2 800.5883056633174, :y2 606.2875061035156, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 610.1499938964844, :x2 326.2341415397823, :y2 632.5500183105469, :width 918, :height 1146.2413162705666}), :page 589}, :content {:text "现在表示的就是在画布上从(30, 30)到(70, 70)绘制一个渐变。渐变的起点颜色为白色，终点颜色为黑色。可以把"}, :properties {:color "yellow"}} {:id #uuid "63d23368-bb0f-4983-81f9-c823fc9767d5", :page 589, :position {:bounding {:x1 117.60000152513385, :y1 766.625, :x2 643.9338027946651, :y2 789.0250244140625, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 766.625, :x2 643.9338027946651, :y2 789.0250244140625, :width 918, :height 1146.2413162705666}), :page 589}, :content {:text "为了让渐变覆盖整个矩形，而不只是其中一部分，两者的坐标必须搭配合适"}, :properties {:color "yellow"}} {:id #uuid "63d23388-a727-4119-adbf-78104d22d9ed", :page 590, :position {:bounding {:x1 0, :y1 256, :x2 832.7321655265987, :y2 355.20001220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 256, :x2 769.8416015617549, :y2 278.3999938964844, :width 918, :height 1146.2413162705666} {:x1 800.7125122062862, :y1 256, :x2 832.7321655265987, :y2 278.3999938964844, :width 918, :height 1146.2413162705666} {:x1 317.07499999925494, :y1 258.9375, :x2 769.8416015617549, :y2 274.8500061035156, :width 918, :height 1146.2413162705666} {:x1 800.7125122062862, :y1 260, :x2 832.7321655265987, :y2 275.9125061035156, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 279.76251220703125, :x2 263.27388305589557, :y2 302.1625061035156, :width 918, :height 1146.2413162705666} {:x1 0, :y1 332.8000183105469, :x2 0, :y2 355.20001220703125, :width 918, :height 1146.2413162705666}), :page 590}, :content {:text "这个函数会基于起点的 x、y 坐标和传入的宽度、高度创建渐变对象，之后调用 fillRect()方法时可以使用相同的值"}, :properties {:color "yellow"}} {:id #uuid "63d2339e-b8a3-43be-9024-12bab33d2e3e", :page 590, :position {:bounding {:x1 0, :y1 408.05001068115234, :x2 833.0327026359737, :y2 483.2000045776367, :width 918, :height 1146.2413162705666}, :rects ({:x1 465.4723083488643, :y1 408.05001068115234, :x2 710.1108276359737, :y2 430.4500045776367, :width 918, :height 1146.2413162705666} {:x1 752.8874999992549, :y1 408.05001068115234, :x2 833.0327026359737, :y2 430.4500045776367, :width 918, :height 1146.2413162705666} {:x1 517.1625244133174, :y1 411.6875228881836, :x2 710.1108276359737, :y2 426.7874984741211, :width 918, :height 1146.2413162705666} {:x1 752.8874999992549, :y1 412.05001068115234, :x2 833.0327026359737, :y2 427.96251678466797, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 431.8125228881836, :x2 327.5245544426143, :y2 454.21251678466797, :width 918, :height 1146.2413162705666} {:x1 0, :y1 460.80001068115234, :x2 0, :y2 483.2000045776367, :width 918, :height 1146.2413162705666}), :page 590}, :content {:text "用类似 createRectLinearGradient()这样的辅助函数能让计算坐标简单一些。"}, :properties {:color "yellow"}} {:id #uuid "63d233a6-e196-47c7-b9c5-7411f9eb82ae", :page 590, :position {:bounding {:x1 150.92500610277057, :y1 455.5750045776367, :x2 674.1567260734737, :y2 477.98751068115234, :width 918, :height 1146.2413162705666}, :rects ({:x1 593.9875366203487, :y1 455.5750045776367, :x2 674.1567260734737, :y2 477.9749984741211, :width 918, :height 1146.2413162705666} {:x1 150.92500610277057, :y1 455.58751678466797, :x2 556.2792846672237, :y2 477.98751068115234, :width 918, :height 1146.2413162705666} {:x1 394.51249999925494, :y1 459.21251678466797, :x2 556.2792846672237, :y2 474.3125228881836, :width 918, :height 1146.2413162705666}), :page 590}, :content {:text "径向渐变（或放射性渐变）要使用 createRadialGradient()方法来创建"}, :properties {:color "yellow"}} {:id #uuid "63d233c1-c74d-4370-a16a-a7bff9296cbb", :page 590, :position {:bounding {:x1 150.92500610277057, :y1 574.6125183105469, :x2 741.0569641105831, :y2 597.0125122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.92500610277057, :y1 574.6125183105469, :x2 741.0569641105831, :y2 597.0125122070312, :width 918, :height 1146.2413162705666}), :page 590}, :content {:text "要创建起点圆心在形状中心并向外扩散的径向渐变，需要将两个圆形设置为同心圆。"}, :properties {:color "yellow"}} {:id #uuid "63d233fc-945e-4420-9b82-9b0da6505af7", :page 591, :position {:bounding {:x1 161.81250305101275, :y1 126.21249389648438, :x2 201.83029479905963, :y2 155.01248168945312, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 126.21249389648438, :x2 201.83029479905963, :y2 155.01248168945312, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text "图案"}, :properties {:color "green"}} {:id #uuid "63d2340e-6db6-40b8-8ad9-eb29c30ac4f5", :page 591, :position {:bounding {:x1 0, :y1 28.79998779296875, :x2 799.8077270500362, :y2 213.64999389648438, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 28.79998779296875, :x2 0, :y2 51.199981689453125, :width 918, :height 1146.2413162705666} {:x1 406.1346618644893, :y1 167.38748168945312, :x2 690.4475585930049, :y2 189.7874755859375, :width 918, :height 1146.2413162705666} {:x1 719.6625244133174, :y1 167.38748168945312, :x2 799.8077270500362, :y2 189.7874755859375, :width 918, :height 1146.2413162705666} {:x1 583.6249877922237, :y1 171.02499389648438, :x2 690.4475585930049, :y2 186.125, :width 918, :height 1146.2413162705666} {:x1 719.6625244133174, :y1 171.38748168945312, :x2 799.8077270500362, :y2 187.29998779296875, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 191.25, :x2 596.4606811515987, :y2 213.64999389648438, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 195.25, :x2 302.12736816331744, :y2 211.1624755859375, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text "要创建新图案，可以调用 createPattern()方法并传入两个参数：一个 HTML <img>元素和一个表示该如何重复图像的字符串"}, :properties {:color "yellow"}} {:id #uuid "63d23449-8fab-48da-b39b-f32aae2cea42", :page 591, :position {:bounding {:x1 117.60000152513385, :y1 662.5000305175781, :x2 776.2419921867549, :y2 684.9000244140625, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 662.5000305175781, :x2 260.18953246995807, :y2 684.9000244140625, :width 918, :height 1146.2413162705666} {:x1 289.38749999925494, :y1 662.5000305175781, :x2 776.2419921867549, :y2 684.9000244140625, :width 918, :height 1146.2413162705666} {:x1 149.42500610277057, :y1 666.5000305175781, :x2 260.18953246995807, :y2 682.4125366210938, :width 918, :height 1146.2413162705666} {:x1 289.38749999925494, :y1 666.5000305175781, :x2 721.7803222648799, :y2 682.4125366210938, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text "传给 createPattern()方法的第一个参数也可以是<video>元素或者另一个<canvas>元素。"}, :properties {:color "yellow"}} {:id #uuid "63d23450-48ac-4c5d-b9f3-35a1abccb0c2", :page 591, :position {:bounding {:x1 356.56795043870807, :y1 215.01250612735748, :x2 774.0695678703487, :y2 237.41250002384186, :width 918, :height 1146.2413162705666}, :rects ({:x1 356.56795043870807, :y1 215.01250612735748, :x2 448.5363952629268, :y2 237.41250002384186, :width 918, :height 1146.2413162705666} {:x1 460.2750122062862, :y1 215.01250612735748, :x2 549.1991455070674, :y2 237.41250002384186, :width 918, :height 1146.2413162705666} {:x1 566.8000366203487, :y1 215.01250612735748, :x2 656.3313476555049, :y2 237.41250002384186, :width 918, :height 1146.2413162705666} {:x1 673.3375122062862, :y1 215.01250612735748, :x2 774.0695678703487, :y2 237.41250002384186, :width 918, :height 1146.2413162705666} {:x1 387.7750122062862, :y1 218.65000307559967, :x2 448.5363952629268, :y2 233.7500091791153, :width 918, :height 1146.2413162705666} {:x1 460.2750122062862, :y1 219.01250612735748, :x2 549.1991455070674, :y2 234.92499697208405, :width 918, :height 1146.2413162705666} {:x1 566.8000366203487, :y1 219.01250612735748, :x2 656.3313476555049, :y2 234.92499697208405, :width 918, :height 1146.2413162705666} {:x1 673.3375122062862, :y1 219.01250612735748, :x2 774.0695678703487, :y2 234.92499697208405, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text "包括\"repeat\"、\"repeat-x\"、\"repeat-y\"和\"no-repeat\""}, :properties {:color "yellow"}} {:id #uuid "63d2345d-d82f-4e23-93cd-0b59d782e2ad", :page 591, :position {:bounding {:x1 172.97500915452838, :y1 699.8750305175781, :x2 253.01057739183307, :y2 728.6750183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 172.97500915452838, :y1 699.8750305175781, :x2 253.01057739183307, :y2 728.6750183105469, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text "图像数据"}, :properties {:color "green"}} {:id #uuid "63d23469-4e71-4767-b705-cc585bc4bb9c", :page 591, :position {:bounding {:x1 427.8125183098018, :y1 741.1500091552734, :x2 720.5169555656612, :y2 763.5500183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 427.8125183098018, :y1 741.1500091552734, :x2 543.2839233390987, :y2 763.5500183105469, :width 918, :height 1146.2413162705666} {:x1 560.1625244133174, :y1 741.1500091552734, :x2 720.5169555656612, :y2 763.5500183105469, :width 918, :height 1146.2413162705666} {:x1 433.2874938957393, :y1 744.7875213623047, :x2 543.2839233390987, :y2 759.8875122070312, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text " getImageData()方法获取原始图像数据"}, :properties {:color "yellow"}} {:id #uuid "63d2348a-42fb-40ff-9274-226feb3e3f02", :page 591, :position {:bounding {:x1 196.85754699632525, :y1 764.9125213623047, :x2 661.999819945544, :y2 787.3125152587891, :width 918, :height 1146.2413162705666}, :rects ({:x1 196.85754699632525, :y1 764.9125213623047, :x2 661.999819945544, :y2 787.3125152587891, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text "要取得数据中第一个像素的左上角坐标和要取得的像素宽度及高度"}, :properties {:color "yellow"}} {:id #uuid "63d234a8-8cad-465c-9f9d-c6f5cfe35b82", :page 591, :position {:bounding {:x1 117.60000152513385, :y1 837.2124938964844, :x2 385.1025268547237, :y2 859.6124877929688, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 837.2124938964844, :x2 385.1025268547237, :y2 859.6124877929688, :width 918, :height 1146.2413162705666} {:x1 249.71249694749713, :y1 840.8499908447266, :x2 334.30000610277057, :y2 855.9499969482422, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text "返回的对象是一个 ImageData 的实例"}, :properties {:color "yellow"}} {:id #uuid "63d234b3-afa6-4e26-8172-7f09126bc247", :page 591, :position {:bounding {:x1 0, :y1 316.79998779296875, :x2 790.6749145500362, :y2 883.4749908447266, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 316.79998779296875, :x2 0, :y2 339.1999816894531, :width 918, :height 1146.2413162705666} {:x1 683.7125122062862, :y1 836.8499908447266, :x2 790.6749145500362, :y2 859.2499847412109, :width 918, :height 1146.2413162705666} {:x1 683.7125122062862, :y1 840.8499908447266, :x2 790.6749145500362, :y2 855.9499969482422, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 861.0749969482422, :x2 517.8557617180049, :y2 883.4749908447266, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 865.0749969482422, :x2 243.97500915452838, :y2 880.9874877929688, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text "width、height和 data，其中，data 属性是包含图像的原始像素信息的数组"}, :properties {:color "yellow"}} {:id #uuid "63d234c8-c9ee-4bf7-8c3c-8670edfb3375", :page 591, :position {:bounding {:x1 438.5128051750362, :y1 884.8375396728516, :x2 738.0081665031612, :y2 907.2375411987305, :width 918, :height 1146.2413162705666}, :rects ({:x1 438.5128051750362, :y1 884.8375396728516, :x2 738.0081665031612, :y2 907.2375411987305, :width 918, :height 1146.2413162705666} {:x1 631.6500122062862, :y1 887.7750396728516, :x2 686.8600952140987, :y2 903.6875381469727, :width 918, :height 1146.2413162705666}), :page 591}, :content {:text "第一个像素的信息包含在第 0 到第 3 个值中"}, :properties {:color "yellow"}} {:id #uuid "63d234dc-5ea7-4d97-a979-a18c356c8d2a", :page 592, :position {:bounding {:x1 204.81250305101275, :y1 965.1000137329102, :x2 244.83027954027057, :y2 993.9000091552734, :width 918, :height 1146.2413162705666}, :rects ({:x1 204.81250305101275, :y1 965.1000137329102, :x2 244.83027954027057, :y2 993.9000091552734, :width 918, :height 1146.2413162705666}), :page 592}, :content {:text "合成"}, :properties {:color "green"}} {:id #uuid "63d23542-60e2-4ae0-964d-fcfa8ce79d27", :page 592, :position {:bounding {:x1 166.75000305101275, :y1 1029.7750091552734, :x2 802.3340942375362, :y2 1052.1750183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 166.75000305101275, :y1 1029.7750091552734, :x2 252.39664001390338, :y2 1052.1750183105469, :width 918, :height 1146.2413162705666} {:x1 266.5374938957393, :y1 1029.7750091552734, :x2 802.3340942375362, :y2 1052.1750183105469, :width 918, :height 1146.2413162705666} {:x1 166.75000305101275, :y1 1033.7750091552734, :x2 252.39664001390338, :y2 1048.875015258789, :width 918, :height 1146.2413162705666} {:x1 266.5374938957393, :y1 1033.7750091552734, :x2 570.6999999992549, :y2 1049.687515258789, :width 918, :height 1146.2413162705666}), :page 592}, :content {:text "globalAlpha 属性是一个范围在 0~1 的值（包括 0 和 1），用于指定所有绘制内容的透明度"}, :properties {:color "yellow"}} {:id #uuid "63d2354e-54b0-4b9a-980c-8b9babe30244", :page 593, :position {:bounding {:x1 115.88749999925494, :y1 395.4000244140625, :x2 741.0236694328487, :y2 417, :width 918, :height 1146.2413162705666}, :rects ({:x1 115.88749999925494, :y1 395.4000244140625, :x2 324.2689086906612, :y2 417, :width 918, :height 1146.2413162705666} {:x1 351.5250122062862, :y1 395.4000244140625, :x2 741.0236694328487, :y2 417, :width 918, :height 1146.2413162705666} {:x1 351.5250122062862, :y1 399.4000244140625, :x2 351.71538085862994, :y2 414.5, :width 918, :height 1146.2413162705666}), :page 593}, :content {:text "globalCompositionOperation 属性表示新绘制的形状如何与上下文中已有的形状融合"}, :properties {:color "yellow"}} {:id #uuid "63d235b3-cf0f-4aca-bc7a-17df42fd1c4d", :page 594, :position {:bounding {:x1 188.27499694749713, :y1 125.8125, :x2 255.57353515550494, :y2 159.4124755859375, :width 918, :height 1146.2413162705666}, :rects ({:x1 188.27499694749713, :y1 125.8125, :x2 255.57353515550494, :y2 159.4124755859375, :width 918, :height 1146.2413162705666}), :page 594}, :content {:text "WebGL"}, :properties {:color "green"}} {:id #uuid "63d235fe-2907-4e20-a6ad-a5f5b487cb33", :page 594, :position {:bounding {:x1 195.13749999925494, :y1 435.9875122308731, :x2 327.46419067308307, :y2 464.78750002384186, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 435.9875122308731, :x2 252.88728637620807, :y2 464.78750002384186, :width 918, :height 1146.2413162705666} {:x1 263.0250122062862, :y1 435.9875122308731, :x2 327.46419067308307, :y2 464.78750002384186, :width 918, :height 1146.2413162705666} {:x1 263.0250122062862, :y1 440.78750002384186, :x2 267.0625183098018, :y2 460.9250122308731, :width 918, :height 1146.2413162705666}), :page 594}, :content {:text "WebGL 上下文"}, :properties {:color "green"}} {:id #uuid "63d23619-23ec-4e12-9bc1-143abcc52b0d", :page 594, :position {:bounding {:x1 150.93750305101275, :y1 699.0000305175781, :x2 713.0598022453487, :y2 721.7625122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 318.5875122062862, :y1 699.0000305175781, :x2 713.0598022453487, :y2 721.4000244140625, :width 918, :height 1146.2413162705666} {:x1 150.93750305101275, :y1 699.3625183105469, :x2 308.1515991203487, :y2 721.7625122070312, :width 918, :height 1146.2413162705666} {:x1 202.28750915452838, :y1 702.3000183105469, :x2 308.1515991203487, :y2 718.2125244140625, :width 918, :height 1146.2413162705666} {:x1 318.5875122062862, :y1 703.0000305175781, :x2 541.8598510734737, :y2 718.9125366210938, :width 918, :height 1146.2413162705666}), :page 594}, :content {:text "这里把 WebGL context 对象命名为 gl。大多数 WebGL 应用和例子遵循这个约定"}, :properties {:color "yellow"}} {:id #uuid "63d2364d-41bb-49c4-a4dc-8d708684019c", :page 594, :position {:bounding {:x1 195.13749999925494, :y1 759.8250122070312, :x2 307.45527954027057, :y2 788.6250305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 759.8250122070312, :x2 252.88728637620807, :y2 788.6250305175781, :width 918, :height 1146.2413162705666} {:x1 263.0250122062862, :y1 759.8250122070312, :x2 307.45527954027057, :y2 788.6250305175781, :width 918, :height 1146.2413162705666} {:x1 263.0250122062862, :y1 764.6250152587891, :x2 267.0625183098018, :y2 784.7625122070312, :width 918, :height 1146.2413162705666}), :page 594}, :content {:text "WebGL 基础"}, :properties {:color "green"}} {:id #uuid "63d2366e-7261-4082-9deb-b7623cb5418e", :page 594, :position {:bounding {:x1 150.92500610277057, :y1 845.0625305175781, :x2 592.8352539055049, :y2 867.4625244140625, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.92500610277057, :y1 845.0625305175781, :x2 322.78792114183307, :y2 867.4625244140625, :width 918, :height 1146.2413162705666} {:x1 343.36250610277057, :y1 845.0625305175781, :x2 592.8352539055049, :y2 867.4625244140625, :width 918, :height 1146.2413162705666} {:x1 234.51249999925494, :y1 848.7000122070312, :x2 322.78792114183307, :y2 863.8000183105469, :width 918, :height 1146.2413162705666} {:x1 343.36250610277057, :y1 849.0625305175781, :x2 437.7473327629268, :y2 864.9750061035156, :width 918, :height 1146.2413162705666}), :page 594}, :content {:text "可以在调用 getContext()取得 WebGL 上下文时指定一些选项"}, :properties {:color "yellow"}} {:id #uuid "63d23682-9206-4a17-a0e7-c1fecbdd5b1f", :page 595, :position {:bounding {:x1 135.12500305101275, :y1 234.03749084472656, :x2 567.1924926750362, :y2 253.2375030517578, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.12500305101275, :y1 234.03749084472656, :x2 392.6836120598018, :y2 253.2375030517578, :width 918, :height 1146.2413162705666} {:x1 425.0999938957393, :y1 234.03749084472656, :x2 535.6525146476924, :y2 253.2375030517578, :width 918, :height 1146.2413162705666} {:x1 545.9374877922237, :y1 234.03749084472656, :x2 567.1924926750362, :y2 253.2375030517578, :width 918, :height 1146.2413162705666} {:x1 159.27499694749713, :y1 237.2375030517578, :x2 392.6836120598018, :y2 250.62501525878906, :width 918, :height 1146.2413162705666} {:x1 425.0999938957393, :y1 237.2375030517578, :x2 535.6525146476924, :y2 250.62501525878906, :width 918, :height 1146.2413162705666} {:x1 545.9374877922237, :y1 237.2375030517578, :x2 546.3260375969112, :y2 250.62501525878906, :width 918, :height 1146.2413162705666}), :page 595}, :content {:text "let gl = drawing.getContext(\"webgl\", { alpha: false });"}, :properties {:color "yellow"}} {:id #uuid "63d236e6-67a1-481f-aec7-d3ad84b2bd48", :page 595, :position {:bounding {:x1 135.31250305101275, :y1 961.7124938964844, :x2 198.95155639573932, :y2 984.1124877929688, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.31250305101275, :y1 961.7124938964844, :x2 198.95155639573932, :y2 984.1124877929688, :width 918, :height 1146.2413162705666}), :page 595}, :content {:text "准备绘图"}, :properties {:color "green"}} {:id #uuid "63d236f0-f4fa-4c73-a0d9-62e4bf822142", :page 595, :position {:bounding {:x1 0, :y1 652.7999877929688, :x2 799.8459350578487, :y2 1030.1875, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 652.7999877929688, :x2 0, :y2 675.1999855041504, :width 918, :height 1146.2413162705666} {:x1 438.4293395988643, :y1 983.9249877929688, :x2 799.8459350578487, :y2 1006.3249816894531, :width 918, :height 1146.2413162705666} {:x1 607.6874877922237, :y1 987.5625, :x2 799.8459350578487, :y2 1002.6625061035156, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 1007.4249877929688, :x2 169.65744323655963, :y2 1029.0249938964844, :width 918, :height 1146.2413162705666} {:x1 194.43750305101275, :y1 1007.7875061035156, :x2 577.9174682609737, :y2 1030.1875, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 1011.4249877929688, :x2 169.65744323655963, :y2 1026.5249938964844, :width 918, :height 1146.2413162705666} {:x1 194.43750305101275, :y1 1011.7875061035156, :x2 286.19758911058307, :y2 1027.6999816894531, :width 918, :height 1146.2413162705666}), :page 595}, :content {:text "指定一种实心颜色清除<canvas>。为此，要调用 clearColor()方法并传入 4 个参数，分别表示红、绿、蓝和透明度值"}, :properties {:color "yellow"}} {:id #uuid "63d23726-61b2-4d60-b92e-edaca4c71585", :page 596, :position {:bounding {:x1 168.64999694749713, :y1 245.1750030517578, :x2 248.29426879808307, :y2 267.5749969482422, :width 918, :height 1146.2413162705666}, :rects ({:x1 168.64999694749713, :y1 245.1750030517578, :x2 248.29426879808307, :y2 267.5749969482422, :width 918, :height 1146.2413162705666}), :page 596}, :content {:text "视口与坐标"}, :properties {:color "green"}} {:id #uuid "63d2372e-8df9-4d3c-b190-19d487cca19d", :page 596, :position {:bounding {:x1 150.92500610277057, :y1 267.37501525878906, :x2 660.0358154289424, :y2 289.77500915527344, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.92500610277057, :y1 267.37501525878906, :x2 660.0358154289424, :y2 289.77500915527344, :width 918, :height 1146.2413162705666} {:x1 266.5250122062862, :y1 270.31251525878906, :x2 621.9928466789424, :y2 286.22499084472656, :width 918, :height 1146.2413162705666}), :page 596}, :content {:text "绘图前还要定义 WebGL 视口。默认情况下，视口使用整个<canvas>区域"}, :properties {:color "yellow"}} {:id #uuid "63d23752-23ba-48bb-b021-ecf011f71a94", :page 597, :position {:bounding {:x1 117.60000152513385, :y1 128.01251220703125, :x2 564.186213683337, :y2 150.41250610351562, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 128.01251220703125, :x2 564.186213683337, :y2 150.41250610351562, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "如果绘图时使用了视口外部的坐标，则绘制结果会被视口剪切。"}, :properties {:color "yellow"}} {:id #uuid "63d237d3-f03a-4143-ba98-0329b3639bfe", :page 597, :position {:bounding {:x1 135.32499999925494, :y1 180.6374969482422, :x2 183.05429382249713, :y2 203.03749084472656, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.32499999925494, :y1 180.6374969482422, :x2 183.05429382249713, :y2 203.03749084472656, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "缓冲区"}, :properties {:color "green"}} {:id #uuid "63d237e0-7afb-405e-8089-30e609e30963", :page 597, :position {:bounding {:x1 0, :y1 76.79999995231628, :x2 800.1367065422237, :y2 271.7999999523163, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 76.79999995231628, :x2 0, :y2 99.20000147819519, :width 918, :height 1146.2413162705666} {:x1 118.36611480638385, :y1 226.70000910758972, :x2 371.70637817308307, :y2 249.1000030040741, :width 918, :height 1146.2413162705666} {:x1 410.92500610277057, :y1 226.70000910758972, :x2 620.3957397453487, :y2 249.1000030040741, :width 918, :height 1146.2413162705666} {:x1 652.9999877922237, :y1 226.70000910758972, :x2 800.1367065422237, :y2 249.1000030040741, :width 918, :height 1146.2413162705666} {:x1 256.4625122062862, :y1 230.3375060558319, :x2 371.70637817308307, :y2 245.43749690055847, :width 918, :height 1146.2413162705666} {:x1 410.92500610277057, :y1 230.70000910758972, :x2 620.3957397453487, :y2 246.61249995231628, :width 918, :height 1146.2413162705666} {:x1 652.9999877922237, :y1 230.70000910758972, :x2 800.1367065422237, :y2 246.61249995231628, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 249.4000060558319, :x2 187.14865417405963, :y2 271.7999999523163, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 253.4000060558319, :x2 144.22232360765338, :y2 269.31251215934753, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "创建缓冲区要调用 gl.createBuffer()方法，并使用 gl.bindBuffer()方法将缓冲区绑定到 WebGL 上下文"}, :properties {:color "yellow"}} {:id #uuid "63d23801-642d-488f-aecc-28d40d7d6c52", :page 597, :position {:bounding {:x1 0, :y1 204.79999995231628, :x2 799.4072143547237, :y2 452.81251215934753, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 204.79999995231628, :x2 0, :y2 227.20000910758972, :width 918, :height 1146.2413162705666} {:x1 367.7325622551143, :y1 406.63749384880066, :x2 753.5192138664424, :y2 429.03751826286316, :width 918, :height 1146.2413162705666} {:x1 767.3874999992549, :y1 406.63749384880066, :x2 799.4072143547237, :y2 429.03751826286316, :width 918, :height 1146.2413162705666} {:x1 640.4125244133174, :y1 410.2750060558319, :x2 753.5192138664424, :y2 425.37501215934753, :width 918, :height 1146.2413162705666} {:x1 767.3874999992549, :y1 410.63749384880066, :x2 799.4072143547237, :y2 426.5499999523163, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 430.41251826286316, :x2 361.9749938957393, :y2 452.81251215934753, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 434.41251826286316, :x2 342.60942382737994, :y2 450.32499384880066, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "如果想输出缓冲区内容，那么可以调用 drawElements()方法并传入 gl.ELEMENT_ARRAY_BUFFER。"}, :properties {:color "yellow"}} {:id #uuid "63d2380f-4a7f-4b88-a19b-5a3118706fd8", :page 597, :position {:bounding {:x1 115.88749999925494, :y1 453.90000915527344, :x2 748.9672729484737, :y2 476.6625213623047, :width 918, :height 1146.2413162705666}, :rects ({:x1 115.88749999925494, :y1 453.90000915527344, :x2 219.35603637620807, :y2 475.50001525878906, :width 918, :height 1146.2413162705666} {:x1 251.82499999925494, :y1 454.2625274658203, :x2 748.9672729484737, :y2 476.6625213623047, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "gl.bufferData()方法的最后一个参数表示如何使用缓冲区。这个参数可以是以下常量值"}, :properties {:color "yellow"}} {:id #uuid "63d23822-76a3-43fd-ab84-ada1875a80a6", :page 597, :position {:bounding {:x1 138.05000610277057, :y1 477.6625213623047, :x2 280.9601013176143, :y2 499.2625274658203, :width 918, :height 1146.2413162705666}, :rects ({:x1 138.05000610277057, :y1 477.6625213623047, :x2 280.9601013176143, :y2 499.2625274658203, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "gl.STATIC_DRAW："}, :properties {:color "yellow"}} {:id #uuid "63d23827-1a45-437f-b25e-d4dbfeb5b681", :page 597, :position {:bounding {:x1 132.89253539964557, :y1 502.43751525878906, :x2 280.9601013176143, :y2 524.0375213623047, :width 918, :height 1146.2413162705666}, :rects ({:x1 132.89253539964557, :y1 502.43751525878906, :x2 280.9601013176143, :y2 524.0375213623047, :width 918, :height 1146.2413162705666} {:x1 138.05000610277057, :y1 505.43751525878906, :x2 265.2368347160518, :y2 520.5375213623047, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "gl.STREAM_DRAW："}, :properties {:color "yellow"}} {:id #uuid "63d2382c-7e60-4052-bf7b-8121d761f254", :page 597, :position {:bounding {:x1 138.05000610277057, :y1 525.2000274658203, :x2 272.18950195237994, :y2 546.8000030517578, :width 918, :height 1146.2413162705666}, :rects ({:x1 138.05000610277057, :y1 525.2000274658203, :x2 272.18950195237994, :y2 546.8000030517578, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "gl.DYNAMIC_DRAW"}, :properties {:color "yellow"}} {:id #uuid "63d23857-4f26-4d02-9326-f597bbf83a2c", :page 597, :position {:bounding {:x1 0, :y1 316.8000183105469, :x2 764.1494628898799, :y2 619.3500213623047, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 316.8000183105469, :x2 0, :y2 339.20001220703125, :width 918, :height 1146.2413162705666} {:x1 413.5999938957393, :y1 573.1875152587891, :x2 764.1494628898799, :y2 595.5875091552734, :width 918, :height 1146.2413162705666} {:x1 561.2375366203487, :y1 577.1875152587891, :x2 764.1494628898799, :y2 593.1000213623047, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 596.9500274658203, :x2 262.08381957933307, :y2 619.3500213623047, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "如果不再需要缓冲区，那么最好调用 gl.deleteBuffer()方法释放其占用的内存："}, :properties {:color "yellow"}} {:id #uuid "63d23861-9826-4374-bf9d-bb1a59fcaf7e", :page 597, :position {:bounding {:x1 135.32499999925494, :y1 654.9000244140625, :x2 167.1445190422237, :y2 677.3000183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.32499999925494, :y1 654.9000244140625, :x2 167.1445190422237, :y2 677.3000183105469, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "错误"}, :properties {:color "green"}} {:id #uuid "63d2387e-1b70-4640-b1e2-f9d1bf325963", :page 597, :position {:bounding {:x1 0, :y1 380.8000183105469, :x2 801.7347290031612, :y2 723.3625335693359, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 380.8000183105469, :x2 0, :y2 403.2000274658203, :width 918, :height 1146.2413162705666} {:x1 364.6194030754268, :y1 677.2000274658203, :x2 801.7347290031612, :y2 699.6000213623047, :width 918, :height 1146.2413162705666} {:x1 383.9375183098018, :y1 680.1375274658203, :x2 801.7347290031612, :y2 696.0500335693359, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 700.9625244140625, :x2 249.72322387620807, :y2 723.3625335693359, :width 918, :height 1146.2413162705666} {:x1 280.8375122062862, :y1 700.9625244140625, :x2 638.0496093742549, :y2 723.3625335693359, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 704.9625244140625, :x2 249.72322387620807, :y2 720.8750305175781, :width 918, :height 1146.2413162705666} {:x1 280.8375122062862, :y1 704.9625244140625, :x2 499.55278320237994, :y2 720.8750305175781, :width 918, :height 1146.2413162705666}), :page 597}, :content {:text "在 WebGL 操作中通常不会抛出错误。必须在调用可能失败的方法后，调用 gl.getError()方法。这个方法返回一个常量，表示发生的错误类型"}, :properties {:color "yellow"}} {:id #uuid "63d23889-acb1-4200-a799-0fc4f1b1b561", :page 598, :position {:bounding {:x1 164.54143066331744, :y1 157.92498779296875, :x2 216.40429992601275, :y2 180.32501220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 164.54143066331744, :y1 157.92498779296875, :x2 216.40429992601275, :y2 180.32501220703125, :width 918, :height 1146.2413162705666}), :page 598}, :content {:text "着色器"}, :properties {:color "green"}} {:id #uuid "63d238da-ed89-446d-88f0-2e9a182c79ba", :page 598, :position {:bounding {:x1 576.5749999992549, :y1 178.10000610351562, :x2 824.6959106437862, :y2 200.5, :width 918, :height 1146.2413162705666}, :rects ({:x1 576.5749999992549, :y1 178.10000610351562, :x2 824.6959106437862, :y2 200.5, :width 918, :height 1146.2413162705666} {:x1 655.4250366203487, :y1 183.16250610351562, :x2 780.0779907219112, :y2 199.07501220703125, :width 918, :height 1146.2413162705666}), :page 598}, :content {:text "顶点着色器和片段（或像素）着色器"}, :properties {:color "yellow"}} {:id #uuid "63d238f4-037c-4781-9ee2-f825429d9b27", :page 598, :position {:bounding {:x1 119.02500457689166, :y1 202.9375, :x2 481.85576171800494, :y2 225.33749389648438, :width 918, :height 1146.2413162705666}, :rects ({:x1 119.02500457689166, :y1 202.9375, :x2 481.85576171800494, :y2 225.33749389648438, :width 918, :height 1146.2413162705666} {:x1 252.55000610277057, :y1 205.875, :x2 464.57499999925494, :y2 221.78750610351562, :width 918, :height 1146.2413162705666}), :page 598}, :content {:text "顶点着色器用于把 3D 顶点转换为可以渲染的 2D 点"}, :properties {:color "yellow"}} {:id #uuid "63d238f9-df56-4c2c-bfa0-9a171709529c", :page 598, :position {:bounding {:x1 497.89897460862994, :y1 202.9375, :x2 818.7638427726924, :y2 225.33749389648438, :width 918, :height 1146.2413162705666}, :rects ({:x1 497.89897460862994, :y1 202.9375, :x2 818.7638427726924, :y2 225.33749389648438, :width 918, :height 1146.2413162705666}), :page 598}, :content {:text "片段着色器用于计算绘制一个像素的正确颜色"}, :properties {:color "yellow"}} {:id #uuid "63d2390e-d568-4c8c-84db-1ed524e34368", :page 598, :position {:bounding {:x1 171.37500305101275, :y1 280.87500607967377, :x2 251.63547058030963, :y2 303.27499997615814, :width 918, :height 1146.2413162705666}, :rects ({:x1 171.37500305101275, :y1 280.87500607967377, :x2 251.63547058030963, :y2 303.27499997615814, :width 918, :height 1146.2413162705666}), :page 598}, :content {:text "编写着色器"}, :properties {:color "purple"}} {:id #uuid "63d23929-8c42-4dbe-aa2e-fdb3fbe5c07c", :page 598, :position {:bounding {:x1 150.93750305101275, :y1 355.4874938726425, :x2 573.4145996086299, :y2 377.887518286705, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 355.4874938726425, :x2 573.4145996086299, :y2 377.887518286705, :width 918, :height 1146.2413162705666} {:x1 305.5999938957393, :y1 359.12500607967377, :x2 352.3711120598018, :y2 374.2250121831894, :width 918, :height 1146.2413162705666}), :page 598}, :content {:text "每个着色器都有一个 main()方法，在绘制期间会重复执行"}, :properties {:color "yellow"}} {:id #uuid "63d239ab-b6d1-4e01-91ab-53b5667288fa", :page 598, :position {:bounding {:x1 152.33749694749713, :y1 485.07501220703125, :x2 377.3502380363643, :y2 504.2749938964844, :width 918, :height 1146.2413162705666}, :rects ({:x1 152.33749694749713, :y1 485.07501220703125, :x2 208.69617004320025, :y2 504.2749938964844, :width 918, :height 1146.2413162705666} {:x1 224.81250305101275, :y1 485.07501220703125, :x2 377.3502380363643, :y2 504.2749938964844, :width 918, :height 1146.2413162705666} {:x1 224.81250305101275, :y1 488.2749938964844, :x2 267.7750122062862, :y2 501.6625061035156, :width 918, :height 1146.2413162705666}), :page 598}, :content {:text "attribute vec2 aVertexPosition;"}, :properties {:color "yellow"}} {:id #uuid "63d239c8-04bc-4c15-93fb-a47c3aae3ece", :page 598, :position {:bounding {:x1 150.91250915452838, :y1 670.5750122070312, :x2 603.4282714836299, :y2 692.9750061035156, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.91250915452838, :y1 670.5750122070312, :x2 603.4282714836299, :y2 692.9750061035156, :width 918, :height 1146.2413162705666} {:x1 471.7500183098018, :y1 674.2000122070312, :x2 538.2125122062862, :y2 689.2999877929688, :width 918, :height 1146.2413162705666}), :page 598}, :content {:text "片段着色器与顶点着色器类似，只不过是通过 uniform 传入数据"}, :properties {:color "yellow"}} {:id #uuid "63d239df-9cad-4a96-b4b2-3d2756cdb20e", :page 598, :position {:bounding {:x1 171.37500305101275, :y1 1008.1875305175781, :x2 283.76082153245807, :y2 1030.5875549316406, :width 918, :height 1146.2413162705666}, :rects ({:x1 171.37500305101275, :y1 1008.1875305175781, :x2 283.76082153245807, :y2 1030.5875549316406, :width 918, :height 1146.2413162705666}), :page 598}, :content {:text "创建着色器程序"}, :properties {:color "purple"}} {:id #uuid "63d239ff-2fb5-4a84-9ed9-f502f2b4d2fb", :page 599, :position {:bounding {:x1 0, :y1 316.8000063896179, :x2 799.6061889640987, :y2 569.9125061035156, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 316.8000063896179, :x2 0, :y2 339.2000060081482, :width 918, :height 1146.2413162705666} {:x1 117.58750457689166, :y1 523.6500091552734, :x2 704.0121948234737, :y2 546.0500030517578, :width 918, :height 1146.2413162705666} {:x1 735.7750122062862, :y1 523.6500091552734, :x2 799.6061889640987, :y2 546.0500030517578, :width 918, :height 1146.2413162705666} {:x1 149.41250915452838, :y1 527.6500091552734, :x2 704.0121948234737, :y2 543.5625152587891, :width 918, :height 1146.2413162705666} {:x1 735.7750122062862, :y1 527.6500091552734, :x2 799.6061889640987, :y2 543.5625152587891, :width 918, :height 1146.2413162705666} {:x1 512.9374877922237, :y1 547.1500091552734, :x2 694.8749877922237, :y2 569.5500030517578, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 547.5125122070312, :x2 310.98078460618854, :y2 569.9125061035156, :width 918, :height 1146.2413162705666} {:x1 326.5250122062862, :y1 547.5125122070312, :x2 474.8617126457393, :y2 569.9125061035156, :width 918, :height 1146.2413162705666} {:x1 486.2500183098018, :y1 547.5125122070312, :x2 502.9325134269893, :y2 569.9125061035156, :width 918, :height 1146.2413162705666} {:x1 512.9374877922237, :y1 551.1500091552734, :x2 694.8749877922237, :y2 567.0625152587891, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 551.5125122070312, :x2 310.98078460618854, :y2 567.4250183105469, :width 918, :height 1146.2413162705666} {:x1 326.5250122062862, :y1 551.5125122070312, :x2 474.8617126457393, :y2 567.4250183105469, :width 918, :height 1146.2413162705666} {:x1 486.2500183098018, :y1 551.5125122070312, :x2 502.9325134269893, :y2 567.4250183105469, :width 918, :height 1146.2413162705666}), :page 599}, :content {:text "有了 GLSL 字符串，下一步是创建 shader 对象。为此，需要调用 gl.createShader()方法，并传 入 想 要 创 建 的 着 色 器 类 型 （ gl.VERTEX_SHADER 或 gl.FRAGMENT_SHADER ）"}, :properties {:color "yellow"}} {:id #uuid "63d23a75-7241-4a0d-8635-ea05dad362c3", :page 599, :position {:bounding {:x1 0, :y1 588.8000030517578, :x2 794.2136108875275, :y2 914.8625183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 588.8000030517578, :x2 0, :y2 611.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 392.21727299690247, :y1 869.8999938964844, :x2 722.8845093250275, :y2 892.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 745.4999878406525, :y1 869.8999938964844, :x2 794.2136108875275, :y2 892.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 610.1000244617462, :y1 873.5500183105469, :x2 722.8845093250275, :y2 888.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 745.4999878406525, :y1 873.8999938964844, :x2 794.2136108875275, :y2 889.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 892.4624938964844, :x2 314.2671387195587, :y2 914.8625183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 896.4624938964844, :x2 142.8298065662384, :y2 912.2625122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 599}, :content {:text "链接到程序之后，就可以通过 gl.useProgram()方法让 WebGL 上下文使用这个程序了："}, :properties {:color "yellow"}} {:id #uuid "63d23a7b-a65a-4783-8f4b-a6eb6ad04139", :page 599, :position {:bounding {:x1 116.79999852180481, :y1 946.1000061035156, :x2 607.948840379715, :y2 968.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.79999852180481, :y1 946.1000061035156, :x2 265.09688115119934, :y2 968.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 287.40001225471497, :y1 946.1000061035156, :x2 607.948840379715, :y2 968.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 152.3999969959259, :y1 949.75, :x2 265.09688115119934, :y2 964.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 599}, :content {:text "调用 gl.useProgram()之后，所有后续的绘制操作都会使用这个程序"}, :properties {:color "yellow"}} {:id #uuid "63d23a7e-5695-437b-9f0b-79f94f41ff95", :page 599, :position {:bounding {:x1 137.10000920295715, :y1 976.2000122070312, :x2 233.4120819568634, :y2 998.6000366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 137.10000920295715, :y1 976.2000122070312, :x2 233.4120819568634, :y2 998.6000366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 599}, :content {:text "给着色器传值"}, :properties {:color "purple"}} {:id #uuid "63d23b11-8a2c-451e-91fe-a9df488b0fe6", :page 599, :position {:bounding {:x1 149.16405034065247, :y1 1026.6999969482422, :x2 781.7567627429962, :y2 1049.1000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.16405034065247, :y1 1026.6999969482422, :x2 535.0370972156525, :y2 1049.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 573.400012254715, :y1 1026.6999969482422, :x2 781.7567627429962, :y2 1049.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 184.10000920295715, :y1 1030.3500061035156, :x2 535.0370972156525, :y2 1045.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 599}, :content {:text "对于 uniform 变量，可以调用 gl.getUniformLocation()方法。这个方法返回一个对象"}, :properties {:color "yellow"}} {:id #uuid "63d23b1c-cf60-4b91-96e8-11f095f08504", :page 600, :position {:bounding {:x1 0, :y1 242.34999465942383, :x2 793.786242723465, :y2 339.20000076293945, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 547.3000366687775, :y1 242.34999465942383, :x2 793.786242723465, :y2 264.7499885559082, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.8999969959259, :y1 242.7125129699707, :x2 528.0344116687775, :y2 265.1125068664551, :width 911.6666666666666, :height 1138.3333333333333} {:x1 547.3000366687775, :y1 246.34999465942383, :x2 793.786242723465, :y2 262.1500129699707, :width 911.6666666666666, :height 1138.3333333333333} {:x1 398.9749939441681, :y1 246.7125129699707, :x2 528.0344116687775, :y2 262.51250076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 265.9375190734863, :x2 189.62344670295715, :y2 287.5374946594238, :width 911.6666666666666, :height 1138.3333333333333} {:x1 208.20000004768372, :y1 266.3000068664551, :x2 240.25691533088684, :y2 288.70000076293945, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 269.9375190734863, :x2 189.62344670295715, :y2 284.9375190734863, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 316.8000068664551, :x2 0, :y2 339.20000076293945, :width 911.6666666666666, :height 1138.3333333333333}), :page 600}, :content {:text "给顶点着色器传值也是类似的过程。而要获得 attribute 变量的位置，可以调用 gl.getAttribLocation()方法"}, :properties {:color "yellow"}} {:id #uuid "63d23b5b-7615-443b-a5d3-5143f6d208fd", :page 600, :position {:bounding {:x1 170.20000004768372, :y1 427.9000129699707, :x2 298.6176941394806, :y2 450.3000068664551, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 170.20000004768372, :y1 427.9000129699707, :x2 298.6176941394806, :y2 450.3000068664551, :width 911.6666666666666, :height 1138.3333333333333}), :page 600}, :content {:text "调试着色器和程序"}, :properties {:color "purple"}} {:id #uuid "63d23b85-c9a7-4c73-9aea-e77b30774cda", :page 601, :position {:bounding {:x1 134.38750004768372, :y1 226.65001678466797, :x2 165.98750615119934, :y2 249.05001068115234, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.38750004768372, :y1 226.65001678466797, :x2 165.98750615119934, :y2 249.05001068115234, :width 911.6666666666666, :height 1138.3333333333333}), :page 601}, :content {:text "绘图"}, :properties {:color "green"}} {:id #uuid "63d23b8c-68e9-4986-913d-bb79b396c01d", :page 601, :position {:bounding {:x1 116.78750157356262, :y1 247.65001678466797, :x2 424.1430847644806, :y2 270.05001068115234, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.78750157356262, :y1 247.65001678466797, :x2 424.1430847644806, :y2 270.05001068115234, :width 911.6666666666666, :height 1138.3333333333333}), :page 601}, :content {:text "WebGL 只能绘制三种形状：点、线和三角形"}, :properties {:color "yellow"}} {:id #uuid "63d23b9c-bfec-4286-9eab-8b357c05ef2f", :page 601, :position {:bounding {:x1 0, :y1 108.79999542236328, :x2 796.8842041492462, :y2 318.4124984741211, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 108.79999542236328, :x2 0, :y2 131.20000457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 148.30000615119934, :y1 271.3499984741211, :x2 375.2511475086212, :y2 293.74999237060547, :width 911.6666666666666, :height 1138.3333333333333} {:x1 393.7000000476837, :y1 272.40001678466797, :x2 525.952258348465, :y2 294.80001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 540.4999878406525, :y1 272.40001678466797, :x2 796.8842041492462, :y2 294.80001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 148.30000615119934, :y1 275.3499984741211, :x2 375.2511475086212, :y2 291.15001678466797, :width 911.6666666666666, :height 1138.3333333333333} {:x1 393.7000000476837, :y1 276.40001678466797, :x2 525.952258348465, :y2 292.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 540.4999878406525, :y1 276.40001678466797, :x2 796.8842041492462, :y2 292.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 296.0125045776367, :x2 229.26041722297668, :y2 318.4124984741211, :width 911.6666666666666, :height 1138.3333333333333}), :page 601}, :content {:text "WebGL 绘图要使用 drawArrays()和 drawElements()方法，前者使用数组缓冲区，后者则操作元素数组缓冲区"}, :properties {:color "yellow"}} {:id #uuid "63d23bd4-e74e-412f-a997-f9989851c81e", :page 601, :position {:bounding {:x1 114.79999852180481, :y1 319.24999237060547, :x2 633.1849853992462, :y2 341.99999237060547, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 114.79999852180481, :y1 319.24999237060547, :x2 202.89248967170715, :y2 340.8499984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 220.80000615119934, :y1 319.5999984741211, :x2 349.9295837879181, :y2 341.99999237060547, :width 911.6666666666666, :height 1138.3333333333333} {:x1 364.0999939441681, :y1 319.5999984741211, :x2 633.1849853992462, :y2 341.99999237060547, :width 911.6666666666666, :height 1138.3333333333333} {:x1 220.80000615119934, :y1 323.5999984741211, :x2 349.9295837879181, :y2 339.40001678466797, :width 911.6666666666666, :height 1138.3333333333333}), :page 601}, :content {:text "drawArrays()和 drawElements()的第一个参数都表示要绘制形状的常量"}, :properties {:color "yellow"}} {:id #uuid "63d23c01-a326-45c3-b4e5-ec1c3ae74645", :page 601, :position {:bounding {:x1 0, :y1 348.8000030517578, :x2 796.371691942215, :y2 672.7125396728516, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 348.8000030517578, :x2 0, :y2 371.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 474.5160095691681, :y1 626.6999969482422, :x2 796.371691942215, :y2 649.1000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 559.4875366687775, :y1 629.6500091552734, :x2 796.371691942215, :y2 645.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 137.0874969959259, :y1 650.3125152587891, :x2 472.41580510139465, :y2 672.7125396728516, :width 911.6666666666666, :height 1138.3333333333333}), :page 601}, :content {:text "区别在于前 3 个顶点之后的顶点会作为第三个顶点与其前面的顶点和第一个顶点构成三角形。"}, :properties {:color "yellow"}} {:id #uuid "63d23c09-3e3c-4306-a7f5-322c267f111a", :page 601, :position {:bounding {:x1 0, :y1 396.79998779296875, :x2 799.16832280159, :y2 743.6124877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 396.79998779296875, :x2 0, :y2 419.19998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 382.40001225471497, :y1 697.5999908447266, :x2 799.16832280159, :y2 719.9999847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.79999852180481, :y1 697.6124877929688, :x2 353.78282475471497, :y2 720.0124969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 247.3999969959259, :y1 701.2499847412109, :x2 353.78282475471497, :y2 716.2499847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 382.40001225471497, :y1 701.5999908447266, :x2 799.16832280159, :y2 717.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 721.2124938964844, :x2 437.4523422718048, :y2 743.6124877929688, :width 911.6666666666666, :height 1138.3333333333333}), :page 601}, :content {:text "以上常量可以作为 gl.drawArrays()方法的第一个参数，第二个参数是数组缓冲区的起点索引，第三个参数是数组缓冲区包含的顶点集合的数量。"}, :properties {:color "yellow"}} {:id #uuid "63d23c52-d9ce-499d-b908-51272e03f582", :page 601, :position {:bounding {:x1 118.22500157356262, :y1 1008.487548828125, :x2 622.4816772937775, :y2 1027.6875305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 118.22500157356262, :y1 1008.487548828125, :x2 217.16507267951965, :y2 1027.6875305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 238.20000004768372, :y1 1008.487548828125, :x2 451.0504333972931, :y2 1027.6875305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 494.2000000476837, :y1 1008.487548828125, :x2 622.4816772937775, :y2 1027.6875305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 238.20000004768372, :y1 1011.6875305175781, :x2 451.0504333972931, :y2 1024.987548828125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 494.2000000476837, :y1 1011.6875305175781, :x2 496.86250615119934, :y2 1024.987548828125, :width 911.6666666666666, :height 1138.3333333333333}), :page 601}, :content {:text "aVertexPosition = gl.getAttribLocation(program, \"aVertexPosition\");"}, :properties {:color "yellow"}} {:id #uuid "63d23cb9-62d7-4ab1-948d-50bb30ff6410", :page 602, :position {:bounding {:x1 0, :y1 206.99996948242188, :x2 828.8840820789337, :y2 323.1999816894531, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 701.2168457508087, :y1 206.99996948242188, :x2 828.8840820789337, :y2 229.39999389648438, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 230.61251831054688, :x2 406.6677277088165, :y2 253.01248168945312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 300.8000183105469, :x2 0, :y2 323.1999816894531, :width 911.6666666666666, :height 1138.3333333333333}), :page 602}, :content {:text "点信息保存在了缓冲区。然后把颜色信息传给片段着色器。"}, :properties {:color "yellow"}} {:id #uuid "63d23cca-2257-462d-ad11-a3f448120902", :page 602, :position {:bounding {:x1 0, :y1 277.8124694824219, :x2 829.7596924304962, :y2 371.1999816894531, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 372.6273376941681, :y1 277.8124694824219, :x2 567.7995483875275, :y2 300.2124938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 582.7000000476837, :y1 277.8124694824219, :x2 829.7596924304962, :y2 300.2124938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 447.96251225471497, :y1 280.7624816894531, :x2 567.7995483875275, :y2 296.5625305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 582.7000000476837, :y1 281.8124694824219, :x2 829.7596924304962, :y2 297.6125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 301.5124816894531, :x2 166.09610295295715, :y2 323.9125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 348.8000183105469, :x2 0, :y2 371.1999816894531, :width 911.6666666666666, :height 1138.3333333333333}), :page 602}, :content {:text "五个参数是步长值（stride value），表示跳过多个数组元素取得下一个值。"}, :properties {:color "yellow"}} {:id #uuid "63d23ce7-e444-46eb-a556-4e62a981c348", :page 602, :position {:bounding {:x1 167.50000309944153, :y1 905.2500305175781, :x2 199.10000920295715, :y2 927.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000309944153, :y1 905.2500305175781, :x2 199.10000920295715, :y2 927.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 602}, :content {:text "纹理"}, :properties {:color "green"}} {:id #uuid "63d23d0a-a64b-46e4-8073-604109ec752c", :page 602, :position {:bounding {:x1 0, :y1 524.8000183105469, :x2 828.9882080554962, :y2 973.3125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 524.8000183105469, :x2 0, :y2 547.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 423.39424443244934, :y1 927.3000335693359, :x2 613.2265503406525, :y2 949.7000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 652.7000000476837, :y1 927.3000335693359, :x2 828.9882080554962, :y2 949.7000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 485.67500615119934, :y1 931.3000335693359, :x2 613.2265503406525, :y2 947.1000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 652.7000000476837, :y1 931.3000335693359, :x2 828.9882080554962, :y2 947.1000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 950.9125213623047, :x2 294.5278503894806, :y2 973.3125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 602}, :content {:text "可以使用 gl.createTexture()方法创建新的纹理，然后再将图片绑定到这个纹理"}, :properties {:color "yellow"}} {:id #uuid "63d23d5b-246e-48e3-a3be-216bcec8a524", :page 603, :position {:bounding {:x1 0, :y1 172.79998779296875, :x2 787.0307495594025, :y2 365.8999938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 172.79998779296875, :x2 0, :y2 195.19998168945312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 648.5239136219025, :y1 319.8000183105469, :x2 787.0307495594025, :y2 342.1999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 343.1499938964844, :x2 187.2359344959259, :y2 364.7499694824219, :width 911.6666666666666, :height 1138.3333333333333} {:x1 229.10000920295715, :y1 343.4999694824219, :x2 389.3401062488556, :y2 365.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 347.1499938964844, :x2 187.2359344959259, :y2 362.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text " 大 的区别在 于 使用 gl.pixelStorei()设置了像素存储格式。"}, :properties {:color "yellow"}} {:id #uuid "63d23d7f-f830-49e0-bb6b-7a5dab93324f", :page 603, :position {:bounding {:x1 134.18750309944153, :y1 140.21249389648438, :x2 328.28609013557434, :y2 159.4124755859375, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.18750309944153, :y1 140.21249389648438, :x2 179.01410222053528, :y2 159.4124755859375, :width 911.6666666666666, :height 1138.3333333333333} {:x1 190.17500615119934, :y1 140.21249389648438, :x2 328.28609013557434, :y2 159.4124755859375, :width 911.6666666666666, :height 1138.3333333333333} {:x1 190.17500615119934, :y1 143.4124755859375, :x2 206.55725407600403, :y2 156.71249389648438, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "texture = gl.createTexture();"}, :properties {:color "yellow"}} {:id #uuid "63d23d8b-50ee-4285-a9b6-12b968013a27", :page 603, :position {:bounding {:x1 0, :y1 236.8000030517578, :x2 781.4088623523712, :y2 460.3250045776367, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 236.8000030517578, :x2 0, :y2 259.2000045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.82500004768372, :y1 414.3250045776367, :x2 781.4088623523712, :y2 436.7249984741211, :width 911.6666666666666, :height 1138.3333333333333} {:x1 652.2250244617462, :y1 417.2625045776367, :x2 781.4088623523712, :y2 433.0625228881836, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.11249852180481, :y1 436.8750228881836, :x2 185.51077580451965, :y2 459.27501678466797, :width 911.6666666666666, :height 1138.3333333333333} {:x1 197.22500920295715, :y1 437.92501068115234, :x2 309.41710209846497, :y2 460.3250045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.11249852180481, :y1 440.8750228881836, :x2 185.51077580451965, :y2 456.67501068115234, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "用于纹理的图片必须跟当前页面同源，或者是来自启用了跨源资源共享（CORS，Cross-Origin Resource Sharing）的服务器上。"}, :properties {:color "yellow"}} {:id #uuid "63d23d94-079d-429c-b0ae-f62b9a12a6e6", :page 603, :position {:bounding {:x1 143.18750309944153, :y1 554.4500045776367, :x2 206.38750004768372, :y2 576.8499984741211, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 143.18750309944153, :y1 554.4500045776367, :x2 206.38750004768372, :y2 576.8499984741211, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "读取像素"}, :properties {:color "green"}} {:id #uuid "63d23dc9-5215-45cc-8a3d-7dc1f47862c3", :page 603, :position {:bounding {:x1 0, :y1 316.7999954223633, :x2 794.3064453601837, :y2 621.5625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 316.7999954223633, :x2 0, :y2 339.1999931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 552.1211426258087, :y1 576.5999908447266, :x2 720.4116089344025, :y2 599, :width 911.6666666666666, :height 1138.3333333333333} {:x1 745.900012254715, :y1 576.5999908447266, :x2 794.3064453601837, :y2 599, :width 911.6666666666666, :height 1138.3333333333333} {:x1 637.7000000476837, :y1 580.25, :x2 720.4116089344025, :y2 595.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 745.900012254715, :y1 580.5999908447266, :x2 794.3064453601837, :y2 596.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 599.1624908447266, :x2 577.3854401111603, :y2 621.5625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 603.1624908447266, :x2 146.29703068733215, :y2 618.9624938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "读取像素的 readPixels()方法与 OpenGL 中的方法有同样的参数，只不过最后一个参数必须是定型数组"}, :properties {:color "yellow"}} {:id #uuid "63d23df6-03e6-4de1-a511-f5a98d7686bf", :page 603, :position {:bounding {:x1 0, :y1 348.799991607666, :x2 796.8801758289337, :y2 669.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 348.799991607666, :x2 0, :y2 371.1999931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 280.7812683582306, :y1 623.4499969482422, :x2 357.7312500476837, :y2 645.0499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 383.0999939441681, :y1 623.8000030517578, :x2 796.8801758289337, :y2 646.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 383.0999939441681, :y1 627.8000030517578, :x2 796.8801758289337, :y2 643.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750462532043, :y1 647.4125061035156, :x2 163.63614201545715, :y2 669.8125, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "eadPixels()方法的参数包括 x 和 y 坐标、宽度、高度、图像格式、类型和定型数组"}, :properties {:color "yellow"}} {:id #uuid "63d23e09-cd45-46d1-8939-8b45e1fe39f3", :page 603, :position {:bounding {:x1 0, :y1 364.79999351501465, :x2 795.0720703601837, :y2 693.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 364.79999351501465, :x2 0, :y2 387.1999931335449, :width 911.6666666666666, :height 1138.3333333333333} {:x1 700.8959839344025, :y1 647.3999938964844, :x2 795.0720703601837, :y2 669.7999877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 671.1000061035156, :x2 325.4929459095001, :y2 693.5, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "类型参数指的是要存储在定型数组中的数据类型"}, :properties {:color "yellow"}} {:id #uuid "63d23e0f-8e73-4122-9906-39fb4da2e38c", :page 603, :position {:bounding {:x1 447.89229130744934, :y1 647.4125061035156, :x2 678.3029053211212, :y2 669.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 447.89229130744934, :y1 647.4125061035156, :x2 678.3029053211212, :y2 669.8125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 622.1000244617462, :y1 651.0499877929688, :x2 678.3029053211212, :y2 666.0499877929688, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "。图像格式参数几乎总是 gl.RGBA"}, :properties {:color "yellow"}} {:id #uuid "63d23e9d-ca3d-439a-a25e-36053b120c24", :page 603, :position {:bounding {:x1 118.20000004768372, :y1 807.4125061035156, :x2 603.0446655750275, :y2 826.6124877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 118.20000004768372, :y1 807.4125061035156, :x2 214.64151310920715, :y2 826.6124877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 246.17500615119934, :y1 807.4125061035156, :x2 603.0446655750275, :y2 826.6124877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 246.17500615119934, :y1 810.6124877929688, :x2 552.837512254715, :y2 823.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "gl.readPixels(0, 0, 25, 25, gl.RGBA, gl.UNSIGNED_BYTE, pixels);"}, :properties {:color "yellow"}} {:id #uuid "63d23ea5-66ee-4650-bf45-49afd7b6f633", :page 603, :position {:bounding {:x1 0, :y1 492.7999954223633, :x2 794.1000854969025, :y2 880, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 492.7999954223633, :x2 0, :y2 515.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 757.6000244617462, :y1 833.5499877929688, :x2 794.1000854969025, :y2 855.1499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 501.5271179676056, :y1 833.8999938964844, :x2 744.1140625476837, :y2 856.2999877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 757.6000244617462, :y1 837.5499877929688, :x2 794.1000854969025, :y2 852.5499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 509.56248784065247, :y1 837.8999938964844, :x2 744.1140625476837, :y2 853.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 857.6000061035156, :x2 703.05015873909, :y2 880, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 861.6000061035156, :x2 397.3205749988556, :y2 877.3999938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "，并把读到的像素信息保存在 pixels 数组中，其中每个像素的颜色在这个数组中都以 4 个值表示，分别代表红、绿、蓝和透明度值"}, :properties {:color "yellow"}} {:id #uuid "63d23eae-d54a-4c9b-ac8b-bb933a6b97b0", :page 603, :position {:bounding {:x1 291.5215332508087, :y1 928.3999938964844, :x2 718.2129395008087, :y2 950.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 463.7000000476837, :y1 928.3999938964844, :x2 718.2129395008087, :y2 950.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 291.5215332508087, :y1 928.4125061035156, :x2 438.33125615119934, :y2 950.8125305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 355.7000000476837, :y1 932.0500183105469, :x2 438.33125615119934, :y2 947.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "此时调用 readPixels()会得到与清除状态一致的像素数据。"}, :properties {:color "yellow"}} {:id #uuid "63d23ec5-3751-4820-9884-45ffbdeaceea", :page 603, :position {:bounding {:x1 0, :y1 556.8000030517578, :x2 797.7482788562775, :y2 974.5000305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 718.2129395008087, :y1 928.3999938964844, :x2 797.7482788562775, :y2 950.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 578.900012254715, :y1 951.7500305175781, :x2 767.4750854969025, :y2 974.1500549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 952.1000061035156, :x2 552.5187866687775, :y2 974.5000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 578.900012254715, :y1 955.7500305175781, :x2 724.240832567215, :y2 970.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.10000157356262, :y1 956.1000061035156, :x2 552.5187866687775, :y2 971.8999938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 603}, :content {:text "如果想在绘制之后读取像素，则必须使用前面讨论过的 preserveDrawingBuffer 选项初始化 WebGL 上下文"}, :properties {:color "yellow"}} {:id #uuid "63d23eda-518a-4114-b0d5-b244e7215e61", :page 604, :position {:bounding {:x1 193.80000615119934, :y1 126.65000915527344, :x2 368.5041687488556, :y2 155.4499969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.80000615119934, :y1 126.65000915527344, :x2 260.5361511707306, :y2 155.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 272.30000615119934, :y1 126.65000915527344, :x2 368.5041687488556, :y2 155.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 272.30000615119934, :y1 131.4499969482422, :x2 296.86668705940247, :y2 151.4499969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 604}, :content {:text "WebGL1 与 WebGL2"}, :properties {:color "green"}} {:id #uuid "63d23f10-315b-470c-8b93-4b6988b8c13f", :page 604, :position {:bounding {:x1 197.87503361701965, :y1 213.5124969482422, :x2 646.4055664539337, :y2 235.91249084472656, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 197.87503361701965, :y1 213.5124969482422, :x2 646.4055664539337, :y2 235.91249084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 232.87500309944153, :y1 216.46250915527344, :x2 298.1198914051056, :y2 232.2624969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 604}, :content {:text "要在 WebGL1 中使用绘制缓冲区，需要先测试相应扩展后再使用"}, :properties {:color "yellow"}} {:id #uuid "63d23f15-b886-4665-a302-b99b019bbf80", :page 604, :position {:bounding {:x1 149.8999969959259, :y1 361.00000762939453, :x2 807.3146088123322, :y2 383.4000015258789, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 361.00000762939453, :x2 807.3146088123322, :y2 383.4000015258789, :width 911.6666666666666, :height 1138.3333333333333} {:x1 185.48750615119934, :y1 363.9500198364258, :x2 250.73237919807434, :y2 379.75000762939453, :width 911.6666666666666, :height 1138.3333333333333}), :page 604}, :content {:text "而在 WebGL2 中，这里的检测代码就不需要了，因为这个扩展已经直接暴露在上下文对象上了"}, :properties {:color "yellow"}} {:id #uuid "63d23f2d-b86f-4901-99bc-d7b20511416b", :page 606, :position {:bounding {:x1 186.98750615119934, :y1 499.5500030517578, :x2 279.90123295783997, :y2 533.1500091552734, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 186.98750615119934, :y1 499.5500030517578, :x2 279.90123295783997, :y2 533.1500091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 606}, :content {:text "表单基础"}, :properties {:color "green"}} {:id #uuid "63d23f42-3952-4300-9002-7e5e9378ab47", :page 606, :position {:bounding {:x1 149.8999969959259, :y1 541.9500274658203, :x2 811.8768799304962, :y2 564.3500213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8999969959259, :y1 541.9500274658203, :x2 811.8768799304962, :y2 564.3500213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 184.3999969959259, :y1 547.0000152587891, :x2 740.8827393054962, :y2 562.8000030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 606}, :content {:text "Web 表单在 HTML 中以<form>元素表示，在 JavaScript 中则以 HTMLFormElement 类型表示"}, :properties {:color "yellow"}} {:id #uuid "63d24240-e551-4cd7-8f6b-6034b298625b", :page 606, :position {:bounding {:x1 0, :y1 412.8000030517578, :x2 828.8801758289337, :y2 612.6125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 508.01207280158997, :y1 566.6000213623047, :x2 828.8801758289337, :y2 589.0000152587891, :width 911.6666666666666, :height 1138.3333333333333} {:x1 601.587512254715, :y1 570.6000213623047, :x2 828.8801758289337, :y2 586.4000091552734, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 590.2125091552734, :x2 449.57466435432434, :y2 612.6125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000004768372, :y1 594.2125091552734, :x2 287.90001225471497, :y2 610.0125274658203, :width 911.6666666666666, :height 1138.3333333333333}), :page 606}, :content {:text "此拥有与其他 HTML 元素一样的默认属性。不过，HTMLFormElement 也有自己的属性和方法"}, :properties {:color "yellow"}} {:id #uuid "63d242d3-85b1-496f-97bd-af749fdd5774", :page 606, :position {:bounding {:x1 0, :y1 604.8000183105469, :x2 827.2000000476837, :y2 896.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 604.8000183105469, :x2 0, :y2 627.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.88750004768372, :y1 850.1125183105469, :x2 827.2000000476837, :y2 872.5125122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 308.90001225471497, :y1 853.7500305175781, :x2 827.2000000476837, :y2 868.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 392.80000615119934, :y1 873.7000122070312, :x2 488.92808842658997, :y2 896.1000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 873.7125244140625, :x2 371.4531433582306, :y2 896.1125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750309944153, :y1 877.7125244140625, :x2 371.4531433582306, :y2 893.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 606}, :content {:text "有几种方式可以取得对<form>元素的引用。最常用的是将表单当作普通元素为它指定一个 id 属性，从而可以使用 getElementById()来获取表单，"}, :properties {:color "yellow"}} {:id #uuid "63d258ee-e3c5-47f9-9c34-7af835812041", :page 606, :position {:bounding {:x1 199.02463073655963, :y1 932.1625366210938, :x2 626.9843017570674, :y2 954.5625305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 199.02463073655963, :y1 932.1625366210938, :x2 626.9843017570674, :y2 954.5625305175781, :width 918, :height 1146.2413162705666} {:x1 236.42500610277057, :y1 935.800048828125, :x2 366.42500610277057, :y2 950.9000549316406, :width 918, :height 1146.2413162705666}), :page 606}, :content {:text "使用 document.forms 集合可以获取页面上所有的表单元素"}, :properties {:color "yellow"}} {:id #uuid "63d25933-46be-4f45-be8a-a1c7c4c810ba", :page 607, :position {:bounding {:x1 161.81250305101275, :y1 236.7750015258789, :x2 241.84807128831744, :y2 265.5750045776367, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 236.7750015258789, :x2 241.84807128831744, :y2 265.5750045776367, :width 918, :height 1146.2413162705666}), :page 607}, :content {:text "提交表单"}, :properties {:color "green"}} {:id #uuid "63d26b29-8668-486b-add9-b4df5d435ec3", :page 607, :position {:bounding {:x1 333.5466491691768, :y1 301.8125, :x2 791.8292114250362, :y2 324.21250915527344, :width 918, :height 1146.2413162705666}, :rects ({:x1 333.5466491691768, :y1 301.8125, :x2 791.8292114250362, :y2 324.21250915527344, :width 918, :height 1146.2413162705666} {:x1 480.2125122062862, :y1 305.4499969482422, :x2 703.4448120109737, :y2 320.5500030517578, :width 918, :height 1146.2413162705666}), :page 607}, :content {:text "，图片按钮可以使用 type 属性为\"image\"的<input>元素来定义"}, :properties {:color "yellow"}} {:id #uuid "63d26b36-e118-45cc-8f17-40535b81542e", :page 607, :position {:bounding {:x1 0, :y1 92.79999542236328, :x2 791.1786376945674, :y2 324.21250915527344, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 92.79999542236328, :x2 0, :y2 115.20000076293945, :width 918, :height 1146.2413162705666} {:x1 508.1624938957393, :y1 278.0500030517578, :x2 791.1786376945674, :y2 300.4500045776367, :width 918, :height 1146.2413162705666} {:x1 638.9999877922237, :y1 281.6875, :x2 791.1786376945674, :y2 296.7874984741211, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 301.8125, :x2 333.5466491691768, :y2 324.21250915527344, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 305.8125, :x2 246.44343871995807, :y2 321.7250061035156, :width 918, :height 1146.2413162705666}), :page 607}, :content {:text "提交按钮可以使用 type 属性为\"submit\"的<input>或<button>元素来定义"}, :properties {:color "yellow"}} {:id #uuid "63d26b83-cc5e-40e6-9abe-8f2711010408", :page 607, :position {:bounding {:x1 117.60000152513385, :y1 561.5125122070312, :x2 594.7242309562862, :y2 583.9125061035156, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 561.5125122070312, :x2 594.7242309562862, :y2 583.9125061035156, :width 918, :height 1146.2413162705666} {:x1 488.1624938957393, :y1 565.1375122070312, :x2 545.6625244133174, :y2 580.2375183105469, :width 918, :height 1146.2413162705666}), :page 607}, :content {:text "以这种方式提交表单会在向服务器发送请求之前触发 submit 事件。"}, :properties {:color "yellow"}} {:id #uuid "63d26b9b-7e0b-4769-841b-6a404a213c9d", :page 607, :position {:bounding {:x1 0, :y1 412.8000030517578, :x2 802.4984008781612, :y2 787.8125, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.20001220703125, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 741.6500244140625, :x2 275.0479614250362, :y2 764.0499877929688, :width 918, :height 1146.2413162705666} {:x1 302.6875183098018, :y1 741.6500244140625, :x2 802.4984008781612, :y2 764.0499877929688, :width 918, :height 1146.2413162705666} {:x1 149.52499694749713, :y1 745.6500244140625, :x2 275.0479614250362, :y2 761.5625, :width 918, :height 1146.2413162705666} {:x1 302.6875183098018, :y1 745.6500244140625, :x2 802.4984008781612, :y2 761.5625, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 765.4125366210938, :x2 229.96809692308307, :y2 787.8125, :width 918, :height 1146.2413162705666}), :page 607}, :content {:text "调用 preventDefault()方法可以阻止表单提交。通常，在表单数据无效以及不应该发送到服务器时可以这样处理。"}, :properties {:color "yellow"}} {:id #uuid "63d26bb3-f5bc-4670-baae-ecaafb7dcb2a", :page 607, :position {:bounding {:x1 117.60000152513385, :y1 913.7375183105469, :x2 781.5392333976924, :y2 936.1375122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 913.7375183105469, :x2 213.95650024339557, :y2 936.1375122070312, :width 918, :height 1146.2413162705666} {:x1 225.94999999925494, :y1 913.7375183105469, :x2 781.5392333976924, :y2 936.1375122070312, :width 918, :height 1146.2413162705666} {:x1 149.42500610277057, :y1 917.7375183105469, :x2 213.95650024339557, :y2 933.6500244140625, :width 918, :height 1146.2413162705666} {:x1 225.94999999925494, :y1 917.7375183105469, :x2 379.01249999925494, :y2 933.6500244140625, :width 918, :height 1146.2413162705666}), :page 607}, :content {:text "通过 submit()提交表单时，submit 事件不会触发。因此在调用这个方法前要先做数据验证。"}, :properties {:color "yellow"}} {:id #uuid "63d26bf1-8342-4442-884d-39bf7fcaf2d4", :page 607, :position {:bounding {:x1 0, :y1 572.8000335693359, :x2 801.6570922844112, :y2 1031.3125305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 572.8000335693359, :x2 0, :y2 595.2000350952148, :width 918, :height 1146.2413162705666} {:x1 430.6555358879268, :y1 985.1375427246094, :x2 801.6570922844112, :y2 1007.5375366210938, :width 918, :height 1146.2413162705666} {:x1 85.69999999925494, :y1 1008.9125366210938, :x2 534.8227416984737, :y2 1031.3125305175781, :width 918, :height 1146.2413162705666} {:x1 85.69999999925494, :y1 1012.9125366210938, :x2 292.7125122062862, :y2 1028.8250427246094, :width 918, :height 1146.2413162705666}), :page 607}, :content {:text "解决这个问题主要有两种方式：在表单提交后禁用提交按钮，或者通过 onsubmit 事件处理程序取消之后的表单提交"}, :properties {:color "yellow"}} {:id #uuid "63d26bf6-b4bd-4a68-afd4-4863993db3fe", :page 608, :position {:bounding {:x1 195.13749999925494, :y1 126.21249389648438, :x2 275.1730834953487, :y2 155.01254272460938, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 126.21249389648438, :x2 275.1730834953487, :y2 155.01254272460938, :width 918, :height 1146.2413162705666}), :page 608}, :content {:text "重置表单"}, :properties {:color "green"}} {:id #uuid "63d26deb-0645-4b14-b7e0-8b1ae39b0494", :page 608, :position {:bounding {:x1 0, :y1 167.38751220703125, :x2 825.4434692375362, :y2 275.20001220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 382.01249999925494, :y1 167.38751220703125, :x2 651.4197875969112, :y2 189.78750610351562, :width 918, :height 1146.2413162705666} {:x1 664.7750122062862, :y1 167.38751220703125, :x2 825.4434692375362, :y2 189.78750610351562, :width 918, :height 1146.2413162705666} {:x1 513.2375366203487, :y1 171.02499389648438, :x2 651.4197875969112, :y2 186.125, :width 918, :height 1146.2413162705666} {:x1 664.7750122062862, :y1 171.38751220703125, :x2 825.4434692375362, :y2 187.30001831054688, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 191.25, :x2 199.16838378831744, :y2 213.64999389648438, :width 918, :height 1146.2413162705666} {:x1 0, :y1 252.80001831054688, :x2 0, :y2 275.20001220703125, :width 918, :height 1146.2413162705666}), :page 608}, :content {:text "重置按钮可以使用 type 属性为\"reset\"的<input>或<button>元素来创建"}, :properties {:color "yellow"}} {:id #uuid "63d26e2a-c94b-4b1b-bfe3-996af622f35a", :page 608, :position {:bounding {:x1 0, :y1 302.72501373291016, :x2 836.8622924797237, :y2 371.2000045776367, :width 918, :height 1146.2413162705666}, :rects ({:x1 358.31010742112994, :y1 302.72501373291016, :x2 836.8622924797237, :y2 325.12500762939453, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 326.48751068115234, :x2 151.10336608812213, :y2 348.8875045776367, :width 918, :height 1146.2413162705666} {:x1 0, :y1 348.80001068115234, :x2 0, :y2 371.2000045776367, :width 918, :height 1146.2413162705666}), :page 608}, :content {:text "表单重置后，所有表单字段都会重置回页面第一次渲染时各自拥有的值。"}, :properties {:color "yellow"}} {:id #uuid "63d26e48-8603-450d-b84b-1555a2476fdd", :page 608, :position {:bounding {:x1 195.13749999925494, :y1 729.6750183105469, :x2 275.1730834953487, :y2 758.4750061035156, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 729.6750183105469, :x2 275.1730834953487, :y2 758.4750061035156, :width 918, :height 1146.2413162705666}), :page 608}, :content {:text "表单字段"}, :properties {:color "green"}} {:id #uuid "63d26ea6-42e4-4240-a01b-713b52ea7363", :page 608, :position {:bounding {:x1 0, :y1 620.8000183105469, :x2 834.5129272453487, :y2 816.0500183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 620.8000183105469, :x2 0, :y2 643.2000122070312, :width 918, :height 1146.2413162705666} {:x1 674.3218872062862, :y1 770.9500122070312, :x2 834.5129272453487, :y2 793.3500061035156, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 794.4500122070312, :x2 434.9967224113643, :y2 816.0500183105469, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 798.4500122070312, :x2 191.70288391038775, :y2 813.5500183105469, :width 918, :height 1146.2413162705666}), :page 608}, :content {:text "所有表单元素都是表单 elements 属性（元素集合）中包含的一个值"}, :properties {:color "yellow"}} {:id #uuid "63d26edf-f702-4d54-9f26-bd79930c414d", :page 608, :position {:bounding {:x1 0, :y1 652.8000183105469, :x2 826.2904541008174, :y2 864.7375183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 652.8000183105469, :x2 0, :y2 675.2000122070312, :width 918, :height 1146.2413162705666} {:x1 760.0375244133174, :y1 818.2125244140625, :x2 826.2904541008174, :y2 839.8125305175781, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 842.3375244140625, :x2 822.4416992180049, :y2 864.7375183105469, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 846.3375244140625, :x2 742.1913940422237, :y2 862.2500305175781, :width 918, :height 1146.2413162705666}), :page 608}, :content {:text "elements集合中的每个字段都以它们在 HTML 标记中出现的次序保存，可以通过索引位置和 name 属性来访问"}, :properties {:color "yellow"}} {:id #uuid "63d26f10-757f-4e6a-8802-4b451654fcb1", :page 609, :position {:bounding {:x1 0, :y1 12.800003051757812, :x2 801.8977539055049, :y2 173.01251220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 12.800003051757812, :x2 0, :y2 35.19999694824219, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 128.01251220703125, :x2 801.8977539055049, :y2 150.41250610351562, :width 918, :height 1146.2413162705666} {:x1 360.3750183098018, :y1 131.64999389648438, :x2 801.8977539055049, :y2 147.5625, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 151.41250610351562, :x2 198.85574645921588, :y2 173.01251220703125, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 155.41250610351562, :x2 198.85574645921588, :y2 170.51251220703125, :width 918, :height 1146.2413162705666}), :page 609}, :content {:text "如果多个表单控件使用了同一个 name，比如像单选按钮那样，则会返回包含所有同名元素的 HTMLCollection"}, :properties {:color "yellow"}} {:id #uuid "63d26f75-56dd-410f-8ac8-9ea4d21e9424", :page 609, :position {:bounding {:x1 0, :y1 300.8000030517578, :x2 766.6973144523799, :y2 558.6374969482422, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 300.8000030517578, :x2 0, :y2 323.1999969482422, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 512.4625091552734, :x2 379.9951354973018, :y2 534.8625030517578, :width 918, :height 1146.2413162705666} {:x1 400.6624938957393, :y1 512.4625091552734, :x2 766.6973144523799, :y2 534.8625030517578, :width 918, :height 1146.2413162705666} {:x1 260.88749999925494, :y1 516.0999908447266, :x2 379.9951354973018, :y2 531.1999969482422, :width 918, :height 1146.2413162705666} {:x1 400.6624938957393, :y1 516.4625091552734, :x2 766.6973144523799, :y2 532.3750152587891, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 536.2375030517578, :x2 229.94888610765338, :y2 558.6374969482422, :width 918, :height 1146.2413162705666}), :page 609}, :content {:text "以上代码表明，使用 form.elements[0]获取的表单的第一个字段就是 form.elements[\"color\"]中包含的第一个元素"}, :properties {:color "yellow"}} {:id #uuid "63d26f83-9d78-476c-8732-321e1015a2f1", :page 609, :position {:bounding {:x1 0, :y1 332.8000030517578, :x2 749.4501831047237, :y2 626.4000091552734, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 332.8000030517578, :x2 0, :y2 355.2000045776367, :width 918, :height 1146.2413162705666} {:x1 491.28935546800494, :y1 581.4375152587891, :x2 583.1507446281612, :y2 603.8375091552734, :width 918, :height 1146.2413162705666} {:x1 593.7875244133174, :y1 581.4375152587891, :x2 749.4501831047237, :y2 603.8375091552734, :width 918, :height 1146.2413162705666} {:x1 521.7750122062862, :y1 585.4375152587891, :x2 583.1507446281612, :y2 601.3500061035156, :width 918, :height 1146.2413162705666} {:x1 593.7875244133174, :y1 585.4375152587891, :x2 749.4501831047237, :y2 601.3500061035156, :width 918, :height 1146.2413162705666} {:x1 133.51249999925494, :y1 603.6375122070312, :x2 194.25973815843463, :y2 625.2375030517578, :width 918, :height 1146.2413162705666} {:x1 215.07499999925494, :y1 604.0000152587891, :x2 391.4472839348018, :y2 626.4000091552734, :width 918, :height 1146.2413162705666} {:x1 133.51249999925494, :y1 607.6375122070312, :x2 194.25973815843463, :y2 622.7375030517578, :width 918, :height 1146.2413162705666}), :page 609}, :content {:text "比如 form[0]这种使用索引和 form[\"color\"]这种使用字段名字的方式"}, :properties {:color "yellow"}} {:id #uuid "63d26f88-68dd-4dc5-97f4-eb98973e0df0", :page 609, :position {:bounding {:x1 135.32499999925494, :y1 676.1375122070312, :x2 278.70378417894244, :y2 698.5375213623047, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.32499999925494, :y1 676.1375122070312, :x2 278.70378417894244, :y2 698.5375213623047, :width 918, :height 1146.2413162705666}), :page 609}, :content {:text "表单字段的公共属性"}, :properties {:color "green"}} {:id #uuid "63d27009-b15a-4801-8715-9c40b547462f", :page 609, :position {:bounding {:x1 117.60000152513385, :y1 698.4375152587891, :x2 546.0295288078487, :y2 720.8500213623047, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 698.4375152587891, :x2 203.44621581956744, :y2 720.8375091552734, :width 918, :height 1146.2413162705666} {:x1 224.23750610277057, :y1 698.4500122070312, :x2 546.0295288078487, :y2 720.8500213623047, :width 918, :height 1146.2413162705666} {:x1 133.51249999925494, :y1 702.0875091552734, :x2 203.44621581956744, :y2 717.1875152587891, :width 918, :height 1146.2413162705666}), :page 609}, :content {:text "除<fieldset>元素以外，所有表单字段都有一组同样的属性"}, :properties {:color "yellow"}} {:id #uuid "63d27034-7cbd-48ef-b505-515ab4381cab", :page 610, :position {:bounding {:x1 0, :y1 391.6500015258789, :x2 828.4012939445674, :y2 437.7999954223633, :width 918, :height 1146.2413162705666}, :rects ({:x1 279.4278442375362, :y1 391.6500015258789, :x2 828.4012939445674, :y2 414.0499954223633, :width 918, :height 1146.2413162705666} {:x1 778.1625244133174, :y1 395.2750015258789, :x2 828.4012939445674, :y2 410.37500762939453, :width 918, :height 1146.2413162705666} {:x1 0, :y1 412.7999954223633, :x2 0, :y2 435.2000198364258, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 415.4000015258789, :x2 215.22517700120807, :y2 437.7999954223633, :width 918, :height 1146.2413162705666}), :page 610}, :content {:text "对此，常见的解决方案是第一次点击之后禁用提交按钮。可以通过监听 submit事件来实现。"}, :properties {:color "yellow"}} {:id #uuid "63d2719e-2d8b-4c84-8582-4438aa2fef34", :page 610, :position {:bounding {:x1 0, :y1 588.8000183105469, :x2 833.6252319328487, :y2 689.9375305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 588.8000183105469, :x2 0, :y2 611.2000122070312, :width 918, :height 1146.2413162705666} {:x1 580.9120971672237, :y1 643.6750183105469, :x2 833.6252319328487, :y2 666.0750122070312, :width 918, :height 1146.2413162705666} {:x1 599.3249999992549, :y1 647.3125305175781, :x2 833.6252319328487, :y2 662.4125366210938, :width 918, :height 1146.2413162705666} {:x1 348.4000122062862, :y1 667.1750183105469, :x2 502.16411132737994, :y2 689.5750122070312, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 667.5375366210938, :x2 337.21724243089557, :y2 689.9375305175781, :width 918, :height 1146.2413162705666} {:x1 348.4000122062862, :y1 671.1750183105469, :x2 478.2115356437862, :y2 687.0874938964844, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 671.5375366210938, :x2 337.21724243089557, :y2 687.4500122070312, :width 918, :height 1146.2413162705666}), :page 610}, :content {:text "当 submit 事件触发时，代码会取得提交按钮，然后将其 disabled 属性设置为 true。"}, :properties {:color "yellow"}} {:id #uuid "63d271e3-9da3-4b0f-8f7d-cf75e4bb5507", :page 610, :position {:bounding {:x1 0, :y1 620.8000144958496, :x2 836.5154296867549, :y2 737.4750213623047, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 620.8000144958496, :x2 0, :y2 643.2000122070312, :width 918, :height 1146.2413162705666} {:x1 659.1671630851924, :y1 691.3000106811523, :x2 836.5154296867549, :y2 713.7000122070312, :width 918, :height 1146.2413162705666} {:x1 430.67500610277057, :y1 714.7000122070312, :x2 684.7313110344112, :y2 737.1000061035156, :width 918, :height 1146.2413162705666} {:x1 697.4125244133174, :y1 714.7000122070312, :x2 737.1061889640987, :y2 736.3000183105469, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 715.0750122070312, :x2 417.9937927238643, :y2 737.4750213623047, :width 918, :height 1146.2413162705666} {:x1 430.67500610277057, :y1 718.7000122070312, :x2 684.7313110344112, :y2 733.8000183105469, :width 918, :height 1146.2413162705666} {:x1 697.4125244133174, :y1 718.7000122070312, :x2 700.4374877922237, :y2 733.8000183105469, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 719.0750122070312, :x2 417.9937927238643, :y2 734.9875183105469, :width 918, :height 1146.2413162705666}), :page 610}, :content {:text "有些浏览器会在触发表单的 submit 事件前先触发提交按钮的 click 事件，有些浏览器则会后触发 click 事件"}, :properties {:color "yellow"}} {:id #uuid "63d27232-a3b0-4c40-ba20-20786711ed94", :page 611, :position {:bounding {:x1 135.32499999925494, :y1 180.63750839233398, :x2 278.70378417894244, :y2 203.03750228881836, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.32499999925494, :y1 180.63750839233398, :x2 278.70378417894244, :y2 203.03750228881836, :width 918, :height 1146.2413162705666}), :page 611}, :content {:text "表单字段的公共方法"}, :properties {:color "green"}} {:id #uuid "63d27249-7d90-4486-b1bf-39acc5dd61d4", :page 611, :position {:bounding {:x1 0, :y1 188.79999923706055, :x2 799.4164306633174, :y2 428.6750297546387, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 188.79999923706055, :x2 0, :y2 211.19999313354492, :width 918, :height 1146.2413162705666} {:x1 657.0912353508174, :y1 382.8750114440918, :x2 799.4164306633174, :y2 405.2750053405762, :width 918, :height 1146.2413162705666} {:x1 731.2375366203487, :y1 385.8125114440918, :x2 799.4164306633174, :y2 401.7250175476074, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 406.2750053405762, :x2 137.06068725511432, :y2 427.8750114440918, :width 918, :height 1146.2413162705666} {:x1 149.12500305101275, :y1 406.2750053405762, :x2 233.25854797288775, :y2 428.6750297546387, :width 918, :height 1146.2413162705666} {:x1 264.2125122062862, :y1 406.2750053405762, :x2 477.16597289964557, :y2 427.8750114440918, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 410.2750053405762, :x2 137.06068725511432, :y2 425.3750114440918, :width 918, :height 1146.2413162705666} {:x1 149.12500305101275, :y1 410.2750053405762, :x2 233.25854797288775, :y2 426.1875114440918, :width 918, :height 1146.2413162705666} {:x1 264.2125122062862, :y1 410.2750053405762, :x2 267.23750610277057, :y2 425.3750114440918, :width 918, :height 1146.2413162705666}), :page 611}, :content {:text "该字段被 CSS 属性 display 或 visibility 隐藏了，以上代码就会出错。"}, :properties {:color "yellow"}} {:id #uuid "63d2724f-6b0b-4e90-b4c0-e07459d6d778", :page 611, :position {:bounding {:x1 135.32499999925494, :y1 1008.3375549316406, :x2 278.70378417894244, :y2 1030.7375183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.32499999925494, :y1 1008.3375549316406, :x2 278.70378417894244, :y2 1030.7375183105469, :width 918, :height 1146.2413162705666}), :page 611}, :content {:text "表单字段的公共事件"}, :properties {:color "green"}} {:id #uuid "63d2727f-3cd0-4fd7-a252-7a9e2d6346a0", :page 611, :position {:bounding {:x1 0, :y1 428.8000030517578, :x2 792.4865600578487, :y2 765.4625091552734, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 428.8000030517578, :x2 0, :y2 451.1999969482422, :width 918, :height 1146.2413162705666} {:x1 674.7499877922237, :y1 718.8375091552734, :x2 792.4865600578487, :y2 741.2375335693359, :width 918, :height 1146.2413162705666} {:x1 461.55000610277057, :y1 719.1999969482422, :x2 664.2858764640987, :y2 741.6000213623047, :width 918, :height 1146.2413162705666} {:x1 593.1874877922237, :y1 722.8375091552734, :x2 664.2858764640987, :y2 737.9374847412109, :width 918, :height 1146.2413162705666} {:x1 674.7499877922237, :y1 722.8375091552734, :x2 792.4865600578487, :y2 737.9374847412109, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 743.0624847412109, :x2 187.1848022453487, :y2 765.4625091552734, :width 918, :height 1146.2413162705666} {:x1 201.88749999925494, :y1 743.0624847412109, :x2 362.3060180656612, :y2 765.4625091552734, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 747.0624847412109, :x2 187.1848022453487, :y2 762.9750213623047, :width 918, :height 1146.2413162705666}), :page 611}, :content {:text "上面的代码只会在 autofocus 属性不等于 true时调用 focus()方法，以确保向前兼容"}, :properties {:color "yellow"}} {:id #uuid "63d272a6-ca65-4bea-a89c-74e41ee926ec", :page 612, :position {:bounding {:x1 171.37500305101275, :y1 127.6500244140625, :x2 383.9973022453487, :y2 149.25, :width 918, :height 1146.2413162705666}, :rects ({:x1 171.37500305101275, :y1 127.6500244140625, :x2 383.9973022453487, :y2 149.25, :width 918, :height 1146.2413162705666}), :page 612}, :content {:text "blur：在字段失去焦点时触发"}, :properties {:color "yellow"}} {:id #uuid "63d272ae-51ae-4080-bab8-e0d7ccc8c574", :page 612, :position {:bounding {:x1 0, :y1 151.4124755859375, :x2 814.2095214836299, :y2 275.20001220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 171.37500305101275, :y1 151.4124755859375, :x2 419.8116333000362, :y2 173.81243896484375, :width 918, :height 1146.2413162705666} {:x1 435.5999938957393, :y1 151.4124755859375, :x2 814.2095214836299, :y2 173.81243896484375, :width 918, :height 1146.2413162705666} {:x1 225.75000305101275, :y1 155.4124755859375, :x2 419.8116333000362, :y2 171.324951171875, :width 918, :height 1146.2413162705666} {:x1 435.5999938957393, :y1 155.4124755859375, :x2 814.2095214836299, :y2 171.324951171875, :width 918, :height 1146.2413162705666} {:x1 171.37500305101275, :y1 175.17498779296875, :x2 230.30972595140338, :y2 196.7750244140625, :width 918, :height 1146.2413162705666} {:x1 243.87500305101275, :y1 175.5374755859375, :x2 468.3968688957393, :y2 197.9375, :width 918, :height 1146.2413162705666} {:x1 171.37500305101275, :y1 179.17498779296875, :x2 230.30972595140338, :y2 194.2750244140625, :width 918, :height 1146.2413162705666} {:x1 0, :y1 252.79998779296875, :x2 0, :y2 275.20001220703125, :width 918, :height 1146.2413162705666}), :page 612}, :content {:text "change ： 在 <input> 和 <textarea> 元 素 的 value 发 生 变 化 且 失 去 焦 点 时 触 发 ， 或 者 在<select>元素中选中项发生变化时触发。"}, :properties {:color "yellow"}} {:id #uuid "63d27400-9e8a-418a-91de-2ed2bf06c181", :page 612, :position {:bounding {:x1 176.18947143480182, :y1 199.04999995231628, :x2 409.0936462394893, :y2 220.6500060558319, :width 918, :height 1146.2413162705666}, :rects ({:x1 176.18947143480182, :y1 199.04999995231628, :x2 409.0936462394893, :y2 220.6500060558319, :width 918, :height 1146.2413162705666}), :page 612}, :content {:text "ocus：在字段获得焦点时触发。"}, :properties {:color "yellow"}} {:id #uuid "63d27416-5814-4979-8f99-ddb62d525b22", :page 612, :position {:bounding {:x1 299.9625122062862, :y1 341.72501826286316, :x2 660.7485229484737, :y2 364.12501215934753, :width 918, :height 1146.2413162705666}, :rects ({:x1 299.9625122062862, :y1 341.72501826286316, :x2 660.7485229484737, :y2 364.12501215934753, :width 918, :height 1146.2413162705666} {:x1 299.9625122062862, :y1 345.72501826286316, :x2 354.6401550285518, :y2 360.82499384880066, :width 918, :height 1146.2413162705666}), :page 612}, :content {:text "change 事件通常用于验证用户在字段中输入的内容"}, :properties {:color "yellow"}} {:id #uuid "63d27433-5e3d-4f13-bd34-3437da0982c7", :page 612, :position {:bounding {:x1 188.27499694749713, :y1 935.0375061035156, :x2 304.3631774894893, :y2 968.6375427246094, :width 918, :height 1146.2413162705666}, :rects ({:x1 188.27499694749713, :y1 935.0375061035156, :x2 304.3631774894893, :y2 968.6375427246094, :width 918, :height 1146.2413162705666}), :page 612}, :content {:text "文本框编程"}, :properties {:color "green"}} {:id #uuid "63d2743c-f400-4e44-9fcb-eaf11e33f69b", :page 612, :position {:bounding {:x1 410.94502563402057, :y1 983.1125183105469, :x2 584.4988891594112, :y2 1005.5125427246094, :width 918, :height 1146.2413162705666}, :rects ({:x1 410.94502563402057, :y1 983.1125183105469, :x2 584.4988891594112, :y2 1005.5125427246094, :width 918, :height 1146.2413162705666} {:x1 489.1624938957393, :y1 986.7500305175781, :x2 544.4367553703487, :y2 1001.8500366210938, :width 918, :height 1146.2413162705666}), :page 612}, :content {:text "：单行使用<input>元素"}, :properties {:color "yellow"}} {:id #uuid "63d27442-9d0a-434a-ba1c-d54bf7d59b08", :page 612, :position {:bounding {:x1 600.3920776359737, :y1 983.1125183105469, :x2 785.6546508781612, :y2 1005.5125427246094, :width 918, :height 1146.2413162705666}, :rects ({:x1 600.3920776359737, :y1 983.1125183105469, :x2 738.1989624015987, :y2 1005.5125427246094, :width 918, :height 1146.2413162705666} {:x1 753.9999877922237, :y1 983.1125183105469, :x2 785.6546508781612, :y2 1005.5125427246094, :width 918, :height 1146.2413162705666} {:x1 663.2750122062862, :y1 986.7500305175781, :x2 738.1989624015987, :y2 1001.8500366210938, :width 918, :height 1146.2413162705666}), :page 612}, :content {:text "多行使用<textarea>元素"}, :properties {:color "yellow"}} {:id #uuid "63d27621-6c54-4b49-ae98-6abe8136417c", :page 613, :position {:bounding {:x1 529.9999877922237, :y1 128.01251220703125, :x2 792.4203979484737, :y2 150.41250610351562, :width 918, :height 1146.2413162705666}, :rects ({:x1 529.9999877922237, :y1 128.01251220703125, :x2 792.4203979484737, :y2 150.41250610351562, :width 918, :height 1146.2413162705666} {:x1 534.0749999992549, :y1 131.64999389648438, :x2 582.5250122062862, :y2 146.75, :width 918, :height 1146.2413162705666}), :page 613}, :content {:text " value 属性用于指定文本框的初始值"}, :properties {:color "yellow"}} {:id #uuid "63d2767a-aec4-4584-b63d-2d88346bc92e", :page 613, :position {:bounding {:x1 340.4375183098018, :y1 328.6374816894531, :x2 707.8103515617549, :y2 351.3999938964844, :width 918, :height 1146.2413162705666}, :rects ({:x1 340.4375183098018, :y1 328.6374816894531, :x2 415.3614379875362, :y2 350.2375183105469, :width 918, :height 1146.2413162705666} {:x1 431.1624938957393, :y1 329.0000305175781, :x2 707.8103515617549, :y2 351.3999938964844, :width 918, :height 1146.2413162705666} {:x1 431.1624938957393, :y1 333.0000305175781, :x2 536.8131591789424, :y2 348.9125061035156, :width 918, :height 1146.2413162705666}), :page 613}, :content {:text "<textarea>不能在 HTML 中指定最大允许的字符数"}, :properties {:color "yellow"}} {:id #uuid "63d27692-494c-49d6-84dd-63e4d10ebec7", :page 613, :position {:bounding {:x1 117.60000152513385, :y1 472.9000053405762, :x2 548.1364013664424, :y2 495.29999923706055, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 472.9000053405762, :x2 548.1364013664424, :y2 495.29999923706055, :width 918, :height 1146.2413162705666} {:x1 185.27499694749713, :y1 476.5375175476074, :x2 412.8519470207393, :y2 492.45002365112305, :width 918, :height 1146.2413162705666}), :page 613}, :content {:text "应该使用 value 属性，而不是标准 DOM 方法读写文本框的值"}, :properties {:color "yellow"}} {:id #uuid "63d27698-5937-4cc3-aabd-f55ca100d2be", :page 613, :position {:bounding {:x1 161.81250305101275, :y1 557.8875274658203, :x2 241.84807128831744, :y2 586.6875152587891, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 557.8875274658203, :x2 241.84807128831744, :y2 586.6875152587891, :width 918, :height 1146.2413162705666}), :page 613}, :content {:text "选择文本"}, :properties {:color "green"}} {:id #uuid "63d276a3-442f-4913-b829-cffdf884454e", :page 613, :position {:bounding {:x1 117.60000152513385, :y1 599.1625061035156, :x2 705.7697631828487, :y2 621.5625, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 599.1625061035156, :x2 365.24357910081744, :y2 621.5625, :width 918, :height 1146.2413162705666} {:x1 385.44999999925494, :y1 599.1625061035156, :x2 705.7697631828487, :y2 621.5625, :width 918, :height 1146.2413162705666} {:x1 312.94999999925494, :y1 602.8000183105469, :x2 365.24357910081744, :y2 617.8999938964844, :width 918, :height 1146.2413162705666}), :page 613}, :content {:text "两种文本框都支持一个名为 select()的方法，此方法用于全部选中文本框中的文本"}, :properties {:color "yellow"}} {:id #uuid "63d2781c-f50c-4638-be66-d4ec605fb0e1", :page 613, :position {:bounding {:x1 130.88749999925494, :y1 877.5250244140625, :x2 226.05704040452838, :y2 900.2875366210938, :width 918, :height 1146.2413162705666}, :rects ({:x1 189.69999999925494, :y1 877.5250244140625, :x2 226.05704040452838, :y2 899.1250305175781, :width 918, :height 1146.2413162705666} {:x1 130.88749999925494, :y1 877.8875427246094, :x2 177.25332946702838, :y2 900.2875366210938, :width 918, :height 1146.2413162705666} {:x1 135.32499999925494, :y1 881.5250244140625, :x2 177.25332946702838, :y2 896.6250305175781, :width 918, :height 1146.2413162705666} {:x1 189.69999999925494, :y1 881.5250244140625, :x2 192.72500915452838, :y2 896.6250305175781, :width 918, :height 1146.2413162705666}), :page 613}, :content {:text " select 事件"}, :properties {:color "green"}} {:id #uuid "63d27852-c292-43a5-a49c-684ef59e72e1", :page 614, :position {:bounding {:x1 168.66250915452838, :y1 173.77499389648438, :x2 264.3119995109737, :y2 196.17498779296875, :width 918, :height 1146.2413162705666}, :rects ({:x1 168.66250915452838, :y1 173.77499389648438, :x2 264.3119995109737, :y2 196.17498779296875, :width 918, :height 1146.2413162705666}), :page 614}, :content {:text "取得选中文本"}, :properties {:color "green"}} {:id #uuid "63d2788b-623f-48bc-86f4-1a4d88bdb15a", :page 614, :position {:bounding {:x1 0, :y1 219.4875030517578, :x2 840.7875244133174, :y2 323.20001220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 698.9250366203487, :y1 219.4875030517578, :x2 810.0250122062862, :y2 241.8874969482422, :width 918, :height 1146.2413162705666} {:x1 366.50825805589557, :y1 219.85000610351562, :x2 672.7310058586299, :y2 242.25, :width 918, :height 1146.2413162705666} {:x1 824.7875244133174, :y1 219.85000610351562, :x2 840.7875244133174, :y2 242.25, :width 918, :height 1146.2413162705666} {:x1 578.4875366203487, :y1 223.4875030517578, :x2 672.7310058586299, :y2 238.58750915527344, :width 918, :height 1146.2413162705666} {:x1 698.9250366203487, :y1 223.4875030517578, :x2 810.0250122062862, :y2 239.40000915527344, :width 918, :height 1146.2413162705666} {:x1 824.7875244133174, :y1 223.85000610351562, :x2 840.7875244133174, :y2 239.76251220703125, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 243.6125030517578, :x2 325.4593383781612, :y2 266.01251220703125, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 247.6125030517578, :x2 274.5226013176143, :y2 263.52500915527344, :width 918, :height 1146.2413162705666} {:x1 0, :y1 300.8000030517578, :x2 0, :y2 323.20001220703125, :width 918, :height 1146.2413162705666}), :page 614}, :content {:text "扩展为文本框添加了两个属性：selectionStart 和 selectionEnd。这两个属性包含基于 0 的数值"}, :properties {:color "yellow"}} {:id #uuid "63d278bd-68ef-4e28-b686-2429b7591021", :page 614, :position {:bounding {:x1 150.92500610277057, :y1 462.96250915527344, :x2 711.6071655265987, :y2 485.7375030517578, :width 918, :height 1146.2413162705666}, :rects ({:x1 675.0500366203487, :y1 462.96250915527344, :x2 711.6071655265987, :y2 484.56251525878906, :width 918, :height 1146.2413162705666} {:x1 150.92500610277057, :y1 463.33750915527344, :x2 654.7656127922237, :y2 485.7375030517578, :width 918, :height 1146.2413162705666} {:x1 202.68750305101275, :y1 466.27500915527344, :x2 654.7656127922237, :y2 482.18751525878906, :width 918, :height 1146.2413162705666} {:x1 675.0500366203487, :y1 466.96250915527344, :x2 678.0749999992549, :y2 482.06251525878906, :width 918, :height 1146.2413162705666}), :page 614}, :content {:text "老版本 IE 中有一个包含整个文档中文本选择信息的 document.selection 对象"}, :properties {:color "yellow"}} {:id #uuid "63d27900-8187-4974-bd84-35e3ff7c1c27", :page 614, :position {:bounding {:x1 168.67500610277057, :y1 728, :x2 264.3244812004268, :y2 750.3999938964844, :width 918, :height 1146.2413162705666}, :rects ({:x1 168.67500610277057, :y1 728, :x2 264.3244812004268, :y2 750.3999938964844, :width 918, :height 1146.2413162705666}), :page 614}, :content {:text "部分选中文本"}, :properties {:color "green"}} {:id #uuid "63d27921-38bb-4261-8034-96dffeab3a20", :page 614, :position {:bounding {:x1 0, :y1 700.8000259399414, :x2 823.2409545890987, :y2 796.4750213623047, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 700.8000259399414, :x2 0, :y2 723.2000274658203, :width 918, :height 1146.2413162705666} {:x1 547.5999633781612, :y1 750.3000335693359, :x2 685.5561401359737, :y2 772.7000274658203, :width 918, :height 1146.2413162705666} {:x1 705.8625366203487, :y1 750.3125305175781, :x2 823.2409545890987, :y2 772.7125244140625, :width 918, :height 1146.2413162705666} {:x1 625.2624999992549, :y1 754.3000335693359, :x2 685.5561401359737, :y2 770.2125244140625, :width 918, :height 1146.2413162705666} {:x1 705.8625366203487, :y1 754.3125305175781, :x2 823.2409545890987, :y2 770.2250213623047, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 774.0750274658203, :x2 345.59407348558307, :y2 796.4750213623047, :width 918, :height 1146.2413162705666} {:x1 374.8750183098018, :y1 774.0750274658203, :x2 597.1808959953487, :y2 796.4750213623047, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 778.0750274658203, :x2 345.59407348558307, :y2 793.9875335693359, :width 918, :height 1146.2413162705666}), :page 614}, :content {:text "现在，除了 select()方法之外，Firefox最早实现的 setSelectionRange()方法也可以在所有文本框中使用"}, :properties {:color "yellow"}} {:id #uuid "63d2795f-ed3b-4e6e-bf29-8892d4a4b745", :page 615, :position {:bounding {:x1 0, :y1 60.79999923706055, :x2 801.7079956047237, :y2 244.41250610351562, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 60.79999923706055, :x2 0, :y2 83.20000457763672, :width 918, :height 1146.2413162705666} {:x1 317.98750610277057, :y1 199.0500030517578, :x2 402.4150573723018, :y2 221.4499969482422, :width 918, :height 1146.2413162705666} {:x1 418.3750183098018, :y1 199.41250610351562, :x2 801.7079956047237, :y2 221.8125, :width 918, :height 1146.2413162705666} {:x1 317.98750610277057, :y1 203.0500030517578, :x2 402.4150573723018, :y2 218.15000915527344, :width 918, :height 1146.2413162705666} {:x1 418.3750183098018, :y1 203.41250610351562, :x2 801.7079956047237, :y2 219.3249969482422, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 222.8125, :x2 391.0827819816768, :y2 244.41250610351562, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 226.8125, :x2 163.73848266527057, :y2 241.91250610351562, :width 918, :height 1146.2413162705666}), :page 615}, :content {:text "moveStart()可以把范围的起点和终点都移动到相同的位置，再给 moveEnd()传入要选择的字符总数作为参数"}, :properties {:color "yellow"}} {:id #uuid "63d27984-6bde-4b7c-86eb-6863c25e4179", :page 615, :position {:bounding {:x1 0, :y1 12.79998779296875, :x2 803.3516723625362, :y2 197.9375, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 12.79998779296875, :x2 0, :y2 35.199981689453125, :width 918, :height 1146.2413162705666} {:x1 0, :y1 28.79998779296875, :x2 0, :y2 51.199981689453125, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 126.94998168945312, :x2 803.3516723625362, :y2 149.35000610351562, :width 918, :height 1146.2413162705666} {:x1 140.66250915452838, :y1 130.94998168945312, :x2 803.3516723625362, :y2 146.86248779296875, :width 918, :height 1146.2413162705666} {:x1 409.4124938957393, :y1 151.77499389648438, :x2 682.3630859367549, :y2 174.17498779296875, :width 918, :height 1146.2413162705666} {:x1 697.7125122062862, :y1 151.77499389648438, :x2 795.7009765617549, :y2 174.17498779296875, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 151.78750610351562, :x2 383.4876892082393, :y2 174.1875, :width 918, :height 1146.2413162705666} {:x1 409.4124938957393, :y1 155.77499389648438, :x2 682.3630859367549, :y2 171.6875, :width 918, :height 1146.2413162705666} {:x1 697.7125122062862, :y1 155.77499389648438, :x2 795.7009765617549, :y2 171.6875, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 155.78750610351562, :x2 383.4876892082393, :y2 171.69998168945312, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 175.53750610351562, :x2 356.9447662346065, :y2 197.9375, :width 918, :height 1146.2413162705666}), :page 615}, :content {:text "IE8 及更早版本支持通过范围部分选中文本。这也就是说，要选择文本框中的部分文本，必须先使用 IE 在文本框上提供的 createTextRange()方法创建一个范围，并使用 moveStart()和 moveEnd()范围方法把这个范围放到正确的位置上"}, :properties {:color "yellow"}} {:id #uuid "63d2799b-6d50-4b25-af95-3d870cf11850", :page 615, :position {:bounding {:x1 161.81250305101275, :y1 679.9375, :x2 241.84807128831744, :y2 708.7375183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 679.9375, :x2 241.84807128831744, :y2 708.7375183105469, :width 918, :height 1146.2413162705666}), :page 615}, :content {:text "输入过滤"}, :properties {:color "green"}} {:id #uuid "63d279b2-6874-4996-b181-a5f4aabccde7", :page 615, :position {:bounding {:x1 135.35000915452838, :y1 797.6000366210938, :x2 198.98904724046588, :y2 820.0000305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.35000915452838, :y1 797.6000366210938, :x2 198.98904724046588, :y2 820.0000305175781, :width 918, :height 1146.2413162705666}), :page 615}, :content {:text "屏蔽字符"}, :properties {:color "green"}} {:id #uuid "63d27a73-d34f-43a8-b8ca-01e2d0b8db0b", :page 616, :position {:bounding {:x1 0, :y1 168.6999969482422, :x2 823.7582885734737, :y2 291.2000274658203, :width 918, :height 1146.2413162705666}, :rects ({:x1 716.7870971672237, :y1 168.6999969482422, :x2 823.7582885734737, :y2 191.09999084472656, :width 918, :height 1146.2413162705666} {:x1 796.2875244133174, :y1 172.33750915527344, :x2 823.7582885734737, :y2 187.43748474121094, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 192.46250915527344, :x2 425.0495788566768, :y2 214.8625030517578, :width 918, :height 1146.2413162705666} {:x1 0, :y1 268.8000030517578, :x2 0, :y2 291.2000274658203, :width 918, :height 1146.2413162705666}), :page 616}, :content {:text "正则表达式/\\d/来测试。这个正则表达式匹配所有数字字符"}, :properties {:color "yellow"}} {:id #uuid "63d27a94-9efd-4105-a7d5-9f60772308ae", :page 615, :position {:bounding {:x1 178.93075866624713, :y1 843.6625366210938, :x2 451.3177673332393, :y2 866.0625305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 178.93075866624713, :y1 843.6625366210938, :x2 451.3177673332393, :y2 866.0625305175781, :width 918, :height 1146.2413162705666} {:x1 182.75000305101275, :y1 847.2875366210938, :x2 258.2750122062862, :y2 862.3875427246094, :width 918, :height 1146.2413162705666}), :page 615}, :content {:text "keypress 事件负责向文本框插入字符"}, :properties {:color "yellow"}} {:id #uuid "63d27b3d-1d1c-459c-9901-fc17de9c0bfd", :page 616, :position {:bounding {:x1 150.93750305101275, :y1 563.0250244140625, :x2 600.8807250969112, :y2 585.4250183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 563.0250244140625, :x2 600.8807250969112, :y2 585.4250183105469, :width 918, :height 1146.2413162705666} {:x1 459.6624938957393, :y1 565.9625244140625, :x2 487.63749999925494, :y2 581.875, :width 918, :height 1146.2413162705666}), :page 616}, :content {:text "还有一个问题需要处理：复制、粘贴及涉及 Ctrl 键的其他功能。"}, :properties {:color "yellow"}} {:id #uuid "63d27b45-8ce1-42fa-ba33-77128b2352a3", :page 616, :position {:bounding {:x1 168.66250915452838, :y1 811.7875061035156, :x2 248.30676574632525, :y2 834.1875, :width 918, :height 1146.2413162705666}, :rects ({:x1 168.66250915452838, :y1 811.7875061035156, :x2 248.30676574632525, :y2 834.1875, :width 918, :height 1146.2413162705666}), :page 616}, :content {:text "处理剪贴板"}, :properties {:color "green"}} {:id #uuid "63d27b63-1916-4a01-87ac-88291d6b6fbc", :page 617, :position {:bounding {:x1 0, :y1 92.80000686645508, :x2 801.2827636711299, :y2 293.1000099182129, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 92.80000686645508, :x2 0, :y2 115.20000076293945, :width 918, :height 1146.2413162705666} {:x1 335.8125183098018, :y1 246.57501602172852, :x2 445.29277343675494, :y2 268.9750099182129, :width 918, :height 1146.2413162705666} {:x1 459.9625122062862, :y1 246.57501602172852, :x2 801.2827636711299, :y2 268.174991607666, :width 918, :height 1146.2413162705666} {:x1 244.07499999925494, :y1 246.93750381469727, :x2 323.40837402269244, :y2 269.33749771118164, :width 918, :height 1146.2413162705666} {:x1 117.61249847337604, :y1 246.95001602172852, :x2 233.85156555101275, :y2 269.3500099182129, :width 918, :height 1146.2413162705666} {:x1 335.8125183098018, :y1 250.57501602172852, :x2 445.29277343675494, :y2 266.48752212524414, :width 918, :height 1146.2413162705666} {:x1 459.9625122062862, :y1 250.57501602172852, :x2 801.2827636711299, :y2 265.674991607666, :width 918, :height 1146.2413162705666} {:x1 244.07499999925494, :y1 250.93750381469727, :x2 323.40837402269244, :y2 266.8500099182129, :width 918, :height 1146.2413162705666} {:x1 149.42500610277057, :y1 250.95001602172852, :x2 233.85156555101275, :y2 266.862491607666, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 270.7000160217285, :x2 117.96281738206744, :y2 293.1000099182129, :width 918, :height 1146.2413162705666}), :page 617}, :content {:text "通过 beforecopy、beforecut 和 beforepaste 事件可以在向剪贴板发送或从中检索数据前修改数据"}, :properties {:color "yellow"}} {:id #uuid "63d27b6f-d1f0-40e2-9575-f8c7da205c05", :page 617, :position {:bounding {:x1 0, :y1 108.80000686645508, :x2 794.8799926750362, :y2 316.862491607666, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 108.80000686645508, :x2 0, :y2 131.20000076293945, :width 918, :height 1146.2413162705666} {:x1 456.8536560051143, :y1 270.7000160217285, :x2 794.8799926750362, :y2 293.1000099182129, :width 918, :height 1146.2413162705666} {:x1 719.2499877922237, :y1 274.33749771118164, :x2 794.8799926750362, :y2 289.43750381469727, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 294.46249771118164, :x2 203.58804626390338, :y2 316.862491607666, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 298.46249771118164, :x2 153.96249694749713, :y2 314.37500381469727, :width 918, :height 1146.2413162705666}), :page 617}, :content {:text "要阻止实际的剪贴板操作，必须取消 copy、cut和 paste 事件。"}, :properties {:color "yellow"}} {:id #uuid "63d27c27-5b69-4350-80ff-031d7ad50bb5", :page 617, :position {:bounding {:x1 115.88749999925494, :y1 413.125, :x2 649.1433593742549, :y2 435.88751220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 115.88749999925494, :y1 413.125, :x2 217.11870117112994, :y2 434.7250061035156, :width 918, :height 1146.2413162705666} {:x1 233.69999999925494, :y1 413.125, :x2 442.18941039964557, :y2 435.5249938964844, :width 918, :height 1146.2413162705666} {:x1 457.94999999925494, :y1 413.4875183105469, :x2 533.9362670890987, :y2 435.88751220703125, :width 918, :height 1146.2413162705666} {:x1 550.9000122062862, :y1 413.4875183105469, :x2 649.1433593742549, :y2 435.88751220703125, :width 918, :height 1146.2413162705666} {:x1 233.69999999925494, :y1 417.125, :x2 442.18941039964557, :y2 433.0374755859375, :width 918, :height 1146.2413162705666} {:x1 457.94999999925494, :y1 417.4875183105469, :x2 533.9362670890987, :y2 433.3999938964844, :width 918, :height 1146.2413162705666} {:x1 550.9000122062862, :y1 417.4875183105469, :x2 567.0878784172237, :y2 433.3999938964844, :width 918, :height 1146.2413162705666}), :page 617}, :content {:text "clipboardData 对象上有 3 个方法：getData()、setData()和 clearData()"}, :properties {:color "yellow"}} {:id #uuid "63d27c36-6048-48c4-889f-fca3d025b1d0", :page 617, :position {:bounding {:x1 0, :y1 140.79999923706055, :x2 799.4101440422237, :y2 363.32501220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 140.79999923706055, :x2 0, :y2 163.20000457763672, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 318.3249969482422, :x2 799.4101440422237, :y2 340.7250061035156, :width 918, :height 1146.2413162705666} {:x1 300.7750122062862, :y1 321.96250915527344, :x2 799.4101440422237, :y2 337.87501525878906, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 341.7250061035156, :x2 186.91871948167682, :y2 363.32501220703125, :width 918, :height 1146.2413162705666} {:x1 203.50000305101275, :y1 341.7250061035156, :x2 287.1250183098018, :y2 363.32501220703125, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 345.7250061035156, :x2 186.91871948167682, :y2 360.82501220703125, :width 918, :height 1146.2413162705666} {:x1 203.50000305101275, :y1 345.7250061035156, :x2 203.69038696214557, :y2 360.82501220703125, :width 918, :height 1146.2413162705666}), :page 617}, :content {:text "剪贴板上的数据可以通过 window 对象（IE）或 event 对象（Firefox、Safari 和 Chrome）上的 clipboardData 对象来获取"}, :properties {:color "yellow"}} {:id #uuid "63d27c96-b129-4584-a9f7-bf8a66695ff8", :page 617, :position {:bounding {:x1 117.60000152513385, :y1 903.375, :x2 707.7318984977901, :y2 925.7749938964844, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 903.375, :x2 707.7318984977901, :y2 925.7749938964844, :width 918, :height 1146.2413162705666}), :page 617}, :content {:text "如果文本框期待某些字符或某种格式的文本，那么从剪贴板中读取文本是有帮助的。"}, :properties {:color "yellow"}} {:id #uuid "63d27ca3-2a14-47c9-90e3-6521bc9b2716", :page 618, :position {:bounding {:x1 150.93750305101275, :y1 168.70001220703125, :x2 611.5956298820674, :y2 191.10000610351562, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 168.70001220703125, :x2 611.5956298820674, :y2 191.10000610351562, :width 918, :height 1146.2413162705666} {:x1 182.75000305101275, :y1 172.70001220703125, :x2 254.96249694749713, :y2 188.61251831054688, :width 918, :height 1146.2413162705666}), :page 618}, :content {:text "这个 onpaste 事件处理程序确保只有数字才能粘贴到文本框中。"}, :properties {:color "yellow"}} {:id #uuid "63d27cac-ab49-4211-8b1a-0a0a3ea7157e", :page 617, :position {:bounding {:x1 0, :y1 572.8000030517578, :x2 803.4290039055049, :y2 949.6375122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 572.8000030517578, :x2 0, :y2 595.2000122070312, :width 918, :height 1146.2413162705666} {:x1 755.5804931633174, :y1 903.3750152587891, :x2 803.4290039055049, :y2 925.7750091552734, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 927.2375183105469, :x2 735.7016479484737, :y2 949.6375122070312, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 931.2375183105469, :x2 698.8249999992549, :y2 947.1500091552734, :width 918, :height 1146.2413162705666}), :page 617}, :content {:text "如果文本框只允许输入数字，那么就必须检查粘贴过来的值，确保其中只包含数字。在 paste 事件"}, :properties {:color "yellow"}} {:id #uuid "63d27cb4-29ed-42e7-b3e5-21500853bf71", :page 618, :position {:bounding {:x1 195.13749999925494, :y1 324.98750615119934, :x2 275.1730834953487, :y2 353.7874939441681, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 324.98750615119934, :x2 275.1730834953487, :y2 353.7874939441681, :width 918, :height 1146.2413162705666}), :page 618}, :content {:text "自动切换"}, :properties {:color "green"}} {:id #uuid "63d27ccf-a80d-4e4c-80ad-c09dce7ac758", :page 618, :position {:bounding {:x1 0, :y1 366.2625045776367, :x2 836.5151245109737, :y2 412.52500915527344, :width 918, :height 1146.2413162705666}, :rects ({:x1 643.0064575187862, :y1 366.2625045776367, :x2 836.5151245109737, :y2 388.6625061035156, :width 918, :height 1146.2413162705666} {:x1 0, :y1 380.80001068115234, :x2 0, :y2 403.20001220703125, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 390.12500762939453, :x2 198.785952758044, :y2 412.52500915527344, :width 918, :height 1146.2413162705666}), :page 618}, :content {:text "当前字段完成时自动切换到下一个字段"}, :properties {:color "yellow"}} {:id #uuid "63d27d19-55c5-4fdd-b7eb-0d575dca3eff", :page 619, :position {:bounding {:x1 155.97500915452838, :y1 127.64999389648438, :x2 457.3134948723018, :y2 150.4124755859375, :width 918, :height 1146.2413162705666}, :rects ({:x1 155.97500915452838, :y1 127.64999389648438, :x2 249.72156066820025, :y2 149.25, :width 918, :height 1146.2413162705666} {:x1 264.82499999925494, :y1 128.01248168945312, :x2 457.3134948723018, :y2 150.4124755859375, :width 918, :height 1146.2413162705666}), :page 619}, :content {:text "tabForward()函数是实现自动切换的关键"}, :properties {:color "yellow"}} {:id #uuid "63d27d21-6377-497a-97e8-9d7ba0a536c4", :page 619, :position {:bounding {:x1 0, :y1 76.79998779296875, :x2 803.5359985344112, :y2 269.3500061035156, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 76.79998779296875, :x2 0, :y2 99.19998168945312, :width 918, :height 1146.2413162705666} {:x1 596.1575195305049, :y1 223.17501831054688, :x2 803.5359985344112, :y2 245.57498168945312, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 246.94998168945312, :x2 356.73381347581744, :y2 269.3500061035156, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 250.94998168945312, :x2 180.21249694749713, :y2 266.8625183105469, :width 918, :height 1146.2413162705666}), :page 619}, :content {:text "在填写这个简单的表单时，用户不用按 Tab 键切换字段和提交表单。"}, :properties {:color "yellow"}} {:id #uuid "63d27d24-6b7f-4050-b368-ac19302a36c7", :page 619, :position {:bounding {:x1 142.8204223625362, :y1 309.4124984741211, :x2 345.5617858879268, :y2 338.21251678466797, :width 918, :height 1146.2413162705666}, :rects ({:x1 142.8204223625362, :y1 309.4124984741211, :x2 142.82394714280963, :y2 338.21251678466797, :width 918, :height 1146.2413162705666} {:x1 161.81250305101275, :y1 309.4124984741211, :x2 217.74589843675494, :y2 338.21251678466797, :width 918, :height 1146.2413162705666} {:x1 227.85000915452838, :y1 309.4124984741211, :x2 345.5617858879268, :y2 338.21251678466797, :width 918, :height 1146.2413162705666} {:x1 161.81250305101275, :y1 314.21251678466797, :x2 217.74589843675494, :y2 334.3499984741211, :width 918, :height 1146.2413162705666} {:x1 227.85000915452838, :y1 314.21251678466797, :x2 313.0183288566768, :y2 334.3499984741211, :width 918, :height 1146.2413162705666}), :page 619}, :content {:text "HTML5 约束验证 API"}, :properties {:color "green"}} {:id #uuid "63d27d32-1f77-4791-b450-8adc48f9ca35", :page 619, :position {:bounding {:x1 135.32499999925494, :y1 497.2250061035156, :x2 198.9640533439815, :y2 519.625, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.32499999925494, :y1 497.2250061035156, :x2 198.9640533439815, :y2 519.625, :width 918, :height 1146.2413162705666}), :page 619}, :content {:text "必填字段"}, :properties {:color "green"}} {:id #uuid "63d27d48-69f2-4cd7-9167-b1f056f35f54", :page 619, :position {:bounding {:x1 213.83633727952838, :y1 519.150016784668, :x2 437.9676696769893, :y2 541.9250106811523, :width 918, :height 1146.2413162705666}, :rects ({:x1 401.36250610277057, :y1 519.150016784668, :x2 437.9676696769893, :y2 540.7500152587891, :width 918, :height 1146.2413162705666} {:x1 213.83633727952838, :y1 519.525016784668, :x2 389.9070922844112, :y2 541.9250106811523, :width 918, :height 1146.2413162705666} {:x1 328.86250610277057, :y1 523.150016784668, :x2 389.9070922844112, :y2 538.2500152587891, :width 918, :height 1146.2413162705666} {:x1 401.36250610277057, :y1 523.150016784668, :x2 404.38749999925494, :y2 538.2500152587891, :width 918, :height 1146.2413162705666}), :page 619}, :content {:text "给表单字段添加 required 属性"}, :properties {:color "yellow"}} {:id #uuid "63d27e7c-cf08-4b0e-9e8d-4871423bf99e", :page 619, :position {:bounding {:x1 135.33749694749713, :y1 802.2250061035156, :x2 230.98698730394244, :y2 824.6250305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.33749694749713, :y1 802.2250061035156, :x2 230.98698730394244, :y2 824.6250305175781, :width 918, :height 1146.2413162705666}), :page 619}, :content {:text "更多输入类型"}, :properties {:color "green"}} {:id #uuid "63d27ea8-2eb4-4f1a-971d-3331ed7c672a", :page 619, :position {:bounding {:x1 326.0387145988643, :y1 848.2875061035156, :x2 724.8593627922237, :y2 870.6875, :width 918, :height 1146.2413162705666}, :rects ({:x1 326.0387145988643, :y1 848.2875061035156, :x2 724.8593627922237, :y2 870.6875, :width 918, :height 1146.2413162705666} {:x1 611.2125122062862, :y1 851.9250183105469, :x2 724.8593627922237, :y2 867.0249938964844, :width 918, :height 1146.2413162705666}), :page 619}, :content {:text "两个新的输入类型是已经得到广泛支持的\"email\"和\"url\""}, :properties {:color "yellow"}} {:id #uuid "63d27eb0-a456-4a99-b3af-4cb811d61f30", :page 620, :position {:bounding {:x1 168.66250915452838, :y1 265.42501068115234, :x2 232.30154724046588, :y2 287.8250045776367, :width 918, :height 1146.2413162705666}, :rects ({:x1 168.66250915452838, :y1 265.42501068115234, :x2 232.30154724046588, :y2 287.8250045776367, :width 918, :height 1146.2413162705666}), :page 620}, :content {:text "数值范围"}, :properties {:color "green"}} {:id #uuid "63d27ee9-ac3d-4d76-b13d-6de2beab393c", :page 620, :position {:bounding {:x1 0, :y1 311.4750061035156, :x2 830.6293823234737, :y2 387.1999969482422, :width 918, :height 1146.2413162705666}, :rects ({:x1 462.48750610277057, :y1 311.4750061035156, :x2 594.0271484367549, :y2 333.875, :width 918, :height 1146.2413162705666} {:x1 620.7750122062862, :y1 311.4750061035156, :x2 830.6293823234737, :y2 333.875, :width 918, :height 1146.2413162705666} {:x1 196.9278442375362, :y1 311.4875030517578, :x2 450.37236328050494, :y2 333.8874969482422, :width 918, :height 1146.2413162705666} {:x1 209.23750610277057, :y1 315.1125030517578, :x2 450.37236328050494, :y2 330.21250915527344, :width 918, :height 1146.2413162705666} {:x1 462.48750610277057, :y1 315.4750061035156, :x2 594.0271484367549, :y2 331.3874969482422, :width 918, :height 1146.2413162705666} {:x1 620.7750122062862, :y1 315.4750061035156, :x2 830.6293823234737, :y2 331.3874969482422, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 335.3500061035156, :x2 205.77444763109088, :y2 357.75, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 339.3500061035156, :x2 182.29172058030963, :y2 355.2624969482422, :width 918, :height 1146.2413162705666} {:x1 0, :y1 364.8000030517578, :x2 0, :y2 387.1999969482422, :width 918, :height 1146.2413162705666}), :page 620}, :content {:text "：\"number\"、\"range\"、\"datetime\"、\"datetime-local\"、\"date\"、\"month\"、\"week\"和\"time\"。"}, :properties {:color "yellow"}} {:id #uuid "63d27ef2-37e0-4f31-a5c0-764f669f205a", :page 620, :position {:bounding {:x1 0, :y1 382.8874969482422, :x2 826.8812744133174, :y2 435.20001220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 311.27946777269244, :y1 382.8874969482422, :x2 826.8812744133174, :y2 405.2875061035156, :width 918, :height 1146.2413162705666} {:x1 394.01249999925494, :y1 386.5124969482422, :x2 826.8812744133174, :y2 402.4250030517578, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 406.6374969482422, :x2 350.3077270500362, :y2 429.0375061035156, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 410.6374969482422, :x2 350.3077270500362, :y2 426.5500030517578, :width 918, :height 1146.2413162705666} {:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.20001220703125, :width 918, :height 1146.2413162705666}), :page 620}, :content {:text "都可以指定 min 属性（最小可能值）、max 属性（最大可能值），以及 step属性（从 min 到 max 的步长值）"}, :properties {:color "yellow"}} {:id #uuid "63d27f02-f263-49b2-b94c-42722c47a7ec", :page 620, :position {:bounding {:x1 0, :y1 476.8000183105469, :x2 835.3946411125362, :y2 553.3000183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 476.8000183105469, :x2 0, :y2 499.20001220703125, :width 918, :height 1146.2413162705666} {:x1 753.9455444328487, :y1 483.375, :x2 834.1415893547237, :y2 505.7749938964844, :width 918, :height 1146.2413162705666} {:x1 0, :y1 492.8000183105469, :x2 0, :y2 515.2000122070312, :width 918, :height 1146.2413162705666} {:x1 249.21249694749713, :y1 507.125, :x2 835.3946411125362, :y2 529.5249938964844, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 507.13751220703125, :x2 237.57019348070025, :y2 529.5375061035156, :width 918, :height 1146.2413162705666} {:x1 249.21249694749713, :y1 511.125, :x2 835.3946411125362, :y2 527.0375061035156, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 511.13751220703125, :x2 237.57019348070025, :y2 527.0500183105469, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 530.8999938964844, :x2 159.2298461906612, :y2 553.3000183105469, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 534.8999938964844, :x2 151.23549194261432, :y2 550.8125, :width 918, :height 1146.2413162705666}), :page 620}, :content {:text "还有两个方法，即 stepUp()和 stepDown()。这两个方法都接收一个可选的参数：要从当前值加上或减去的数值。（"}, :properties {:color "yellow"}} {:id #uuid "63d27f0a-04cd-4716-a0de-4dde32b8bde2", :page 620, :position {:bounding {:x1 168.66250915452838, :y1 660.5375061035156, :x2 232.30154724046588, :y2 682.9375, :width 918, :height 1146.2413162705666}, :rects ({:x1 168.66250915452838, :y1 660.5375061035156, :x2 232.30154724046588, :y2 682.9375, :width 918, :height 1146.2413162705666}), :page 620}, :content {:text "输入模式"}, :properties {:color "green"}} {:id #uuid "63d27f87-d89d-4c42-a023-8d27f6ab379e", :page 620, :position {:bounding {:x1 0, :y1 620.8000183105469, :x2 835.2551147453487, :y2 729.0125122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 620.8000183105469, :x2 0, :y2 643.2000122070312, :width 918, :height 1146.2413162705666} {:x1 402.2750122062862, :y1 682.4750061035156, :x2 835.2551147453487, :y2 704.0750122070312, :width 918, :height 1146.2413162705666} {:x1 334.6875183098018, :y1 682.8375244140625, :x2 391.2726928703487, :y2 705.2375183105469, :width 918, :height 1146.2413162705666} {:x1 338.8375122062862, :y1 686.4750061035156, :x2 391.2726928703487, :y2 701.5750122070312, :width 918, :height 1146.2413162705666} {:x1 402.2750122062862, :y1 686.4750061035156, :x2 835.2551147453487, :y2 701.5750122070312, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 706.6125183105469, :x2 199.20291442796588, :y2 729.0125122070312, :width 918, :height 1146.2413162705666}), :page 620}, :content {:text " pattern 属性。这个属性用于指定一个正则表达式，用户输入的文本必须与之匹配"}, :properties {:color "yellow"}} {:id #uuid "63d27f8e-8713-42b0-b201-315a8401d73a", :page 620, :position {:bounding {:x1 168.66250915452838, :y1 918.0125122070312, :x2 248.30676574632525, :y2 940.4125061035156, :width 918, :height 1146.2413162705666}, :rects ({:x1 168.66250915452838, :y1 918.0125122070312, :x2 248.30676574632525, :y2 940.4125061035156, :width 918, :height 1146.2413162705666}), :page 620}, :content {:text "检测有效性"}, :properties {:color "green"}} {:id #uuid "63d27f9b-f44f-4c26-9a3e-222e65f567fb", :page 620, :position {:bounding {:x1 150.93750305101275, :y1 940.2125396728516, :x2 627.3015014640987, :y2 962.6125335693359, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 940.2125396728516, :x2 292.16765136644244, :y2 962.6125335693359, :width 918, :height 1146.2413162705666} {:x1 322.7249938957393, :y1 940.2125396728516, :x2 627.3015014640987, :y2 962.6125335693359, :width 918, :height 1146.2413162705666} {:x1 182.75000305101275, :y1 944.2125396728516, :x2 292.16765136644244, :y2 960.1250457763672, :width 918, :height 1146.2413162705666}), :page 620}, :content {:text "使用 checkValidity()方法可以检测表单中任意给定字段是否有效"}, :properties {:color "yellow"}} {:id #uuid "63d27fb5-1575-4d79-9506-aeb2b639452c", :page 620, :position {:bounding {:x1 0, :y1 812.800012588501, :x2 833.1301147453487, :y2 1034.0125122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 812.800012588501, :x2 0, :y2 835.2000122070312, :width 918, :height 1146.2413162705666} {:x1 730.2375366203487, :y1 987.4875183105469, :x2 833.1301147453487, :y2 1009.0875091552734, :width 918, :height 1146.2413162705666} {:x1 568.1578857414424, :y1 987.8500213623047, :x2 719.2100708000362, :y2 1010.2500152587891, :width 918, :height 1146.2413162705666} {:x1 666.6874877922237, :y1 991.4875183105469, :x2 719.2100708000362, :y2 1006.5875091552734, :width 918, :height 1146.2413162705666} {:x1 730.2375366203487, :y1 991.4875183105469, :x2 833.1301147453487, :y2 1006.5875091552734, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 1011.6125183105469, :x2 167.124331664294, :y2 1034.0125122070312, :width 918, :height 1146.2413162705666}), :page 620}, :content {:text "字段值不匹配 pattern 属性也会被视为无效"}, :properties {:color "yellow"}} {:id #uuid "63d284e7-b558-420e-a30f-7ded75b51c87", :page 621, :position {:bounding {:x1 117.60000152513385, :y1 216.52499389648438, :x2 640.2391845695674, :y2 238.92501831054688, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 216.52499389648438, :x2 577.6121093742549, :y2 238.92501831054688, :width 918, :height 1146.2413162705666} {:x1 608.1874877922237, :y1 216.52499389648438, :x2 640.2391845695674, :y2 238.92501831054688, :width 918, :height 1146.2413162705666} {:x1 472.1500122062862, :y1 220.16250610351562, :x2 577.6121093742549, :y2 235.26248168945312, :width 918, :height 1146.2413162705666}), :page 621}, :content {:text "要检查整个表单是否有效，可以直接在表单上调用 checkValidity()方法"}, :properties {:color "yellow"}} {:id #uuid "63d284f8-4ec5-4d26-b3bd-74cf7f4a0862", :page 621, :position {:bounding {:x1 0, :y1 204.79999542236328, :x2 800.3909790031612, :y2 403.1624984741211, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 204.79999542236328, :x2 0, :y2 227.20000457763672, :width 918, :height 1146.2413162705666} {:x1 512.6249877922237, :y1 356.6375045776367, :x2 564.9894287101924, :y2 378.23751068115234, :width 918, :height 1146.2413162705666} {:x1 585.1249877922237, :y1 356.6375045776367, :x2 800.3909790031612, :y2 378.23751068115234, :width 918, :height 1146.2413162705666} {:x1 585.1249877922237, :y1 360.6375045776367, :x2 800.3909790031612, :y2 375.73751068115234, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 380.7625045776367, :x2 149.84607238695025, :y2 403.1624984741211, :width 918, :height 1146.2413162705666}), :page 621}, :content {:text "validity 属性会告诉我们字段为什么有效或无效"}, :properties {:color "yellow"}} {:id #uuid "63d28501-a5db-4749-812f-1143ddccbca7", :page 621, :position {:bounding {:x1 135.32499999925494, :y1 827.9875183105469, :x2 198.9640533439815, :y2 850.3875122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 135.32499999925494, :y1 827.9875183105469, :x2 198.9640533439815, :y2 850.3875122070312, :width 918, :height 1146.2413162705666}), :page 621}, :content {:text "禁用验证"}, :properties {:color "green"}} {:id #uuid "63d28576-0f8d-4dd3-ab97-e8cf328b004c", :page 621, :position {:bounding {:x1 117.60000152513385, :y1 849.9375305175781, :x2 521.1227294914424, :y2 872.6875305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 276.0000183098018, :y1 849.9375305175781, :x2 521.1227294914424, :y2 871.5375061035156, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 850.2875061035156, :x2 260.72346801683307, :y2 872.6875305175781, :width 918, :height 1146.2413162705666} {:x1 185.27499694749713, :y1 853.9375305175781, :x2 260.72346801683307, :y2 869.0375061035156, :width 918, :height 1146.2413162705666} {:x1 276.0000183098018, :y1 853.9375305175781, :x2 279.0250122062862, :y2 869.0375061035156, :width 918, :height 1146.2413162705666}), :page 621}, :content {:text "通过指定 novalidate 属性可以禁止对表单进行任何验证"}, :properties {:color "yellow"}} {:id #uuid "63d285e0-314b-40bc-a083-f26966c8ccd3", :page 621, :position {:bounding {:x1 0, :y1 636.8000183105469, :x2 800.4147827140987, :y2 980.0875244140625, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 636.8000183105469, :x2 0, :y2 659.2000122070312, :width 918, :height 1146.2413162705666} {:x1 445.7750122062862, :y1 934.7250061035156, :x2 800.4147827140987, :y2 957.125, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 935.0875244140625, :x2 431.0105163566768, :y2 957.4875183105469, :width 918, :height 1146.2413162705666} {:x1 249.30000610277057, :y1 938.0250244140625, :x2 431.0105163566768, :y2 953.9375305175781, :width 918, :height 1146.2413162705666} {:x1 445.7750122062862, :y1 938.7250061035156, :x2 800.4147827140987, :y2 953.8250122070312, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 958.4875183105469, :x2 118.9922744743526, :y2 980.0875244140625, :width 918, :height 1146.2413162705666} {:x1 131.00000305101275, :y1 958.4875183105469, :x2 247.76192016527057, :y2 980.0875244140625, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 962.4875183105469, :x2 118.9922744743526, :y2 977.5875244140625, :width 918, :height 1146.2413162705666} {:x1 131.00000305101275, :y1 962.4875183105469, :x2 131.19038696214557, :y2 977.5875244140625, :width 918, :height 1146.2413162705666}), :page 621}, :content {:text "这个值也可以通过 JavaScript 属性 noValidate 检索或设置，设置为 true 表示属性存在，设置为 false 表示属性不存在"}, :properties {:color "yellow"}} {:id #uuid "63d28645-5d52-480c-8638-fbe71e03c056", :page 622, :position {:bounding {:x1 188.27499694749713, :y1 339.6374816894531, :x2 304.3631774894893, :y2 373.2375183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 188.27499694749713, :y1 339.6374816894531, :x2 304.3631774894893, :y2 373.2375183105469, :width 918, :height 1146.2413162705666}), :page 622}, :content {:text "选择框编程"}, :properties {:color "green"}} {:id #uuid "63d2872e-d2bd-48e4-bcef-f40c39f88da5", :page 622, :position {:bounding {:x1 0, :y1 387.71251833438873, :x2 833.0327026359737, :y2 435.2000061273575, :width 918, :height 1146.2413162705666}, :rects ({:x1 518.3828002922237, :y1 387.71251833438873, :x2 833.0327026359737, :y2 410.1125122308731, :width 918, :height 1146.2413162705666} {:x1 594.1874877922237, :y1 391.35000002384186, :x2 833.0327026359737, :y2 406.4500061273575, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 411.47500002384186, :x2 471.8719360344112, :y2 433.87499392032623, :width 918, :height 1146.2413162705666} {:x1 0, :y1 412.8000122308731, :x2 0, :y2 435.2000061273575, :width 918, :height 1146.2413162705666}), :page 622}, :content {:text "方便交互，HTMLSelectElement 类型在所有表单字段的公共能力之外又提供了以下属性和方法"}, :properties {:color "yellow"}} {:id #uuid "63d28741-4c8b-4088-a7b7-400edf20588c", :page 622, :position {:bounding {:x1 0, :y1 556.8000183105469, :x2 832.7321655265987, :y2 647.9500122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 556.8000183105469, :x2 0, :y2 579.2000122070312, :width 918, :height 1146.2413162705666} {:x1 794.3749877922237, :y1 601.4250183105469, :x2 832.7321655265987, :y2 623.0249938964844, :width 918, :height 1146.2413162705666} {:x1 150.93750305101275, :y1 601.7875061035156, :x2 430.4113952629268, :y2 624.1875, :width 918, :height 1146.2413162705666} {:x1 451.0000183098018, :y1 601.7875061035156, :x2 588.1662475578487, :y2 624.1875, :width 918, :height 1146.2413162705666} {:x1 620.9750244133174, :y1 601.7875061035156, :x2 782.0861694328487, :y2 624.1875, :width 918, :height 1146.2413162705666} {:x1 219.81250305101275, :y1 605.4250183105469, :x2 430.4113952629268, :y2 620.5249938964844, :width 918, :height 1146.2413162705666} {:x1 794.3749877922237, :y1 605.4250183105469, :x2 832.7321655265987, :y2 620.5249938964844, :width 918, :height 1146.2413162705666} {:x1 451.0000183098018, :y1 605.7875061035156, :x2 588.1662475578487, :y2 621.7000122070312, :width 918, :height 1146.2413162705666} {:x1 620.9750244133174, :y1 605.7875061035156, :x2 782.0861694328487, :y2 621.7000122070312, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 625.5500183105469, :x2 183.15661926195025, :y2 647.9500122070312, :width 918, :height 1146.2413162705666}), :page 622}, :content {:text "选择框的 type 属性可能是\"select-one\"或\"select-multiple\"，具体取决于 multiple 属性是否存在"}, :properties {:color "yellow"}} {:id #uuid "63d2875d-4412-4e61-b2cf-42687811ed92", :page 622, :position {:bounding {:x1 150.93750305101275, :y1 387.7124938964844, :x2 486.70195312425494, :y2 410.1125030517578, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 387.7124938964844, :x2 305.53471679612994, :y2 410.1125030517578, :width 918, :height 1146.2413162705666} {:x1 319.0999938957393, :y1 387.7124938964844, :x2 486.70195312425494, :y2 410.1125030517578, :width 918, :height 1146.2413162705666} {:x1 246.60000915452838, :y1 391.34999084472656, :x2 305.53471679612994, :y2 406.4499969482422, :width 918, :height 1146.2413162705666} {:x1 319.0999938957393, :y1 391.71250915527344, :x2 399.13151855394244, :y2 407.62501525878906, :width 918, :height 1146.2413162705666}), :page 622}, :content {:text "选择框是使用<select>和<option>元素创建的"}, :properties {:color "yellow"}} {:id #uuid "63d28c1e-74be-4ce2-be6e-746d46893fc9", :page 622, :position {:bounding {:x1 0, :y1 796.8000183105469, :x2 832.6354858390987, :y2 963.0250244140625, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 796.8000183105469, :x2 0, :y2 819.2000122070312, :width 918, :height 1146.2413162705666} {:x1 656.5383789055049, :y1 916.8625183105469, :x2 832.6354858390987, :y2 939.2625122070312, :width 918, :height 1146.2413162705666} {:x1 736.7750122062862, :y1 920.5000305175781, :x2 832.6354858390987, :y2 935.6000061035156, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 940.6250305175781, :x2 641.8957397453487, :y2 963.0250244140625, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 944.6250305175781, :x2 522.1298095695674, :y2 960.5375061035156, :width 918, :height 1146.2413162705666}), :page 622}, :content {:text "如果文本为\"China\"的项被选中，则字段的值是一个空字符串，因为该项的 value 属性是空字符串"}, :properties {:color "yellow"}} {:id #uuid "63d28c2c-af36-4d48-b714-1e3241e664aa", :page 622, :position {:bounding {:x1 0, :y1 812.7999877929688, :x2 834.3171264640987, :y2 986.8874816894531, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 812.7999877929688, :x2 0, :y2 835.1999969482422, :width 918, :height 1146.2413162705666} {:x1 657.9308959953487, :y1 940.625, :x2 834.3171264640987, :y2 963.0249938964844, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 964.4874877929688, :x2 274.8542663566768, :y2 986.8874816894531, :width 918, :height 1146.2413162705666} {:x1 298.44999999925494, :y1 964.4874877929688, :x2 632.3505737297237, :y2 986.8874816894531, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 968.4874877929688, :x2 274.8542663566768, :y2 984.3999938964844, :width 918, :height 1146.2413162705666} {:x1 298.44999999925494, :y1 968.4874877929688, :x2 579.8779174797237, :y2 984.3999938964844, :width 918, :height 1146.2413162705666}), :page 622}, :content {:text "如果选中最后一项，那么字段的值是\"Australia\"，因为该<option>元素没有指定 value 属性。"}, :properties {:color "yellow"}} {:id #uuid "63d28c6d-fbc0-487f-bd5d-0bc6567c9c22", :page 623, :position {:bounding {:x1 0, :y1 76.80000305175781, :x2 800.4061767570674, :y2 269.33750915527344, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 76.80000305175781, :x2 0, :y2 99.19999694824219, :width 918, :height 1146.2413162705666} {:x1 117.61249847337604, :y1 223.1750030517578, :x2 800.4061767570674, :y2 245.5749969482422, :width 918, :height 1146.2413162705666} {:x1 165.33749694749713, :y1 226.81251525878906, :x2 800.4061767570674, :y2 241.91249084472656, :width 918, :height 1146.2413162705666} {:x1 85.69999999925494, :y1 246.93751525878906, :x2 149.84909362718463, :y2 269.33750915527344, :width 918, :height 1146.2413162705666}), :page 623}, :content {:text "大多数<option>属性是为了方便存取选项数据。可以使用常规 DOM 功能存取这些信息，只是效率比较低"}, :properties {:color "yellow"}} {:id #uuid "63d28c8a-fc12-4016-8c09-694110addf04", :page 623, :position {:bounding {:x1 404.7793151848018, :y1 599.2624969482422, :x2 737.6821777336299, :y2 621.6624908447266, :width 918, :height 1146.2413162705666}, :rects ({:x1 404.7793151848018, :y1 599.2624969482422, :x2 737.6821777336299, :y2 621.6624908447266, :width 918, :height 1146.2413162705666} {:x1 646.6500122062862, :y1 602.9000091552734, :x2 704.1625244133174, :y2 618.0000152587891, :width 918, :height 1146.2413162705666}), :page 623}, :content {:text "而选择框会在选中一项时立即触发 change 事件"}, :properties {:color "yellow"}} {:id #uuid "63d28c91-6b5d-437b-93fa-4938636322ef", :page 623, :position {:bounding {:x1 161.81250305101275, :y1 764.8250122070312, :x2 241.84807128831744, :y2 793.625, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 764.8250122070312, :x2 241.84807128831744, :y2 793.625, :width 918, :height 1146.2413162705666}), :page 623}, :content {:text "选项处理"}, :properties {:color "green"}} {:id #uuid "63d28cac-b491-4e9e-bce2-cdce5d5d6436", :page 623, :position {:bounding {:x1 117.60000152513385, :y1 805.7250061035156, :x2 768.2863037101924, :y2 828.4875183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 732.3500244133174, :y1 805.7250061035156, :x2 768.2863037101924, :y2 827.3250122070312, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 806.0875244140625, :x2 713.5597412101924, :y2 828.4875183105469, :width 918, :height 1146.2413162705666} {:x1 614.5375244133174, :y1 809.7250061035156, :x2 713.5597412101924, :y2 824.8250122070312, :width 918, :height 1146.2413162705666} {:x1 732.3500244133174, :y1 809.7250061035156, :x2 735.3749877922237, :y2 824.8250122070312, :width 918, :height 1146.2413162705666}), :page 623}, :content {:text "对于只允许选择一项的选择框，获取选项最简单的方式是使用选择框的 selectedIndex 属性"}, :properties {:color "yellow"}} {:id #uuid "63d28cc5-79b3-4099-a4d0-57300bbc3e9d", :page 623, :position {:bounding {:x1 117.60000152513385, :y1 1020.4125061035156, :x2 627.7055541984737, :y2 1043.1749877929688, :width 918, :height 1146.2413162705666}, :rects ({:x1 410.8375122062862, :y1 1020.4125061035156, :x2 627.7055541984737, :y2 1042.0124816894531, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 1020.7749938964844, :x2 392.0235778801143, :y2 1043.1749877929688, :width 918, :height 1146.2413162705666} {:x1 292.9124938957393, :y1 1024.4125061035156, :x2 392.0235778801143, :y2 1039.5124816894531, :width 918, :height 1146.2413162705666} {:x1 410.8375122062862, :y1 1024.4125061035156, :x2 411.18843383714557, :y2 1039.5124816894531, :width 918, :height 1146.2413162705666}), :page 623}, :content {:text "对于允许多选的选择框，selectedIndex 属性就像只允许选择一项一样"}, :properties {:color "yellow"}} {:id #uuid "63d28cd9-649d-403d-b31e-3fcd30d08153", :page 624, :position {:bounding {:x1 0, :y1 228.15000534057617, :x2 834.6030151359737, :y2 323.1999931335449, :width 918, :height 1146.2413162705666}, :rects ({:x1 288.6875183098018, :y1 228.15000534057617, :x2 482.4705688469112, :y2 250.55002975463867, :width 918, :height 1146.2413162705666} {:x1 495.3125183098018, :y1 228.15000534057617, :x2 834.6030151359737, :y2 249.7500114440918, :width 918, :height 1146.2413162705666} {:x1 150.93750305101275, :y1 228.51249313354492, :x2 269.8972351066768, :y2 250.91251754760742, :width 918, :height 1146.2413162705666} {:x1 288.6875183098018, :y1 232.15000534057617, :x2 482.4705688469112, :y2 247.2500114440918, :width 918, :height 1146.2413162705666} {:x1 495.3125183098018, :y1 232.15000534057617, :x2 834.6030151359737, :y2 247.2500114440918, :width 918, :height 1146.2413162705666} {:x1 166.85000915452838, :y1 232.51249313354492, :x2 269.8972351066768, :y2 248.42499923706055, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 252.27500534057617, :x2 262.7695495598018, :y2 274.67499923706055, :width 918, :height 1146.2413162705666} {:x1 0, :y1 300.79999923706055, :x2 0, :y2 323.1999931335449, :width 918, :height 1146.2413162705666}), :page 624}, :content {:text "与 selectedIndex 不同，设置选项的 selected 属性不会在多选时移除其他选项，从而可以动态选择任意多个选项。"}, :properties {:color "yellow"}} {:id #uuid "63d28d1f-df88-4eb5-890f-c2c384c6a418", :page 624, :position {:bounding {:x1 150.93750305101275, :y1 299.4375114440918, :x2 549.9241210930049, :y2 322.1999931335449, :width 918, :height 1146.2413162705666}, :rects ({:x1 259.2874938957393, :y1 299.4375114440918, :x2 549.9241210930049, :y2 321.0375175476074, :width 918, :height 1146.2413162705666} {:x1 150.93750305101275, :y1 299.79999923706055, :x2 246.45854492112994, :y2 322.1999931335449, :width 918, :height 1146.2413162705666} {:x1 259.2874938957393, :y1 303.4375114440918, :x2 262.3125183098018, :y2 318.5375175476074, :width 918, :height 1146.2413162705666} {:x1 182.75000305101275, :y1 303.79999923706055, :x2 246.45854492112994, :y2 319.7125053405762, :width 918, :height 1146.2413162705666}), :page 624}, :content {:text "通过 selected 属性可以确定选择框中哪个选项被选中。"}, :properties {:color "yellow"}} {:id #uuid "63d28d32-f5f0-41c8-a069-e26bc31655e6", :page 624, :position {:bounding {:x1 195.13749999925494, :y1 857.0625, :x2 275.1730834953487, :y2 885.8625183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 857.0625, :x2 275.1730834953487, :y2 885.8625183105469, :width 918, :height 1146.2413162705666}), :page 624}, :content {:text "添加选项"}, :properties {:color "green"}} {:id #uuid "63d28d44-c655-47f2-a627-b274e41f2055", :page 624, :position {:bounding {:x1 607.7903320305049, :y1 898.3249969482422, :x2 745.6801025383174, :y2 920.7249908447266, :width 918, :height 1146.2413162705666}, :rects ({:x1 607.7903320305049, :y1 898.3249969482422, :x2 745.6801025383174, :y2 920.7249908447266, :width 918, :height 1146.2413162705666} {:x1 673.3375122062862, :y1 901.2749938964844, :x2 722.7936889640987, :y2 917.1874847412109, :width 918, :height 1146.2413162705666}), :page 624}, :content {:text "可以使用 DOM 方法"}, :properties {:color "yellow"}} {:id #uuid "63d28daa-a98e-470e-a22b-0a248d4067c1", :page 625, :position {:bounding {:x1 165.70154113695025, :y1 151.78749084472656, :x2 453.2677185051143, :y2 174.18751525878906, :width 918, :height 1146.2413162705666}, :rects ({:x1 165.70154113695025, :y1 151.78749084472656, :x2 453.2677185051143, :y2 174.18751525878906, :width 918, :height 1146.2413162705666} {:x1 249.21249694749713, :y1 155.41249084472656, :x2 306.61250610277057, :y2 170.5124969482422, :width 918, :height 1146.2413162705666}), :page 625}, :content {:text "也可以使用 Option 构造函数创建新选项"}, :properties {:color "yellow"}} {:id #uuid "63d28dbb-84b6-48f2-be85-a591abb32f77", :page 625, :position {:bounding {:x1 165.69703979417682, :y1 339.58750915527344, :x2 487.3571960441768, :y2 361.9875030517578, :width 918, :height 1146.2413162705666}, :rects ({:x1 165.69703979417682, :y1 339.58750915527344, :x2 487.3571960441768, :y2 361.9875030517578, :width 918, :height 1146.2413162705666} {:x1 410.0250122062862, :y1 343.21250915527344, :x2 448.01680297777057, :y2 358.31251525878906, :width 918, :height 1146.2413162705666}), :page 625}, :content {:text "添加新选项的方式是使用选择框的 add()方法"}, :properties {:color "yellow"}} {:id #uuid "63d28dc6-3f7c-4c02-a724-93f24451ecf2", :page 625, :position {:bounding {:x1 0, :y1 156.8000030517578, :x2 800.8711425773799, :y2 385.74998474121094, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 156.8000030517578, :x2 0, :y2 179.1999969482422, :width 918, :height 1146.2413162705666} {:x1 752.7336303703487, :y1 339.5749969482422, :x2 800.8711425773799, :y2 361.97499084472656, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 363.34999084472656, :x2 358.3199569694698, :y2 385.74998474121094, :width 918, :height 1146.2413162705666}), :page 625}, :content {:text "要添加的新选项和要添加到其前面的参考选项"}, :properties {:color "yellow"}} {:id #uuid "63d28eac-436d-455b-bef9-578ce4c472fa", :page 625, :position {:bounding {:x1 161.81250305101275, :y1 677.0125122070312, :x2 241.84807128831744, :y2 705.8125305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 677.0125122070312, :x2 241.84807128831744, :y2 705.8125305175781, :width 918, :height 1146.2413162705666}), :page 625}, :content {:text "移除选项"}, :properties {:color "green"}} {:id #uuid "63d28eb5-2641-4ba1-b704-92bc65202919", :page 625, :position {:bounding {:x1 0, :y1 364.80001068115234, :x2 799.4072143547237, :y2 764.4625244140625, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 364.80001068115234, :x2 0, :y2 387.20001220703125, :width 918, :height 1146.2413162705666} {:x1 550.6703369133174, :y1 718.2875061035156, :x2 751.1655761711299, :y2 740.6875305175781, :width 918, :height 1146.2413162705666} {:x1 767.3874999992549, :y1 718.2875061035156, :x2 799.4072143547237, :y2 740.6875305175781, :width 918, :height 1146.2413162705666} {:x1 585.9374877922237, :y1 721.2250061035156, :x2 751.1655761711299, :y2 737.1375122070312, :width 918, :height 1146.2413162705666} {:x1 767.3874999992549, :y1 722.2875061035156, :x2 799.4072143547237, :y2 738.2000122070312, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 742.0625305175781, :x2 230.04196472093463, :y2 764.4625244140625, :width 918, :height 1146.2413162705666}), :page 625}, :content {:text "使用 DOM 的 removeChild()方法并传入要移除的选项"}, :properties {:color "yellow"}} {:id #uuid "63d28ebd-b01f-4e6c-8c81-3b1616c52aa3", :page 625, :position {:bounding {:x1 213.80307311937213, :y1 794.9125366210938, :x2 746.9252807609737, :y2 817.3125, :width 918, :height 1146.2413162705666}, :rects ({:x1 213.80307311937213, :y1 794.9125366210938, :x2 746.9252807609737, :y2 817.3125, :width 918, :height 1146.2413162705666} {:x1 312.94999999925494, :y1 798.550048828125, :x2 377.3930541984737, :y2 813.6500244140625, :width 918, :height 1146.2413162705666}), :page 625}, :content {:text "使用选择框的 remove()方法。这个方法接收一个参数，即要移除选项的索引"}, :properties {:color "yellow"}} {:id #uuid "63d28ec4-44ea-4514-84a3-097e83aea435", :page 625, :position {:bounding {:x1 229.86658019945025, :y1 847.8875122070312, :x2 422.70488281175494, :y2 870.2875366210938, :width 918, :height 1146.2413162705666}, :rects ({:x1 229.86658019945025, :y1 847.8875122070312, :x2 422.70488281175494, :y2 870.2875366210938, :width 918, :height 1146.2413162705666}), :page 625}, :content {:text "直接将选项设置为等于 null"}, :properties {:color "yellow"}} {:id #uuid "63d28f84-a250-44d8-920d-47ad184c6179", :page 626, :position {:bounding {:x1 195.13749999925494, :y1 189.14999389648438, :x2 335.19975585862994, :y2 217.94998168945312, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 189.14999389648438, :x2 335.19975585862994, :y2 217.94998168945312, :width 918, :height 1146.2413162705666}), :page 626}, :content {:text "移动和重排选项"}, :properties {:color "green"}} {:id #uuid "63d28f88-1617-4fab-89e0-767ac550e217", :page 626, :position {:bounding {:x1 485.92412109300494, :y1 128.01248168945312, :x2 773.0554687492549, :y2 150.41250610351562, :width 918, :height 1146.2413162705666}, :rects ({:x1 485.92412109300494, :y1 128.01248168945312, :x2 773.0554687492549, :y2 150.41250610351562, :width 918, :height 1146.2413162705666}), :page 626}, :content {:text "移除第一项会自动将所有选项向前移一位"}, :properties {:color "yellow"}} {:id #uuid "63d28fa7-0d3e-4401-b0b5-b61e272a5d35", :page 626, :position {:bounding {:x1 0, :y1 253.22500228881836, :x2 833.4325439445674, :y2 323.1999931335449, :width 918, :height 1146.2413162705666}, :rects ({:x1 629.2750122062862, :y1 253.22500228881836, :x2 833.4325439445674, :y2 275.62499618530273, :width 918, :height 1146.2413162705666} {:x1 629.2750122062862, :y1 257.22500228881836, :x2 833.4325439445674, :y2 273.137508392334, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 278.04999923706055, :x2 673.8209716789424, :y2 300.4499931335449, :width 918, :height 1146.2413162705666} {:x1 689.1500122062862, :y1 278.04999923706055, :x2 753.2747070305049, :y2 300.4499931335449, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 282.04999923706055, :x2 673.8209716789424, :y2 297.9625053405762, :width 918, :height 1146.2413162705666} {:x1 0, :y1 300.79999923706055, :x2 0, :y2 323.1999931335449, :width 918, :height 1146.2413162705666}), :page 626}, :content {:text "DOM 方法则可以直接将某个选项从第一个选择框移动到第二个选择框，只要对相应选项使用 appendChild()方法即可"}, :properties {:color "yellow"}} {:id #uuid "63d28fb8-32d5-4d74-aff6-be82cbe0ebfb", :page 626, :position {:bounding {:x1 0, :y1 428.80001068115234, :x2 800.6088134758174, :y2 496.3000183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 428.80001068115234, :x2 0, :y2 451.20001220703125, :width 918, :height 1146.2413162705666} {:x1 538.0961791984737, :y1 450.13751220703125, :x2 800.6088134758174, :y2 472.5375213623047, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 473.5375213623047, :x2 217.21342773362994, :y2 495.13751220703125, :width 918, :height 1146.2413162705666} {:x1 245.88749999925494, :y1 473.90000915527344, :x2 372.2955505363643, :y2 496.3000183105469, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 477.5375213623047, :x2 217.21342773362994, :y2 492.63751220703125, :width 918, :height 1146.2413162705666}), :page 626}, :content {:text "将 选 项 移 动 到 选 择 框 中 的 特 定 位 置 ， insertBefore()方法是最合适的。"}, :properties {:color "yellow"}} {:id #uuid "63d28fc4-776a-4dc6-a3b2-37f1f4fbf2e9", :page 626, :position {:bounding {:x1 435.49956054612994, :y1 473.90000915527344, :x2 825.0663330070674, :y2 496.3000183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 435.49956054612994, :y1 473.90000915527344, :x2 713.6039916984737, :y2 496.3000183105469, :width 918, :height 1146.2413162705666} {:x1 728.9250366203487, :y1 473.90000915527344, :x2 825.0663330070674, :y2 496.3000183105469, :width 918, :height 1146.2413162705666} {:x1 611.1125366203487, :y1 477.5375213623047, :x2 713.6039916984737, :y2 492.63751220703125, :width 918, :height 1146.2413162705666}), :page 626}, :content {:text "把选项移动到最后，还是 appendChild()方法比较方便"}, :properties {:color "yellow"}} {:id #uuid "63d29058-b1ac-4c57-bede-8ebeba2a74f8", :page 626, :position {:bounding {:x1 188.27499694749713, :y1 728.2125244140625, :x2 304.3631774894893, :y2 761.8125305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 188.27499694749713, :y1 728.2125244140625, :x2 304.3631774894893, :y2 761.8125305175781, :width 918, :height 1146.2413162705666}), :page 626}, :content {:text "表单序列化"}, :properties {:color "green"}} {:id #uuid "63d290b7-c474-4c4c-ae1b-4257a0f81865", :page 626, :position {:bounding {:x1 0, :y1 652.8000259399414, :x2 833.2582885734737, :y2 844.1125183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 652.8000259399414, :x2 0, :y2 675.2000274658203, :width 918, :height 1146.2413162705666} {:x1 183.17410583421588, :y1 797.9375305175781, :x2 833.2582885734737, :y2 820.3375244140625, :width 918, :height 1146.2413162705666} {:x1 234.71249694749713, :y1 800.8750305175781, :x2 833.2582885734737, :y2 816.7875213623047, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 821.7125244140625, :x2 151.1022827140987, :y2 844.1125183105469, :width 918, :height 1146.2413162705666}), :page 626}, :content {:text "表单在 JavaScript 中可以使用表单字段的 type 属性连同其 name 属性和 value 属性来进行序列化"}, :properties {:color "yellow"}} {:id #uuid "63d290c5-e4d6-41de-8736-2a2c1a2dfc90", :page 627, :position {:bounding {:x1 117.60000152513385, :y1 128.0124969482422, :x2 691.8627578727901, :y2 150.41250610351562, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 128.0124969482422, :x2 691.8627578727901, :y2 150.41250610351562, :width 918, :height 1146.2413162705666}), :page 627}, :content {:text "表单序列化通常不包含任何按钮，因为序列化得到的字符串很可能以其他方式提交"}, :properties {:color "yellow"}} {:id #uuid "63d291d0-88af-4860-bcb5-457c145e4b2e", :page 627, :position {:bounding {:x1 85.68750305101275, :y1 1032.9625549316406, :x2 378.85957641527057, :y2 1055.3625183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 85.68750305101275, :y1 1032.9625549316406, :x2 378.85957641527057, :y2 1055.3625183105469, :width 918, :height 1146.2413162705666} {:x1 117.50000305101275, :y1 1036.9625549316406, :x2 169.46249694749713, :y2 1052.8750305175781, :width 918, :height 1146.2413162705666}), :page 627}, :content {:text "不过 value 属性为空字符串是完全有效的"}, :properties {:color "yellow"}} {:id #uuid "63d291da-e7c1-4b77-bbc1-65cb291be39b", :page 628, :position {:bounding {:x1 150.93750305101275, :y1 151.77499389648438, :x2 737.1542236320674, :y2 174.1875, :width 918, :height 1146.2413162705666}, :rects ({:x1 337.2249938957393, :y1 151.77499389648438, :x2 737.1542236320674, :y2 174.17498779296875, :width 918, :height 1146.2413162705666} {:x1 150.93750305101275, :y1 151.78750610351562, :x2 316.45222778245807, :y2 174.1875, :width 918, :height 1146.2413162705666} {:x1 246.60000915452838, :y1 155.41250610351562, :x2 316.45222778245807, :y2 170.51248168945312, :width 918, :height 1146.2413162705666} {:x1 337.2249938957393, :y1 155.77499389648438, :x2 701.1374999992549, :y2 171.6875, :width 918, :height 1146.2413162705666}), :page 628}, :content {:text "表单中如果有<fieldset>元素，它就会出现在元素集合中，但应该没有 type 属性"}, :properties {:color "yellow"}} {:id #uuid "63d291f1-f09f-4217-b17a-9127632b003a", :page 628, :position {:bounding {:x1 0, :y1 199.41250610351562, :x2 840.6874877922237, :y2 323.20001220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 800.7950927726924, :y1 199.41250610351562, :x2 832.8851806633174, :y2 221.8125, :width 918, :height 1146.2413162705666} {:x1 558.1500122062862, :y1 222.8125, :x2 840.6874877922237, :y2 245.2125244140625, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 223.17498779296875, :x2 546.1423217765987, :y2 245.57501220703125, :width 918, :height 1146.2413162705666} {:x1 558.1500122062862, :y1 226.8125, :x2 840.6874877922237, :y2 241.9124755859375, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 227.17498779296875, :x2 546.1423217765987, :y2 243.0875244140625, :width 918, :height 1146.2413162705666} {:x1 266.13749999925494, :y1 246.57501220703125, :x2 610.7910644523799, :y2 268.97503662109375, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 246.9375, :x2 253.35129089280963, :y2 269.3375244140625, :width 918, :height 1146.2413162705666} {:x1 266.13749999925494, :y1 250.57501220703125, :x2 577.3874999992549, :y2 265.67498779296875, :width 918, :height 1146.2413162705666} {:x1 119.02500457689166, :y1 250.9375, :x2 253.35129089280963, :y2 266.8499755859375, :width 918, :height 1146.2413162705666} {:x1 0, :y1 284.79998779296875, :x2 0, :y2 307.20001220703125, :width 918, :height 1146.2413162705666} {:x1 0, :y1 300.79998779296875, :x2 0, :y2 323.20001220703125, :width 918, :height 1146.2413162705666}), :page 628}, :content {:text "对于单选按钮和复选框，会检测其 checked 属性。如果值为 false 就退出 switch 语句；如果值为 true，则继续执行 default 分支，将字段的名和值编码后添加到 parts 数组"}, :properties {:color "yellow"}} {:id #uuid "63d2929a-765d-43f2-95bd-3a36150fc930", :page 628, :position {:bounding {:x1 188.27499694749713, :y1 356.6499938964844, :x2 304.3631774894893, :y2 390.25, :width 918, :height 1146.2413162705666}, :rects ({:x1 188.27499694749713, :y1 356.6499938964844, :x2 304.3631774894893, :y2 390.25, :width 918, :height 1146.2413162705666}), :page 628}, :content {:text "富文本编辑"}, :properties {:color "green"}} {:id #uuid "63d292e9-0c45-496f-af8c-d72d4a85cbcf", :page 628, :position {:bounding {:x1 0, :y1 270.70001220703125, :x2 832.7321655265987, :y2 355.20001220703125, :width 918, :height 1146.2413162705666}, :rects ({:x1 552.0757934562862, :y1 270.70001220703125, :x2 783.7782470695674, :y2 293.1000061035156, :width 918, :height 1146.2413162705666} {:x1 800.7125122062862, :y1 270.70001220703125, :x2 832.7321655265987, :y2 293.1000061035156, :width 918, :height 1146.2413162705666} {:x1 746.2375366203487, :y1 274.3374938964844, :x2 783.7782470695674, :y2 289.4375, :width 918, :height 1146.2413162705666} {:x1 800.7125122062862, :y1 274.70001220703125, :x2 832.7321655265987, :y2 290.6125183105469, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 294.4750061035156, :x2 375.55400390550494, :y2 316.875, :width 918, :height 1146.2413162705666} {:x1 0, :y1 332.8000183105469, :x2 0, :y2 355.20001220703125, :width 918, :height 1146.2413162705666}), :page 628}, :content {:text "这个函数的最后一步是使用 join()通过和号把所有字段的名值对拼接起来。"}, :properties {:color "yellow"}} {:id #uuid "63d29300-f853-4a4e-96e8-3333e48ca618", :page 628, :position {:bounding {:x1 0, :y1 428.8000030517578, :x2 833.2286254875362, :y2 497.25, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 428.8000030517578, :x2 0, :y2 451.1999969482422, :width 918, :height 1146.2413162705666} {:x1 500.4511901848018, :y1 452.2624969482422, :x2 833.2286254875362, :y2 474.66249084472656, :width 918, :height 1146.2413162705666} {:x1 668.6125366203487, :y1 455.1999969482422, :x2 833.2286254875362, :y2 471.1125030517578, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 475.6499938964844, :x2 188.92343444749713, :y2 497.25, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 479.6499938964844, :x2 165.06145019456744, :y2 494.75, :width 918, :height 1146.2413162705666}), :page 628}, :content {:text "基本的技术就是在空白 HTML 文件中嵌入一个 iframe。"}, :properties {:color "yellow"}} {:id #uuid "63d2932d-b468-4686-8591-c0b04aad79eb", :page 628, :position {:bounding {:x1 0, :y1 444.8000030517578, :x2 832.7321655265987, :y2 522.2749938964844, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 444.8000030517578, :x2 0, :y2 467.1999969482422, :width 918, :height 1146.2413162705666} {:x1 188.92343444749713, :y1 476.0124969482422, :x2 832.7321655265987, :y2 498.41249084472656, :width 918, :height 1146.2413162705666} {:x1 219.71249694749713, :y1 480.0124969482422, :x2 832.7321655265987, :y2 495.9250030517578, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 499.875, :x2 202.26249999925494, :y2 522.2749938964844, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 503.875, :x2 194.89876098558307, :y2 519.7875061035156, :width 918, :height 1146.2413162705666}), :page 628}, :content {:text "通过 designMode 属性，可以将这个空白文档变成可以编辑的，实际编辑的则是<body>元素的 HTML。"}, :properties {:color "yellow"}} {:id #uuid "63d2933d-892b-48ac-a263-72d1b225043e", :page 628, :position {:bounding {:x1 150.93750305101275, :y1 735.7125396728516, :x2 500.8473083488643, :y2 758.1125335693359, :width 918, :height 1146.2413162705666}, :rects ({:x1 150.93750305101275, :y1 735.7125396728516, :x2 500.8473083488643, :y2 758.1125335693359, :width 918, :height 1146.2413162705666} {:x1 425.8375122062862, :y1 739.3500366210938, :x2 483.3375122062862, :y2 754.4500427246094, :width 918, :height 1146.2413162705666}), :page 628}, :content {:text "这个页面会像其他任何页面一样加载到 iframe 里"}, :properties {:color "yellow"}} {:id #uuid "63d29345-4d66-4d21-a39a-69b7360c4995", :page 628, :position {:bounding {:x1 0, :y1 668.8000335693359, :x2 828.4154541008174, :y2 805.6375427246094, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 668.8000335693359, :x2 0, :y2 691.2000427246094, :width 918, :height 1146.2413162705666} {:x1 561.9662963859737, :y1 759.4750366210938, :x2 828.4154541008174, :y2 781.8750457763672, :width 918, :height 1146.2413162705666} {:x1 778.1625244133174, :y1 763.1125335693359, :x2 828.4154541008174, :y2 778.2125396728516, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 783.2375335693359, :x2 436.93867797777057, :y2 805.6375427246094, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 787.237548828125, :x2 417.33183593675494, :y2 803.1500549316406, :width 918, :height 1146.2413162705666}), :page 628}, :content {:text "在这个包含页面内，需要使用 onload事件处理程序在适当时机设置 designMode，"}, :properties {:color "yellow"}} {:id #uuid "63d2939c-b4b4-4190-9f25-7db99665bf95", :page 628, :position {:bounding {:x1 195.13749999925494, :y1 993.0000305175781, :x2 394.2125122062862, :y2 1021.800048828125, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 993.0000305175781, :x2 394.2125122062862, :y2 1021.800048828125, :width 918, :height 1146.2413162705666} {:x1 235.41250915452838, :y1 997.800048828125, :x2 239.44999999925494, :y2 1017.9375305175781, :width 918, :height 1146.2413162705666}), :page 628}, :content {:text "使用 contenteditable"}, :properties {:color "green"}} {:id #uuid "63d2940c-80eb-496b-930f-2b9fb15aec20", :page 629, :position {:bounding {:x1 117.60000152513385, :y1 204.28753662109375, :x2 704.4079467765987, :y2 227.04998779296875, :width 918, :height 1146.2413162705666}, :rects ({:x1 669.9250366203487, :y1 204.28753662109375, :x2 704.4079467765987, :y2 226.6875, :width 918, :height 1146.2413162705666} {:x1 117.60000152513385, :y1 204.6500244140625, :x2 545.9757034294307, :y2 227.04998779296875, :width 918, :height 1146.2413162705666} {:x1 576.6125366203487, :y1 204.6500244140625, :x2 654.1114379875362, :y2 227.04998779296875, :width 918, :height 1146.2413162705666} {:x1 669.9250366203487, :y1 208.28753662109375, :x2 672.9499999992549, :y2 223.38751220703125, :width 918, :height 1146.2413162705666} {:x1 576.6125366203487, :y1 208.6500244140625, :x2 654.1114379875362, :y2 224.5625, :width 918, :height 1146.2413162705666}), :page 629}, :content {:text "元 素 中 包 含 的 任 何 文 本 都 会 自 动 被 编 辑 ， 元 素 本 身 类 似 于 <textarea> 元 素"}, :properties {:color "yellow"}} {:id #uuid "63d29415-de8d-498e-8b40-48c8a1baafbd", :page 629, :position {:bounding {:x1 0, :y1 124.80001068115234, :x2 799.5071899406612, :y2 343.5499954223633, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 124.80001068115234, :x2 0, :y2 147.20000457763672, :width 918, :height 1146.2413162705666} {:x1 412.9375183098018, :y1 296.9249954223633, :x2 457.0323364250362, :y2 318.5250015258789, :width 918, :height 1146.2413162705666} {:x1 467.3125183098018, :y1 297.28751373291016, :x2 592.8054077140987, :y2 319.68750762939453, :width 918, :height 1146.2413162705666} {:x1 608.3874999992549, :y1 297.28751373291016, :x2 747.8136474601924, :y2 319.68750762939453, :width 918, :height 1146.2413162705666} {:x1 767.4875366203487, :y1 297.28751373291016, :x2 799.5071899406612, :y2 319.68750762939453, :width 918, :height 1146.2413162705666} {:x1 467.3125183098018, :y1 301.28751373291016, :x2 592.8054077140987, :y2 317.2000198364258, :width 918, :height 1146.2413162705666} {:x1 608.3874999992549, :y1 301.28751373291016, :x2 747.8136474601924, :y2 317.2000198364258, :width 918, :height 1146.2413162705666} {:x1 767.4875366203487, :y1 301.28751373291016, :x2 799.5071899406612, :y2 317.2000198364258, :width 918, :height 1146.2413162705666} {:x1 417.3750183098018, :y1 320.78751373291016, :x2 615.2964965812862, :y2 342.3875198364258, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 321.1500015258789, :x2 395.03056640550494, :y2 343.5499954223633, :width 918, :height 1146.2413162705666} {:x1 417.3750183098018, :y1 324.78751373291016, :x2 417.6076843254268, :y2 339.8875198364258, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 325.1500015258789, :x2 395.03056640550494, :y2 341.06250762939453, :width 918, :height 1146.2413162705666}), :page 629}, :content {:text "\"true\"表示开启，\"false\"表示关闭，\"inherit\"表示继承父元素的设置（因为在 contenteditable 元素内部会创建和删除元素"}, :properties {:color "yellow"}} {:id #uuid "63d2941b-bc6f-441c-ae76-b70659218630", :page 629, :position {:bounding {:x1 161.81250305101275, :y1 493.34999084472656, :x2 281.8658630363643, :y2 522.1499938964844, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 493.34999084472656, :x2 281.8658630363643, :y2 522.1499938964844, :width 918, :height 1146.2413162705666}), :page 629}, :content {:text "与富文本交互"}, :properties {:color "green"}} {:id #uuid "63d29483-c649-4972-b11c-45b307df8f8f", :page 629, :position {:bounding {:x1 117.60000152513385, :y1 534.625, :x2 608.1069824211299, :y2 557.0249938964844, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 534.625, :x2 608.1069824211299, :y2 557.0249938964844, :width 918, :height 1146.2413162705666} {:x1 392.5999938957393, :y1 538.2624969482422, :x2 587.8309204094112, :y2 553.3625030517578, :width 918, :height 1146.2413162705666}), :page 629}, :content {:text "与富文本编辑器交互的主要方法是使用 document.execCommand()。"}, :properties {:color "yellow"}} {:id #uuid "63d29497-edcc-456b-bdce-1559faa02ffa", :page 629, :position {:bounding {:x1 0, :y1 252.79999160766602, :x2 808.2377197258174, :y2 604.6499938964844, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 252.79999160766602, :x2 0, :y2 275.1999931335449, :width 918, :height 1146.2413162705666} {:x1 354.5374938957393, :y1 558.125, :x2 808.2377197258174, :y2 580.5250091552734, :width 918, :height 1146.2413162705666} {:x1 354.5374938957393, :y1 562.125, :x2 808.2377197258174, :y2 578.0374908447266, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 582.25, :x2 737.2781860344112, :y2 604.6499938964844, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 586.25, :x2 729.7125122062862, :y2 602.1625061035156, :width 918, :height 1146.2413162705666}), :page 629}, :content {:text "document.execCommand()可以接收 3 个参数：要执行的命令、表示浏览器是否为命令提供用户界面的布尔值和执行命令必需的值（如果不需要则为 null）。"}, :properties {:color "yellow"}} {:id #uuid "63d294f6-e458-4279-846f-3b49a57a9c1a", :page 630, :position {:bounding {:x1 150.93750305101275, :y1 723.1625061035156, :x2 630.6967651359737, :y2 745.9250183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 545.9625122062862, :y1 723.1625061035156, :x2 630.6967651359737, :y2 744.7625427246094, :width 918, :height 1146.2413162705666} {:x1 150.93750305101275, :y1 723.5250244140625, :x2 523.6064331047237, :y2 745.9250183105469, :width 918, :height 1146.2413162705666} {:x1 409.92500610277057, :y1 727.1625061035156, :x2 523.6064331047237, :y2 742.2625427246094, :width 918, :height 1146.2413162705666} {:x1 545.9625122062862, :y1 727.1625061035156, :x2 548.9875366203487, :y2 742.2625427246094, :width 918, :height 1146.2413162705666}), :page 630}, :content {:text "同样的方法也可以用于页面中添加了 contenteditable 属性的元素"}, :properties {:color "yellow"}} {:id #uuid "63d29581-63ba-48b6-a45c-f501e7f88a11", :page 630, :position {:bounding {:x1 0, :y1 828.7999992370605, :x2 833.5200073234737, :y2 1047.2125091552734, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 828.7999992370605, :x2 0, :y2 851.2000007629395, :width 918, :height 1146.2413162705666} {:x1 335.9005310051143, :y1 1001.0374984741211, :x2 833.5200073234737, :y2 1023.4375, :width 918, :height 1146.2413162705666} {:x1 622.5500366203487, :y1 1005.0374984741211, :x2 833.5200073234737, :y2 1020.9499969482422, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 1024.8125, :x2 352.8294860832393, :y2 1047.2125091552734, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 1028.8125, :x2 303.2874938957393, :y2 1044.7250061035156, :width 918, :height 1146.2413162705666}), :page 630}, :content {:text "在富文本编辑中，不能依赖浏览器生成的 HTML，因为命令实现和格式转换都是通过 innerHTML 完成的"}, :properties {:color "yellow"}} {:id #uuid "63d2958d-5ad8-4702-8296-cc9db51064fb", :page 631, :position {:bounding {:x1 0, :y1 12.800018310546875, :x2 800.2016479484737, :y2 174.1875, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 12.800018310546875, :x2 0, :y2 35.20001220703125, :width 918, :height 1146.2413162705666} {:x1 452.9124938957393, :y1 127.64999389648438, :x2 800.2016479484737, :y2 150.04998779296875, :width 918, :height 1146.2413162705666} {:x1 643.3375122062862, :y1 132.01251220703125, :x2 800.2016479484737, :y2 147.92501831054688, :width 918, :height 1146.2413162705666} {:x1 85.67499847337604, :y1 151.78750610351562, :x2 452.5753280632198, :y2 174.1875, :width 918, :height 1146.2413162705666}), :page 631}, :content {:text "queryCommandEnabled()，此方法用于确定对当前选中文本或光标所在位置是否可以执行相关命令。"}, :properties {:color "yellow"}} {:id #uuid "63d29616-d048-45f8-bbea-4f283b6ead29", :page 631, :position {:bounding {:x1 548.2885009758174, :y1 151.7874984741211, :x2 723.7625610344112, :y2 174.18749237060547, :width 918, :height 1146.2413162705666}, :rects ({:x1 548.2885009758174, :y1 151.7874984741211, :x2 723.7625610344112, :y2 174.18749237060547, :width 918, :height 1146.2413162705666}), :page 631}, :content {:text "参数，即要检查的命令名"}, :properties {:color "yellow"}} {:id #uuid "63d29641-ac4c-4cb3-9c4e-f45d24c0ca5e", :page 631, :position {:bounding {:x1 201.18750305101275, :y1 299.43749237060547, :x2 690.7898437492549, :y2 321.0374984741211, :width 918, :height 1146.2413162705666}, :rects ({:x1 201.18750305101275, :y1 299.43749237060547, :x2 690.7898437492549, :y2 321.0374984741211, :width 918, :height 1146.2413162705666}), :page 631}, :content {:text "queryCommandState()用于确定相关命令是否应用到了当前文本选区"}, :properties {:color "yellow"}} {:id #uuid "63d2964f-c52f-4de9-9b91-61998263eadb", :page 631, :position {:bounding {:x1 238.83749694749713, :y1 423.80001068115234, :x2 687.8034545890987, :y2 445.39998626708984, :width 918, :height 1146.2413162705666}, :rects ({:x1 238.83749694749713, :y1 423.80001068115234, :x2 687.8034545890987, :y2 445.39998626708984, :width 918, :height 1146.2413162705666}), :page 631}, :content {:text "queryCommandValue()，此方法可以返回执行命令时使用的值"}, :properties {:color "yellow"}} {:id #uuid "63d29656-bd9e-4184-acf6-a1f6bc118341", :page 631, :position {:bounding {:x1 142.8204223625362, :y1 562.0249938964844, :x2 261.8569519035518, :y2 592.1625061035156, :width 918, :height 1146.2413162705666}, :rects ({:x1 161.81250305101275, :y1 562.0249938964844, :x2 261.8569519035518, :y2 590.8250122070312, :width 918, :height 1146.2413162705666} {:x1 142.8204223625362, :y1 563.3625183105469, :x2 142.82394714280963, :y2 592.1625061035156, :width 918, :height 1146.2413162705666}), :page 631}, :content {:text "富文件选择"}, :properties {:color "green"}} {:id #uuid "63d29679-f26d-44ae-844e-021effbcc76c", :page 631, :position {:bounding {:x1 117.60000152513385, :y1 603.3000183105469, :x2 681.6287719719112, :y2 625.7000122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 117.60000152513385, :y1 603.3000183105469, :x2 361.89998168870807, :y2 625.7000122070312, :width 918, :height 1146.2413162705666} {:x1 390.2874938957393, :y1 603.3000183105469, :x2 681.6287719719112, :y2 625.7000122070312, :width 918, :height 1146.2413162705666} {:x1 262.19999999925494, :y1 606.9375, :x2 361.89998168870807, :y2 622.0375061035156, :width 918, :height 1146.2413162705666}), :page 631}, :content {:text "在内嵌窗格中使用 getSelection()方法，可以获得富文本编辑器的选区。"}, :properties {:color "yellow"}} {:id #uuid "63d29699-0659-4272-91a7-46bbf4371836", :page 631, :position {:bounding {:x1 305.05534667894244, :y1 626.7000122070312, :x2 599.3203613273799, :y2 649.4625091552734, :width 918, :height 1146.2413162705666}, :rects ({:x1 563.7875244133174, :y1 626.7000122070312, :x2 599.3203613273799, :y2 648.3000183105469, :width 918, :height 1146.2413162705666} {:x1 305.05534667894244, :y1 627.0625152587891, :x2 548.9761230461299, :y2 649.4625091552734, :width 918, :height 1146.2413162705666} {:x1 482.2249938957393, :y1 630.7000122070312, :x2 548.9761230461299, :y2 645.8000183105469, :width 918, :height 1146.2413162705666} {:x1 563.7875244133174, :y1 630.7000122070312, :x2 566.8124877922237, :y2 645.8000183105469, :width 918, :height 1146.2413162705666}), :page 631}, :content {:text "返回表示当前选中文本的 Selection 对象"}, :properties {:color "yellow"}} {:id #uuid "63d296e0-e3b3-4650-9026-8399a77aa2d8", :page 632, :position {:bounding {:x1 0, :y1 604.8000183105469, :x2 834.6183959953487, :y2 705.3500061035156, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 604.8000183105469, :x2 0, :y2 627.2000122070312, :width 918, :height 1146.2413162705666} {:x1 379.92500610277057, :y1 658.8125, :x2 834.6183959953487, :y2 681.2124938964844, :width 918, :height 1146.2413162705666} {:x1 263.2581665031612, :y1 659.1750183105469, :x2 363.1168395988643, :y2 681.5750122070312, :width 918, :height 1146.2413162705666} {:x1 379.92500610277057, :y1 662.8125, :x2 834.6183959953487, :y2 678.7249755859375, :width 918, :height 1146.2413162705666} {:x1 294.2125122062862, :y1 663.1750183105469, :x2 363.1168395988643, :y2 679.0874938964844, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 682.9500122070312, :x2 482.8196899406612, :y2 705.3500061035156, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 686.9500122070312, :x2 446.46538085862994, :y2 702.8625183105469, :width 918, :height 1146.2413162705666}), :page 632}, :content {:text "这个 selection 对象是 document 的属性。要取得富文本编辑器中选中的文本，必须先创建一个文本范围，然后再访问其 text 属性"}, :properties {:color "yellow"}} {:id #uuid "63d2977e-d3c7-4dd5-b40c-09fe99f77e46", :page 632, :position {:bounding {:x1 195.13749999925494, :y1 921.5000305175781, :x2 375.2175476066768, :y2 950.3000183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 195.13749999925494, :y1 921.5000305175781, :x2 375.2175476066768, :y2 950.3000183105469, :width 918, :height 1146.2413162705666}), :page 632}, :content {:text "通过表单提交富文本"}, :properties {:color "green"}} {:id #uuid "63d29792-9303-49a1-ad05-7e89c762f74c", :page 632, :position {:bounding {:x1 0, :y1 812.8000373840332, :x2 842.4328491203487, :y2 1032.8125305175781, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 812.8000373840332, :x2 0, :y2 835.2000350952148, :width 918, :height 1146.2413162705666} {:x1 208.72500915452838, :y1 986.6375427246094, :x2 842.4328491203487, :y2 1009.0375366210938, :width 918, :height 1146.2413162705666} {:x1 505.6500122062862, :y1 990.6375427246094, :x2 842.4328491203487, :y2 1006.5500335693359, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 1010.4125366210938, :x2 359.19682617112994, :y2 1032.8125305175781, :width 918, :height 1146.2413162705666} {:x1 119.01249999925494, :y1 1014.4125366210938, :x2 278.7862731926143, :y2 1030.3250427246094, :width 918, :height 1146.2413162705666}), :page 632}, :content {:text "所以富文本编辑器技术上与表单没有关系。这意味着要把富文本编辑的结果提交给服务器，必须手工提取 HTML 并自己提交"}, :properties {:color "yellow"}} {:id #uuid "63d2980d-ac67-4f64-ab18-1ada9e93d265", :page 633, :position {:bounding {:x1 149.15004272386432, :y1 284.3999938964844, :x2 579.5867187492549, :y2 306.8000183105469, :width 918, :height 1146.2413162705666}, :rects ({:x1 149.15004272386432, :y1 284.3999938964844, :x2 579.5867187492549, :y2 306.8000183105469, :width 918, :height 1146.2413162705666} {:x1 160.91250915452838, :y1 288.3999938964844, :x2 536.3597900383174, :y2 304.3124694824219, :width 918, :height 1146.2413162705666}), :page 633}, :content {:text "，代码使用文档主体的 innerHTML 属性取得了内嵌窗格的 HTM"}, :properties {:color "yellow"}} {:id #uuid "63d298c4-952b-468e-bf36-16df4bf16a6a", :page 633, :position {:bounding {:x1 0, :y1 140.79999697208405, :x2 808.2464477531612, :y2 354.4250122308731, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 140.79999697208405, :x2 0, :y2 163.20000612735748, :width 918, :height 1146.2413162705666} {:x1 530.4374877922237, :y1 308.16250002384186, :x2 655.3777343742549, :y2 330.56249392032623, :width 918, :height 1146.2413162705666} {:x1 666.6874877922237, :y1 308.16250002384186, :x2 808.2464477531612, :y2 330.56249392032623, :width 918, :height 1146.2413162705666} {:x1 596.8124877922237, :y1 311.8000122308731, :x2 655.3777343742549, :y2 326.90001833438873, :width 918, :height 1146.2413162705666} {:x1 666.6874877922237, :y1 312.16250002384186, :x2 808.2464477531612, :y2 328.0750061273575, :width 918, :height 1146.2413162705666} {:x1 517.4374877922237, :y1 331.66250002384186, :x2 773.0737182609737, :y2 353.2625061273575, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 332.02501833438873, :x2 495.8681823723018, :y2 354.4250122308731, :width 918, :height 1146.2413162705666} {:x1 517.4374877922237, :y1 335.66250002384186, :x2 517.6118041984737, :y2 350.7625061273575, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 336.02501833438873, :x2 495.8681823723018, :y2 351.93749392032623, :width 918, :height 1146.2413162705666}), :page 633}, :content {:text "如果使用 submit()方法手工提交表单，那么要注意在提交前先执行上述操作。对于 contenteditable 元素，执行这一操作的代码是类似的"}, :properties {:color "yellow"}} {:id #uuid "63d29988-bf19-47c0-9c02-369beaa5d7c4", :page 633, :position {:bounding {:x1 0, :y1 540.8000183105469, :x2 778.5222656242549, :y2 977.8250122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 0, :y1 540.8000183105469, :x2 0, :y2 563.2000122070312, :width 918, :height 1146.2413162705666} {:x1 236.51249999925494, :y1 931.5625, :x2 778.5222656242549, :y2 953.9625244140625, :width 918, :height 1146.2413162705666} {:x1 236.51249999925494, :y1 935.5625, :x2 778.5222656242549, :y2 951.4750366210938, :width 918, :height 1146.2413162705666} {:x1 85.68750305101275, :y1 955.4249877929688, :x2 278.1601440422237, :y2 977.8250122070312, :width 918, :height 1146.2413162705666}), :page 633}, :content {:text "因此要将富文本内容提交到服务器，必须把 HTML 从 iframe 或 contenteditable元素中复制到一个表单字段"}, :properties {:color "yellow"}} {:id #uuid "63d299c0-c872-43ba-af90-cda183055140", :page 634, :position {:bounding {:x1 165.9221069328487, :y1 915.1625061035156, :x2 515.6208374015987, :y2 948.7625122070312, :width 918, :height 1146.2413162705666}, :rects ({:x1 165.9221069328487, :y1 915.1625061035156, :x2 165.92514343187213, :y2 948.7625122070312, :width 918, :height 1146.2413162705666} {:x1 188.27499694749713, :y1 915.1625061035156, :x2 260.72917480394244, :y2 948.7625122070312, :width 918, :height 1146.2413162705666} {:x1 271.7874938957393, :y1 915.1625061035156, :x2 515.6208374015987, :y2 948.7625122070312, :width 918, :height 1146.2413162705666} {:x1 188.27499694749713, :y1 920.7625122070312, :x2 260.72917480394244, :y2 944.2250061035156, :width 918, :height 1146.2413162705666} {:x1 271.7874938957393, :y1 920.7625122070312, :x2 300.61799926683307, :y2 944.2250061035156, :width 918, :height 1146.2413162705666}), :page 634}, :content {:text "Atomics 与 SharedArrayBuffer"}, :properties {:color "green"}} {:id #uuid "63d3283e-6e8f-47f7-8d4c-3278cfba4934", :page 634, :position {:bounding {:x1 0, :y1 668.8000183105469, :x2 842.3728576600552, :y2 1057.775016784668, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 668.8000183105469, :x2 0, :y2 691.2000122070312, :width 941, :height 1174.9597806215722} {:x1 155.86249694228172, :y1 1009.0375137329102, :x2 842.3728576600552, :y2 1032.2375106811523, :width 941, :height 1174.9597806215722} {:x1 244.33750304579735, :y1 1013.0375137329102, :x2 842.3728576600552, :y2 1029.3500137329102, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 1034.212516784668, :x2 260.35669097304344, :y2 1056.6125106811523, :width 941, :height 1174.9597806215722} {:x1 279.9250122010708, :y1 1034.5750122070312, :x2 295.9250122010708, :y2 1057.775016784668, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 1038.212516784668, :x2 260.35669097304344, :y2 1053.7000122070312, :width 941, :height 1174.9597806215722}), :page 634}, :content {:text "Atomics API 通过强制同一时刻只能对缓冲区执行一个操作，可以让多个上下文安全地读写一个 SharedArrayBuffer。"}, :properties {:color "yellow"}} {:id #uuid "63d32856-f8f6-4cb6-8627-4b95e4a3ccde", :page 635, :position {:bounding {:x1 165.86249694228172, :y1 217.53751373291016, :x2 348.6621032655239, :y2 245.53751373291016, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 217.53751373291016, :x2 348.6621032655239, :y2 245.53751373291016, :width 941, :height 1174.9597806215722}), :page 635}, :content {:text "SharedArrayBuffer"}, :properties {:color "green"}} {:id #uuid "63d32887-ad0a-44d6-86cb-ab6c2dc0ca3f", :page 635, :position {:bounding {:x1 118.80000457167625, :y1 257.28751373291016, :x2 524.1692748963833, :y2 279.68750762939453, :width 941, :height 1174.9597806215722}, :rects ({:x1 118.80000457167625, :y1 257.28751373291016, :x2 257.15666350722313, :y2 279.68750762939453, :width 941, :height 1174.9597806215722} {:x1 276.72499999403954, :y1 257.28751373291016, :x2 389.3581481873989, :y2 279.68750762939453, :width 941, :height 1174.9597806215722} {:x1 406.5624938905239, :y1 257.28751373291016, :x2 524.1692748963833, :y2 279.68750762939453, :width 941, :height 1174.9597806215722} {:x1 276.72499999403954, :y1 261.28751373291016, :x2 389.3581481873989, :y2 276.7750015258789, :width 941, :height 1174.9597806215722} {:x1 406.5624938905239, :y1 261.28751373291016, :x2 494.6758972108364, :y2 276.7750015258789, :width 941, :height 1174.9597806215722}), :page 635}, :content {:text "SharedArrayBuffer 与 ArrayBuffer 具有同样的 API"}, :properties {:color "yellow"}} {:id #uuid "63d3288e-e5cd-4b1a-9055-6e33d7c9b884", :page 635, :position {:bounding {:x1 283.95000609755516, :y1 281.6500015258789, :x2 735.1409545838833, :y2 304.0499954223633, :width 941, :height 1174.9597806215722}, :rects ({:x1 283.95000609755516, :y1 281.6500015258789, :x2 422.30669555068016, :y2 304.0499954223633, :width 941, :height 1174.9597806215722} {:x1 441.8625122010708, :y1 281.6500015258789, :x2 735.1409545838833, :y2 304.0499954223633, :width 941, :height 1174.9597806215722} {:x1 441.8625122010708, :y1 285.6500015258789, :x2 444.9625183045864, :y2 301.13748931884766, :width 941, :height 1174.9597806215722}), :page 635}, :content {:text "SharedArrayBuffer 则可以被任意多个执行上下文同时使用。"}, :properties {:color "yellow"}} {:id #uuid "63d328eb-fad0-4765-a051-1b4947539311", :page 636, :position {:bounding {:x1 200.02500304579735, :y1 284.7374954223633, :x2 324.84621581435204, :y2 313.53751373291016, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 284.7374954223633, :x2 324.84621581435204, :y2 313.53751373291016, :width 941, :height 1174.9597806215722}), :page 636}, :content {:text "原子操作基础"}, :properties {:color "green"}} {:id #uuid "63d328fa-593d-412d-9d99-903dcdf16794", :page 636, :position {:bounding {:x1 154.71250304579735, :y1 327.0250015258789, :x2 853.7909179627895, :y2 350.22501373291016, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 327.0250015258789, :x2 853.7909179627895, :y2 350.22501373291016, :width 941, :height 1174.9597806215722} {:x1 317.9999938905239, :y1 331.0250015258789, :x2 439.9372192323208, :y2 347.3375015258789, :width 941, :height 1174.9597806215722}), :page 636}, :content {:text "任何全局上下文中都有 Atomics 对象，这个对象上暴露了用于执行线程安全操作的一套静态方法，"}, :properties {:color "yellow"}} {:id #uuid "63d32907-c2ae-457d-86c6-b6b0565f886c", :page 636, :position {:bounding {:x1 172.87500914931297, :y1 405.32500648498535, :x2 303.5377136170864, :y2 428.5250186920166, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.87500914931297, :y1 405.32500648498535, :x2 303.5377136170864, :y2 428.5250186920166, :width 941, :height 1174.9597806215722}), :page 636}, :content {:text "算术及位操作方法"}, :properties {:color "green"}} {:id #uuid "63d3297a-9081-42b9-9dd5-10717649d0d7", :page 638, :position {:bounding {:x1 168.64887389540672, :y1 228.35001373291016, :x2 254.52723082900047, :y2 251.54999542236328, :width 941, :height 1174.9597806215722}, :rects ({:x1 168.64887389540672, :y1 228.35001373291016, :x2 254.52723082900047, :y2 251.54999542236328, :width 941, :height 1174.9597806215722}), :page 638}, :content {:text "原子读和写"}, :properties {:color "green"}} {:id #uuid "63d329c1-7881-406b-8c33-58e7b07b4609", :page 638, :position {:bounding {:x1 0, :y1 274.4875030517578, :x2 841.4637695252895, :y2 355.1999969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 502.92339476943016, :y1 274.4875030517578, :x2 841.4637695252895, :y2 297.6875, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 298.8500061035156, :x2 186.10976561903954, :y2 322.0500030517578, :width 941, :height 1174.9597806215722} {:x1 0, :y1 332.8000030517578, :x2 0, :y2 355.1999969482422, :width 941, :height 1174.9597806215722}), :page 638}, :content {:text "但多线程下的指令重排可能导致资源争用，而且极难排错"}, :properties {:color "yellow"}} {:id #uuid "63d329c4-66e0-40e1-9647-554c80c4208e", :page 638, :position {:bounding {:x1 175.67499694228172, :y1 347.6625061035156, :x2 496.4159027040005, :y2 370.8625030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.67499694228172, :y1 347.6625061035156, :x2 496.4159027040005, :y2 370.8625030517578, :width 941, :height 1174.9597806215722}), :page 638}, :content {:text "所有原子指令相互之间的顺序永远不会重排。"}, :properties {:color "yellow"}} {:id #uuid "63d329cf-7ced-4055-9e57-2e2935c6739e", :page 638, :position {:bounding {:x1 175.67499694228172, :y1 370.9375, :x2 835.6188598573208, :y2 395.22499084472656, :width 941, :height 1174.9597806215722}, :rects ({:x1 750.5874877870083, :y1 370.9375, :x2 835.6188598573208, :y2 394.1374969482422, :width 941, :height 1174.9597806215722} {:x1 175.67499694228172, :y1 372.0249938964844, :x2 739.8722625672817, :y2 395.22499084472656, :width 941, :height 1174.9597806215722} {:x1 750.5874877870083, :y1 374.9375, :x2 756.3000122010708, :y2 391.25001525878906, :width 941, :height 1174.9597806215722}), :page 638}, :content {:text "使用原子读或原子写保证所有指令（包括原子和非原子指令）都不会相对原子读/写重新排序"}, :properties {:color "yellow"}} {:id #uuid "63d329e6-f0a0-4987-b0ec-f42c9833b132", :page 638, :position {:bounding {:x1 172.88750609755516, :y1 765.8500213623047, :x2 238.12099608778954, :y2 789.0500183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 765.8500213623047, :x2 238.12099608778954, :y2 789.0500183105469, :width 941, :height 1174.9597806215722}), :page 638}, :content {:text "原子交换"}, :properties {:color "green"}} {:id #uuid "63d32a05-c41a-422e-a013-36ec6e2d08a0", :page 638, :position {:bounding {:x1 296.22499999403954, :y1 812.6999969482422, :x2 832.2710815370083, :y2 836.2750091552734, :width 941, :height 1174.9597806215722}, :rects ({:x1 296.22499999403954, :y1 812.6999969482422, :x2 442.63750609755516, :y2 835.1000061035156, :width 941, :height 1174.9597806215722} {:x1 463.4374938905239, :y1 813.0749969482422, :x2 832.2710815370083, :y2 836.2750091552734, :width 941, :height 1174.9597806215722}), :page 638}, :content {:text "Atomics.exchange()执行简单的交换，以保证其他线程不会中断值的交换"}, :properties {:color "yellow"}} {:id #uuid "63d32a18-c74a-4e5a-b28c-6853600af671", :page 639, :position {:bounding {:x1 0, :y1 12.800018310546875, :x2 816.906762689352, :y2 178.88754272460938, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 12.800018310546875, :x2 0, :y2 35.20001220703125, :width 941, :height 1174.9597806215722} {:x1 603.6125122010708, :y1 130.23751831054688, :x2 816.906762689352, :y2 153.43753051757812, :width 941, :height 1174.9597806215722} {:x1 688.500024408102, :y1 134.23751831054688, :x2 816.906762689352, :y2 150.55001831054688, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 155.30001831054688, :x2 169.94867858290672, :y2 177.70004272460938, :width 941, :height 1174.9597806215722} {:x1 180.72499999403954, :y1 155.68753051757812, :x2 675.3449188172817, :y2 178.88754272460938, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 159.30001831054688, :x2 169.94867858290672, :y2 174.78750610351562, :width 941, :height 1174.9597806215722} {:x1 180.72499999403954, :y1 159.68753051757812, :x2 228.74968871474266, :y2 176.00003051757812, :width 941, :height 1174.9597806215722}), :page 639}, :content {:text "Atomics API 提供了 compareExchange()方法。这个方法只在目标索引处的值与预期值匹配时才会执行写操作。"}, :properties {:color "yellow"}} {:id #uuid "63d32a2d-8ff8-46f9-8d04-cc7bf470c8a2", :page 639, :position {:bounding {:x1 138.72499999403954, :y1 754.1875, :x2 301.5897155702114, :y2 777.3875122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.72499999403954, :y1 754.1875, :x2 301.5897155702114, :y2 777.3875122070312, :width 941, :height 1174.9597806215722} {:x1 171.33750304579735, :y1 758.1875, :x2 216.59560546278954, :y2 774.5, :width 941, :height 1174.9597806215722}), :page 639}, :content {:text "原子 Futex 操作与加锁"}, :properties {:color "green"}} {:id #uuid "63d32a3e-5291-4029-9fe6-dea83bf06222", :page 639, :position {:bounding {:x1 118.80000457167625, :y1 917.1625061035156, :x2 562.2583862245083, :y2 940.7250061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 118.80000457167625, :y1 917.1625061035156, :x2 226.25429686903954, :y2 939.5625305175781, :width 941, :height 1174.9597806215722} {:x1 248.84999999403954, :y1 917.5250244140625, :x2 388.2376647889614, :y2 940.7250061035156, :width 941, :height 1174.9597806215722} {:x1 417.9250122010708, :y1 917.5250244140625, :x2 562.2583862245083, :y2 940.7250061035156, :width 941, :height 1174.9597806215722} {:x1 248.84999999403954, :y1 921.5250244140625, :x2 388.2376647889614, :y2 937.8375244140625, :width 941, :height 1174.9597806215722}), :page 639}, :content {:text "Atomics.wait()和 Atomics.notify()通过示例很容易理解"}, :properties {:color "yellow"}} {:id #uuid "63d32aa6-2375-4419-b6a5-9eeb7cc1eeed", :page 641, :position {:bounding {:x1 0, :y1 12.79998779296875, :x2 818.6289916932583, :y2 178.88751220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 12.79998779296875, :x2 0, :y2 35.20001220703125, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 131.32501220703125, :x2 425.60161742568016, :y2 154.5250244140625, :width 941, :height 1174.9597806215722} {:x1 445.1750122010708, :y1 131.32501220703125, :x2 764.0168090760708, :y2 154.5250244140625, :width 941, :height 1174.9597806215722} {:x1 786.6125122010708, :y1 131.32501220703125, :x2 818.6289916932583, :y2 154.5250244140625, :width 941, :height 1174.9597806215722} {:x1 202.08750304579735, :y1 135.32501220703125, :x2 425.60161742568016, :y2 151.63751220703125, :width 941, :height 1174.9597806215722} {:x1 445.1750122010708, :y1 135.32501220703125, :x2 764.0168090760708, :y2 151.63751220703125, :width 941, :height 1174.9597806215722} {:x1 786.6125122010708, :y1 135.32501220703125, :x2 818.6289916932583, :y2 151.63751220703125, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 155.6875, :x2 156.1042877137661, :y2 178.88751220703125, :width 941, :height 1174.9597806215722}), :page 641}, :content {:text "因为是使用 0 来初始化 SharedArrayBuffer，所以每个工作线程都会到达 Atomics.wait()并停止执行。"}, :properties {:color "yellow"}} {:id #uuid "63d32af6-b788-49ac-b2ff-193f1772b15e", :page 641, :position {:bounding {:x1 151.51250609755516, :y1 308.1749954223633, :x2 446.25893554091454, :y2 331.75000762939453, :width 941, :height 1174.9597806215722}, :rects ({:x1 151.51250609755516, :y1 308.1749954223633, :x2 296.46355590224266, :y2 330.57498931884766, :width 941, :height 1174.9597806215722} {:x1 324.20000609755516, :y1 308.5499954223633, :x2 446.25893554091454, :y2 331.75000762939453, :width 941, :height 1174.9597806215722}), :page 641}, :content {:text "Atomics.isLockFree()是一个优化原语。"}, :properties {:color "yellow"}} {:id #uuid "63d32afd-92c4-4c63-a447-dd4b339ffefd", :page 641, :position {:bounding {:x1 158.82500609755516, :y1 499.91248321533203, :x2 302.9671264588833, :y2 534.3125076293945, :width 941, :height 1174.9597806215722}, :rects ({:x1 158.82500609755516, :y1 499.91248321533203, :x2 302.9671264588833, :y2 534.3125076293945, :width 941, :height 1174.9597806215722}), :page 641}, :content {:text "跨上下文消息"}, :properties {:color "green"}} {:id #uuid "63d32b0d-462b-4dcf-af30-6d81d0c40902", :page 641, :position {:bounding {:x1 0, :y1 252.79999542236328, :x2 814.7789550721645, :y2 596.7125091552734, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 252.79999542236328, :x2 0, :y2 275.1999969482422, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 548.0625152587891, :x2 814.7789550721645, :y2 571.2624969482422, :width 941, :height 1174.9597806215722} {:x1 202.18750914931297, :y1 553.1500091552734, :x2 814.7789550721645, :y2 569.4625091552734, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 573.5124969482422, :x2 424.6432968080044, :y2 596.7125091552734, :width 941, :height 1174.9597806215722}), :page 641}, :content {:text "跨文档消息，有时候也简称为 XDM（cross-document messaging），是一种在不同执行上下文（如不同工作线程或不同源的页面）间传递信息的能力"}, :properties {:color "yellow"}} {:id #uuid "63d32c22-0f70-4ba1-a333-c92722b637c9", :page 641, :position {:bounding {:x1 185.88750609755516, :y1 668.6750030517578, :x2 602.413598626852, :y2 691.8750152587891, :width 941, :height 1174.9597806215722}, :rects ({:x1 185.88750609755516, :y1 668.6750030517578, :x2 602.413598626852, :y2 691.8750152587891, :width 941, :height 1174.9597806215722}), :page 641}, :content {:text "跨 上 下 文 消 息 用 于 窗 口 之 间 通 信 或 工 作 线 程 之 间 通 信 。 本"}, :properties {:color "yellow"}} {:id #uuid "63d32c3e-e61f-486a-8cab-9aa54e5051f3", :page 641, :position {:bounding {:x1 0, :y1 396.8000183105469, :x2 818.6298461854458, :y2 856.9125061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 396.8000183105469, :x2 0, :y2 419.2000198364258, :width 941, :height 1174.9597806215722} {:x1 118.80000457167625, :y1 808.8875122070312, :x2 226.45752868056297, :y2 831.2875061035156, :width 941, :height 1174.9597806215722} {:x1 239.56250914931297, :y1 809.2500305175781, :x2 818.6298461854458, :y2 832.4500427246094, :width 941, :height 1174.9597806215722} {:x1 239.56250914931297, :y1 813.2500305175781, :x2 818.6298461854458, :y2 829.5625305175781, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 833.7125549316406, :x2 227.29482421278954, :y2 856.9125061035156, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 837.7125549316406, :x2 216.78892669081688, :y2 854.0250549316406, :width 941, :height 1174.9597806215722}), :page 641}, :content {:text "postMessage()方法接收 3 个参数：消息、表示目标接收源的字符串和可选的可传输对象的数组（只与工作线程相关）。"}, :properties {:color "yellow"}} {:id #uuid "63d32c63-01be-4760-b8a8-4da2604337b6", :page 641, :position {:bounding {:x1 120.55000457167625, :y1 928.6749877929688, :x2 821.9124999940395, :y2 951.875, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 928.6749877929688, :x2 789.9086547791958, :y2 951.875, :width 941, :height 1174.9597806215722} {:x1 805.9124999940395, :y1 928.6749877929688, :x2 821.9124999940395, :y2 951.875, :width 941, :height 1174.9597806215722} {:x1 610.8374877870083, :y1 932.3125, :x2 789.9086547791958, :y2 947.7999877929688, :width 941, :height 1174.9597806215722}), :page 641}, :content {:text "最后一行代码尝试向内嵌窗格中发送一条消息，而且指定了源必须是\"http://www.wrox.com\"。"}, :properties {:color "yellow"}} {:id #uuid "63d32c85-9599-4751-920b-0bec53285faa", :page 641, :position {:bounding {:x1 120.55000457167625, :y1 1026.1250305175781, :x2 718.2740112245083, :y2 1049.3250274658203, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 1026.1250305175781, :x2 718.2740112245083, :y2 1049.3250274658203, :width 941, :height 1174.9597806215722} {:x1 169.47499999403954, :y1 1030.1250305175781, :x2 507.4427429139614, :y2 1046.4375305175781, :width 941, :height 1174.9597806215722}), :page 641}, :content {:text "接收到 XDM 消息后，window 对象上会触发 message 事件。这个事件是异步触发的"}, :properties {:color "yellow"}} {:id #uuid "63d32c98-0983-4cb5-8c1f-d857797b28a6", :page 642, :position {:bounding {:x1 175.67499694228172, :y1 204.1374969482422, :x2 541.0962768495083, :y2 226.53749084472656, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.67499694228172, :y1 204.1374969482422, :x2 541.0962768495083, :y2 226.53749084472656, :width 941, :height 1174.9597806215722} {:x1 231.41249999403954, :y1 208.50001525878906, :x2 443.0246520936489, :y2 224.81251525878906, :width 941, :height 1174.9597806215722}), :page 642}, :content {:text "source：发送消息的文档中 window 对象的代理。"}, :properties {:color "yellow"}} {:id #uuid "63d32cb4-69fd-44b0-b9fe-cd26f4f063ab", :page 642, :position {:bounding {:x1 0, :y1 301.9499969482422, :x2 845.5324340760708, :y2 371.1999969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 314.45342406630516, :y1 301.9499969482422, :x2 845.5324340760708, :y2 325.15000915527344, :width 941, :height 1174.9597806215722} {:x1 334.4000183045864, :y1 305.9499969482422, :x2 845.5324340760708, :y2 322.2624969482422, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 326.40000915527344, :x2 154.06769713759422, :y2 349.6000213623047, :width 941, :height 1174.9597806215722} {:x1 0, :y1 348.80003356933594, :x2 0, :y2 371.1999969482422, :width 941, :height 1174.9597806215722}), :page 642}, :content {:text "在 onmessage 事件处理程序中检查发送窗口的源可以保证数据来自正确的地方"}, :properties {:color "yellow"}} {:id #uuid "63d32cce-6a08-4e40-9c0e-8c6e71cd327f", :page 642, :position {:bounding {:x1 154.71250304579735, :y1 527.3125152587891, :x2 787.919458001852, :y2 550.8750152587891, :width 941, :height 1174.9597806215722}, :rects ({:x1 379.3124938905239, :y1 527.3125152587891, :x2 787.919458001852, :y2 549.7125091552734, :width 941, :height 1174.9597806215722} {:x1 154.71250304579735, :y1 527.6750030517578, :x2 364.44912108778954, :y2 550.8750152587891, :width 941, :height 1174.9597806215722} {:x1 267.8375183045864, :y1 531.3125152587891, :x2 364.44912108778954, :y2 546.8000030517578, :width 941, :height 1174.9597806215722} {:x1 379.3124938905239, :y1 531.3125152587891, :x2 739.774682611227, :y2 546.8000030517578, :width 941, :height 1174.9597806215722}), :page 642}, :content {:text "大多数情况下，event.source 是某个 window 对象的代理，而非实际的 window 对象。"}, :properties {:color "yellow"}} {:id #uuid "63d32d27-0a68-456f-ac5d-7beb90e422fb", :page 642, :position {:bounding {:x1 192.98749694228172, :y1 786.2875366210938, :x2 317.2247253358364, :y2 820.6875305175781, :width 941, :height 1174.9597806215722}, :rects ({:x1 192.98749694228172, :y1 786.2875366210938, :x2 317.2247253358364, :y2 820.6875305175781, :width 941, :height 1174.9597806215722}), :page 642}, :content {:text "Encoding API"}, :properties {:color "green"}} {:id #uuid "63d32d57-46c8-4927-b2e0-4646d12e47ce", :page 642, :position {:bounding {:x1 154.71250304579735, :y1 830.9750061035156, :x2 570.8284698426723, :y2 854.1750183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 830.9750061035156, :x2 570.8284698426723, :y2 854.1750183105469, :width 941, :height 1174.9597806215722} {:x1 246.75000914931297, :y1 834.9750061035156, :x2 246.89368590712547, :y2 851.2875061035156, :width 941, :height 1174.9597806215722}), :page 642}, :content {:text "Encoding API 主要用于实现字符串与定型数组之间的转换。"}, :properties {:color "yellow"}} {:id #uuid "63d32d60-20df-48db-8f09-189d0f5e0b58", :page 642, :position {:bounding {:x1 200.02500304579735, :y1 962.2624969482422, :x2 283.23916015028954, :y2 991.0625, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 962.2624969482422, :x2 283.23916015028954, :y2 991.0625, :width 941, :height 1174.9597806215722}), :page 642}, :content {:text "文本编码"}, :properties {:color "green"}} {:id #uuid "63d32d77-9e31-46a1-9d91-5ddc8d476500", :page 642, :position {:bounding {:x1 298.2070251405239, :y1 1004.5375061035156, :x2 794.4085327088833, :y2 1027.7374877929688, :width 941, :height 1174.9597806215722}, :rects ({:x1 298.2070251405239, :y1 1004.5375061035156, :x2 794.4085327088833, :y2 1027.7374877929688, :width 941, :height 1174.9597806215722}), :page 642}, :content {:text "两种将字符串转换为定型数组二进制格式的方法：批量编码和流编码。"}, :properties {:color "yellow"}} {:id #uuid "63d32dac-5855-4ba1-8fad-5b63cc314a43", :page 643, :position {:bounding {:x1 138.72499999403954, :y1 129.72500610351562, :x2 203.95850524306297, :y2 152.92498779296875, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.72499999403954, :y1 129.72500610351562, :x2 203.95850524306297, :y2 152.92498779296875, :width 941, :height 1174.9597806215722}), :page 643}, :content {:text "批量编码"}, :properties {:color "green"}} {:id #uuid "63d32dc1-5a25-45f2-a906-58b8f138ca68", :page 643, :position {:bounding {:x1 377.15825805068016, :y1 152.57500457763672, :x2 521.5204711854458, :y2 175.7750015258789, :width 941, :height 1174.9597806215722}, :rects ({:x1 377.15825805068016, :y1 152.57500457763672, :x2 521.5204711854458, :y2 175.7750015258789, :width 941, :height 1174.9597806215722}), :page 643}, :content {:text "同步编码整个字符串"}, :properties {:color "yellow"}} {:id #uuid "63d32dcf-2766-465c-8daf-90d2a55df261", :page 643, :position {:bounding {:x1 119.88415679335594, :y1 176.9375, :x2 442.0890747010708, :y2 200.13750457763672, :width 941, :height 1174.9597806215722}, :rects ({:x1 119.88415679335594, :y1 176.9375, :x2 442.0890747010708, :y2 200.13750457763672, :width 941, :height 1174.9597806215722} {:x1 234.78749999403954, :y1 180.9375, :x2 344.3375183045864, :y2 197.25, :width 941, :height 1174.9597806215722}), :page 643}, :content {:text "批量编码是通过 TextEncoder 的实例完成的"}, :properties {:color "yellow"}} {:id #uuid "63d32dfc-f020-44bb-8edb-fed0a304acc0", :page 643, :position {:bounding {:x1 0, :y1 76.80000138282776, :x2 817.420434564352, :y2 278.80001068115234, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 76.80000138282776, :x2 0, :y2 99.20000290870667, :width 941, :height 1174.9597806215722} {:x1 716.6375366151333, :y1 230.76250457763672, :x2 817.420434564352, :y2 253.1624984741211, :width 941, :height 1174.9597806215722} {:x1 152.6144958436489, :y1 231.13750457763672, :x2 703.889184564352, :y2 254.3375015258789, :width 941, :height 1174.9597806215722} {:x1 716.6375366151333, :y1 234.76250457763672, :x2 817.420434564352, :y2 250.25000762939453, :width 941, :height 1174.9597806215722} {:x1 251.21250304579735, :y1 235.13750457763672, :x2 703.889184564352, :y2 251.45000457763672, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 255.5999984741211, :x2 220.67896422743797, :y2 278.80001068115234, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 259.5999984741211, :x2 185.89985045790672, :y2 275.9124984741211, :width 941, :height 1174.9597806215722}), :page 643}, :content {:text "实例上有一个 encode()方法，该方法接收一个字符串参数，并以 Uint8Array 格式返回每个字符的 UTF-8 编码"}, :properties {:color "yellow"}} {:id #uuid "63d32e5b-2dbe-4f20-9052-d69e6785491c", :page 643, :position {:bounding {:x1 0, :y1 300.80001068115234, :x2 817.8694702088833, :y2 615.6999893188477, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 300.80001068115234, :x2 0, :y2 323.2000045776367, :width 941, :height 1174.9597806215722} {:x1 0, :y1 316.80001068115234, :x2 0, :y2 339.2000198364258, :width 941, :height 1174.9597806215722} {:x1 271.66249999403954, :y1 543.4125137329102, :x2 367.9903198182583, :y2 565.8125076293945, :width 941, :height 1174.9597806215722} {:x1 383.2375122010708, :y1 543.7750015258789, :x2 726.9016967713833, :y2 566.9750137329102, :width 941, :height 1174.9597806215722} {:x1 739.6499877870083, :y1 543.7750015258789, :x2 817.8694702088833, :y2 566.9750137329102, :width 941, :height 1174.9597806215722} {:x1 383.2375122010708, :y1 547.7750015258789, :x2 726.9016967713833, :y2 564.0875015258789, :width 941, :height 1174.9597806215722} {:x1 739.6499877870083, :y1 547.7750015258789, :x2 817.8694702088833, :y2 564.0875015258789, :width 941, :height 1174.9597806215722} {:x1 354.9625183045864, :y1 567.7625198364258, :x2 810.7574096620083, :y2 590.1625137329102, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 568.1500015258789, :x2 343.84609374403954, :y2 591.3500137329102, :width 941, :height 1174.9597806215722} {:x1 354.9625183045864, :y1 571.7625198364258, :x2 810.7574096620083, :y2 587.2500076293945, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 572.1500015258789, :x2 343.84609374403954, :y2 588.4625015258789, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 592.5000381469727, :x2 200.10830077528954, :y2 615.6999893188477, :width 941, :height 1174.9597806215722}), :page 643}, :content {:text "encodeInto()方法，该方法接收一个字符串和目标 Unit8Array，返回一个字典，该字典包含 read 和 written 属性，分别表示成功从源字符串读取了多少字符和向目标数组写入了多少字符。"}, :properties {:color "yellow"}} {:id #uuid "63d32e6f-d9d3-4106-bfc6-9bf0b1b958e1", :page 643, :position {:bounding {:x1 138.72499999403954, :y1 944.5250549316406, :x2 187.65012511610985, :y2 967.7250061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.72499999403954, :y1 944.5250549316406, :x2 187.65012511610985, :y2 967.7250061035156, :width 941, :height 1174.9597806215722}), :page 643}, :content {:text "流编码"}, :properties {:color "green"}} {:id #uuid "63d32e7a-e360-4865-87a2-06d5dfbb7837", :page 643, :position {:bounding {:x1 0, :y1 572.8000183105469, :x2 816.1079955995083, :y2 1014.9500274658203, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 572.8000183105469, :x2 0, :y2 595.2000122070312, :width 941, :height 1174.9597806215722} {:x1 687.8116088807583, :y1 967.3875274658203, :x2 816.1079955995083, :y2 990.5875244140625, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 991.7500228881836, :x2 408.538468927145, :y2 1014.9500274658203, :width 941, :height 1174.9597806215722}), :page 643}, :content {:text "解码后的文本流通过管道输入流编码器会得到编码后文本块的流"}, :properties {:color "yellow"}} {:id #uuid "63d32eea-cc3a-4226-8b70-3ad69201e87e", :page 644, :position {:bounding {:x1 200.02500304579735, :y1 677.2750015258789, :x2 283.23916015028954, :y2 706.0749893188477, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 677.2750015258789, :x2 283.23916015028954, :y2 706.0749893188477, :width 941, :height 1174.9597806215722}), :page 644}, :content {:text "文本解码"}, :properties {:color "green"}} {:id #uuid "63d32ef8-ef6c-430e-8c9b-8436eeed9e5e", :page 644, :position {:bounding {:x1 298.3056579530239, :y1 719.5625305175781, :x2 715.329614251852, :y2 742.7625122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 298.3056579530239, :y1 719.5625305175781, :x2 715.329614251852, :y2 742.7625122070312, :width 941, :height 1174.9597806215722}), :page 644}, :content {:text "两种将定型数组转换为字符串的方式：批量解码和流解码。"}, :properties {:color "yellow"}} {:id #uuid "63d32eff-e047-4459-b60e-19ee6097109d", :page 644, :position {:bounding {:x1 172.88750609755516, :y1 822.3250122070312, :x2 238.12099608778954, :y2 845.5250244140625, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 822.3250122070312, :x2 238.12099608778954, :y2 845.5250244140625, :width 941, :height 1174.9597806215722}), :page 644}, :content {:text "批量解码"}, :properties {:color "green"}} {:id #uuid "63d32f10-8be8-4b69-9164-53cd7c7de62a", :page 644, :position {:bounding {:x1 154.04665526747704, :y1 869.5500183105469, :x2 476.2515808045864, :y2 892.7500305175781, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.04665526747704, :y1 869.5500183105469, :x2 476.2515808045864, :y2 892.7500305175781, :width 941, :height 1174.9597806215722} {:x1 268.9625183045864, :y1 873.5500183105469, :x2 378.4999938905239, :y2 889.8625183105469, :width 941, :height 1174.9597806215722}), :page 644}, :content {:text "批量解码是通过 TextDecoder 的实例完成的"}, :properties {:color "yellow"}} {:id #uuid "63d32f26-732f-43c8-8a91-99b4d03a8399", :page 644, :position {:bounding {:x1 289.5250183045864, :y1 923.3500061035156, :x2 796.828149408102, :y2 945.7500305175781, :width 941, :height 1174.9597806215722}, :rects ({:x1 289.5250183045864, :y1 923.3500061035156, :x2 796.828149408102, :y2 945.7500305175781, :width 941, :height 1174.9597806215722}), :page 644}, :content {:text "decode()方法，该方法接收一个定型数组参数，返回解码后的字符串："}, :properties {:color "yellow"}} {:id #uuid "63d32f64-8d90-4eec-b3d5-f964c7be5d6b", :page 645, :position {:bounding {:x1 120.55000457167625, :y1 131.32501220703125, :x2 630.88343963027, :y2 154.52499389648438, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 131.32501220703125, :x2 630.88343963027, :y2 154.52499389648438, :width 941, :height 1174.9597806215722}), :page 645}, :content {:text "解码器不关心传入的是哪种定型数组，它只会专心解码整个二进制表示。"}, :properties {:color "yellow"}} {:id #uuid "63d32f80-e19d-4fc4-9b5f-64f5c45dc1cf", :page 645, :position {:bounding {:x1 120.55000457167625, :y1 476.5875015258789, :x2 579.589135736227, :y2 499.78751373291016, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 476.5875015258789, :x2 579.589135736227, :y2 499.78751373291016, :width 941, :height 1174.9597806215722} {:x1 136.86249694228172, :y1 480.5875015258789, :x2 398.9247680604458, :y2 496.9000015258789, :width 941, :height 1174.9597806215722}), :page 645}, :content {:text "与 TextEncoder 不同，TextDecoder 可以兼容很多字符编码。"}, :properties {:color "yellow"}} {:id #uuid "63d32f89-f3d1-44ab-80a5-6fe0ae58dfd7", :page 645, :position {:bounding {:x1 138.72499999403954, :y1 674.8125381469727, :x2 187.65012511610985, :y2 698.0124893188477, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.72499999403954, :y1 674.8125381469727, :x2 187.65012511610985, :y2 698.0124893188477, :width 941, :height 1174.9597806215722}), :page 645}, :content {:text "流解码"}, :properties {:color "green"}} {:id #uuid "63d32f97-3730-49ff-9a8f-e3cf0e1f316c", :page 645, :position {:bounding {:x1 0, :y1 380.8000183105469, :x2 816.1079955995083, :y2 745.2375335693359, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 380.8000183105469, :x2 0, :y2 403.2000198364258, :width 941, :height 1174.9597806215722} {:x1 118.80000457167625, :y1 697.3000335693359, :x2 266.30110320448875, :y2 719.7000274658203, :width 941, :height 1174.9597806215722} {:x1 276.72499999403954, :y1 697.3000335693359, :x2 816.1079955995083, :y2 719.7000274658203, :width 941, :height 1174.9597806215722} {:x1 276.72499999403954, :y1 701.3000335693359, :x2 816.1079955995083, :y2 716.7875213623047, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 722.0375213623047, :x2 408.538468927145, :y2 745.2375335693359, :width 941, :height 1174.9597806215722}), :page 645}, :content {:text "TextDecoderStream 其实就是 TransformStream 形式的 TextDecoder。将编码后的文本流通过管道输入流解码器会得到解码后文本块的流"}, :properties {:color "yellow"}} {:id #uuid "63d32fb4-92b2-41b5-949b-00c8092eddc5", :page 646, :position {:bounding {:x1 154.71250304579735, :y1 1056.7749938964844, :x2 802.7002807557583, :y2 1079.9750061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 1056.7749938964844, :x2 354.4148803651333, :y2 1079.9750061035156, :width 941, :height 1174.9597806215722} {:x1 370.9625183045864, :y1 1056.7749938964844, :x2 802.7002807557583, :y2 1079.9750061035156, :width 941, :height 1174.9597806215722} {:x1 301.6874938905239, :y1 1060.7749938964844, :x2 354.4148803651333, :y2 1077.0874938964844, :width 941, :height 1174.9597806215722} {:x1 370.9625183045864, :y1 1060.7749938964844, :x2 734.1747680604458, :y2 1077.0874938964844, :width 941, :height 1174.9597806215722}), :page 646}, :content {:text "文本解码器流经常与 fetch()一起使用，因为响应体可以作为 ReadableStream 来处理。"}, :properties {:color "yellow"}} {:id #uuid "63d3300d-4bf8-4b6e-aeb2-5f30fb852db6", :page 647, :position {:bounding {:x1 158.82500609755516, :y1 271.33750915527344, :x2 356.74685057997704, :y2 305.73753356933594, :width 941, :height 1174.9597806215722}, :rects ({:x1 158.82500609755516, :y1 271.33750915527344, :x2 230.61951598525047, :y2 305.73753356933594, :width 941, :height 1174.9597806215722} {:x1 241.65000304579735, :y1 271.33750915527344, :x2 356.74685057997704, :y2 305.73753356933594, :width 941, :height 1174.9597806215722} {:x1 241.65000304579735, :y1 276.93748474121094, :x2 271.19020995497704, :y2 300.98753356933594, :width 941, :height 1174.9597806215722}), :page 647}, :content {:text "File API 与 Blob API"}, :properties {:color "green"}} {:id #uuid "63d33026-43fe-4b57-bf62-f4e4c577eb21", :page 647, :position {:bounding {:x1 146.39826354384422, :y1 406.7375030517578, :x2 260.83208617568016, :y2 436.1875, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 406.7375030517578, :x2 201.32204589247704, :y2 434.7375030517578, :width 941, :height 1174.9597806215722} {:x1 213.36249694228172, :y1 406.7375030517578, :x2 260.83208617568016, :y2 434.7375030517578, :width 941, :height 1174.9597806215722} {:x1 146.39826354384422, :y1 407.3874969482422, :x2 146.4017730653286, :y2 436.1875, :width 941, :height 1174.9597806215722} {:x1 165.86249694228172, :y1 411.5375061035156, :x2 201.32204589247704, :y2 431.3500061035156, :width 941, :height 1174.9597806215722} {:x1 213.36249694228172, :y1 411.5375061035156, :x2 217.33750304579735, :y2 431.3500061035156, :width 941, :height 1174.9597806215722}), :page 647}, :content {:text "File 类型"}, :properties {:color "green"}} {:id #uuid "63d33057-6ec4-4152-a88c-5aaf23d71e08", :page 647, :position {:bounding {:x1 120.55000457167625, :y1 447.21250915527344, :x2 731.2916503846645, :y2 470.4125061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 447.21250915527344, :x2 166.04297789931297, :y2 470.4125061035156, :width 941, :height 1174.9597806215722} {:x1 178.82500609755516, :y1 447.21250915527344, :x2 731.2916503846645, :y2 470.4125061035156, :width 941, :height 1174.9597806215722} {:x1 178.82500609755516, :y1 451.21250915527344, :x2 179.11103209853172, :y2 467.52500915527344, :width 941, :height 1174.9597806215722}), :page 647}, :content {:text "File API 仍然以表单中的文件输入字段为基础，但是增加了直接访问文件信息的能力。"}, :properties {:color "yellow"}} {:id #uuid "63d33063-52e5-4e74-a5f3-2dc49468c454", :page 647, :position {:bounding {:x1 0, :y1 188.79999694228172, :x2 818.9250122010708, :y2 494.78749999403954, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 188.79999694228172, :x2 0, :y2 211.20000609755516, :width 941, :height 1174.9597806215722} {:x1 741.5249877870083, :y1 447.2125183045864, :x2 818.9250122010708, :y2 470.41249999403954, :width 941, :height 1174.9597806215722} {:x1 802.9250122010708, :y1 452.3000122010708, :x2 818.9250122010708, :y2 468.6125122010708, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 471.5875183045864, :x2 343.7781921327114, :y2 494.78749999403954, :width 941, :height 1174.9597806215722} {:x1 359.4999938905239, :y1 472.28749999403954, :x2 395.91289672255516, :y2 494.6874938905239, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 475.5875183045864, :x2 343.7781921327114, :y2 491.9000183045864, :width 941, :height 1174.9597806215722} {:x1 359.4999938905239, :y1 476.28749999403954, :x2 359.69997557997704, :y2 491.7750183045864, :width 941, :height 1174.9597806215722}), :page 647}, :content {:text "HTML5 在 DOM 上为文件输入元素添加了 files 集合"}, :properties {:color "yellow"}} {:id #uuid "63d33075-4572-4ee4-90fc-0ba8dac5a380", :page 647, :position {:bounding {:x1 146.39826354384422, :y1 916.4250183105469, :x2 332.0570922791958, :y2 945.8875122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 916.4250183105469, :x2 271.22561034560204, :y2 944.4250183105469, :width 941, :height 1174.9597806215722} {:x1 284.5875183045864, :y1 916.4250183105469, :x2 332.0570922791958, :y2 944.4250183105469, :width 941, :height 1174.9597806215722} {:x1 146.39826354384422, :y1 917.0875244140625, :x2 146.4017730653286, :y2 945.8875122070312, :width 941, :height 1174.9597806215722} {:x1 165.86249694228172, :y1 921.2250061035156, :x2 271.22561034560204, :y2 941.0375061035156, :width 941, :height 1174.9597806215722} {:x1 284.5875183045864, :y1 921.2250061035156, :x2 288.5624938905239, :y2 941.0375061035156, :width 941, :height 1174.9597806215722}), :page 647}, :content {:text "FileReader 类型"}, :properties {:color "green"}} {:id #uuid "63d330b9-2861-461d-a86a-688039a95fc2", :page 647, :position {:bounding {:x1 118.80000457167625, :y1 957.6250305175781, :x2 447.86528930068016, :y2 980.0250244140625, :width 941, :height 1174.9597806215722}, :rects ({:x1 118.80000457167625, :y1 957.6250305175781, :x2 196.48430785536766, :y2 980.0250244140625, :width 941, :height 1174.9597806215722} {:x1 209.31250914931297, :y1 957.6250305175781, :x2 447.86528930068016, :y2 980.0250244140625, :width 941, :height 1174.9597806215722} {:x1 209.31250914931297, :y1 961.6250305175781, :x2 447.86528930068016, :y2 977.1125183105469, :width 941, :height 1174.9597806215722}), :page 647}, :content {:text "FileReader 类型表示一种异步文件读取机制。"}, :properties {:color "yellow"}} {:id #uuid "63d330c4-4600-4fd1-b7eb-61833d6886d6", :page 647, :position {:bounding {:x1 141.50000914931297, :y1 1030.8000183105469, :x2 769.0052123963833, :y2 1054.375, :width 941, :height 1174.9597806215722}, :rects ({:x1 141.50000914931297, :y1 1030.8000183105469, :x2 332.1437622010708, :y2 1053.2000122070312, :width 941, :height 1174.9597806215722} {:x1 700.2249999940395, :y1 1030.8000183105469, :x2 769.0052123963833, :y2 1053.2000122070312, :width 941, :height 1174.9597806215722} {:x1 378.9000183045864, :y1 1031.1750183105469, :x2 687.4373413026333, :y2 1054.375, :width 941, :height 1174.9597806215722} {:x1 700.2249999940395, :y1 1034.8000183105469, :x2 700.4250122010708, :y2 1050.2875366210938, :width 941, :height 1174.9597806215722} {:x1 378.9000183045864, :y1 1035.1750183105469, :x2 687.4373413026333, :y2 1051.487548828125, :width 941, :height 1174.9597806215722}), :page 647}, :content {:text "readAsText(file, encoding)：从文件中读取纯文本内容并保存在 result 属性中。"}, :properties {:color "yellow"}} {:id #uuid "63d33127-e6c0-428d-b341-bab696ea1a0a", :page 648, :position {:bounding {:x1 170.39039000868797, :y1 130.95004272460938, :x2 745.3622070252895, :y2 154.52499389648438, :width 941, :height 1174.9597806215722}, :rects ({:x1 692.687524408102, :y1 130.95004272460938, :x2 745.3622070252895, :y2 153.35000610351562, :width 941, :height 1174.9597806215722} {:x1 352.1750122010708, :y1 131.32504272460938, :x2 679.883325189352, :y2 154.52499389648438, :width 941, :height 1174.9597806215722} {:x1 170.39039000868797, :y1 131.98751831054688, :x2 326.3984313905239, :y2 154.38754272460938, :width 941, :height 1174.9597806215722} {:x1 175.67499694228172, :y1 134.95004272460938, :x2 326.3984313905239, :y2 150.43753051757812, :width 941, :height 1174.9597806215722} {:x1 692.687524408102, :y1 134.95004272460938, :x2 692.8872924745083, :y2 150.43753051757812, :width 941, :height 1174.9597806215722} {:x1 352.1750122010708, :y1 135.32504272460938, :x2 679.883325189352, :y2 151.63754272460938, :width 941, :height 1174.9597806215722}), :page 648}, :content {:text "readAsDataURL(file)：读取文件并将内容的数据 URI 保存在 result 属性中"}, :properties {:color "yellow"}} {:id #uuid "63d3312f-7eb9-4193-951e-cca1675c8385", :page 648, :position {:bounding {:x1 175.67499694228172, :y1 155.31253051757812, :x2 838.0497070252895, :y2 178.88754272460938, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.67499694228172, :y1 155.31253051757812, :x2 355.0364623963833, :y2 177.71249389648438, :width 941, :height 1174.9597806215722} {:x1 785.3875366151333, :y1 155.31253051757812, :x2 838.0497070252895, :y2 177.71249389648438, :width 941, :height 1174.9597806215722} {:x1 398.6249938905239, :y1 155.68753051757812, :x2 772.570825189352, :y2 178.88754272460938, :width 941, :height 1174.9597806215722} {:x1 785.3875366151333, :y1 159.31253051757812, :x2 785.5872436463833, :y2 174.80001831054688, :width 941, :height 1174.9597806215722} {:x1 398.6249938905239, :y1 159.68753051757812, :x2 772.570825189352, :y2 176.00003051757812, :width 941, :height 1174.9597806215722}), :page 648}, :content {:text "readAsBinaryString(file)：读取文件并将每个字符的二进制数据保存在 result 属性中"}, :properties {:color "yellow"}} {:id #uuid "63d33139-0f69-408b-948a-8afcbacf4d6d", :page 648, :position {:bounding {:x1 175.67499694228172, :y1 179.67501831054688, :x2 845.0609374940395, :y2 203.23751831054688, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.67499694228172, :y1 179.67501831054688, :x2 340.0539489686489, :y2 202.07504272460938, :width 941, :height 1174.9597806215722} {:x1 667.8999877870083, :y1 179.67501831054688, :x2 797.1942382752895, :y2 202.07504272460938, :width 941, :height 1174.9597806215722} {:x1 809.6375366151333, :y1 179.67501831054688, :x2 845.0609374940395, :y2 202.07504272460938, :width 941, :height 1174.9597806215722} {:x1 381.38750609755516, :y1 180.03750610351562, :x2 651.2629028260708, :y2 203.23751831054688, :width 941, :height 1174.9597806215722} {:x1 667.8999877870083, :y1 183.67501831054688, :x2 797.1942382752895, :y2 199.16250610351562, :width 941, :height 1174.9597806215722} {:x1 809.6375366151333, :y1 183.67501831054688, :x2 812.7375122010708, :y2 199.16250610351562, :width 941, :height 1174.9597806215722} {:x1 381.38750609755516, :y1 184.03750610351562, :x2 651.2629028260708, :y2 200.35000610351562, :width 941, :height 1174.9597806215722}), :page 648}, :content {:text "readAsArrayBuffer(file)：读取文件并将文件内容以 ArrayBuffer 形式保存在 result 属性"}, :properties {:color "yellow"}} {:id #uuid "63d3319c-2ab4-4415-8e36-598e457b7de2", :page 648, :position {:bounding {:x1 0, :y1 253.22500038146973, :x2 850.979028314352, :y2 339.20000648498535, :width 941, :height 1174.9597806215722}, :rects ({:x1 683.8594604432583, :y1 253.22500038146973, :x2 850.979028314352, :y2 276.425012588501, :width 941, :height 1174.9597806215722} {:x1 702.8999877870083, :y1 257.2250003814697, :x2 850.979028314352, :y2 273.5375003814697, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 277.2125186920166, :x2 690.1741577088833, :y2 299.612512588501, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 281.2125186920166, :x2 317.2731872498989, :y2 296.70000648498535, :width 941, :height 1174.9597806215722} {:x1 0, :y1 316.800012588501, :x2 0, :y2 339.20000648498535, :width 941, :height 1174.9597806215722}), :page 648}, :content {:text "中 3 个最有用的事件是 progress、error 和 load，分别表示还有更多数据、发生了错误和读取完成。"}, :properties {:color "yellow"}} {:id #uuid "63d331c2-336f-48b6-8ecb-0aa66ebe31ec", :page 648, :position {:bounding {:x1 152.96250304579735, :y1 301.5749969482422, :x2 477.8498474061489, :y2 325.1374969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 301.5749969482422, :x2 227.73273620009422, :y2 323.9750061035156, :width 941, :height 1174.9597806215722} {:x1 237.91249999403954, :y1 301.9375, :x2 477.8498474061489, :y2 325.1374969482422, :width 941, :height 1174.9597806215722} {:x1 227.27500304579735, :y1 305.5749969482422, :x2 227.73273620009422, :y2 321.0625, :width 941, :height 1174.9597806215722} {:x1 237.91249999403954, :y1 305.9375, :x2 315.5624633729458, :y2 322.25, :width 941, :height 1174.9597806215722}), :page 648}, :content {:text "progress 事件每 50 毫秒就会触发一次，"}, :properties {:color "yellow"}} {:id #uuid "63d3323e-dbcf-4bb1-b888-e3f6e00474f0", :page 648, :position {:bounding {:x1 152.96250304579735, :y1 374.75, :x2 526.0633178651333, :y2 397.1499938964844, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 374.75, :x2 526.0633178651333, :y2 397.1499938964844, :width 941, :height 1174.9597806215722} {:x1 199.41249999403954, :y1 378.75, :x2 199.6658111512661, :y2 394.2375030517578, :width 941, :height 1174.9597806215722}), :page 648}, :content {:text "error 事件会在由于某种原因无法读取文件时触发。"}, :properties {:color "yellow"}} {:id #uuid "63d33245-07f4-4339-bfe1-30b504ac8272", :page 648, :position {:bounding {:x1 152.96250304579735, :y1 447.93751525878906, :x2 419.9229675233364, :y2 470.33750915527344, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 447.93751525878906, :x2 419.9229675233364, :y2 470.33750915527344, :width 941, :height 1174.9597806215722} {:x1 190.12500914931297, :y1 451.93751525878906, :x2 190.35164794325829, :y2 467.4250030517578, :width 941, :height 1174.9597806215722}), :page 648}, :content {:text "load 事件会在文件成功加载后触发。"}, :properties {:color "yellow"}} {:id #uuid "63d3324d-1910-44be-8d3c-85c9e3e364ba", :page 649, :position {:bounding {:x1 146.39826354384422, :y1 440.07500648498535, :x2 379.5320983827114, :y2 469.5375003814697, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 440.07500648498535, :x2 318.8055358827114, :y2 468.07500648498535, :width 941, :height 1174.9597806215722} {:x1 332.07500609755516, :y1 440.07500648498535, :x2 379.5320983827114, :y2 468.07500648498535, :width 941, :height 1174.9597806215722} {:x1 146.39826354384422, :y1 440.737512588501, :x2 146.4017730653286, :y2 469.5375003814697, :width 941, :height 1174.9597806215722} {:x1 165.86249694228172, :y1 444.8749942779541, :x2 318.8055358827114, :y2 464.6874942779541, :width 941, :height 1174.9597806215722} {:x1 332.07500609755516, :y1 444.8749942779541, :x2 336.0500122010708, :y2 464.6874942779541, :width 941, :height 1174.9597806215722}), :page 649}, :content {:text "FileReaderSync 类型"}, :properties {:color "green"}} {:id #uuid "63d3332a-7124-4fdd-95bf-f258672ace97", :page 649, :position {:bounding {:x1 200.68720397353172, :y1 481.2750186920166, :x2 605.786157220602, :y2 504.8375186920166, :width 941, :height 1174.9597806215722}, :rects ({:x1 332.3625122010708, :y1 481.2750186920166, :x2 489.17373046278954, :y2 503.675012588501, :width 941, :height 1174.9597806215722} {:x1 502.3625122010708, :y1 481.2750186920166, :x2 605.786157220602, :y2 503.675012588501, :width 941, :height 1174.9597806215722} {:x1 200.68720397353172, :y1 481.63750648498535, :x2 318.0533386170864, :y2 504.8375186920166, :width 941, :height 1174.9597806215722} {:x1 202.20000609755516, :y1 485.2750186920166, :x2 318.0533386170864, :y2 500.76250648498535, :width 941, :height 1174.9597806215722} {:x1 332.3625122010708, :y1 485.2750186920166, :x2 489.17373046278954, :y2 500.76250648498535, :width 941, :height 1174.9597806215722} {:x1 502.3625122010708, :y1 485.2750186920166, :x2 557.6792846620083, :y2 500.76250648498535, :width 941, :height 1174.9597806215722}), :page 649}, :content {:text "FileReaderSync 类型就是 FileReader 的同步版本。"}, :properties {:color "yellow"}} {:id #uuid "63d33349-9b48-4be0-928c-2529ff403234", :page 649, :position {:bounding {:x1 0, :y1 252.80001831054688, :x2 806.168237298727, :y2 529.3000183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 252.80001831054688, :x2 0, :y2 275.20001792907715, :width 941, :height 1174.9597806215722} {:x1 669.934350579977, :y1 481.6375274658203, :x2 806.168237298727, :y2 504.8375244140625, :width 941, :height 1174.9597806215722} {:x1 721.0500122010708, :y1 485.6375274658203, :x2 806.168237298727, :y2 501.9500274658203, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 506.1000213623047, :x2 530.5948882997036, :y2 529.3000183105469, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 510.1000213623047, :x2 183.98293456435204, :y2 526.4125213623047, :width 941, :height 1174.9597806215722}), :page 649}, :content {:text "拥有与 FileReader相同的方法，只有在整个文件都加载到内存之后才会继续执行。"}, :properties {:color "yellow"}} {:id #uuid "63d33350-d4e2-4fa2-acd7-2a443545a6fd", :page 649, :position {:bounding {:x1 165.86249694228172, :y1 876.8875427246094, :x2 323.24270018935204, :y2 904.8875427246094, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 876.8875427246094, :x2 323.24270018935204, :y2 904.8875427246094, :width 941, :height 1174.9597806215722} {:x1 213.36249694228172, :y1 881.6875305175781, :x2 217.33750304579735, :y2 901.5000305175781, :width 941, :height 1174.9597806215722}), :page 649}, :content {:text "Blob 与部分读取"}, :properties {:color "green"}} {:id #uuid "63d3336d-a37a-47b1-a624-687cc8be7bff", :page 649, :position {:bounding {:x1 153.06250914931297, :y1 942.5500183105469, :x2 571.0149780213833, :y2 966.1250305175781, :width 941, :height 1174.9597806215722}, :rects ({:x1 153.06250914931297, :y1 942.5500183105469, :x2 197.31971129775047, :y2 964.9500122070312, :width 941, :height 1174.9597806215722} {:x1 218.20000609755516, :y1 942.9250183105469, :x2 571.0149780213833, :y2 966.1250305175781, :width 941, :height 1174.9597806215722}), :page 649}, :content {:text "slice()方法接收两个参数：起始字节和要读取的字节数。"}, :properties {:color "yellow"}} {:id #uuid "63d33374-a21e-4e54-9afe-b69db3247751", :page 649, :position {:bounding {:x1 0, :y1 540.800012588501, :x2 818.4414916932583, :y2 990.4875183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 540.800012588501, :x2 0, :y2 563.2000122070312, :width 941, :height 1174.9597806215722} {:x1 651.2002807557583, :y1 942.9250183105469, :x2 818.4414916932583, :y2 966.1250305175781, :width 941, :height 1174.9597806215722} {:x1 708.3250366151333, :y1 946.9250183105469, :x2 818.4414916932583, :y2 963.2375183105469, :width 941, :height 1174.9597806215722} {:x1 256.70000609755516, :y1 966.9125061035156, :x2 325.46648558974266, :y2 989.3125305175781, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 967.2875061035156, :x2 246.36115416884422, :y2 990.4875183105469, :width 941, :height 1174.9597806215722} {:x1 256.70000609755516, :y1 970.9125061035156, :x2 259.8000122010708, :y2 986.4000244140625, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 971.2875061035156, :x2 246.36115416884422, :y2 987.6000061035156, :width 941, :height 1174.9597806215722}), :page 649}, :content {:text "回一个 Blob 的实例，而 Blob 实际上是 File 的超类。"}, :properties {:color "yellow"}} {:id #uuid "63d3337d-31d9-401e-b393-6f224551af15", :page 649, :position {:bounding {:x1 120.55000457167625, :y1 990.5625305175781, :x2 798.1712280213833, :y2 1014.8500061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 990.5625305175781, :x2 403.64763793349266, :y2 1013.7625122070312, :width 941, :height 1174.9597806215722} {:x1 425.2375122010708, :y1 991.6500244140625, :x2 798.1712280213833, :y2 1014.8500061035156, :width 941, :height 1174.9597806215722} {:x1 149.56250914931297, :y1 994.5625305175781, :x2 403.64763793349266, :y2 1010.8750305175781, :width 941, :height 1174.9597806215722} {:x1 425.2375122010708, :y1 995.6500244140625, :x2 541.5500122010708, :y2 1011.9625244140625, :width 941, :height 1174.9597806215722}), :page 649}, :content {:text "blob 表示二进制大对象（binary larget object），是 JavaScript 对不可修改二进制数据的封装类型。"}, :properties {:color "yellow"}} {:id #uuid "63d3338c-4b24-4bee-ba6c-d9d7ce7fa76a", :page 650, :position {:bounding {:x1 0, :y1 270.71250915527344, :x2 849.4662109315395, :y2 355.1999969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 270.71250915527344, :x2 620.0335327088833, :y2 293.1125030517578, :width 941, :height 1174.9597806215722} {:x1 640.9749999940395, :y1 271.0749969482422, :x2 849.4662109315395, :y2 294.27500915527344, :width 941, :height 1174.9597806215722} {:x1 190.12500914931297, :y1 274.71250915527344, :x2 620.0335327088833, :y2 290.1999969482422, :width 941, :height 1174.9597806215722} {:x1 640.9749999940395, :y1 275.0749969482422, :x2 849.4662109315395, :y2 291.3874969482422, :width 941, :height 1174.9597806215722} {:x1 317.07500609755516, :y1 295.06248474121094, :x2 480.1635375916958, :y2 317.46250915527344, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 295.4499969482422, :x2 303.9182067811489, :y2 318.65000915527344, :width 941, :height 1174.9597806215722} {:x1 317.07500609755516, :y1 299.06248474121094, :x2 382.41249999403954, :y2 314.55003356933594, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 299.4499969482422, :x2 303.9182067811489, :y2 315.7624969482422, :width 941, :height 1174.9597806215722} {:x1 0, :y1 332.80003356933594, :x2 0, :y2 355.1999969482422, :width 941, :height 1174.9597806215722}), :page 650}, :content {:text "Blob 对象有一个 size 属性和一个 type 属性，还有一个 slice()方法用于进一步切分数据。另外也可以使用 FileReader 从 Blob 中读取数据。"}, :properties {:color "yellow"}} {:id #uuid "63d333b4-8865-48dc-bb72-818521ea5b01", :page 650, :position {:bounding {:x1 180.57325133681297, :y1 731.2499847412109, :x2 364.1679626405239, :y2 761.4374847412109, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 731.2499847412109, :x2 364.1679626405239, :y2 760.0500335693359, :width 941, :height 1174.9597806215722} {:x1 180.57325133681297, :y1 732.6374969482422, :x2 180.5767761170864, :y2 761.4374847412109, :width 941, :height 1174.9597806215722} {:x1 200.02500304579735, :y1 736.0500335693359, :x2 313.0258727967739, :y2 756.6874847412109, :width 941, :height 1174.9597806215722}), :page 650}, :content {:text "对象 URL 与 Blob"}, :properties {:color "green"}} {:id #uuid "63d333c2-a914-461a-baf4-9a886c24ae16", :page 650, :position {:bounding {:x1 154.71250304579735, :y1 773.1749877929688, :x2 749.960229486227, :y2 796.7374877929688, :width 941, :height 1174.9597806215722}, :rects ({:x1 566.0500122010708, :y1 773.1749877929688, :x2 749.960229486227, :y2 795.5750122070312, :width 941, :height 1174.9597806215722} {:x1 154.71250304579735, :y1 773.5375061035156, :x2 555.6769042909145, :y2 796.7374877929688, :width 941, :height 1174.9597806215722} {:x1 566.0500122010708, :y1 777.1749877929688, :x2 739.9101196229458, :y2 792.6625061035156, :width 941, :height 1174.9597806215722} {:x1 187.33750304579735, :y1 777.5375061035156, :x2 555.6769042909145, :y2 793.8500061035156, :width 941, :height 1174.9597806215722}), :page 650}, :content {:text "对象 URL 有时候也称作 Blob URL，是指引用存储在 File 或 Blob 中数据的 URL。"}, :properties {:color "yellow"}} {:id #uuid "63d333c9-dd4f-4095-958d-3d5d9911f313", :page 650, :position {:bounding {:x1 154.0644927918911, :y1 797.9125061035156, :x2 773.0486694276333, :y2 821.1124877929688, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.0644927918911, :y1 797.9125061035156, :x2 773.0486694276333, :y2 821.1124877929688, :width 941, :height 1174.9597806215722} {:x1 317.9875122010708, :y1 801.9125061035156, :x2 743.418237298727, :y2 818.2250061035156, :width 941, :height 1174.9597806215722}), :page 650}, :content {:text "不用把文件内容读取到 JavaScript 也可以使用文件。只要在适当位置提供对象 URL 即可"}, :properties {:color "yellow"}} {:id #uuid "63d333f9-8c9f-4160-930a-927b7bb239ee", :page 650, :position {:bounding {:x1 190.64040526747704, :y1 821.8875122070312, :x2 740.1521850526333, :y2 845.4750061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 641.7000366151333, :y1 821.8875122070312, :x2 740.1521850526333, :y2 844.2875061035156, :width 941, :height 1174.9597806215722} {:x1 518.7625366151333, :y1 822.2625122070312, :x2 631.3394409120083, :y2 845.4625244140625, :width 941, :height 1174.9597806215722} {:x1 190.64040526747704, :y1 822.2750091552734, :x2 493.9211059510708, :y2 845.4750061035156, :width 941, :height 1174.9597806215722} {:x1 641.7000366151333, :y1 825.8875122070312, :x2 707.0374999940395, :y2 841.3750305175781, :width 941, :height 1174.9597806215722} {:x1 518.7625366151333, :y1 826.2625122070312, :x2 631.3394409120083, :y2 842.5750122070312, :width 941, :height 1174.9597806215722} {:x1 254.51250609755516, :y1 826.2750091552734, :x2 493.9211059510708, :y2 842.5875244140625, :width 941, :height 1174.9597806215722}), :page 650}, :content {:text "可以使用 window.URL.createObjectURL()方法并传入 File 或 Blob 对象"}, :properties {:color "yellow"}} {:id #uuid "63d3341e-9c14-45cd-8870-769125d4879b", :page 651, :position {:bounding {:x1 0, :y1 156.8000030517578, :x2 814.7872558534145, :y2 351.06248474121094, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 156.8000030517578, :x2 0, :y2 179.1999969482422, :width 941, :height 1174.9597806215722} {:x1 782.6939330995083, :y1 303.50001525878906, :x2 814.7872558534145, :y2 326.6999969482422, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 327.86253356933594, :x2 684.4609008729458, :y2 351.06248474121094, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 331.86253356933594, :x2 684.4609008729458, :y2 348.17503356933594, :width 941, :height 1174.9597806215722}), :page 651}, :content {:text "如果想表明不再使用某个对象 URL，则可以把它传给 window.URL.revokeObjectURL()"}, :properties {:color "yellow"}} {:id #uuid "63d33444-4063-4125-b633-371f7ebc85ff", :page 651, :position {:bounding {:x1 165.86249694228172, :y1 415.00000762939453, :x2 290.6837097108364, :y2 443.7999954223633, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 415.00000762939453, :x2 290.6837097108364, :y2 443.7999954223633, :width 941, :height 1174.9597806215722}), :page 651}, :content {:text "读取拖放文件"}, :properties {:color "green"}} {:id #uuid "63d33461-5b3d-4c19-bb14-aa30c15a6bf7", :page 651, :position {:bounding {:x1 0, :y1 252.80001831054688, :x2 817.3287597596645, :y2 529.3000183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 252.80001831054688, :x2 0, :y2 275.2000160217285, :width 941, :height 1174.9597806215722} {:x1 769.4081664979458, :y1 481.6375274658203, :x2 817.3287597596645, :y2 504.8375244140625, :width 941, :height 1174.9597806215722} {:x1 478.3124938905239, :y1 505.7375183105469, :x2 740.773706048727, :y2 528.1375274658203, :width 941, :height 1174.9597806215722} {:x1 751.1125122010708, :y1 505.7375183105469, :x2 786.9092651307583, :y2 528.1375274658203, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 506.1000213623047, :x2 430.4437194764614, :y2 529.3000183105469, :width 941, :height 1174.9597806215722} {:x1 478.3124938905239, :y1 509.7375183105469, :x2 740.773706048727, :y2 525.2250213623047, :width 941, :height 1174.9597806215722} {:x1 751.1125122010708, :y1 509.7375183105469, :x2 754.2124877870083, :y2 525.2250213623047, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 510.1000213623047, :x2 430.4437194764614, :y2 526.4125213623047, :width 941, :height 1174.9597806215722}), :page 651}, :content {:text "被放置的文件可以通过事件的 event.dataTransfer.files 属性读到，这个属性保存着一组 File 对象"}, :properties {:color "yellow"}} {:id #uuid "63d33482-fe02-46d2-be2f-be27030d78da", :page 651, :position {:bounding {:x1 121.17500457167625, :y1 968.625, :x2 784.0271850526333, :y2 991.8249816894531, :width 941, :height 1174.9597806215722}, :rects ({:x1 121.17500457167625, :y1 968.625, :x2 520.6250854432583, :y2 991.8249816894531, :width 941, :height 1174.9597806215722} {:x1 531.4624877870083, :y1 968.625, :x2 784.0271850526333, :y2 991.8249816894531, :width 941, :height 1174.9597806215722} {:x1 437.8749938905239, :y1 972.625, :x2 520.6250854432583, :y2 988.9375305175781, :width 941, :height 1174.9597806215722} {:x1 531.4624877870083, :y1 972.625, :x2 697.3374877870083, :y2 988.9375305175781, :width 941, :height 1174.9597806215722}), :page 651}, :content {:text "与后面要介绍的拖放的例子一样，必须取消 dragenter、dragover 和 drop 的默认行为"}, :properties {:color "yellow"}} {:id #uuid "63d33496-c26c-41b9-b436-95152fcc23f3", :page 651, :position {:bounding {:x1 138.51250609755516, :y1 663.4875030517578, :x2 295.73903807997704, :y2 683.4875030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.51250609755516, :y1 663.4875030517578, :x2 295.73903807997704, :y2 683.4875030517578, :width 941, :height 1174.9597806215722}), :page 651}, :content {:text "event.preventDefault();"}, :properties {:color "yellow"}} {:id #uuid "63d3349a-279a-4ac0-ac37-e20882ff5834", :page 652, :position {:bounding {:x1 170.0750671327114, :y1 129.24999618530273, :x2 289.1563659608364, :y2 165.26250839233398, :width 941, :height 1174.9597806215722}, :rects ({:x1 193.00000914931297, :y1 129.24999618530273, :x2 289.1563659608364, :y2 163.65000534057617, :width 941, :height 1174.9597806215722} {:x1 170.0750671327114, :y1 130.86249923706055, :x2 170.07810363173485, :y2 165.26250839233398, :width 941, :height 1174.9597806215722}), :page 652}, :content {:text "媒体元素"}, :properties {:color "green"}} {:id #uuid "63d334aa-a30f-41ae-adaf-49921503c8f6", :page 652, :position {:bounding {:x1 0, :y1 202.85001754760742, :x2 850.8962036073208, :y2 291.1999931335449, :width 941, :height 1174.9597806215722}, :rects ({:x1 330.38750609755516, :y1 202.85001754760742, :x2 850.8962036073208, :y2 226.04999923706055, :width 941, :height 1174.9597806215722} {:x1 575.9500366151333, :y1 206.47501754760742, :x2 850.8962036073208, :y2 221.96250534057617, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 227.21250534057617, :x2 378.571183770895, :y2 250.41251754760742, :width 941, :height 1174.9597806215722} {:x1 0, :y1 268.79999923706055, :x2 0, :y2 291.1999931335449, :width 941, :height 1174.9597806215722}), :page 652}, :content {:text "新增了两个与媒体相关的元素，即<audio>和<video>，从而为浏览器提供了嵌入音频和视频的统一解决方案"}, :properties {:color "yellow"}} {:id #uuid "63d33759-7abb-4002-857f-422417b758c8", :page 652, :position {:bounding {:x1 234.86121520400047, :y1 251.58750534057617, :x2 841.9676757752895, :y2 274.7875175476074, :width 941, :height 1174.9597806215722}, :rects ({:x1 234.86121520400047, :y1 251.58750534057617, :x2 841.9676757752895, :y2 274.7875175476074, :width 941, :height 1174.9597806215722} {:x1 285.3625122010708, :y1 255.58750534057617, :x2 665.8000122010708, :y2 271.9000053405762, :width 941, :height 1174.9597806215722}), :page 652}, :content {:text "既支持 Web 开发者在页面中嵌入媒体文件，也支持 JavaScript 实现对媒体的自定义控制"}, :properties {:color "yellow"}} {:id #uuid "63d3375d-91a2-4cdd-a3b0-72ef548a8b9d", :page 652, :position {:bounding {:x1 154.71250304579735, :y1 379.2500114440918, :x2 608.532983392477, :y2 402.4499931335449, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 379.2500114440918, :x2 608.532983392477, :y2 402.4499931335449, :width 941, :height 1174.9597806215722} {:x1 334.3000122010708, :y1 383.2500114440918, :x2 608.532983392477, :y2 399.5625114440918, :width 941, :height 1174.9597806215722}), :page 652}, :content {:text "每个元素至少要求有一个 src 属性，以表示要加载的媒体文件。"}, :properties {:color "yellow"}} {:id #uuid "63d33771-8a9f-44bd-b634-15c4962bc3bd", :page 652, :position {:bounding {:x1 200.02500304579735, :y1 814.2374877929688, :x2 241.63208922743797, :y2 843.0375061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 814.2374877929688, :x2 241.63208922743797, :y2 843.0375061035156, :width 941, :height 1174.9597806215722}), :page 652}, :content {:text "属性"}, :properties {:color "green"}} {:id #uuid "63d33842-033a-4de4-9284-79a176119633", :page 653, :position {:bounding {:x1 165.86249694228172, :y1 845.3125305175781, :x2 207.46958312392235, :y2 874.1125183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 845.3125305175781, :x2 207.46958312392235, :y2 874.1125183105469, :width 941, :height 1174.9597806215722}), :page 653}, :content {:text "事件"}, :properties {:color "green"}} {:id #uuid "63d3384e-c34c-4dcf-8a70-be15dee4bbd7", :page 654, :position {:bounding {:x1 200.02500304579735, :y1 782.5500183105469, :x2 366.45330199599266, :y2 811.3500061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 782.5500183105469, :x2 366.45330199599266, :y2 811.3500061035156, :width 941, :height 1174.9597806215722}), :page 654}, :content {:text "自定义媒体播放器"}, :properties {:color "green"}} {:id #uuid "63d33882-0397-4776-946a-1d1cdecc941e", :page 655, :position {:bounding {:x1 120.55000457167625, :y1 545.1250243186951, :x2 792.606210321188, :y2 568.3250365257263, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 545.1250243186951, :x2 792.606210321188, :y2 568.3250365257263, :width 941, :height 1174.9597806215722} {:x1 169.47499999403954, :y1 549.1250243186951, :x2 246.53749999403954, :y2 565.4375243186951, :width 941, :height 1174.9597806215722}), :page 655}, :content {:text "这里的 JavaScript 代码简单地为按钮添加了事件处理程序，可以根据当前状态播放和暂停视频。"}, :properties {:color "yellow"}} {:id #uuid "63d33888-7b74-41f5-a961-063ad5d75dcc", :page 655, :position {:bounding {:x1 165.86249694228172, :y1 656.6250457763672, :x2 290.6837097108364, :y2 685.4250335693359, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 656.6250457763672, :x2 290.6837097108364, :y2 685.4250335693359, :width 941, :height 1174.9597806215722}), :page 655}, :content {:text "检测编解码器"}, :properties {:color "green"}} {:id #uuid "63d338a1-12a9-42ca-ae1a-d88614641b92", :page 655, :position {:bounding {:x1 0, :y1 460.80001068115234, :x2 814.6324706971645, :y2 795.2000122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 460.80001068115234, :x2 0, :y2 483.2000045776367, :width 941, :height 1174.9597806215722} {:x1 0, :y1 476.80001068115234, :x2 0, :y2 499.2000045776367, :width 941, :height 1174.9597806215722} {:x1 442.1217895448208, :y1 723.2750244140625, :x2 810.9656616151333, :y2 746.4750061035156, :width 941, :height 1174.9597806215722} {:x1 359.8124938905239, :y1 747.6375122070312, :x2 814.6324706971645, :y2 770.8375244140625, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 747.6500244140625, :x2 345.03545531630516, :y2 770.8500061035156, :width 941, :height 1174.9597806215722} {:x1 359.8124938905239, :y1 751.6375122070312, :x2 814.6324706971645, :y2 767.9500122070312, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 751.6500244140625, :x2 345.03545531630516, :y2 767.9625244140625, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 772, :x2 202.58590087294579, :y2 795.2000122070312, :width 941, :height 1174.9597806215722} {:x1 212.72499999403954, :y1 772, :x2 433.46196898818016, :y2 795.2000122070312, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 776, :x2 202.58590087294579, :y2 792.3125, :width 941, :height 1174.9597806215722} {:x1 212.72499999403954, :y1 776, :x2 423.8539977967739, :y2 792.3125, :width 941, :height 1174.9597806215722}), :page 655}, :content {:text "检测浏览器是否支持给定格式和编解码器。这两个媒体元素都有一个名为 canPlayType()的方法，该方法接收一个格式/编解码器字符串，返回一个字符串值：\"probably\"、\"maybe\"或\"\"（空字符串），"}, :properties {:color "yellow"}} {:id #uuid "63d338b0-cdc0-46b2-8125-7a7ddb268abc", :page 656, :position {:bounding {:x1 200.02500304579735, :y1 225.58750915527344, :x2 283.23916015028954, :y2 254.3874969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 225.58750915527344, :x2 283.23916015028954, :y2 254.3874969482422, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "音频类型"}, :properties {:color "green"}} {:id #uuid "63d338d2-3acd-4ebd-90ca-abd65ff0bd2f", :page 656, :position {:bounding {:x1 0, :y1 441.9000244140625, :x2 843.8033080995083, :y2 489.5625, :width 941, :height 1174.9597806215722}, :rects ({:x1 325.2375122010708, :y1 441.9000244140625, :x2 843.8033080995083, :y2 465.10003662109375, :width 941, :height 1174.9597806215722} {:x1 154.71250304579735, :y1 441.91253662109375, :x2 312.2082458436489, :y2 465.11248779296875, :width 941, :height 1174.9597806215722} {:x1 0, :y1 444.79998779296875, :x2 0, :y2 467.20001220703125, :width 941, :height 1174.9597806215722} {:x1 325.2375122010708, :y1 445.9000244140625, :x2 843.8033080995083, :y2 462.2125244140625, :width 941, :height 1174.9597806215722} {:x1 171.02500304579735, :y1 445.91253662109375, :x2 312.2082458436489, :y2 462.22503662109375, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 466, :x2 182.84674987196922, :y2 488.4000244140625, :width 941, :height 1174.9597806215722} {:x1 196.31250914931297, :y1 466, :x2 427.69170531630516, :y2 488.4000244140625, :width 941, :height 1174.9597806215722} {:x1 440.5250183045864, :y1 466.36248779296875, :x2 456.5250183045864, :y2 489.5625, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 470, :x2 182.84674987196922, :y2 485.48748779296875, :width 941, :height 1174.9597806215722} {:x1 196.31250914931297, :y1 470, :x2 427.69170531630516, :y2 485.48748779296875, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "在 iOS 中调用 play()方法会弹出一个对话框，请求用户授权播放声音。为了连续播放，必须在 onfinish 事件处理程序中立即调用 play()。"}, :properties {:color "yellow"}} {:id #uuid "63d338dc-f09b-4b54-a42b-a6ba7233fba1", :page 656, :position {:bounding {:x1 152.96250304579735, :y1 265.13751220703125, :x2 802.3201538026333, :y2 287.5375061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 265.13751220703125, :x2 802.3201538026333, :y2 287.5375061035156, :width 941, :height 1174.9597806215722} {:x1 217.98749694228172, :y1 269.5, :x2 529.6499877870083, :y2 285.8125, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "<audio>元素还有一个名为 Audio 的原生 JavaScript 构造函数，支持在任何时候播放音频。"}, :properties {:color "yellow"}} {:id #uuid "63d338e4-8da7-4a0d-8032-62247f0e5e90", :page 656, :position {:bounding {:x1 193.00000914931297, :y1 502.175012588501, :x2 289.1563659608364, :y2 536.5750370025635, :width 941, :height 1174.9597806215722}, :rects ({:x1 193.00000914931297, :y1 502.175012588501, :x2 289.1563659608364, :y2 536.5750370025635, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "原生拖放"}, :properties {:color "green"}} {:id #uuid "63d33908-5600-4224-ada9-92f058b1295f", :page 656, :position {:bounding {:x1 0, :y1 492.80001068115234, :x2 844.7242065370083, :y2 596.8125152587891, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 492.80001068115234, :x2 0, :y2 515.2000045776367, :width 941, :height 1174.9597806215722} {:x1 588.0625854432583, :y1 549.1500091552734, :x2 844.7242065370083, :y2 572.3500061035156, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 573.6125030517578, :x2 232.46930846571922, :y2 596.8125152587891, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "时，网页中只有两样东西可以触发拖放：图片和文本"}, :properties {:color "yellow"}} {:id #uuid "63d33940-7fdc-4ccc-bf0f-1692f286f6ac", :page 656, :position {:bounding {:x1 0, :y1 524.8000106811523, :x2 849.774438470602, :y2 645.5375061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 524.8000106811523, :x2 0, :y2 547.2000122070312, :width 941, :height 1174.9597806215722} {:x1 633.7232910096645, :y1 596.8875122070312, :x2 849.774438470602, :y2 620.0875091552734, :width 941, :height 1174.9597806215722} {:x1 653.1375366151333, :y1 600.8875122070312, :x2 849.774438470602, :y2 617.2000122070312, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 622.3375091552734, :x2 457.66861113905907, :y2 645.5375061035156, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "E5 扩展了拖放能力，添加了新的事件，让网页中几乎一切都可以成为放置目标"}, :properties {:color "yellow"}} {:id #uuid "63d33947-12a2-49d0-a2e0-36e3f9e0caa6", :page 656, :position {:bounding {:x1 0, :y1 588.8000030517578, :x2 844.4111877381802, :y2 743.1000061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 588.8000030517578, :x2 0, :y2 611.2000122070312, :width 941, :height 1174.9597806215722} {:x1 170.75200805068016, :y1 695.5375061035156, :x2 844.4111877381802, :y2 718.7375183105469, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 719.9000244140625, :x2 442.71350249648094, :y2 743.1000061035156, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "于拖放最有意思的可能就是可以跨窗格、跨浏览器容器，有时候甚至可以跨应用程序拖动元素。浏览器对拖放的支持可以让我们实现这些功能"}, :properties {:color "yellow"}} {:id #uuid "63d33949-e032-440f-8800-f63f77cc575e", :page 656, :position {:bounding {:x1 180.57325133681297, :y1 756.0250244140625, :x2 283.23916015028954, :y2 786.2000122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 756.0250244140625, :x2 283.23916015028954, :y2 784.8250122070312, :width 941, :height 1174.9597806215722} {:x1 180.57325133681297, :y1 757.4000244140625, :x2 180.5767761170864, :y2 786.2000122070312, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "拖放事件"}, :properties {:color "green"}} {:id #uuid "63d33a31-c966-4194-bbd4-c47c8a7b7f69", :page 656, :position {:bounding {:x1 0, :y1 652.8000030517578, :x2 847.7491088807583, :y2 867.9750061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 652.8000030517578, :x2 0, :y2 675.2000122070312, :width 941, :height 1174.9597806215722} {:x1 611.091821283102, :y1 820.4125061035156, :x2 847.7491088807583, :y2 843.6125183105469, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 844.7750244140625, :x2 234.24970397353172, :y2 867.9750061035156, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "某个元素被拖动时，会（按顺序）触发以下事件："}, :properties {:color "yellow"}} {:id #uuid "63d33a39-523a-49e0-8b46-80c7e01a3d92", :page 656, :position {:bounding {:x1 154.71250304579735, :y1 938.5249938964844, :x2 754.7895141541958, :y2 962.1000061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 716.9500366151333, :y1 938.5249938964844, :x2 754.7895141541958, :y2 960.9250183105469, :width 941, :height 1174.9597806215722} {:x1 154.71250304579735, :y1 938.8999938964844, :x2 701.473657220602, :y2 962.1000061035156, :width 941, :height 1174.9597806215722} {:x1 716.9500366151333, :y1 942.5249938964844, :x2 720.0500122010708, :y2 958.0125427246094, :width 941, :height 1174.9597806215722} {:x1 628.5374999940395, :y1 942.8999938964844, :x2 701.473657220602, :y2 959.2124938964844, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "在按住鼠标键不放并开始移动鼠标的那一刻，被拖动元素上会触发 dragstart 事件"}, :properties {:color "yellow"}} {:id #uuid "63d33a66-975e-4c54-93e6-9c7bc4bcf47b", :page 656, :position {:bounding {:x1 0, :y1 748.7999877929688, :x2 838.9339843690395, :y2 1010.9249877929688, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 748.7999877929688, :x2 0, :y2 771.1999893188477, :width 941, :height 1174.9597806215722} {:x1 597.2664428651333, :y1 963.3624877929688, :x2 838.9339843690395, :y2 986.5625, :width 941, :height 1174.9597806215722} {:x1 746.937524408102, :y1 967.3624877929688, :x2 838.9339843690395, :y2 983.6749877929688, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 987.7250061035156, :x2 456.7872253358364, :y2 1010.9249877929688, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 991.7250061035156, :x2 344.4625183045864, :y2 1008.0375061035156, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "拖动开始时，可以在 ondragstart事件处理程序中通过 JavaScript 执行某些操作。"}, :properties {:color "yellow"}} {:id #uuid "63d33a89-33c7-4ee6-b858-38db2a747c7b", :page 656, :position {:bounding {:x1 152.96250304579735, :y1 1011.7124938964844, :x2 635.116479486227, :y2 1034.9125061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 1011.7124938964844, :x2 221.11028441786766, :y2 1034.1124877929688, :width 941, :height 1174.9597806215722} {:x1 236.56250914931297, :y1 1011.7124938964844, :x2 635.116479486227, :y2 1034.9125061035156, :width 941, :height 1174.9597806215722} {:x1 236.56250914931297, :y1 1015.7124938964844, :x2 599.643090814352, :y2 1032.0249938964844, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "dragstart 事件触发后，只要目标还被拖动就会持续触发 drag 事件"}, :properties {:color "yellow"}} {:id #uuid "63d33a9a-05d2-493d-9d7c-03e44b293a5f", :page 656, :position {:bounding {:x1 0, :y1 796.7999877929688, :x2 850.8788085877895, :y2 1084.1000061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 796.7999877929688, :x2 0, :y2 819.1999969482422, :width 941, :height 1174.9597806215722} {:x1 330.5119567811489, :y1 1036.4375, :x2 850.8788085877895, :y2 1059.6374816894531, :width 941, :height 1174.9597806215722} {:x1 718.437524408102, :y1 1040.4375, :x2 850.8788085877895, :y2 1056.75, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 1060.8999938964844, :x2 170.0246978700161, :y2 1084.1000061035156, :width 941, :height 1174.9597806215722}), :page 656}, :content {:text "当拖动停止时（把元素放到有效或无效的放置目标上），会触发 dragend事件。"}, :properties {:color "yellow"}} {:id #uuid "63d33aac-ec2d-45dc-8ddd-820d59e07a65", :page 657, :position {:bounding {:x1 0, :y1 12.800018310546875, :x2 807.5780883729458, :y2 178.88751220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 12.800018310546875, :x2 0, :y2 35.20001220703125, :width 941, :height 1174.9597806215722} {:x1 424.4838806092739, :y1 131.32501220703125, :x2 807.5780883729458, :y2 154.52499389648438, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 155.6875, :x2 374.9358077943325, :y2 178.88751220703125, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "默认情况下，浏览器在拖动开始后不会改变被拖动元素的外观，因此是否改变外观由你来决定。"}, :properties {:color "yellow"}} {:id #uuid "63d33ab0-fef4-407b-a7ae-0504425163dd", :page 657, :position {:bounding {:x1 0, :y1 28.800018310546875, :x2 805.602075189352, :y2 203.25, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 28.800018310546875, :x2 0, :y2 51.20001220703125, :width 941, :height 1174.9597806215722} {:x1 438.7382446229458, :y1 155.6875, :x2 805.602075189352, :y2 178.88751220703125, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 180.05001831054688, :x2 216.08293303847313, :y2 203.25, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "多数浏览器此时会创建元素的一个半透明副本，始终跟随在光标下方。"}, :properties {:color "yellow"}} {:id #uuid "63d33ab5-8998-41ca-9e4d-d6ec1d3fb109", :page 657, :position {:bounding {:x1 120.53749999403954, :y1 204.51250457763672, :x2 585.640649408102, :y2 227.71251678466797, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.53749999403954, :y1 204.51250457763672, :x2 585.640649408102, :y2 227.71251678466797, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "在把元素拖动到一个有效的放置目标上时，会依次触发以下事件："}, :properties {:color "yellow"}} {:id #uuid "63d33ac5-b7bd-4459-a083-6e7f270e1fab", :page 657, :position {:bounding {:x1 119.11250457167625, :y1 299.77501678466797, :x2 724.6921020448208, :y2 322.9749984741211, :width 941, :height 1174.9597806215722}, :rects ({:x1 119.11250457167625, :y1 299.77501678466797, :x2 724.6921020448208, :y2 322.9749984741211, :width 941, :height 1174.9597806215722} {:x1 353.82500609755516, :y1 303.40001678466797, :x2 612.7040649354458, :y2 318.8875045776367, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "只要一把元素拖动到放置目标上，dragenter 事件（类似于 mouseover 事件）就会触发"}, :properties {:color "yellow"}} {:id #uuid "63d33ad7-53f2-4e69-ab85-fe568e6809a0", :page 657, :position {:bounding {:x1 0, :y1 124.79999542236328, :x2 819.5199218690395, :y2 347.33751678466797, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 124.79999542236328, :x2 0, :y2 147.20000457763672, :width 941, :height 1174.9597806215722} {:x1 740.1320434510708, :y1 299.77501678466797, :x2 810.3218627870083, :y2 322.9749984741211, :width 941, :height 1174.9597806215722} {:x1 741.7124877870083, :y1 303.40001678466797, :x2 810.3218627870083, :y2 318.8875045776367, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 324.1375045776367, :x2 819.5199218690395, :y2 347.33751678466797, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 328.1375045776367, :x2 408.34575805068016, :y2 344.4500045776367, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "dragenter事件触发之后，会立即触发 dragover 事件，并且元素在放置目标范围内被拖动期间此事件会持续触发。"}, :properties {:color "yellow"}} {:id #uuid "63d33ae3-2d18-4e6c-a6cd-d68bc353666b", :page 657, :position {:bounding {:x1 0, :y1 156.80001068115234, :x2 821.6034179627895, :y2 396.05001068115234, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 156.80001068115234, :x2 0, :y2 179.20000457763672, :width 941, :height 1174.9597806215722} {:x1 597.8374877870083, :y1 348.12499237060547, :x2 821.6034179627895, :y2 370.52501678466797, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 348.49999237060547, :x2 587.6950317323208, :y2 371.7000045776367, :width 941, :height 1174.9597806215722} {:x1 316.5624938905239, :y1 352.12499237060547, :x2 587.6950317323208, :y2 367.61251068115234, :width 941, :height 1174.9597806215722} {:x1 597.8374877870083, :y1 352.12499237060547, :x2 821.6034179627895, :y2 367.61251068115234, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 372.8499984741211, :x2 144.62580260634422, :y2 396.05001068115234, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 376.8499984741211, :x2 135.86219176650047, :y2 393.1624984741211, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "当元素被拖动到放置目标之外，dragover 事件停止触发，dragleave 事件触发（类似于 mouseout事件）。"}, :properties {:color "yellow"}} {:id #uuid "63d33af1-f683-4a3e-a656-4bc50835174f", :page 657, :position {:bounding {:x1 144.62580260634422, :y1 372.47503662109375, :x2 721.002709954977, :y2 396.04998779296875, :width 941, :height 1174.9597806215722}, :rects ({:x1 668.6375366151333, :y1 372.47503662109375, :x2 721.002709954977, :y2 394.875, :width 941, :height 1174.9597806215722} {:x1 144.62580260634422, :y1 372.85003662109375, :x2 658.499780267477, :y2 396.04998779296875, :width 941, :height 1174.9597806215722} {:x1 668.6375366151333, :y1 376.47503662109375, :x2 671.7375122010708, :y2 391.9625244140625, :width 941, :height 1174.9597806215722} {:x1 453.1874938905239, :y1 376.85003662109375, :x2 658.499780267477, :y2 393.16253662109375, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "如果被拖动元素被放到了目标上，则会触发 drop 事件而不是 dragleave 事件。"}, :properties {:color "yellow"}} {:id #uuid "63d33b05-8b56-4b9a-832f-a8d0c91b408d", :page 657, :position {:bounding {:x1 165.86249694228172, :y1 433.4750061035156, :x2 311.4872680604458, :y2 462.27500915527344, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 433.4750061035156, :x2 311.4872680604458, :y2 462.27500915527344, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "自定义放置目标"}, :properties {:color "green"}} {:id #uuid "63d33b2b-5014-47dd-bda0-24bc08dcb100", :page 657, :position {:bounding {:x1 0, :y1 236.80000686645508, :x2 805.7105956971645, :y2 545.4125061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 236.80000686645508, :x2 0, :y2 259.20000648498535, :width 941, :height 1174.9597806215722} {:x1 582.372338861227, :y1 497.8500061035156, :x2 805.7105956971645, :y2 521.0500030517578, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 522.2125091552734, :x2 461.14907225966454, :y2 545.4125061035156, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 526.2125091552734, :x2 426.70000609755516, :y2 542.5250244140625, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "如果把元素拖动到不允许放置的目标上，无论用户动作是什么都不会触发 drop 事件"}, :properties {:color "yellow"}} {:id #uuid "63d33b59-442b-45f9-be1f-27c37a8c2c77", :page 657, :position {:bounding {:x1 241.43738707900047, :y1 804.7250061035156, :x2 601.0420776307583, :y2 827.9249877929688, :width 941, :height 1174.9597806215722}, :rects ({:x1 241.43738707900047, :y1 804.7250061035156, :x2 601.0420776307583, :y2 827.9249877929688, :width 941, :height 1174.9597806215722} {:x1 569.0999999940395, :y1 808.7250061035156, :x2 569.456079095602, :y2 825.0375061035156, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "置事件的默认行为是导航到放在放置目标上的 UR"}, :properties {:color "yellow"}} {:id #uuid "63d33b7d-2153-4d31-ade9-b53264e92a07", :page 657, :position {:bounding {:x1 165.86249694228172, :y1 955.0249938964844, :x2 355.79458007216454, :y2 983.0249938964844, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 955.0249938964844, :x2 290.5806823670864, :y2 983.0249938964844, :width 941, :height 1174.9597806215722} {:x1 308.3375183045864, :y1 955.0249938964844, :x2 355.79458007216454, :y2 983.0249938964844, :width 941, :height 1174.9597806215722} {:x1 308.3375183045864, :y1 959.8249816894531, :x2 312.3124938905239, :y2 979.6374816894531, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "dataTransfer 对象"}, :properties {:color "green"}} {:id #uuid "63d33b94-5b29-47d2-9222-a84e4f7b1237", :page 657, :position {:bounding {:x1 193.01250609755516, :y1 1020.6875, :x2 681.5682006776333, :y2 1043.087501525879, :width 941, :height 1174.9597806215722}, :rects ({:x1 193.01250609755516, :y1 1020.6875, :x2 287.40334472060204, :y2 1043.087501525879, :width 941, :height 1174.9597806215722} {:x1 304.4875122010708, :y1 1020.6875, :x2 681.5682006776333, :y2 1043.087501525879, :width 941, :height 1174.9597806215722} {:x1 304.4875122010708, :y1 1024.6875, :x2 307.5875183045864, :y2 1040.1750030517578, :width 941, :height 1174.9597806215722}), :page 657}, :content {:text "dataTransfer 对象，用于从被拖动元素向放置目标传递字符串数据"}, :properties {:color "yellow"}} {:id #uuid "63d33bca-e6dc-419a-9ddf-42368f0de4be", :page 658, :position {:bounding {:x1 152.96250304579735, :y1 155.3125, :x2 638.8367553651333, :y2 178.88751220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 155.3125, :x2 247.35334166884422, :y2 177.71249389648438, :width 941, :height 1174.9597806215722} {:x1 264.4374938905239, :y1 155.3125, :x2 503.26397094130516, :y2 177.71249389648438, :width 941, :height 1174.9597806215722} {:x1 517.7375122010708, :y1 155.6875, :x2 607.0719848573208, :y2 178.88751220703125, :width 941, :height 1174.9597806215722} {:x1 622.812524408102, :y1 155.6875, :x2 638.8367553651333, :y2 178.88751220703125, :width 941, :height 1174.9597806215722} {:x1 264.4374938905239, :y1 159.3125, :x2 503.26397094130516, :y2 174.80001831054688, :width 941, :height 1174.9597806215722} {:x1 517.7375122010708, :y1 159.6875, :x2 607.0719848573208, :y2 176, :width 941, :height 1174.9597806215722}), :page 658}, :content {:text "dataTransfer 对象有两个主要方法：getData()和 setData()。"}, :properties {:color "yellow"}} {:id #uuid "63d33be8-bb6c-4150-aa0b-31bde796356b", :page 658, :position {:bounding {:x1 0, :y1 429.5625, :x2 846.7449584901333, :y2 476.32501220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 485.7375122010708, :y1 429.5625, :x2 846.7449584901333, :y2 451.9624938964844, :width 941, :height 1174.9597806215722} {:x1 314.9903503358364, :y1 429.9375, :x2 468.6451354920864, :y2 453.13751220703125, :width 941, :height 1174.9597806215722} {:x1 485.7375122010708, :y1 433.5625, :x2 846.7449584901333, :y2 449.0500183105469, :width 941, :height 1174.9597806215722} {:x1 367.01250609755516, :y1 433.9375, :x2 468.6451354920864, :y2 450.25, :width 941, :height 1174.9597806215722} {:x1 0, :y1 444.8000183105469, :x2 0, :y2 467.20001220703125, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 453.9250183105469, :x2 505.60332641005516, :y2 476.32501220703125, :width 941, :height 1174.9597806215722} {:x1 522.687524408102, :y1 453.9250183105469, :x2 751.8113647401333, :y2 476.32501220703125, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 457.9250183105469, :x2 505.60332641005516, :y2 473.4125061035156, :width 941, :height 1174.9597806215722} {:x1 522.687524408102, :y1 457.9250183105469, :x2 525.7874999940395, :y2 473.4125061035156, :width 941, :height 1174.9597806215722}), :page 658}, :content {:text "存储在 dataTransfer 对象中的数据只能在放置事件中读取。如果没有在 ondrop 事件处理程序中取得这些数据，dataTransfer 对象就会被销毁，数据也会丢失"}, :properties {:color "yellow"}} {:id #uuid "63d33c06-9ed6-45cf-81a1-03392ccbccd9", :page 658, :position {:bounding {:x1 154.06983336806297, :y1 503.0124969482422, :x2 640.7209106385708, :y2 526.2124938964844, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.06983336806297, :y1 503.0124969482422, :x2 488.1719909608364, :y2 526.2124938964844, :width 941, :height 1174.9597806215722} {:x1 503.9000183045864, :y1 503.0124969482422, :x2 640.7209106385708, :y2 526.2124938964844, :width 941, :height 1174.9597806215722} {:x1 416.03749999403954, :y1 507.0124969482422, :x2 488.1719909608364, :y2 523.3249969482422, :width 941, :height 1174.9597806215722} {:x1 503.9000183045864, :y1 507.0124969482422, :x2 578.2726074159145, :y2 523.3249969482422, :width 941, :height 1174.9597806215722}), :page 658}, :content {:text "在拖动链接或图片时，浏览器会调用 setData()并把 URL 存储起来"}, :properties {:color "yellow"}} {:id #uuid "63d33c20-2794-43c2-8eb7-e3fe2d949d71", :page 658, :position {:bounding {:x1 200.02500304579735, :y1 881.125, :x2 485.7670837342739, :y2 909.125, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 881.125, :x2 303.6650329530239, :y2 909.125, :width 941, :height 1174.9597806215722} {:x1 318.76250609755516, :y1 881.125, :x2 485.7670837342739, :y2 909.125, :width 941, :height 1174.9597806215722} {:x1 318.76250609755516, :y1 885.9249877929688, :x2 345.4349304139614, :y2 905.7374877929688, :width 941, :height 1174.9597806215722}), :page 658}, :content {:text "dropEffect 与 effectAllowed"}, :properties {:color "green"}} {:id #uuid "63d33c32-50d7-46dd-912f-879072892253", :page 658, :position {:bounding {:x1 152.96250304579735, :y1 971.1375122070312, :x2 539.201425164938, :y2 993.5375213623047, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 971.1375122070312, :x2 231.40139159560204, :y2 993.5375213623047, :width 941, :height 1174.9597806215722} {:x1 245.86249694228172, :y1 971.1375122070312, :x2 539.201425164938, :y2 993.5375213623047, :width 941, :height 1174.9597806215722} {:x1 245.86249694228172, :y1 975.1375122070312, :x2 246.06247863173485, :y2 990.6250152587891, :width 941, :height 1174.9597806215722}), :page 658}, :content {:text "dropEffect 属性可以告诉浏览器允许哪种放置行为。"}, :properties {:color "yellow"}} {:id #uuid "63d33c81-8f17-41db-919d-6dacd5595c0e", :page 659, :position {:bounding {:x1 0, :y1 60.79998779296875, :x2 818.6289916932583, :y2 252.07498168945312, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 60.79998779296875, :x2 0, :y2 83.19998168945312, :width 941, :height 1174.9597806215722} {:x1 493.2750183045864, :y1 204.13748168945312, :x2 818.6289916932583, :y2 226.53750610351562, :width 941, :height 1174.9597806215722} {:x1 326.8360534608364, :y1 204.51248168945312, :x2 478.81386718153954, :y2 227.71249389648438, :width 941, :height 1174.9597806215722} {:x1 493.2750183045864, :y1 208.13748168945312, :x2 818.6289916932583, :y2 223.62496948242188, :width 941, :height 1174.9597806215722} {:x1 396.2375122010708, :y1 208.51248168945312, :x2 478.81386718153954, :y2 224.82498168945312, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 228.87496948242188, :x2 232.10369262099266, :y2 252.07498168945312, :width 941, :height 1174.9597806215722}), :page 659}, :content {:text "为了使用 dropEffect 属性，必须在放置目标的 ondragenter 事件处理程序中设置它。"}, :properties {:color "yellow"}} {:id #uuid "63d33c91-059a-4242-a46d-66a14fb1c2e7", :page 659, :position {:bounding {:x1 0, :y1 92.79999542236328, :x2 817.7286621034145, :y2 300.7874984741211, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 92.79999542236328, :x2 0, :y2 115.20000457763672, :width 941, :height 1174.9597806215722} {:x1 731.812524408102, :y1 252.8499984741211, :x2 817.7286621034145, :y2 275.24999237060547, :width 941, :height 1174.9597806215722} {:x1 608.8286987245083, :y1 253.2249984741211, :x2 713.4615722596645, :y2 276.42501068115234, :width 941, :height 1174.9597806215722} {:x1 610.937524408102, :y1 256.8499984741211, :x2 713.4615722596645, :y2 272.33751678466797, :width 941, :height 1174.9597806215722} {:x1 731.812524408102, :y1 256.8499984741211, :x2 817.7286621034145, :y2 272.33751678466797, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 277.58751678466797, :x2 317.4678893983364, :y2 300.7874984741211, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 281.58751678466797, :x2 317.4678893983364, :y2 297.90001678466797, :width 941, :height 1174.9597806215722}), :page 659}, :content {:text "effectAllowed 属性表示对被拖动元素是否允许 dropEffect"}, :properties {:color "yellow"}} {:id #uuid "63d33cbf-9ab5-4790-9d32-2032b48ccd57", :page 659, :position {:bounding {:x1 120.55000457167625, :y1 521.1125106811523, :x2 489.00127562880516, :y2 544.6875228881836, :width 941, :height 1174.9597806215722}, :rects ({:x1 275.9000183045864, :y1 521.1125106811523, :x2 489.00127562880516, :y2 543.5125350952148, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 521.4875106811523, :x2 261.4215026795864, :y2 544.6875228881836, :width 941, :height 1174.9597806215722} {:x1 275.9000183045864, :y1 525.1125106811523, :x2 278.9999938905239, :y2 540.5999984741211, :width 941, :height 1174.9597806215722} {:x1 169.47499999403954, :y1 525.4875106811523, :x2 261.4215026795864, :y2 541.8000106811523, :width 941, :height 1174.9597806215722}), :page 659}, :content {:text "必须在 ondragstart 事件处理程序中设置这个属性"}, :properties {:color "yellow"}} {:id #uuid "63d33cdc-5e97-4ed5-ad9f-55d932d2f5e4", :page 659, :position {:bounding {:x1 165.86249694228172, :y1 681.7124938964844, :x2 269.8802123963833, :y2 710.5125122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 681.7124938964844, :x2 269.8802123963833, :y2 710.5125122070312, :width 941, :height 1174.9597806215722}), :page 659}, :content {:text "可拖动能力"}, :properties {:color "green"}} {:id #uuid "63d33ceb-4d54-4e99-bfc6-1baadad51d10", :page 659, :position {:bounding {:x1 0, :y1 412.8000030517578, :x2 826.4872070252895, :y2 820.375, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.1999969482422, :width 941, :height 1174.9597806215722} {:x1 393.07412108778954, :y1 772.7250366210938, :x2 826.4872070252895, :y2 795.9249877929688, :width 941, :height 1174.9597806215722} {:x1 398.09999999403954, :y1 775.6375122070312, :x2 826.4872070252895, :y2 791.9500122070312, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 797.1749877929688, :x2 251.33974608778954, :y2 820.375, :width 941, :height 1174.9597806215722}), :page 659}, :content {:text "HTML5 在所有 HTML 元素上规定了一个 draggable 属性，表示元素是否可以拖动"}, :properties {:color "yellow"}} {:id #uuid "63d33da1-7c85-448c-842a-a8f283a72d82", :page 659, :position {:bounding {:x1 165.86249694228172, :y1 963.1875457763672, :x2 249.07666930556297, :y2 991.987548828125, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 963.1875457763672, :x2 249.07666930556297, :y2 991.987548828125, :width 941, :height 1174.9597806215722}), :page 659}, :content {:text "其他成员"}, :properties {:color "green"}} {:id #uuid "63d33db5-204f-4308-ac0c-0e3b19d66d5b", :page 659, :position {:bounding {:x1 141.50000914931297, :y1 1029.4625091552734, :x2 492.5693298280239, :y2 1051.8625183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 141.50000914931297, :y1 1029.4625091552734, :x2 492.5693298280239, :y2 1051.8625183105469, :width 941, :height 1174.9597806215722} {:x1 243.68750914931297, :y1 1033.4625091552734, :x2 313.41249999403954, :y2 1048.9500122070312, :width 941, :height 1174.9597806215722}), :page 659}, :content {:text "addElement(element)：为拖动操作添加元素。"}, :properties {:color "yellow"}} {:id #uuid "63d33dbd-f315-46e6-83c4-06ccfcbefa81", :page 660, :position {:bounding {:x1 175.67499694228172, :y1 130.94998168945312, :x2 558.086938470602, :y2 153.3499755859375, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.67499694228172, :y1 130.94998168945312, :x2 252.50274047255516, :y2 153.3499755859375, :width 941, :height 1174.9597806215722} {:x1 268.5624938905239, :y1 130.94998168945312, :x2 558.086938470602, :y2 153.3499755859375, :width 941, :height 1174.9597806215722} {:x1 268.5624938905239, :y1 134.94998168945312, :x2 328.9999938905239, :y2 150.4375, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "clearData(format)：清除以特定格式存储的数据。"}, :properties {:color "yellow"}} {:id #uuid "63d33dc9-2de6-451d-9777-61f00e512d05", :page 660, :position {:bounding {:x1 175.67499694228172, :y1 155.3125, :x2 748.904077142477, :y2 177.71249389648438, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.67499694228172, :y1 155.3125, :x2 284.8710876405239, :y2 177.71249389648438, :width 941, :height 1174.9597806215722} {:x1 296.4374938905239, :y1 155.3125, :x2 748.904077142477, :y2 177.71249389648438, :width 941, :height 1174.9597806215722} {:x1 296.4374938905239, :y1 159.3125, :x2 422.1125122010708, :y2 174.79998779296875, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "setDragImage(element, x, y)：允许指定拖动发生时显示在光标下面的图片"}, :properties {:color "yellow"}} {:id #uuid "63d33dd0-69a6-4cbe-aa79-491c88e7c89f", :page 660, :position {:bounding {:x1 175.67499694228172, :y1 228.48751831054688, :x2 419.1559997498989, :y2 251.68746948242188, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.67499694228172, :y1 228.48751831054688, :x2 419.1559997498989, :y2 251.68746948242188, :width 941, :height 1174.9597806215722} {:x1 219.53749999403954, :y1 232.86251831054688, :x2 419.1559997498989, :y2 249.17501831054688, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "types：当前存储的数据类型列表。"}, :properties {:color "yellow"}} {:id #uuid "63d33dd6-b636-4232-ac4a-294b40f2a5ea", :page 660, :position {:bounding {:x1 192.98749694228172, :y1 268.0374984741211, :x2 343.8239379823208, :y2 302.43749237060547, :width 941, :height 1174.9597806215722}, :rects ({:x1 192.98749694228172, :y1 268.0374984741211, :x2 343.8239379823208, :y2 302.43749237060547, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "Notifications API"}, :properties {:color "green"}} {:id #uuid "63d33e1c-f9c3-422f-bd1b-72f598daa1f8", :page 660, :position {:bounding {:x1 0, :y1 380.8000030517578, :x2 861.3499999940395, :y2 434.5625, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 380.8000030517578, :x2 0, :y2 403.1999969482422, :width 941, :height 1174.9597806215722} {:x1 154.72499999403954, :y1 385.8125, :x2 249.67800292372704, :y2 409.0124969482422, :width 941, :height 1174.9597806215722} {:x1 269.5624938905239, :y1 385.8125, :x2 825.048364251852, :y2 409.0124969482422, :width 941, :height 1174.9597806215722} {:x1 845.3499999940395, :y1 386.90000915527344, :x2 861.3499999940395, :y2 410.1000061035156, :width 941, :height 1174.9597806215722} {:x1 269.5624938905239, :y1 389.8125, :x2 825.048364251852, :y2 406.125, :width 941, :height 1174.9597806215722} {:x1 845.3499999940395, :y1 390.90000915527344, :x2 861.3499999940395, :y2 407.21250915527344, :width 941, :height 1174.9597806215722} {:x1 122.01249846816063, :y1 411.3625030517578, :x2 651.2446762025356, :y2 434.5625, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "Notifications API 在 Service Worker 中非常有用。渐进 Web 应用（PWA，Progressive Web Application）通过触发通知可以在页面不活跃时向用户显示消息，看起来就像原生应用。"}, :properties {:color "yellow"}} {:id #uuid "63d33e27-1a95-4b07-9102-797ec0beb4fc", :page 660, :position {:bounding {:x1 200.02500304579735, :y1 449.67501068115234, :x2 283.23916015028954, :y2 478.4750061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 449.67501068115234, :x2 283.23916015028954, :y2 478.4750061035156, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "通知权限"}, :properties {:color "green"}} {:id #uuid "63d33e8b-5b54-4804-92ac-8d00d355accc", :page 660, :position {:bounding {:x1 154.71250304579735, :y1 490.87501525878906, :x2 625.6573730409145, :y2 514.0750122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 490.87501525878906, :x2 249.66550597548485, :y2 514.0750122070312, :width 941, :height 1174.9597806215722} {:x1 269.5500122010708, :y1 490.87501525878906, :x2 625.6573730409145, :y2 514.0750122070312, :width 941, :height 1174.9597806215722} {:x1 269.5500122010708, :y1 494.87501525878906, :x2 269.69402465224266, :y2 511.18751525878906, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "Notifications API 有被滥用的可能，因此默认会开启两项安全措施："}, :properties {:color "yellow"}} {:id #uuid "63d33e94-39bc-4d75-9dc9-f9af44aaa8ec", :page 660, :position {:bounding {:x1 175.67499694228172, :y1 516.3250122070312, :x2 512.4241424500942, :y2 539.5250091552734, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.67499694228172, :y1 516.3250122070312, :x2 512.4241424500942, :y2 539.5250091552734, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "通知只能在运行在安全上下文的代码中被触发；"}, :properties {:color "yellow"}} {:id #uuid "63d33e9a-1aac-4643-b3c2-116c1e3f53f8", :page 660, :position {:bounding {:x1 175.67499694228172, :y1 540.6875152587891, :x2 512.4241424500942, :y2 563.8875122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.67499694228172, :y1 540.6875152587891, :x2 512.4241424500942, :y2 563.8875122070312, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "通知必须按照每个源的原则明确得到用户允许。"}, :properties {:color "yellow"}} {:id #uuid "63d33ea8-66bf-4363-a3d6-f1e6ae50cf06", :page 660, :position {:bounding {:x1 154.71250304579735, :y1 613.4875183105469, :x2 581.187036126852, :y2 637.0750122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 421.2375122010708, :y1 613.4875183105469, :x2 581.187036126852, :y2 635.8875122070312, :width 941, :height 1174.9597806215722} {:x1 154.71250304579735, :y1 613.875, :x2 399.5311218202114, :y2 637.0750122070312, :width 941, :height 1174.9597806215722} {:x1 421.2375122010708, :y1 617.4875183105469, :x2 424.3375183045864, :y2 632.9750061035156, :width 941, :height 1174.9597806215722} {:x1 312.6500183045864, :y1 617.875, :x2 399.5311218202114, :y2 634.1875, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "页面可以使用全局对象 Notification 向用户请求通知权限。"}, :properties {:color "yellow"}} {:id #uuid "63d33eb6-2869-4a68-b4f8-02fc2e4723f3", :page 660, :position {:bounding {:x1 0, :y1 508.8000030517578, :x2 833.3626953065395, :y2 661.4250183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 508.8000030517578, :x2 0, :y2 531.2000122070312, :width 941, :height 1174.9597806215722} {:x1 581.187036126852, :y1 613.8625183105469, :x2 833.3626953065395, :y2 637.0625, :width 941, :height 1174.9597806215722} {:x1 693.9500366151333, :y1 617.8625183105469, :x2 833.3626953065395, :y2 634.1750183105469, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 638.2250061035156, :x2 683.3446060121059, :y2 661.4250183105469, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "这个对象有一个 requestPemission()方法，该方法返回一个期约，用户在授权对话框上执行操作后这个期约会解决。"}, :properties {:color "yellow"}} {:id #uuid "63d33ef5-352c-42ac-9c5e-163d6f093478", :page 660, :position {:bounding {:x1 152.96250304579735, :y1 741.1750183105469, :x2 525.1655975282192, :y2 763.5750122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 741.1750183105469, :x2 525.1655975282192, :y2 763.5750122070312, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "\"granted\"值意味着用户明确授权了显示通知的权限"}, :properties {:color "yellow"}} {:id #uuid "63d33f00-808d-4f66-94f4-ad48d47c8261", :page 660, :position {:bounding {:x1 154.22956237196922, :y1 765.9125061035156, :x2 451.7409301698208, :y2 789.1125183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.22956237196922, :y1 765.9125061035156, :x2 451.7409301698208, :y2 789.1125183105469, :width 941, :height 1174.9597806215722} {:x1 384.78749999403954, :y1 769.5375061035156, :x2 451.7409301698208, :y2 785.0250244140625, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "如果用户拒绝授权，这个值就是\"denied\""}, :properties {:color "yellow"}} {:id #uuid "63d33f08-5410-4a40-a865-7dc03b88889f", :page 660, :position {:bounding {:x1 200.02500304579735, :y1 828.5875244140625, :x2 345.6497741639614, :y2 857.3875427246094, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 828.5875244140625, :x2 345.6497741639614, :y2 857.3875427246094, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "显示和隐藏通知"}, :properties {:color "green"}} {:id #uuid "63d33f17-a02b-4036-83c9-0a88bf1efdbf", :page 660, :position {:bounding {:x1 152.96250304579735, :y1 870.5, :x2 476.2233520448208, :y2 892.8999938964844, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 870.5, :x2 241.15545043349266, :y2 892.8999938964844, :width 941, :height 1174.9597806215722} {:x1 264.4374938905239, :y1 870.5, :x2 476.2233520448208, :y2 892.8999938964844, :width 941, :height 1174.9597806215722} {:x1 264.4374938905239, :y1 874.5, :x2 264.63747557997704, :y2 889.9874877929688, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "Notification 构造函数用于创建和显示通知"}, :properties {:color "yellow"}} {:id #uuid "63d33f51-4cf3-4e5a-ba4e-0d35ce15c9f9", :page 660, :position {:bounding {:x1 154.71250304579735, :y1 973.8874816894531, :x2 726.9058471620083, :y2 997.0874938964844, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 973.8874816894531, :x2 726.9058471620083, :y2 997.0874938964844, :width 941, :height 1174.9597806215722} {:x1 219.95000609755516, :y1 977.8874816894531, :x2 292.3124938905239, :y2 994.1999816894531, :width 941, :height 1174.9597806215722}), :page 660}, :content {:text "可以通过 options 参数对通知进行自定义，包括设置通知的主体、图片和振动等"}, :properties {:color "yellow"}} {:id #uuid "63d33f5f-4e43-4a2f-b2e3-28a6e49b5904", :page 661, :position {:bounding {:x1 120.55000457167625, :y1 130.94998168945312, :x2 717.9762817323208, :y2 154.52499389648438, :width 941, :height 1174.9597806215722}, :rects ({:x1 416.6874938905239, :y1 130.94998168945312, :x2 526.3629394471645, :y2 153.3499755859375, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 131.32498168945312, :x2 393.37868651747704, :y2 154.52499389648438, :width 941, :height 1174.9597806215722} {:x1 541.5750366151333, :y1 131.32498168945312, :x2 717.9762817323208, :y2 154.52499389648438, :width 941, :height 1174.9597806215722} {:x1 416.6874938905239, :y1 134.94998168945312, :x2 526.3629394471645, :y2 150.4375, :width 941, :height 1174.9597806215722} {:x1 300.2375122010708, :y1 135.32498168945312, :x2 393.37868651747704, :y2 151.63748168945312, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "调用这个构造函数返回的 Notification 对象的 close()方法可以关闭显示的通知"}, :properties {:color "yellow"}} {:id #uuid "63d33f68-3e00-469a-af14-f9a5b59ea72a", :page 661, :position {:bounding {:x1 165.86249694228172, :y1 240.25001525878906, :x2 332.29079589247704, :y2 269.0500030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 240.25001525878906, :x2 332.29079589247704, :y2 269.0500030517578, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "通知生命周期回调"}, :properties {:color "green"}} {:id #uuid "63d33f79-f2c9-4b47-8f20-bb898ac01aaf", :page 661, :position {:bounding {:x1 0, :y1 92.80000305175781, :x2 816.907983392477, :y2 330.09999084472656, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 92.80000305175781, :x2 0, :y2 115.19999694824219, :width 941, :height 1174.9597806215722} {:x1 505.9625183045864, :y1 281.4499969482422, :x2 600.915551751852, :y2 304.65000915527344, :width 941, :height 1174.9597806215722} {:x1 620.812524408102, :y1 281.4499969482422, :x2 816.907983392477, :y2 304.65000915527344, :width 941, :height 1174.9597806215722} {:x1 620.812524408102, :y1 285.4499969482422, :x2 816.907983392477, :y2 301.7624969482422, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 306.90000915527344, :x2 184.03904113173485, :y2 330.09999084472656, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "Notifications API 提供了 4 个用于添加回调的生命周期方法"}, :properties {:color "yellow"}} {:id #uuid "63d340d0-c1a5-45b5-9060-f21e530f4039", :page 661, :position {:bounding {:x1 141.50000914931297, :y1 330.8875045776367, :x2 330.2094665467739, :y2 353.2874984741211, :width 941, :height 1174.9597806215722}, :rects ({:x1 141.50000914931297, :y1 330.8875045776367, :x2 330.2094665467739, :y2 353.2874984741211, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "onshow 在通知显示时触发"}, :properties {:color "yellow"}} {:id #uuid "63d340da-c1e8-4a52-8ead-a427b910db63", :page 661, :position {:bounding {:x1 141.50000914931297, :y1 355.3499984741211, :x2 355.5084167420864, :y2 377.7500228881836, :width 941, :height 1174.9597806215722}, :rects ({:x1 141.50000914931297, :y1 355.3499984741211, :x2 195.3940826356411, :y2 377.7500228881836, :width 941, :height 1174.9597806215722} {:x1 206.53749999403954, :y1 355.3499984741211, :x2 355.5084167420864, :y2 377.7500228881836, :width 941, :height 1174.9597806215722} {:x1 206.53749999403954, :y1 359.3499984741211, :x2 209.63750609755516, :y2 374.83751678466797, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "onclick 在通知被点击时触发"}, :properties {:color "yellow"}} {:id #uuid "63d340e0-7377-4306-9caf-043efcbc00c5", :page 661, :position {:bounding {:x1 132.09999999403954, :y1 380.0750045776367, :x2 491.23369750380516, :y2 403.27501678466797, :width 941, :height 1174.9597806215722}, :rects ({:x1 411.1125122010708, :y1 380.0750045776367, :x2 491.23369750380516, :y2 403.27501678466797, :width 941, :height 1174.9597806215722} {:x1 132.09999999403954, :y1 380.73751068115234, :x2 395.91738280653954, :y2 403.1375045776367, :width 941, :height 1174.9597806215722} {:x1 135.78749999403954, :y1 384.73751068115234, :x2 395.91738280653954, :y2 400.2249984741211, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text " onclose 在通知消失或通过 close()关闭时触发"}, :properties {:color "yellow"}} {:id #uuid "63d340e7-afd3-4ee6-bbe6-3f7af46e9cb6", :page 661, :position {:bounding {:x1 141.50000914931297, :y1 404.0625228881836, :x2 435.7384887635708, :y2 426.46251678466797, :width 941, :height 1174.9597806215722}, :rects ({:x1 141.50000914931297, :y1 404.0625228881836, :x2 435.7384887635708, :y2 426.46251678466797, :width 941, :height 1174.9597806215722} {:x1 206.53749999403954, :y1 408.0625228881836, :x2 209.63750609755516, :y2 423.55001068115234, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "onerror 在发生错误阻止通知显示时触发"}, :properties {:color "yellow"}} {:id #uuid "63d340ed-5767-46ae-bf5d-5255106c2cf3", :page 661, :position {:bounding {:x1 135.9000640809536, :y1 579.5500030517578, :x2 324.6664672791958, :y2 613.9500122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 135.9000640809536, :y1 579.5500030517578, :x2 135.90310057997704, :y2 613.9500122070312, :width 941, :height 1174.9597806215722} {:x1 158.82500609755516, :y1 579.5500030517578, :x2 324.6664672791958, :y2 613.9500122070312, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "Page Visibility API"}, :properties {:color "green"}} {:id #uuid "63d3420b-b563-4125-a6aa-927943b40265", :page 661, :position {:bounding {:x1 0, :y1 316.80000495910645, :x2 818.2246948182583, :y2 697.25, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 316.80000495910645, :x2 0, :y2 339.20000648498535, :width 941, :height 1174.9597806215722} {:x1 766.9124999940395, :y1 648.6000061035156, :x2 818.2246948182583, :y2 671.8000183105469, :width 941, :height 1174.9597806215722} {:x1 632.1653686463833, :y1 649.6875, :x2 739.9833007752895, :y2 672.8875122070312, :width 941, :height 1174.9597806215722} {:x1 641.4875122010708, :y1 652.6000061035156, :x2 739.9833007752895, :y2 668.9125061035156, :width 941, :height 1174.9597806215722} {:x1 766.9124999940395, :y1 652.6000061035156, :x2 818.2246948182583, :y2 668.9125061035156, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 674.0500183105469, :x2 376.4533859193325, :y2 697.25, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "Page Visibility API 旨在为开发者提供页面对用户是否可见的信息。"}, :properties {:color "yellow"}} {:id #uuid "63d342f1-8c97-44dd-b7b1-1fee3b984a6c", :page 661, :position {:bounding {:x1 141.50000914931297, :y1 722.4875183105469, :x2 578.8828979432583, :y2 744.8875122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 141.50000914931297, :y1 722.4875183105469, :x2 324.0112243592739, :y2 744.8875122070312, :width 941, :height 1174.9597806215722} {:x1 364.45000609755516, :y1 722.4875183105469, :x2 578.8828979432583, :y2 744.8875122070312, :width 941, :height 1174.9597806215722} {:x1 364.45000609755516, :y1 726.4875183105469, :x2 479.5792175233364, :y2 741.9750061035156, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "document.visibilityState 值，表示下面 4 种状态之一。"}, :properties {:color "yellow"}} {:id #uuid "63d342fc-4773-4bff-9528-80955dacd115", :page 661, :position {:bounding {:x1 141.50000914931297, :y1 868.7500305175781, :x2 695.6656127870083, :y2 891.1499938964844, :width 941, :height 1174.9597806215722}, :rects ({:x1 141.50000914931297, :y1 868.7500305175781, :x2 258.7228942811489, :y2 891.1499938964844, :width 941, :height 1174.9597806215722} {:x1 290.13750609755516, :y1 868.7500305175781, :x2 695.6656127870083, :y2 891.1499938964844, :width 941, :height 1174.9597806215722} {:x1 290.13750609755516, :y1 872.7500305175781, :x2 293.2375122010708, :y2 888.2375183105469, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "visibilitychange 事件，该事件会在文档从隐藏变可见（或反之）时触发。"}, :properties {:color "yellow"}} {:id #uuid "63d34305-ebd2-45dd-a69f-3712726353d9", :page 661, :position {:bounding {:x1 141.50000914931297, :y1 893.2124938964844, :x2 458.3564392030239, :y2 915.6125183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 141.50000914931297, :y1 893.2124938964844, :x2 458.3564392030239, :y2 915.6125183105469, :width 941, :height 1174.9597806215722} {:x1 271.16249999403954, :y1 897.2124938964844, :x2 274.26250609755516, :y2 912.7000427246094, :width 941, :height 1174.9597806215722}), :page 661}, :content {:text "document.hidden 布尔值，表示页面是否隐藏"}, :properties {:color "yellow"}} {:id #uuid "63d34331-ac02-4649-a54b-5d4e06524b29", :page 662, :position {:bounding {:x1 192.98749694228172, :y1 129.0999984741211, :x2 309.0045104920864, :y2 163.50000762939453, :width 941, :height 1174.9597806215722}, :rects ({:x1 192.98749694228172, :y1 129.0999984741211, :x2 309.0045104920864, :y2 163.50000762939453, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "Streams API"}, :properties {:color "green"}} {:id #uuid "63d34373-7656-44c7-869b-58b9530ed9b3", :page 662, :position {:bounding {:x1 200.02500304579735, :y1 475.6875, :x2 262.4356323182583, :y2 504.4875030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 475.6875, :x2 262.4356323182583, :y2 504.4875030517578, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "理解流"}, :properties {:color "green"}} {:id #uuid "63d34379-0ef6-41e9-a49f-22e4cd36d405", :page 662, :position {:bounding {:x1 0, :y1 174.87500914931297, :x2 774.928735345602, :y2 275.20000609755516, :width 941, :height 1174.9597806215722}, :rects ({:x1 560.5994506776333, :y1 174.87500914931297, :x2 774.928735345602, :y2 198.07500609755516, :width 941, :height 1174.9597806215722} {:x1 565.625024408102, :y1 177.78749999403954, :x2 774.928735345602, :y2 194.09999999403954, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 199.25000914931297, :x2 282.36245879530907, :y2 222.45000609755516, :width 941, :height 1174.9597806215722} {:x1 0, :y1 252.79999694228172, :x2 0, :y2 275.20000609755516, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "Web 应用如何消费有序的小信息块而不是大块信息？"}, :properties {:color "yellow"}} {:id #uuid "63d343b0-175d-4c91-8136-8ca9463f7d19", :page 662, :position {:bounding {:x1 211.47499999403954, :y1 566.7000122070312, :x2 611.3909545838833, :y2 589.9000091552734, :width 941, :height 1174.9597806215722}, :rects ({:x1 211.47499999403954, :y1 566.7000122070312, :x2 611.3909545838833, :y2 589.9000091552734, :width 941, :height 1174.9597806215722} {:x1 211.77500304579735, :y1 569.6125030517578, :x2 287.4320922791958, :y2 585.9250030517578, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "Stream API 直接解决的问题是处理网络请求和读写磁盘。"}, :properties {:color "yellow"}} {:id #uuid "63d343c8-f531-4b27-8988-32fb91d42f9c", :page 662, :position {:bounding {:x1 154.70000609755516, :y1 590.0750122070312, :x2 345.6997009217739, :y2 613.2750091552734, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.70000609755516, :y1 590.0750122070312, :x2 345.6997009217739, :y2 613.2750091552734, :width 941, :height 1174.9597806215722} {:x1 230.12500914931297, :y1 594.0750122070312, :x2 230.26841124892235, :y2 610.3875122070312, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "Stream API 定义了三种流。"}, :properties {:color "yellow"}} {:id #uuid "63d34408-106b-4c3c-a29f-f01b64e51dfe", :page 662, :position {:bounding {:x1 0, :y1 524.8000106811523, :x2 849.6746459901333, :y2 711.9000244140625, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 524.8000106811523, :x2 0, :y2 547.2000122070312, :width 941, :height 1174.9597806215722} {:x1 534.5500122010708, :y1 663.1500244140625, :x2 849.6746459901333, :y2 686.3500061035156, :width 941, :height 1174.9597806215722} {:x1 583.2625366151333, :y1 668.2375183105469, :x2 849.6746459901333, :y2 684.5500183105469, :width 941, :height 1174.9597806215722} {:x1 175.67499694228172, :y1 688.7000122070312, :x2 374.0624938905239, :y2 711.9000244140625, :width 941, :height 1174.9597806215722} {:x1 175.67499694228172, :y1 692.7000122070312, :x2 365.9000183045864, :y2 709.0125122070312, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "生产者（producer）将数据写入流，数据在内部传入底层数据槽（sink）。"}, :properties {:color "yellow"}} {:id #uuid "63d34418-90bc-4ee3-8847-3c3eb9747cae", :page 662, :position {:bounding {:x1 0, :y1 492.80001068115234, :x2 853.2871948182583, :y2 663.0750122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 492.80001068115234, :x2 0, :y2 515.2000045776367, :width 941, :height 1174.9597806215722} {:x1 803.8499999940395, :y1 614.4250030517578, :x2 853.2871948182583, :y2 637.6250152587891, :width 941, :height 1174.9597806215722} {:x1 549.6563354432583, :y1 615.5125122070312, :x2 792.9892211854458, :y2 638.7125091552734, :width 941, :height 1174.9597806215722} {:x1 803.8499999940395, :y1 618.4250030517578, :x2 853.2871948182583, :y2 634.7375030517578, :width 941, :height 1174.9597806215722} {:x1 167.51250609755516, :y1 639.8750152587891, :x2 327.42119750380516, :y2 663.0750122070312, :width 941, :height 1174.9597806215722} {:x1 167.51250609755516, :y1 643.8750152587891, :x2 251.02121886610985, :y2 660.1875, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "据在内部从底层源进入流，然后由消费者（consumer）进行处理"}, :properties {:color "yellow"}} {:id #uuid "63d3442c-43d5-4198-9641-c79e8fc92bb1", :page 662, :position {:bounding {:x1 0, :y1 556.8000030517578, :x2 852.7697387635708, :y2 760.625, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.2000122070312, :width 941, :height 1174.9597806215722} {:x1 836.6598754823208, :y1 713.0625, :x2 852.7697387635708, :y2 736.2625122070312, :width 941, :height 1174.9597806215722} {:x1 175.67499694228172, :y1 737.4250183105469, :x2 696.4119506776333, :y2 760.625, :width 941, :height 1174.9597806215722} {:x1 175.67499694228172, :y1 741.4250183105469, :x2 447.6500183045864, :y2 757.7375183105469, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "这两个流之间是转换程序（transformer），可以根据需要检查和修改流内容。"}, :properties {:color "yellow"}} {:id #uuid "63d34435-2cee-4fc7-ac6b-9cadd9490d4e", :page 662, :position {:bounding {:x1 154.71250304579735, :y1 789.8500061035156, :x2 662.7322631776333, :y2 813.0500183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 789.8500061035156, :x2 662.7322631776333, :y2 813.0500183105469, :width 941, :height 1174.9597806215722} {:x1 269.0624938905239, :y1 792.7625122070312, :x2 354.84999999403954, :y2 809.0750122070312, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "流的基本单位是块（chunk）。块可是任意数据类型，但通常是定型数组。"}, :properties {:color "yellow"}} {:id #uuid "63d34452-2eba-4e8e-b5f0-ec6522fc3cbc", :page 662, :position {:bounding {:x1 0, :y1 764.7999877929688, :x2 840.5691772401333, :y2 1081.3249816894531, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 764.7999877929688, :x2 0, :y2 787.1999893188477, :width 941, :height 1174.9597806215722} {:x1 585.3666625916958, :y1 1033.6625061035156, :x2 840.5691772401333, :y2 1056.8624877929688, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 1058.125, :x2 265.55542144179344, :y2 1081.3249816894531, :width 941, :height 1174.9597806215722}), :page 662}, :content {:text "有流都会为已进入流但尚未离开流的块提供一个内部队列"}, :properties {:color "yellow"}} {:id #uuid "63d34474-77d4-4ee1-b96a-127bc0b5fa99", :page 663, :position {:bounding {:x1 120.55000457167625, :y1 155.6875, :x2 519.2480026185513, :y2 178.88751220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 155.6875, :x2 519.2480026185513, :y2 178.88751220703125, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "如果块入列速度快于出列速度，则内部队列会不断增大。"}, :properties {:color "yellow"}} {:id #uuid "63d3447b-5e2e-41ac-a712-e393e92bff89", :page 663, :position {:bounding {:x1 232.19043883681297, :y1 204.51251220703125, :x2 799.2000366151333, :y2 227.7125244140625, :width 941, :height 1174.9597806215722}, :rects ({:x1 232.19043883681297, :y1 204.51251220703125, :x2 799.2000366151333, :y2 227.7125244140625, :width 941, :height 1174.9597806215722} {:x1 594.375024408102, :y1 207.42498779296875, :x2 799.2000366151333, :y2 223.73748779296875, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "这个策略定义了内部队列可以占用的最大内存，即高水位线（high water mark）"}, :properties {:color "yellow"}} {:id #uuid "63d34484-feb8-41d2-9cdb-2d7ea5132379", :page 663, :position {:bounding {:x1 0, :y1 28.79998779296875, :x2 806.3106323182583, :y2 203.25, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 28.79998779296875, :x2 0, :y2 51.20001220703125, :width 941, :height 1174.9597806215722} {:x1 774.4147582948208, :y1 155.6875, :x2 806.3106323182583, :y2 178.88751220703125, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 180.04998779296875, :x2 761.4016967713833, :y2 203.25, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 184.04998779296875, :x2 265.02263793349266, :y2 200.36248779296875, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "此它会使用反压（backpressure）通知流入口停止发送数据，直到队列大小降到某个既定的阈值之下。"}, :properties {:color "yellow"}} {:id #uuid "63d3448b-f9bd-482a-8525-7262cc0fe31c", :page 663, :position {:bounding {:x1 165.86249694228172, :y1 242.82498931884766, :x2 228.27312621474266, :y2 271.62500762939453, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 242.82498931884766, :x2 228.27312621474266, :y2 271.62500762939453, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "可读流"}, :properties {:color "green"}} {:id #uuid "63d344b6-c97c-4977-aa67-5ef03ccfcc2c", :page 663, :position {:bounding {:x1 138.71250304579735, :y1 338.5250015258789, :x2 392.89861449599266, :y2 360.9249954223633, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.71250304579735, :y1 338.5250015258789, :x2 392.89861449599266, :y2 360.9249954223633, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "ReadableStreamDefaultController"}, :properties {:color "green"}} {:id #uuid "63d344f9-5e97-471e-8cc8-4e9307a2a426", :page 663, :position {:bounding {:x1 120.55000457167625, :y1 688.1874847412109, :x2 799.3372436463833, :y2 711.3874969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 688.1874847412109, :x2 736.1004272401333, :y2 711.3874969482422, :width 941, :height 1174.9597806215722} {:x1 751.312524408102, :y1 688.1874847412109, :x2 799.3372436463833, :y2 711.3874969482422, :width 941, :height 1174.9597806215722} {:x1 218.50000914931297, :y1 692.1874847412109, :x2 736.1004272401333, :y2 708.4999847412109, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "调用控制器的 enqueue()方法可以把值传入控制器。所有值都传完之后，调用 close()关闭流"}, :properties {:color "yellow"}} {:id #uuid "63d3451d-524d-49fc-8722-6a90ecd1d943", :page 663, :position {:bounding {:x1 0, :y1 252.79999542236328, :x2 815.5328002870083, :y2 567.3874969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 252.79999542236328, :x2 0, :y2 275.1999969482422, :width 941, :height 1174.9597806215722} {:x1 0, :y1 268.7999954223633, :x2 0, :y2 291.1999969482422, :width 941, :height 1174.9597806215722} {:x1 789.6784301698208, :y1 495.37501525878906, :x2 806.4066406190395, :y2 518.5749969482422, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 519.3625030517578, :x2 604.0436035096645, :y2 541.7624969482422, :width 941, :height 1174.9597806215722} {:x1 619.7124877870083, :y1 519.3625030517578, :x2 815.5328002870083, :y2 541.7624969482422, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 523.3625030517578, :x2 604.0436035096645, :y2 538.8499908447266, :width 941, :height 1174.9597806215722} {:x1 619.7124877870083, :y1 523.3625030517578, :x2 815.5328002870083, :y2 538.8499908447266, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 543.8249969482422, :x2 132.97905883193016, :y2 566.2249908447266, :width 941, :height 1174.9597806215722} {:x1 152.86249694228172, :y1 544.1875152587891, :x2 200.85117492079735, :y2 567.3874969482422, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 547.8249969482422, :x2 132.97905883193016, :y2 563.3125152587891, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "建 ReadableStream 的一个实例，并在这个构造函数的 underlyingSource 参数（第一个参数）中定义 start()方法，"}, :properties {:color "yellow"}} {:id #uuid "63d34524-c3a7-430d-9671-1bc5a236ce5d", :page 663, :position {:bounding {:x1 232.84363707900047, :y1 544.1875152587891, :x2 591.875024408102, :y2 567.3874969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 232.84363707900047, :y1 544.1875152587891, :x2 556.640893548727, :y2 567.3874969482422, :width 941, :height 1174.9597806215722} {:x1 575.9500366151333, :y1 544.1875152587891, :x2 591.875024408102, :y2 567.3874969482422, :width 941, :height 1174.9597806215722} {:x1 478.78749999403954, :y1 548.1875152587891, :x2 556.640893548727, :y2 564.5000152587891, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "在这个方法中使用作为参数传入的 controller。"}, :properties {:color "yellow"}} {:id #uuid "63d34551-d72c-4fcf-a5e5-8c940581d10a", :page 663, :position {:bounding {:x1 138.71250304579735, :y1 992.2000122070312, :x2 369.77626952528954, :y2 1014.6000061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.71250304579735, :y1 992.2000122070312, :x2 369.77626952528954, :y2 1014.6000061035156, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "ReadableStreamDefaultReader"}, :properties {:color "green"}} {:id #uuid "63d34569-4de8-4f1e-a1a6-f7eaae15455c", :page 663, :position {:bounding {:x1 0, :y1 652.8000335693359, :x2 811.754418939352, :y2 1060.675033569336, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 652.8000335693359, :x2 0, :y2 675.2000274658203, :width 941, :height 1174.9597806215722} {:x1 659.3826538026333, :y1 1013.1250457763672, :x2 811.754418939352, :y2 1036.3250427246094, :width 941, :height 1174.9597806215722} {:x1 731.5249877870083, :y1 1017.1250457763672, :x2 811.754418939352, :y2 1033.4375457763672, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 1037.0875396728516, :x2 248.98469695448875, :y2 1059.487533569336, :width 941, :height 1174.9597806215722} {:x1 264.32500609755516, :y1 1037.0875396728516, :x2 575.7361694276333, :y2 1059.487533569336, :width 941, :height 1174.9597806215722} {:x1 590.500024408102, :y1 1037.4750366210938, :x2 654.6426635682583, :y2 1060.675033569336, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 1041.0875396728516, :x2 248.98469695448875, :y2 1056.5750427246094, :width 941, :height 1174.9597806215722} {:x1 264.32500609755516, :y1 1041.0875396728516, :x2 575.7361694276333, :y2 1056.5750427246094, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "需要一个 ReadableStreamDefaultReader 的实例，该实例可以通过流的 getReader()方法获取"}, :properties {:color "yellow"}} {:id #uuid "63d34571-0801-4e12-b24a-5836850f7d85", :page 663, :position {:bounding {:x1 0, :y1 668.8000335693359, :x2 814.9994140565395, :y2 1085.0375366210938, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 668.8000335693359, :x2 0, :y2 691.2000350952148, :width 941, :height 1174.9597806215722} {:x1 670.6783691346645, :y1 1037.4750366210938, :x2 814.9994140565395, :y2 1060.675033569336, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 1061.8375396728516, :x2 440.5823837220669, :y2 1085.0375366210938, :width 941, :height 1174.9597806215722}), :page 663}, :content {:text "调用这个方法会获得流的锁，保证只有这个读取器可以从流中读取值："}, :properties {:color "yellow"}} {:id #uuid "63d34582-cd54-452c-916b-3d1c5a780d5a", :page 665, :position {:bounding {:x1 165.86249694228172, :y1 129.50001525878906, :x2 228.27312621474266, :y2 158.3000030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 129.50001525878906, :x2 228.27312621474266, :y2 158.3000030517578, :width 941, :height 1174.9597806215722}), :page 665}, :content {:text "可写流"}, :properties {:color "green"}} {:id #uuid "63d345ab-2fe3-4b4d-8adc-94359a784214", :page 665, :position {:bounding {:x1 138.72499999403954, :y1 201.3499984741211, :x2 292.0467468202114, :y2 224.55001068115234, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.72499999403954, :y1 201.3499984741211, :x2 292.0467468202114, :y2 224.55001068115234, :width 941, :height 1174.9597806215722} {:x1 171.33750304579735, :y1 205.3499984741211, :x2 174.59999999403954, :y2 221.6624984741211, :width 941, :height 1174.9597806215722}), :page 665}, :content {:text "创建 WritableStream"}, :properties {:color "green"}} {:id #uuid "63d345c2-01ac-4ee7-8208-99c614451c4d", :page 665, :position {:bounding {:x1 0, :y1 172.8000030517578, :x2 804.5551391541958, :y2 407.7125015258789, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 172.8000030517578, :x2 0, :y2 195.20000457763672, :width 941, :height 1174.9597806215722} {:x1 600.937524408102, :y1 359.68750762939453, :x2 804.5551391541958, :y2 382.0875015258789, :width 941, :height 1174.9597806215722} {:x1 416.80385741591454, :y1 360.0499954223633, :x2 588.1481567323208, :y2 383.25000762939453, :width 941, :height 1174.9597806215722} {:x1 600.937524408102, :y1 363.68750762939453, :x2 804.5551391541958, :y2 379.1749954223633, :width 941, :height 1174.9597806215722} {:x1 470.01250609755516, :y1 364.0499954223633, :x2 588.1481567323208, :y2 380.3624954223633, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 384.5125198364258, :x2 271.8868041932583, :y2 407.7125015258789, :width 941, :height 1174.9597806215722} {:x1 287.66249999403954, :y1 384.5125198364258, :x2 480.0494323670864, :y2 407.7125015258789, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 388.5125198364258, :x2 271.8868041932583, :y2 404.8250198364258, :width 941, :height 1174.9597806215722}), :page 665}, :content {:text "在传给 WritableStream 构造函数的 underlyingSink参数中，通过实现 write()方法可以获得写入的数据："}, :properties {:color "yellow"}} {:id #uuid "63d345ce-478d-43f9-b069-5ebfd74d5d3a", :page 665, :position {:bounding {:x1 138.71250304579735, :y1 508.72501373291016, :x2 355.4064575135708, :y2 531.1250076293945, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.71250304579735, :y1 508.72501373291016, :x2 355.4064575135708, :y2 531.1250076293945, :width 941, :height 1174.9597806215722}), :page 665}, :content {:text "WritableStreamDefaultWriter"}, :properties {:color "green"}} {:id #uuid "63d345dd-ab7a-4117-9ace-e7afdd907dce", :page 665, :position {:bounding {:x1 0, :y1 300.80001068115234, :x2 785.2000976502895, :y2 577.3000259399414, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 300.80001068115234, :x2 0, :y2 323.2000198364258, :width 941, :height 1174.9597806215722} {:x1 499.0500122010708, :y1 529.6375198364258, :x2 785.2000976502895, :y2 552.8375015258789, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 529.6500015258789, :x2 477.15899047255516, :y2 552.8500137329102, :width 941, :height 1174.9597806215722} {:x1 499.0500122010708, :y1 533.6375198364258, :x2 785.2000976502895, :y2 549.9500198364258, :width 941, :height 1174.9597806215722} {:x1 294.6500183045864, :y1 533.6500015258789, :x2 477.15899047255516, :y2 549.9625015258789, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 554.1000137329102, :x2 151.99048766493797, :y2 577.3000259399414, :width 941, :height 1174.9597806215722}), :page 665}, :content {:text "要把获得的数据写入流，可以通过流的 getWriter()方法获取 WritableStreamDefaultWriter的实例。"}, :properties {:color "yellow"}} {:id #uuid "63d345fa-f8cf-4be7-bfa1-0fcb58283eea", :page 665, :position {:bounding {:x1 120.55000457167625, :y1 853.4375, :x2 528.1115890443325, :y2 876.6375122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 853.4375, :x2 528.1115890443325, :y2 876.6375122070312, :width 941, :height 1174.9597806215722}), :page 665}, :content {:text "在向流中写入数据前，生产者必须确保写入器可以接收值。"}, :properties {:color "yellow"}} {:id #uuid "63d34629-74b6-4364-ad52-a759cfbca378", :page 665, :position {:bounding {:x1 202.41864928603172, :y1 877.7875061035156, :x2 497.055917352438, :y2 900.9874877929688, :width 941, :height 1174.9597806215722}, :rects ({:x1 202.41864928603172, :y1 877.7875061035156, :x2 497.055917352438, :y2 900.9874877929688, :width 941, :height 1174.9597806215722}), :page 665}, :content {:text "此期约会在能够向流中写入数据时解决。"}, :properties {:color "yellow"}} {:id #uuid "63d3466b-cd63-47a1-bcda-4f7402710e5f", :page 665, :position {:bounding {:x1 0, :y1 556.7999954223633, :x2 777.7920776307583, :y2 900.9874877929688, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 556.7999954223633, :x2 0, :y2 579.1999969482422, :width 941, :height 1174.9597806215722} {:x1 535.3875366151333, :y1 853.0625, :x2 777.7920776307583, :y2 875.4624938964844, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 877.7875061035156, :x2 186.0499206483364, :y2 900.9874877929688, :width 941, :height 1174.9597806215722}), :page 665}, :content {:text "writableStreamDefaultWriter.ready返回一个期约"}, :properties {:color "yellow"}} {:id #uuid "63d34677-07aa-46c9-8cb3-3b9331134bff", :page 666, :position {:bounding {:x1 200.02500304579735, :y1 448.43750762939453, :x2 262.4356323182583, :y2 477.2374954223633, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 448.43750762939453, :x2 262.4356323182583, :y2 477.2374954223633, :width 941, :height 1174.9597806215722}), :page 666}, :content {:text "转换流"}, :properties {:color "green"}} {:id #uuid "63d34689-8168-4294-a9aa-d449684e3fde", :page 667, :position {:bounding {:x1 146.39826354384422, :y1 611.9375, :x2 311.4872680604458, :y2 642.1125183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 611.9375, :x2 311.4872680604458, :y2 640.7375183105469, :width 941, :height 1174.9597806215722} {:x1 146.39826354384422, :y1 613.3125, :x2 146.4017730653286, :y2 642.1125183105469, :width 941, :height 1174.9597806215722}), :page 667}, :content {:text "通过管道连接流"}, :properties {:color "green"}} {:id #uuid "63d346af-3385-4606-a61e-71b7705d7a13", :page 666, :position {:bounding {:x1 154.71250304579735, :y1 490.7250061035156, :x2 847.4579101502895, :y2 513.9250030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 490.7250061035156, :x2 734.2843261659145, :y2 513.9250030517578, :width 941, :height 1174.9597806215722} {:x1 751.312524408102, :y1 490.7250061035156, :x2 847.4579101502895, :y2 513.9250030517578, :width 941, :height 1174.9597806215722} {:x1 644.8499999940395, :y1 494.7250061035156, :x2 734.2843261659145, :y2 511.0375061035156, :width 941, :height 1174.9597806215722}), :page 666}, :content {:text "转换流用于组合可读流和可写流。数据块在两个流之间的转换是通过 transform()方法完成的。"}, :properties {:color "yellow"}} {:id #uuid "63d34755-0bd0-46d7-8594-8e62b7bf390d", :page 667, :position {:bounding {:x1 0, :y1 396.8000030517578, :x2 818.7289672791958, :y2 700.6125335693359, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 396.8000030517578, :x2 0, :y2 419.1999969482422, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 654.2249908447266, :x2 585.7105346620083, :y2 677.4250335693359, :width 941, :height 1174.9597806215722} {:x1 598.8625122010708, :y1 654.2249908447266, :x2 818.7289672791958, :y2 677.4250335693359, :width 941, :height 1174.9597806215722} {:x1 326.8749938905239, :y1 658.2249908447266, :x2 585.7105346620083, :y2 674.5375213623047, :width 941, :height 1174.9597806215722} {:x1 598.8625122010708, :y1 658.2249908447266, :x2 818.7289672791958, :y2 674.5375213623047, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 678.2125091552734, :x2 244.92066344618797, :y2 700.6125335693359, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 682.2125091552734, :x2 218.76250609755516, :y2 697.6999969482422, :width 941, :height 1174.9597806215722}), :page 667}, :content {:text "流可以通过管道连接成一串。最常见的用例是使用 pipeThrough()方法把 ReadableStream 接入 TransformStream。"}, :properties {:color "yellow"}} {:id #uuid "63d34786-1b37-4a5f-9fea-f74bbe3f36b3", :page 668, :position {:bounding {:x1 154.71250304579735, :y1 581.5625, :x2 725.6563964784145, :y2 604.7625122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 581.5625, :x2 303.3817993104458, :y2 604.7625122070312, :width 941, :height 1174.9597806215722} {:x1 315.7375122010708, :y1 581.5625, :x2 725.6563964784145, :y2 604.7625122070312, :width 941, :height 1174.9597806215722} {:x1 236.26250609755516, :y1 585.5625, :x2 303.3817993104458, :y2 601.875, :width 941, :height 1174.9597806215722} {:x1 315.7375122010708, :y1 585.5625, :x2 725.6563964784145, :y2 601.875, :width 941, :height 1174.9597806215722}), :page 668}, :content {:text "另外，使用 pipeTo()方法也可以将 ReadableStream 连接到 WritableStream"}, :properties {:color "yellow"}} {:id #uuid "63d34795-aa73-4f96-803a-b6efcfc39fde", :page 669, :position {:bounding {:x1 172.15000304579735, :y1 253.11251831054688, :x2 259.4843688905239, :y2 287.5124816894531, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.15000304579735, :y1 253.11251831054688, :x2 259.4843688905239, :y2 287.5124816894531, :width 941, :height 1174.9597806215722} {:x1 220.34999999403954, :y1 258.7124938964844, :x2 225.16249999403954, :y2 282.7624816894531, :width 941, :height 1174.9597806215722}), :page 669}, :content {:text "计时 API"}, :properties {:color "green"}} {:id #uuid "63d36759-8119-4d22-be13-ef7cf70bacc8", :page 669, :position {:bounding {:x1 0, :y1 108.80000305175781, :x2 816.8204589784145, :y2 349.9125061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 108.80000305175781, :x2 0, :y2 131.20000457763672, :width 941, :height 1174.9597806215722} {:x1 685.2000366151333, :y1 301.1625061035156, :x2 816.8204589784145, :y2 324.3625183105469, :width 941, :height 1174.9597806215722} {:x1 411.3124938905239, :y1 301.875, :x2 672.374291986227, :y2 324.2749938964844, :width 941, :height 1174.9597806215722} {:x1 685.2000366151333, :y1 305.1625061035156, :x2 816.8204589784145, :y2 321.4750061035156, :width 941, :height 1174.9597806215722} {:x1 513.6125122010708, :y1 305.875, :x2 672.374291986227, :y2 321.3625183105469, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 326.7124938964844, :x2 171.34201964735985, :y2 349.9125061035156, :width 941, :height 1174.9597806215722}), :page 669}, :content {:text "Performance 接口通过 JavaScript API 暴露了浏览器内部的度量指标"}, :properties {:color "yellow"}} {:id #uuid "63d36799-46d1-45e4-870d-92a6621d1e58", :page 669, :position {:bounding {:x1 0, :y1 124.80000305175781, :x2 805.976342767477, :y2 373.1000061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 124.80000305175781, :x2 0, :y2 147.1999969482422, :width 941, :height 1174.9597806215722} {:x1 705.7708984315395, :y1 326.7124938964844, :x2 805.976342767477, :y2 349.9125061035156, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 350.70001220703125, :x2 311.7304321229458, :y2 373.1000061035156, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 354.70001220703125, :x2 255.41884765028954, :y2 370.1875, :width 941, :height 1174.9597806215722}), :page 669}, :content {:text "个接口暴露在 window.performance 对象上"}, :properties {:color "yellow"}} {:id #uuid "63d3682d-5871-4d0b-a8b2-c9b8df2a69a7", :page 669, :position {:bounding {:x1 177.32500609755516, :y1 716.8374938964844, :x2 379.1234069764614, :y2 745.6375122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 177.32500609755516, :y1 716.8374938964844, :x2 379.1234069764614, :y2 745.6375122070312, :width 941, :height 1174.9597806215722}), :page 669}, :content {:text "High Resolution Time API"}, :properties {:color "green"}} {:id #uuid "63d36841-eead-486a-b892-415822d0bebb", :page 669, :position {:bounding {:x1 118.80000457167625, :y1 755.9375, :x2 679.260751336813, :y2 779.5, :width 941, :height 1174.9597806215722}, :rects ({:x1 118.80000457167625, :y1 755.9375, :x2 201.2305084168911, :y2 778.3374938964844, :width 941, :height 1174.9597806215722} {:x1 211.79999694228172, :y1 756.3000183105469, :x2 679.260751336813, :y2 779.5, :width 941, :height 1174.9597806215722}), :page 669}, :content {:text "Date.now()方法只适用于日期时间相关操作，而且是不要求计时精度的操作。"}, :properties {:color "yellow"}} {:id #uuid "63d368ee-7c33-48ec-9d85-1a17433ceda4", :page 669, :position {:bounding {:x1 0, :y1 540.8000183105469, :x2 818.3372436463833, :y2 1078.1125183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 540.8000183105469, :x2 0, :y2 563.2000198364258, :width 941, :height 1174.9597806215722} {:x1 593.3999877870083, :y1 1029.4750366210938, :x2 748.3820434510708, :y2 1052.6750183105469, :width 941, :height 1174.9597806215722} {:x1 766.937524408102, :y1 1029.4750366210938, :x2 818.3372436463833, :y2 1052.6750183105469, :width 941, :height 1174.9597806215722} {:x1 766.937524408102, :y1 1033.4750366210938, :x2 818.3372436463833, :y2 1049.7875366210938, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 1054.5375366210938, :x2 295.86602172255516, :y2 1076.9375305175781, :width 941, :height 1174.9597806215722} {:x1 310.88750609755516, :y1 1054.9125366210938, :x2 584.6339355409145, :y2 1078.1125183105469, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 1058.5375366210938, :x2 295.86602172255516, :y2 1074.0250244140625, :width 941, :height 1174.9597806215722}), :page 669}, :content {:text "High Resolution Time API 定义了 window.performance.now()，这个方法返回一个微秒精度的浮点值"}, :properties {:color "yellow"}} {:id #uuid "63d3690e-a082-4966-9276-338be3798200", :page 670, :position {:bounding {:x1 152.96250304579735, :y1 315.91251373291016, :x2 811.7381225526333, :y2 339.4874954223633, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 315.91251373291016, :x2 297.4735046327114, :y2 338.31250762939453, :width 941, :height 1174.9597806215722} {:x1 310.88750609755516, :y1 316.28751373291016, :x2 811.7381225526333, :y2 339.4874954223633, :width 941, :height 1174.9597806215722} {:x1 310.88750609755516, :y1 320.28751373291016, :x2 729.679223626852, :y2 336.60001373291016, :width 941, :height 1174.9597806215722}), :page 670}, :content {:text "performance.now()计时器采用相对度量。这个计时器在执行上下文创建时从 0 开始计时。"}, :properties {:color "yellow"}} {:id #uuid "63d36923-4194-4317-85a3-aebd30a0e595", :page 670, :position {:bounding {:x1 122.00000151991844, :y1 389.10001373291016, :x2 651.753442376852, :y2 411.50003814697266, :width 941, :height 1174.9597806215722}, :rects ({:x1 122.00000151991844, :y1 389.10001373291016, :x2 302.63879546523094, :y2 411.50003814697266, :width 941, :height 1174.9597806215722} {:x1 326.3625122010708, :y1 389.10001373291016, :x2 651.753442376852, :y2 411.50003814697266, :width 941, :height 1174.9597806215722} {:x1 326.3625122010708, :y1 393.10001373291016, :x2 326.5624938905239, :y2 408.5875015258789, :width 941, :height 1174.9597806215722}), :page 670}, :content {:text "performance.timeOrigin 属性返回计时器初始化时全局系统时钟的值。"}, :properties {:color "yellow"}} {:id #uuid "63d36932-5759-4259-a621-3a0c2188ee2c", :page 670, :position {:bounding {:x1 211.48749694228172, :y1 676.1749877929688, :x2 420.11577758193016, :y2 704.9750061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 211.48749694228172, :y1 676.1749877929688, :x2 420.11577758193016, :y2 704.9750061035156, :width 941, :height 1174.9597806215722}), :page 670}, :content {:text "Performance Timeline API"}, :properties {:color "green"}} {:id #uuid "63d36963-a3d5-4bd2-83ff-ceff10dc9cd6", :page 670, :position {:bounding {:x1 154.71250304579735, :y1 714.5500183105469, :x2 787.6305175721645, :y2 737.75, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 714.5500183105469, :x2 315.9621215760708, :y2 737.75, :width 941, :height 1174.9597806215722} {:x1 330.66249999403954, :y1 714.5500183105469, :x2 787.6305175721645, :y2 737.75, :width 941, :height 1174.9597806215722} {:x1 330.66249999403954, :y1 718.5500183105469, :x2 751.0999999940395, :y2 734.8625183105469, :width 941, :height 1174.9597806215722}), :page 670}, :content {:text "Performance Timeline API 使用一套用于度量客户端延迟的工具扩展了 Performance 接口"}, :properties {:color "yellow"}} {:id #uuid "63d36976-e75d-4f17-874d-4756419274bc", :page 670, :position {:bounding {:x1 0, :y1 556.8000030517578, :x2 851.791528314352, :y2 763.2000122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.1999969482422, :width 941, :height 1174.9597806215722} {:x1 803.6707397401333, :y1 715.6375122070312, :x2 851.791528314352, :y2 738.8374938964844, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 740, :x2 414.53503569960594, :y2 763.2000122070312, :width 941, :height 1174.9597806215722}), :page 670}, :content {:text "性能度量将会采用计算结束与开始时间差的形式"}, :properties {:color "yellow"}} {:id #uuid "63d36998-3822-447c-9d7b-dbcf2d54734c", :page 670, :position {:bounding {:x1 0, :y1 620.7999877929688, :x2 843.108911126852, :y2 860.7374877929688, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 620.7999877929688, :x2 0, :y2 643.1999893188477, :width 941, :height 1174.9597806215722} {:x1 360.9633727967739, :y1 813.1749877929688, :x2 843.108911126852, :y2 836.375, :width 941, :height 1174.9597806215722} {:x1 737.6499877870083, :y1 817.1749877929688, :x2 843.108911126852, :y2 833.4874877929688, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 837.1625061035156, :x2 209.03174743056297, :y2 859.5625, :width 941, :height 1174.9597806215722} {:x1 233.47499999403954, :y1 837.5375061035156, :x2 265.4914489686489, :y2 860.7374877929688, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 841.1625061035156, :x2 209.03174743056297, :y2 856.6499938964844, :width 941, :height 1174.9597806215722}), :page 670}, :content {:text "在一个执行上下文中被记录的所有性能条目可以通过 performance. getEntries()获取"}, :properties {:color "yellow"}} {:id #uuid "63d369c6-c375-43f4-a9eb-83b3cf64d904", :page 670, :position {:bounding {:x1 154.71250304579735, :y1 924.4499816894531, :x2 630.4255004823208, :y2 947.6499938964844, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 924.4499816894531, :x2 595.0467163026333, :y2 947.6499938964844, :width 941, :height 1174.9597806215722} {:x1 606.2000366151333, :y1 924.4499816894531, :x2 630.4255004823208, :y2 947.6499938964844, :width 941, :height 1174.9597806215722} {:x1 367.1125122010708, :y1 927.3624877929688, :x2 595.0467163026333, :y2 943.6749877929688, :width 941, :height 1174.9597806215722} {:x1 606.2000366151333, :y1 928.4499816894531, :x2 622.2000366151333, :y2 944.7624816894531, :width 941, :height 1174.9597806215722}), :page 670}, :content {:text "这个返回的集合代表浏览器的性能时间线（performance timeline）。"}, :properties {:color "yellow"}} {:id #uuid "63d36a06-ecff-4f82-9602-7358342d9f81", :page 671, :position {:bounding {:x1 168.06243285536766, :y1 130.95000457763672, :x2 469.02178344130516, :y2 154.5250015258789, :width 941, :height 1174.9597806215722}, :rects ({:x1 309.45000609755516, :y1 130.95000457763672, :x2 469.02178344130516, :y2 153.3499984741211, :width 941, :height 1174.9597806215722} {:x1 168.06243285536766, :y1 131.32500457763672, :x2 298.37297973036766, :y2 154.5250015258789, :width 941, :height 1174.9597806215722} {:x1 168.45000609755516, :y1 134.95000457763672, :x2 298.37297973036766, :y2 150.43750762939453, :width 941, :height 1174.9597806215722} {:x1 309.45000609755516, :y1 134.95000457763672, :x2 309.6227661073208, :y2 150.43750762939453, :width 941, :height 1174.9597806215722}), :page 671}, :content {:text "PerformanceEntry 实际上是一个抽象基类"}, :properties {:color "yellow"}} {:id #uuid "63d36a4c-a1b0-4434-80c9-a47a713662e0", :page 671, :position {:bounding {:x1 120.56250151991844, :y1 378.2750015258789, :x2 494.19414672255516, :y2 401.47501373291016, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.56250151991844, :y1 378.2750015258789, :x2 228.67322692275047, :y2 401.47501373291016, :width 941, :height 1174.9597806215722} {:x1 241.38750609755516, :y1 378.2750015258789, :x2 494.19414672255516, :y2 401.47501373291016, :width 941, :height 1174.9597806215722} {:x1 241.38750609755516, :y1 382.2750015258789, :x2 241.73574218153954, :y2 398.5875015258789, :width 941, :height 1174.9597806215722}), :page 671}, :content {:text "User Timing API 用于记录和分析自定义性能条目"}, :properties {:color "yellow"}} {:id #uuid "63d36a57-3dc9-45b8-8b21-88b75ff6dccb", :page 671, :position {:bounding {:x1 0, :y1 188.79999542236328, :x2 808.833032220602, :y2 426.91251373291016, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 188.79999542236328, :x2 0, :y2 211.20001983642578, :width 941, :height 1174.9597806215722} {:x1 599.073754876852, :y1 379.3624954223633, :x2 808.833032220602, :y2 402.56250762939453, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 403.3375015258789, :x2 239.01088866591454, :y2 425.7375259399414, :width 941, :height 1174.9597806215722} {:x1 255.04999694228172, :y1 403.7125015258789, :x2 303.1707702577114, :y2 426.91251373291016, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 407.3375015258789, :x2 239.01088866591454, :y2 422.8250198364258, :width 941, :height 1174.9597806215722}), :page 671}, :content {:text "记录自定义性能条目要使用 performance.mark()方法："}, :properties {:color "yellow"}} {:id #uuid "63d36b2d-1547-42c0-89d7-20843d4dc21f", :page 671, :position {:bounding {:x1 0, :y1 348.8000183105469, :x2 817.7414184510708, :y2 631.7000122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 348.8000183105469, :x2 0, :y2 371.20001220703125, :width 941, :height 1174.9597806215722} {:x1 705.5874877870083, :y1 582.9500122070312, :x2 817.7414184510708, :y2 606.1500244140625, :width 941, :height 1174.9597806215722} {:x1 614.930444329977, :y1 584.0375366210938, :x2 694.669213861227, :y2 607.2374877929688, :width 941, :height 1174.9597806215722} {:x1 705.5874877870083, :y1 586.9500122070312, :x2 817.7414184510708, :y2 603.2625122070312, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 608.125, :x2 229.56165465712547, :y2 630.5250244140625, :width 941, :height 1174.9597806215722} {:x1 255.04999694228172, :y1 608.5, :x2 367.2757202088833, :y2 631.7000122070312, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 612.125, :x2 229.56165465712547, :y2 627.6124877929688, :width 941, :height 1174.9597806215722}), :page 671}, :content {:text "新的标记（mark）会被推到 getEntriesByType()返回数组的开始"}, :properties {:color "yellow"}} {:id #uuid "63d36b38-3f83-4262-9a7e-593568580abb", :page 671, :position {:bounding {:x1 281.0805602967739, :y1 741.3374938964844, :x2 685.8050170838833, :y2 764.5375061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 281.0805602967739, :y1 741.3374938964844, :x2 685.8050170838833, :y2 764.5375061035156, :width 941, :height 1174.9597806215722} {:x1 365.8625122010708, :y1 745.3374938964844, :x2 533.7164550721645, :y2 761.6499938964844, :width 941, :height 1174.9597806215722}), :page 671}, :content {:text "还可以生成 PerformanceMeasure（性能度量）条目，"}, :properties {:color "yellow"}} {:id #uuid "63d36bb6-ccd6-4270-9af3-b4aeba65c22d", :page 671, :position {:bounding {:x1 120.55000457167625, :y1 1060.3375549316406, :x2 648.8712402284145, :y2 1083.5375366210938, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 1060.3375549316406, :x2 259.9575057923794, :y2 1083.5375366210938, :width 941, :height 1174.9597806215722} {:x1 276.70000609755516, :y1 1060.3375549316406, :x2 648.8712402284145, :y2 1083.5375366210938, :width 941, :height 1174.9597806215722} {:x1 276.70000609755516, :y1 1064.3375549316406, :x2 276.84255370497704, :y2 1080.6500549316406, :width 941, :height 1174.9597806215722}), :page 671}, :content {:text "Navigation Timing API 提供了高精度时间戳，用于度量当前页面加载速度。"}, :properties {:color "yellow"}} {:id #uuid "63d36bc9-ec3b-4e91-b6c7-376cf96d9399", :page 672, :position {:bounding {:x1 154.04847106337547, :y1 130.9499969482422, :x2 511.5495239198208, :y2 154.52500915527344, :width 941, :height 1174.9597806215722}, :rects ({:x1 474.9999938905239, :y1 130.9499969482422, :x2 511.5495239198208, :y2 153.34999084472656, :width 941, :height 1174.9597806215722} {:x1 154.04847106337547, :y1 131.3249969482422, :x2 453.7416931092739, :y2 154.52500915527344, :width 941, :height 1174.9597806215722} {:x1 474.9999938905239, :y1 134.9499969482422, :x2 478.09999999403954, :y2 150.43748474121094, :width 941, :height 1174.9597806215722} {:x1 219.95000609755516, :y1 135.3249969482422, :x2 453.7416931092739, :y2 151.6374969482422, :width 941, :height 1174.9597806215722}), :page 672}, :content {:text "自动记录 PerformanceNavigationTiming 条目"}, :properties {:color "yellow"}} {:id #uuid "63d36bdc-e5e8-4abc-9457-063abf3e65b6", :page 672, :position {:bounding {:x1 154.71250304579735, :y1 898.3875122070312, :x2 763.2146850526333, :y2 921.5874938964844, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 898.3875122070312, :x2 283.46804198622704, :y2 921.5874938964844, :width 941, :height 1174.9597806215722} {:x1 295.76250609755516, :y1 898.3875122070312, :x2 763.2146850526333, :y2 921.5874938964844, :width 941, :height 1174.9597806215722} {:x1 295.76250609755516, :y1 902.3875122070312, :x2 295.9063354432583, :y2 918.7000122070312, :width 941, :height 1174.9597806215722}), :page 672}, :content {:text "Resource Timing API 提供了高精度时间戳，用于度量当前页面加载时请求资源的速度。"}, :properties {:color "yellow"}} {:id #uuid "63d36beb-83fe-4a73-b145-38449b26b229", :page 672, :position {:bounding {:x1 0, :y1 899.4750213623047, :x2 847.0130248963833, :y2 971.5000152587891, :width 941, :height 1174.9597806215722}, :rects ({:x1 779.2181640565395, :y1 899.4750213623047, :x2 843.2322631776333, :y2 922.6750183105469, :width 941, :height 1174.9597806215722} {:x1 509.6874938905239, :y1 923.9250183105469, :x2 847.0130248963833, :y2 947.1250152587891, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 923.9375152587891, :x2 494.6118102967739, :y2 947.1375122070312, :width 941, :height 1174.9597806215722} {:x1 0, :y1 924.8000183105469, :x2 0, :y2 947.2000122070312, :width 941, :height 1174.9597806215722} {:x1 509.6874938905239, :y1 927.9250183105469, :x2 847.0130248963833, :y2 944.2375183105469, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 927.9375152587891, :x2 494.6118102967739, :y2 944.2500152587891, :width 941, :height 1174.9597806215722} {:x1 0, :y1 940.8000183105469, :x2 0, :y2 963.2000122070312, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 948.3000183105469, :x2 186.10976561903954, :y2 971.5000152587891, :width 941, :height 1174.9597806215722}), :page 672}, :content {:text "览器会在加载资源时自动记录 PerformanceResourceTiming。这个对象会捕获大量时间戳，用于描述资源加载的速度"}, :properties {:color "yellow"}} {:id #uuid "63d36c0b-cb19-4a50-b124-1cf17d18df31", :page 673, :position {:bounding {:x1 147.56385192275047, :y1 606.1749877929688, :x2 272.9476257264614, :y2 640.5750122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 147.56385192275047, :y1 606.1749877929688, :x2 147.56687316298485, :y2 640.5750122070312, :width 941, :height 1174.9597806215722} {:x1 170.51250609755516, :y1 606.1749877929688, :x2 272.9476257264614, :y2 640.5750122070312, :width 941, :height 1174.9597806215722} {:x1 170.51250609755516, :y1 611.7750244140625, :x2 224.31250914931297, :y2 635.8250122070312, :width 941, :height 1174.9597806215722}), :page 673}, :content {:text "Web 组件"}, :properties {:color "green"}} {:id #uuid "63d36c31-b463-470a-bcc6-4796f74e5dfe", :page 673, :position {:bounding {:x1 175.77500304579735, :y1 907.2750244140625, :x2 278.16958007216454, :y2 936.0750427246094, :width 941, :height 1174.9597806215722}, :rects ({:x1 175.77500304579735, :y1 907.2750244140625, :x2 278.16958007216454, :y2 936.0750427246094, :width 941, :height 1174.9597806215722} {:x1 232.06250914931297, :y1 912.0750427246094, :x2 236.20000609755516, :y2 932.7125244140625, :width 941, :height 1174.9597806215722}), :page 673}, :content {:text "HTML 模板"}, :properties {:color "green"}} {:id #uuid "63d36c50-313d-4cc9-8299-ae8341102312", :page 674, :position {:bounding {:x1 172.88750609755516, :y1 247.79998779296875, :x2 360.3048950135708, :y2 271, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 247.79998779296875, :x2 360.3048950135708, :y2 271, :width 941, :height 1174.9597806215722} {:x1 205.50000914931297, :y1 251.79998779296875, :x2 208.76250609755516, :y2 268.11248779296875, :width 941, :height 1174.9597806215722}), :page 674}, :content {:text "使用 DocumentFragment"}, :properties {:color "green"}} {:id #uuid "63d36c8b-c5e7-418f-b6c7-43d3c5bc7ffc", :page 674, :position {:bounding {:x1 0, :y1 270.29998779296875, :x2 851.0921874940395, :y2 355.1999816894531, :width 941, :height 1174.9597806215722}, :rects ({:x1 629.5125366151333, :y1 270.29998779296875, :x2 851.0921874940395, :y2 292.70001220703125, :width 941, :height 1174.9597806215722} {:x1 722.5125366151333, :y1 274.6625061035156, :x2 851.0921874940395, :y2 290.9750061035156, :width 941, :height 1174.9597806215722} {:x1 434.63750609755516, :y1 295.0249938964844, :x2 743.2338500916958, :y2 318.2250061035156, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 295.0375061035156, :x2 409.9874206483364, :y2 318.2375183105469, :width 941, :height 1174.9597806215722} {:x1 434.63750609755516, :y1 299.0249938964844, :x2 711.0417114198208, :y2 315.3374938964844, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 299.0375061035156, :x2 409.9874206483364, :y2 315.3500061035156, :width 941, :height 1174.9597806215722} {:x1 0, :y1 332.8000183105469, :x2 0, :y2 355.1999816894531, :width 941, :height 1174.9597806215722}), :page 674}, :content {:text "<template>的内容不属于活动文档，所以 document.querySelector()等 DOM 查询方法不会发现其中的<p>标签"}, :properties {:color "yellow"}} {:id #uuid "63d36c9f-0eef-4e9e-982d-0ee122fb1aff", :page 674, :position {:bounding {:x1 154.71250304579735, :y1 447.0625, :x2 739.262231439352, :y2 470.26251220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 447.0625, :x2 739.262231439352, :y2 470.26251220703125, :width 941, :height 1174.9597806215722} {:x1 187.33750304579735, :y1 450.70001220703125, :x2 689.7000366151333, :y2 466.1875, :width 941, :height 1174.9597806215722}), :page 674}, :content {:text "通过<template>元素的 content 属性可以取得这个 DocumentFragment 的引用"}, :properties {:color "yellow"}} {:id #uuid "63d36ce7-c2ed-4e41-9473-a21d5db4ab6d", :page 675, :position {:bounding {:x1 134.48638305068016, :y1 277.375, :x2 296.95424804091454, :y2 300.57501220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 134.48638305068016, :y1 277.375, :x2 296.95424804091454, :y2 300.57501220703125, :width 941, :height 1174.9597806215722} {:x1 138.72499999403954, :y1 280.2875061035156, :x2 257.07573851943016, :y2 296.6000061035156, :width 941, :height 1174.9597806215722}), :page 675}, :content {:text "使用<template>标签"}, :properties {:color "green"}} {:id #uuid "63d36cee-ea2b-4c4f-b94a-17371687aba9", :page 674, :position {:bounding {:x1 234.19452819228172, :y1 677.6625061035156, :x2 827.4616332948208, :y2 700.8625030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 234.19452819228172, :y1 677.6625061035156, :x2 827.4616332948208, :y2 700.8625030517578, :width 941, :height 1174.9597806215722} {:x1 268.9625183045864, :y1 681.6625061035156, :x2 423.90224608778954, :y2 697.9750061035156, :width 941, :height 1174.9597806215722}), :page 674}, :content {:text "使用 DocumentFragment 可以一次性添加所有子节点，最多只会有一次布局重排："}, :properties {:color "yellow"}} {:id #uuid "63d36d38-2b9c-4063-827f-c47eb8946dd8", :page 675, :position {:bounding {:x1 120.55000457167625, :y1 720.8999938964844, :x2 682.6750122010708, :y2 744.1000061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 720.8999938964844, :x2 682.6750122010708, :y2 744.1000061035156, :width 941, :height 1174.9597806215722} {:x1 332.95000609755516, :y1 724.8999938964844, :x2 668.7173705995083, :y2 741.2124938964844, :width 941, :height 1174.9597806215722}), :page 675}, :content {:text "如果想要复制模板，可以使用 importNode()方法克隆 DocumentFragment："}, :properties {:color "yellow"}} {:id #uuid "63d36d51-174a-4b2a-b579-1a2de79a599d", :page 676, :position {:bounding {:x1 172.88750609755516, :y1 243.56253051757812, :x2 238.12099608778954, :y2 266.7625427246094, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 243.56253051757812, :x2 238.12099608778954, :y2 266.7625427246094, :width 941, :height 1174.9597806215722}), :page 676}, :content {:text "模板脚本"}, :properties {:color "green"}} {:id #uuid "63d36d71-31b2-47a5-8a2e-17b561c7f078", :page 676, :position {:bounding {:x1 154.71250304579735, :y1 266.4249954223633, :x2 673.323266595602, :y2 289.62500762939453, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 266.4249954223633, :x2 673.323266595602, :y2 289.62500762939453, :width 941, :height 1174.9597806215722} {:x1 317.9999938905239, :y1 270.4249954223633, :x2 667.2753539979458, :y2 286.7374954223633, :width 941, :height 1174.9597806215722}), :page 676}, :content {:text "脚本执行可以推迟到将 DocumentFragment 的内容实际添加到 DOM 树"}, :properties {:color "yellow"}} {:id #uuid "63d36df2-25ef-47a2-ae64-880a5a2894e8", :page 676, :position {:bounding {:x1 209.93750914931297, :y1 655.0875091552734, :x2 294.2597289979458, :y2 683.8875122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 209.93750914931297, :y1 655.0875091552734, :x2 294.2597289979458, :y2 683.8875122070312, :width 941, :height 1174.9597806215722} {:x1 251.22499999403954, :y1 659.8875122070312, :x2 255.36249694228172, :y2 680.5250091552734, :width 941, :height 1174.9597806215722}), :page 676}, :content {:text "影子 DOM"}, :properties {:color "green"}} {:id #uuid "63d36dfb-46dd-4497-89da-096f87308911", :page 676, :position {:bounding {:x1 0, :y1 652.8000030517578, :x2 852.7013793885708, :y2 744.9375152587891, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 652.8000030517578, :x2 0, :y2 675.2000122070312, :width 941, :height 1174.9597806215722} {:x1 578.1905151307583, :y1 697.3625030517578, :x2 852.7013793885708, :y2 720.5625152587891, :width 941, :height 1174.9597806215722} {:x1 759.0249877870083, :y1 701.3625030517578, :x2 852.7013793885708, :y2 717.6750030517578, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 721.7375030517578, :x2 281.4957214295864, :y2 744.9375152587891, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 725.7375030517578, :x2 276.0202575623989, :y2 742.0500030517578, :width 941, :height 1174.9597806215722}), :page 676}, :content {:text "通过它可以将一个完整的 DOM 树作为节点添加到父 DOM 树"}, :properties {:color "yellow"}} {:id #uuid "63d36e09-de13-4063-8364-69152adbf0cf", :page 676, :position {:bounding {:x1 0, :y1 716.8000030517578, :x2 851.2997070252895, :y2 842.4750061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 716.8000030517578, :x2 0, :y2 739.2000122070312, :width 941, :height 1174.9597806215722} {:x1 656.6206909120083, :y1 794.8125, :x2 851.2997070252895, :y2 818.0125122070312, :width 941, :height 1174.9597806215722} {:x1 693.4124999940395, :y1 798.8125, :x2 851.2997070252895, :y2 815.125, :width 941, :height 1174.9597806215722} {:x1 122.01249846816063, :y1 819.2750244140625, :x2 402.2882018983364, :y2 842.4750061035156, :width 941, :height 1174.9597806215722} {:x1 122.01249846816063, :y1 823.2750244140625, :x2 296.98342284560204, :y2 839.5875244140625, :width 941, :height 1174.9597806215722}), :page 676}, :content {:text "影子 DOM 的内容会实际渲染到页面上，而 HTML 模板的内容不会"}, :properties {:color "yellow"}} {:id #uuid "63d36e47-a7b5-4b1a-b998-85c0c3ab971f", :page 677, :position {:bounding {:x1 138.68750914931297, :y1 639.5249862670898, :x2 238.00444945693016, :y2 662.7249984741211, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.68750914931297, :y1 639.5249862670898, :x2 238.00444945693016, :y2 662.7249984741211, :width 941, :height 1174.9597806215722} {:x1 203.92499694228172, :y1 643.5249862670898, :x2 207.18750914931297, :y2 659.8374862670898, :width 941, :height 1174.9597806215722}), :page 677}, :content {:text "创建影子 DOM"}, :properties {:color "green"}} {:id #uuid "63d36e53-6aba-46eb-a623-c427ba821952", :page 677, :position {:bounding {:x1 120.52500304579735, :y1 662.3875427246094, :x2 655.5306640565395, :y2 685.5875396728516, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.52500304579735, :y1 662.3875427246094, :x2 655.5306640565395, :y2 685.5875396728516, :width 941, :height 1174.9597806215722} {:x1 283.8000122010708, :y1 666.3875427246094, :x2 653.3794799745083, :y2 682.7000427246094, :width 941, :height 1174.9597806215722}), :page 677}, :content {:text "考虑到安全及避免影子 DOM 冲突，并非所有元素都可以包含影子 DOM。"}, :properties {:color "yellow"}} {:id #uuid "63d36e62-b70b-444f-b263-3cabce4e9704", :page 678, :position {:bounding {:x1 154.72499999403954, :y1 170.75, :x2 681.2217651307583, :y2 193.95001220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.72499999403954, :y1 170.75, :x2 405.1804138123989, :y2 193.95001220703125, :width 941, :height 1174.9597806215722} {:x1 416.0624938905239, :y1 170.75, :x2 681.2217651307583, :y2 193.95001220703125, :width 941, :height 1174.9597806215722} {:x1 187.33750304579735, :y1 174.75, :x2 405.1804138123989, :y2 191.0625, :width 941, :height 1174.9597806215722} {:x1 416.0624938905239, :y1 174.75, :x2 640.0584350526333, :y2 191.0625, :width 941, :height 1174.9597806215722}), :page 678}, :content {:text "影子 DOM 是通过 attachShadow()方法创建并添加给有效 HTML 元素的"}, :properties {:color "yellow"}} {:id #uuid "63d36e6a-6f49-495b-8910-e1c2a2417dd3", :page 678, :position {:bounding {:x1 0, :y1 170.74999690055847, :x2 852.588891595602, :y2 291.19999384880066, :width 941, :height 1174.9597806215722}, :rects ({:x1 693.6125122010708, :y1 170.74999690055847, :x2 852.588891595602, :y2 193.95000910758972, :width 941, :height 1174.9597806215722} {:x1 758.9500366151333, :y1 174.74999690055847, :x2 852.588891595602, :y2 191.06249690055847, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 195.11249995231628, :x2 349.9000183045864, :y2 218.31249690055847, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 199.11249995231628, :x2 349.9000183045864, :y2 215.42499995231628, :width 941, :height 1174.9597806215722} {:x1 0, :y1 268.7999999523163, :x2 0, :y2 291.19999384880066, :width 941, :height 1174.9597806215722}), :page 678}, :content {:text "容纳影子 DOM 的元素被称为影子宿主（shadow host）"}, :properties {:color "yellow"}} {:id #uuid "63d36e71-899d-4ab8-a6a6-ab1aad642cdb", :page 678, :position {:bounding {:x1 358.07073363661766, :y1 195.11249995231628, :x2 712.7124877870083, :y2 218.31249690055847, :width 941, :height 1174.9597806215722}, :rects ({:x1 358.07073363661766, :y1 195.11249995231628, :x2 712.7124877870083, :y2 218.31249690055847, :width 941, :height 1174.9597806215722} {:x1 390.9875122010708, :y1 199.11249995231628, :x2 712.7124877870083, :y2 215.42499995231628, :width 941, :height 1174.9597806215722}), :page 678}, :content {:text "影子 DOM 的根节点被称为影子根（shadow root）"}, :properties {:color "yellow"}} {:id #uuid "63d36e9b-2956-4e7f-8b18-e4f152a8ec36", :page 678, :position {:bounding {:x1 315.0609985291958, :y1 219.1000030040741, :x2 714.1592651307583, :y2 242.67499995231628, :width 941, :height 1174.9597806215722}, :rects ({:x1 513.812524408102, :y1 219.1000030040741, :x2 714.1592651307583, :y2 242.29999995231628, :width 941, :height 1174.9597806215722} {:x1 315.0609985291958, :y1 219.4750030040741, :x2 503.0770202577114, :y2 242.67499995231628, :width 941, :height 1174.9597806215722} {:x1 513.812524408102, :y1 223.1000030040741, :x2 677.6661621034145, :y2 239.4125030040741, :width 941, :height 1174.9597806215722} {:x1 380.9625183045864, :y1 223.4750030040741, :x2 503.0770202577114, :y2 239.7875030040741, :width 941, :height 1174.9597806215722}), :page 678}, :content {:text "需要一个 shadowRootInit 对象，返回影子 DOM 的实例"}, :properties {:color "yellow"}} {:id #uuid "63d36eb0-2f7b-40a8-9795-defc81d47942", :page 678, :position {:bounding {:x1 0, :y1 219.1000030040741, :x2 842.6644531190395, :y2 323.19999384880066, :width 941, :height 1174.9597806215722}, :rects ({:x1 723.2375122010708, :y1 219.1000030040741, :x2 842.6644531190395, :y2 241.49999690055847, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 243.82500910758972, :x2 516.500024408102, :y2 267.0250060558319, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 247.82500910758972, :x2 491.2033630311489, :y2 264.13749384880066, :width 941, :height 1174.9597806215722} {:x1 0, :y1 300.7999999523163, :x2 0, :y2 323.19999384880066, :width 941, :height 1174.9597806215722}), :page 678}, :content {:text "shadowRootInit对象必须包含一个 mode 属性，值为\"open\"或\"closed\"。"}, :properties {:color "yellow"}} {:id #uuid "63d36ecc-5fa3-4278-ba56-a3a19d3bf7a1", :page 678, :position {:bounding {:x1 172.88750609755516, :y1 761.0000457763672, :x2 272.2044616639614, :y2 784.2000427246094, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 761.0000457763672, :x2 272.2044616639614, :y2 784.2000427246094, :width 941, :height 1174.9597806215722} {:x1 238.12500914931297, :y1 765.0000457763672, :x2 241.38750609755516, :y2 781.3125457763672, :width 941, :height 1174.9597806215722}), :page 678}, :content {:text "使用影子 DOM"}, :properties {:color "green"}} {:id #uuid "63d36f20-33b8-4211-834e-2d47ae134545", :page 679, :position {:bounding {:x1 0, :y1 12.79998779296875, :x2 811.111596673727, :y2 178.88751220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 12.79998779296875, :x2 0, :y2 35.20001220703125, :width 941, :height 1174.9597806215722} {:x1 492.63076171278954, :y1 131.32501220703125, :x2 811.111596673727, :y2 154.52499389648438, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 155.6875, :x2 165.59665831923485, :y2 178.88751220703125, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 159.6875, :x2 160.08277282118797, :y2 176, :width 941, :height 1174.9597806215722}), :page 679}, :content {:text "但每个选择符只会把样式应用到它们所在的影子 DOM 上"}, :properties {:color "yellow"}} {:id #uuid "63d36fb5-72e2-49c5-8d74-d384ce921a99", :page 680, :position {:bounding {:x1 154.71250304579735, :y1 336.4125061035156, :x2 652.3789916932583, :y2 359.6125183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 336.4125061035156, :x2 652.3789916932583, :y2 359.6125183105469, :width 941, :height 1174.9597806215722} {:x1 187.33750304579735, :y1 340.4125061035156, :x2 534.457788079977, :y2 356.7250061035156, :width 941, :height 1174.9597806215722}), :page 680}, :content {:text "影子 DOM 并非铁板一块。HTML 元素可以在 DOM 树间无限制移动："}, :properties {:color "yellow"}} {:id #uuid "63d36fe1-89f1-4d80-a48a-8dc2cc053592", :page 680, :position {:bounding {:x1 172.88750609755516, :y1 673.6750030517578, :x2 332.9667602479458, :y2 696.8750457763672, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 673.6750030517578, :x2 332.9667602479458, :y2 696.8750457763672, :width 941, :height 1174.9597806215722} {:x1 254.42499694228172, :y1 677.6750335693359, :x2 296.9606872498989, :y2 693.9875335693359, :width 941, :height 1174.9597806215722}), :page 680}, :content {:text "合成与影子 DOM 槽位"}, :properties {:color "green"}} {:id #uuid "63d3702a-4647-4aa2-8ed7-9d0766f2060d", :page 680, :position {:bounding {:x1 121.98750457167625, :y1 720.9000244140625, :x2 845.1565795838833, :y2 744.1000213623047, :width 941, :height 1174.9597806215722}, :rects ({:x1 121.98750457167625, :y1 720.9000244140625, :x2 845.1565795838833, :y2 744.1000213623047, :width 941, :height 1174.9597806215722} {:x1 250.28749999403954, :y1 724.9000244140625, :x2 840.4881225526333, :y2 741.2125244140625, :width 941, :height 1174.9597806215722}), :page 680}, :content {:text "位于影子宿主中的 HTML 需要一种机制以渲染到影子 DOM 中去，但这些 HTML 又不必属于影子 DOM 树"}, :properties {:color "yellow"}} {:id #uuid "63d37057-aa6c-404a-958a-fa8d9ecf9204", :page 680, :position {:bounding {:x1 154.71250304579735, :y1 897.6125183105469, :x2 856.3827148377895, :y2 920.8125152587891, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 897.6125183105469, :x2 856.3827148377895, :y2 920.8125152587891, :width 941, :height 1174.9597806215722} {:x1 187.33750304579735, :y1 901.6125183105469, :x2 583.774438470602, :y2 917.9250183105469, :width 941, :height 1174.9597806215722}), :page 680}, :content {:text "影子 DOM 一添加到元素中，浏览器就会赋予它最高优先级，优先渲染它的内容而不是原来的文本。"}, :properties {:color "yellow"}} {:id #uuid "63d370e1-66fd-4f82-8f83-e8f4b7dba040", :page 681, :position {:bounding {:x1 166.29737243056297, :y1 431.37501525878906, :x2 797.586206048727, :y2 454.5750274658203, :width 941, :height 1174.9597806215722}, :rects ({:x1 166.29737243056297, :y1 431.37501525878906, :x2 797.586206048727, :y2 454.5750274658203, :width 941, :height 1174.9597806215722} {:x1 431.2499938905239, :y1 435.37501525878906, :x2 746.7625366151333, :y2 451.68751525878906, :width 941, :height 1174.9597806215722}), :page 681}, :content {:text "虽然在页面检查窗口中看到内容在影子 DOM 中，但这实际上只是 DOM 内容的投射（projection"}, :properties {:color "yellow"}} {:id #uuid "63d370f8-5dc7-40b5-a68c-be0c510fcb1d", :page 681, :position {:bounding {:x1 232.29946288466454, :y1 1054.499984741211, :x2 578.5772338807583, :y2 1077.6999969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 232.29946288466454, :y1 1054.499984741211, :x2 578.5772338807583, :y2 1077.6999969482422, :width 941, :height 1174.9597806215722} {:x1 315.84999999403954, :y1 1057.4124908447266, :x2 463.6741882264614, :y2 1073.7249908447266, :width 941, :height 1174.9597806215722}), :page 681}, :content {:text "还可以使用命名槽位（named slot）实现多个投射"}, :properties {:color "yellow"}} {:id #uuid "63d37167-e1c3-498a-aa93-8f6e6a762572", :page 682, :position {:bounding {:x1 218.19346007704735, :y1 131.3249969482422, :x2 738.657250970602, :y2 154.52500915527344, :width 941, :height 1174.9597806215722}, :rects ({:x1 218.19346007704735, :y1 131.3249969482422, :x2 336.6382995545864, :y2 154.52500915527344, :width 941, :height 1174.9597806215722} {:x1 353.6125122010708, :y1 131.3249969482422, :x2 712.3774047791958, :y2 154.52500915527344, :width 941, :height 1174.9597806215722} {:x1 722.625024408102, :y1 131.3249969482422, :x2 738.657250970602, :y2 154.52500915527344, :width 941, :height 1174.9597806215722} {:x1 252.66249999403954, :y1 135.3249969482422, :x2 336.6382995545864, :y2 151.6374969482422, :width 941, :height 1174.9597806215722} {:x1 353.6125122010708, :y1 135.3249969482422, :x2 712.3774047791958, :y2 151.6374969482422, :width 941, :height 1174.9597806215722}), :page 682}, :content {:text "带有 slot=\"foo\"属性的元素会被投射到带有 name=\"foo\"的<slot>上"}, :properties {:color "yellow"}} {:id #uuid "63d37177-aeda-4d5a-b22b-2158ab5d43ab", :page 682, :position {:bounding {:x1 172.88750609755516, :y1 476.6375274658203, :x2 254.52723082900047, :y2 499.83750915527344, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 476.6375274658203, :x2 254.52723082900047, :y2 499.83750915527344, :width 941, :height 1174.9597806215722}), :page 682}, :content {:text "事件重定向"}, :properties {:color "green"}} {:id #uuid "63d371a2-e28e-4d14-b279-ac45a557894a", :page 682, :position {:bounding {:x1 0, :y1 523.8625030517578, :x2 861.2249999940395, :y2 571.4250030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 415.03749999403954, :y1 523.8625030517578, :x2 832.005395501852, :y2 547.0625, :width 941, :height 1174.9597806215722} {:x1 845.2249999940395, :y1 523.8625030517578, :x2 861.2249999940395, :y2 547.0625, :width 941, :height 1174.9597806215722} {:x1 457.0500122010708, :y1 527.8625030517578, :x2 832.005395501852, :y2 544.1750030517578, :width 941, :height 1174.9597806215722} {:x1 845.2249999940395, :y1 527.8625030517578, :x2 861.2249999940395, :y2 544.1750030517578, :width 941, :height 1174.9597806215722} {:x1 0, :y1 540.8000030517578, :x2 0, :y2 563.1999969482422, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 548.2250061035156, :x2 233.64170226454735, :y2 571.4250030517578, :width 941, :height 1174.9597806215722}), :page 682}, :content {:text "为此，事件会逃出影子 DOM 并经过事件重定向（event retarget）在外部被处理。"}, :properties {:color "yellow"}} {:id #uuid "63d371bc-1348-4c6f-9169-5aef7306d944", :page 682, :position {:bounding {:x1 0, :y1 796.8000183105469, :x2 850.3704467713833, :y2 895.4250183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 796.8000183105469, :x2 0, :y2 819.2000122070312, :width 941, :height 1174.9597806215722} {:x1 200.13750609755516, :y1 847.8625183105469, :x2 679.7408691346645, :y2 871.0625305175781, :width 941, :height 1174.9597806215722} {:x1 690.000024408102, :y1 847.8625183105469, :x2 850.3704467713833, :y2 871.0625305175781, :width 941, :height 1174.9597806215722} {:x1 396.1249938905239, :y1 851.8625183105469, :x2 679.7408691346645, :y2 868.1750183105469, :width 941, :height 1174.9597806215722} {:x1 690.000024408102, :y1 851.8625183105469, :x2 850.3704467713833, :y2 868.1750183105469, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 872.2250366210938, :x2 314.47058257460594, :y2 895.4250183105469, :width 941, :height 1174.9597806215722}), :page 682}, :content {:text "事件重定向只会发生在影子 DOM 中实际存在的元素上。使用<slot>标签从外部投射进来的元素不会发生事件重定向，"}, :properties {:color "yellow"}} {:id #uuid "63d37229-a9d7-4fb2-83e1-82f44f514c5d", :page 682, :position {:bounding {:x1 209.93750914931297, :y1 910.6500244140625, :x2 313.9551940858364, :y2 939.4500122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 209.93750914931297, :y1 910.6500244140625, :x2 313.9551940858364, :y2 939.4500122070312, :width 941, :height 1174.9597806215722}), :page 682}, :content {:text "自定义元素"}, :properties {:color "green"}} {:id #uuid "63d3723a-abff-4d15-b36b-366d9ad1a536", :page 682, :position {:bounding {:x1 172.88750609755516, :y1 1031.237533569336, :x2 287.2418151795864, :y2 1054.4375457763672, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 1031.237533569336, :x2 287.2418151795864, :y2 1054.4375457763672, :width 941, :height 1174.9597806215722}), :page 682}, :content {:text "创建自定义元素"}, :properties {:color "green"}} {:id #uuid "63d3724d-03ed-490b-a496-ab6636f164aa", :page 682, :position {:bounding {:x1 154.71250304579735, :y1 1054.1000366210938, :x2 591.567163079977, :y2 1077.300033569336, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 1054.1000366210938, :x2 591.567163079977, :y2 1077.300033569336, :width 941, :height 1174.9597806215722} {:x1 530.500024408102, :y1 1058.1000366210938, :x2 589.417016595602, :y2 1074.4125366210938, :width 941, :height 1174.9597806215722}), :page 682}, :content {:text "浏览器会尝试将无法识别的元素作为通用元素整合进 DOM。"}, :properties {:color "yellow"}} {:id #uuid "63d37262-b5ca-4537-88a7-74dc80c8e92d", :page 683, :position {:bounding {:x1 280.6249938905239, :y1 131.32501220703125, :x2 826.5872436463833, :y2 154.52499389648438, :width 941, :height 1174.9597806215722}, :rects ({:x1 280.6249938905239, :y1 131.32501220703125, :x2 826.5872436463833, :y2 154.52499389648438, :width 941, :height 1174.9597806215722} {:x1 403.3625122010708, :y1 135.32501220703125, :x2 777.6490112245083, :y2 151.63751220703125, :width 941, :height 1174.9597806215722}), :page 683}, :content {:text "来看下面的例子，其中胡乱编的 HTML 标签会变成一个 HTMLElement 实例："}, :properties {:color "yellow"}} {:id #uuid "63d37279-a6e4-442f-b56a-af465b9de62f", :page 683, :position {:bounding {:x1 0, :y1 108.79999923706055, :x2 827.1750122010708, :y2 322.87500762939453, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 108.79999923706055, :x2 0, :y2 131.20000076293945, :width 941, :height 1174.9597806215722} {:x1 496.90273436903954, :y1 275.31250762939453, :x2 827.1750122010708, :y2 298.5125045776367, :width 941, :height 1174.9597806215722} {:x1 676.9500366151333, :y1 279.31250762939453, :x2 827.1750122010708, :y2 295.62500762939453, :width 941, :height 1174.9597806215722} {:x1 401.41249999403954, :y1 299.2999954223633, :x2 438.06646117568016, :y2 321.7000045776367, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 299.6749954223633, :x2 387.1524597108364, :y2 322.87500762939453, :width 941, :height 1174.9597806215722} {:x1 401.41249999403954, :y1 303.2999954223633, :x2 404.51250609755516, :y2 318.7874984741211, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 303.6749954223633, :x2 387.1524597108364, :y2 319.9874954223633, :width 941, :height 1174.9597806215722}), :page 683}, :content {:text "定义元素要使用全局属性 customElements，这个属性会返回 CustomElementRegistry 对象"}, :properties {:color "yellow"}} {:id #uuid "63d37287-f28e-4310-9084-dba123221444", :page 683, :position {:bounding {:x1 120.55000457167625, :y1 353.86251068115234, :x2 569.0057006776333, :y2 377.06249237060547, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 353.86251068115234, :x2 349.74892577528954, :y2 377.06249237060547, :width 941, :height 1174.9597806215722} {:x1 375.4000183045864, :y1 353.86251068115234, :x2 569.0057006776333, :y2 377.06249237060547, :width 941, :height 1174.9597806215722} {:x1 153.27500304579735, :y1 357.86251068115234, :x2 349.74892577528954, :y2 374.17501068115234, :width 941, :height 1174.9597806215722}), :page 683}, :content {:text "调用 customElements.define()方法可以创建自定义元素。"}, :properties {:color "yellow"}} {:id #uuid "63d372c2-0a12-4a5b-b43e-59df5540e451", :page 683, :position {:bounding {:x1 0, :y1 316.79999923706055, :x2 833.1036010682583, :y2 685.1750183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 316.79999923706055, :x2 0, :y2 339.20000076293945, :width 941, :height 1174.9597806215722} {:x1 409.26003417372704, :y1 637.6000061035156, :x2 762.1278930604458, :y2 660.8000183105469, :width 941, :height 1174.9597806215722} {:x1 774.1624999940395, :y1 637.6000061035156, :x2 833.1036010682583, :y2 660.8000183105469, :width 941, :height 1174.9597806215722} {:x1 774.1624999940395, :y1 641.6000061035156, :x2 833.1036010682583, :y2 657.9125061035156, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 661.9750061035156, :x2 232.091203302145, :y2 685.1750183105469, :width 941, :height 1174.9597806215722}), :page 683}, :content {:text "以通过调用自定义元素的构造函数来控制这个类在 DOM中每个实例的行为："}, :properties {:color "yellow"}} {:id #uuid "63d372f9-510b-433c-827a-5e8a07749faa", :page 683, :position {:bounding {:x1 185.88750609755516, :y1 999.6875305175781, :x2 562.7004028260708, :y2 1022.8875427246094, :width 941, :height 1174.9597806215722}, :rects ({:x1 185.88750609755516, :y1 999.6875305175781, :x2 537.1366210877895, :y2 1022.8875427246094, :width 941, :height 1174.9597806215722} {:x1 547.3625122010708, :y1 999.6875305175781, :x2 562.7004028260708, :y2 1022.8875427246094, :width 941, :height 1174.9597806215722} {:x1 483.9999938905239, :y1 1003.6875305175781, :x2 537.1366210877895, :y2 1020.0000305175781, :width 941, :height 1174.9597806215722}), :page 683}, :content {:text "在自定义元素的构造函数中必须始终先调用 super()。"}, :properties {:color "yellow"}} {:id #uuid "63d37312-91a1-4e6a-af3c-08b2405e6dd3", :page 684, :position {:bounding {:x1 0, :y1 131.32500457763672, :x2 849.8705078065395, :y2 259.19998931884766, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 131.32500457763672, :x2 849.8705078065395, :y2 154.5250015258789, :width 941, :height 1174.9597806215722} {:x1 409.1249938905239, :y1 135.32500457763672, :x2 849.8705078065395, :y2 151.63748931884766, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 155.68750762939453, :x2 202.12119445204735, :y2 178.88748931884766, :width 941, :height 1174.9597806215722} {:x1 0, :y1 236.79999542236328, :x2 0, :y2 259.19998931884766, :width 941, :height 1174.9597806215722}), :page 684}, :content {:text "如果自定义元素继承了一个元素类，那么可以使用 is 属性和 extends 选项将标签指定为该自定义元素的实例"}, :properties {:color "yellow"}} {:id #uuid "63d3731d-ae27-43f4-8404-e2cc6ff374e0", :page 684, :position {:bounding {:x1 172.88750609755516, :y1 467.8625030517578, :x2 311.8210082948208, :y2 491.06251525878906, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 467.8625030517578, :x2 311.8210082948208, :y2 491.06251525878906, :width 941, :height 1174.9597806215722} {:x1 205.50000914931297, :y1 471.8625030517578, :x2 243.11602172255516, :y2 488.1750030517578, :width 941, :height 1174.9597806215722}), :page 684}, :content {:text "添加 Web 组件内容"}, :properties {:color "green"}} {:id #uuid "63d3734c-35e2-45c0-84fd-628b2ebe8a1d", :page 684, :position {:bounding {:x1 0, :y1 515.0875091552734, :x2 849.9952026307583, :y2 563.1999969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 231.65615233778954, :y1 515.0875091552734, :x2 849.9952026307583, :y2 538.2874908447266, :width 941, :height 1174.9597806215722} {:x1 444.2125183045864, :y1 519.0875091552734, :x2 849.9952026307583, :y2 535.4000091552734, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 539.4499969482422, :x2 457.7707458436489, :y2 562.6500091552734, :width 941, :height 1174.9597806215722} {:x1 0, :y1 540.8000030517578, :x2 0, :y2 563.1999969482422, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 543.4499969482422, :x2 452.3420043885708, :y2 559.7624969482422, :width 941, :height 1174.9597806215722}), :page 684}, :content {:text "虽然不能在构造函数中添加子 DOM（会抛出 DOMException），但可以为自定义元素添加影子 DOM 并将内容添加到这个影子 DOM 中"}, :properties {:color "yellow"}} {:id #uuid "63d37390-a667-4ee8-bd15-9c7e7d7be557", :page 685, :position {:bounding {:x1 0, :y1 332.8000030517578, :x2 815.4329467713833, :y2 596.5000152587891, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 332.8000030517578, :x2 0, :y2 355.1999969482422, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 548.9375152587891, :x2 815.4329467713833, :y2 572.1374969482422, :width 941, :height 1174.9597806215722} {:x1 381.8749938905239, :y1 552.9375152587891, :x2 815.4329467713833, :y2 569.2500152587891, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 573.3000030517578, :x2 497.64150390028954, :y2 596.5000152587891, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 577.3000030517578, :x2 369.22499999403954, :y2 593.6125030517578, :width 941, :height 1174.9597806215722}), :page 685}, :content {:text "这样可以在自定义元素中实现高度的 HTML 和代码重用，以及 DOM 封装。使用这种模式能够自由创建可重用的组件而不必担心外部 CSS 污染组件的样式。"}, :properties {:color "yellow"}} {:id #uuid "63d37394-9c38-42f4-bd9d-b7bf8675bb47", :page 685, :position {:bounding {:x1 138.70000609755516, :y1 602.8750152587891, :x2 351.10024413466454, :y2 626.0749969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.70000609755516, :y1 602.8750152587891, :x2 351.10024413466454, :y2 626.0749969482422, :width 941, :height 1174.9597806215722}), :page 685}, :content {:text "使用自定义元素生命周期方法"}, :properties {:color "green"}} {:id #uuid "63d373ae-a5bc-4e6c-a442-48c614fe4321", :page 685, :position {:bounding {:x1 0, :y1 380.8000068664551, :x2 812.3202148377895, :y2 673.3000030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 380.8000068664551, :x2 0, :y2 403.20000648498535, :width 941, :height 1174.9597806215722} {:x1 459.4041686952114, :y1 625.7375030517578, :x2 812.3202148377895, :y2 648.9375152587891, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 650.1000061035156, :x2 216.071672052145, :y2 673.3000030517578, :width 941, :height 1174.9597806215722}), :page 685}, :content {:text "有相应名称的自定义元素类的实例方法会在不同生命周期阶段被调用"}, :properties {:color "yellow"}} {:id #uuid "63d374bf-9412-4814-937f-a170b5579465", :page 685, :position {:bounding {:x1 141.50000914931297, :y1 698.5500183105469, :x2 705.384790033102, :y2 722.1125183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 141.50000914931297, :y1 698.5500183105469, :x2 295.61992797255516, :y2 720.9500122070312, :width 941, :height 1174.9597806215722} {:x1 318.01250609755516, :y1 698.9125061035156, :x2 705.384790033102, :y2 722.1125183105469, :width 941, :height 1174.9597806215722} {:x1 318.01250609755516, :y1 702.9125061035156, :x2 651.9003539979458, :y2 719.2250061035156, :width 941, :height 1174.9597806215722}), :page 685}, :content {:text "connectedCallback()：在每次将这个自定义元素实例添加到 DOM 中时调用"}, :properties {:color "yellow"}} {:id #uuid "63d374d5-b598-403f-b20a-8d12cc4172ae", :page 685, :position {:bounding {:x1 0, :y1 492.8000068664551, :x2 814.3994995057583, :y2 844.0125122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 492.8000068664551, :x2 0, :y2 515.2000045776367, :width 941, :height 1174.9597806215722} {:x1 141.50000914931297, :y1 795.9875183105469, :x2 279.9002319276333, :y2 818.3875122070312, :width 941, :height 1174.9597806215722} {:x1 299.4250122010708, :y1 796.3500061035156, :x2 814.3994995057583, :y2 819.5500183105469, :width 941, :height 1174.9597806215722} {:x1 299.4250122010708, :y1 800.3500061035156, :x2 814.3994995057583, :y2 816.6625061035156, :width 941, :height 1174.9597806215722} {:x1 141.51250609755516, :y1 820.8125, :x2 221.63369140028954, :y2 844.0125122070312, :width 941, :height 1174.9597806215722}), :page 685}, :content {:text "adoptedCallback()：在通过 document.adoptNode()将这个自定义元素实例移动到新文档对象时调用"}, :properties {:color "yellow"}} {:id #uuid "63d374e2-690f-460c-9919-7c40ac7be80b", :page 686, :position {:bounding {:x1 172.88750609755516, :y1 325.31250762939453, :x2 319.85854491591454, :y2 348.5125198364258, :width 941, :height 1174.9597806215722}, :rects ({:x1 172.88750609755516, :y1 325.31250762939453, :x2 319.85854491591454, :y2 348.5125198364258, :width 941, :height 1174.9597806215722}), :page 686}, :content {:text "反射自定义元素属性"}, :properties {:color "green"}} {:id #uuid "63d3750a-c8af-4ea8-a248-3231d95aff98", :page 686, :position {:bounding {:x1 154.71250304579735, :y1 348.1749954223633, :x2 709.4088378846645, :y2 371.37500762939453, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 348.1749954223633, :x2 709.4088378846645, :y2 371.37500762939453, :width 941, :height 1174.9597806215722} {:x1 269.07500609755516, :y1 352.1749954223633, :x2 455.4625183045864, :y2 368.4874954223633, :width 941, :height 1174.9597806215722}), :page 686}, :content {:text "自定义元素既是 DOM 实体又是 JavaScript 对象，因此两者之间应该同步变化。"}, :properties {:color "yellow"}} {:id #uuid "63d37529-edd4-489d-8624-3007ce99aae8", :page 686, :position {:bounding {:x1 298.9594665467739, :y1 777.9750213623047, :x2 717.9314819276333, :y2 801.1750335693359, :width 941, :height 1174.9597806215722}, :rects ({:x1 298.9594665467739, :y1 777.9750213623047, :x2 717.9314819276333, :y2 801.1750335693359, :width 941, :height 1174.9597806215722} {:x1 317.9999938905239, :y1 781.9750213623047, :x2 460.2750183045864, :y2 798.2875213623047, :width 941, :height 1174.9597806215722}), :page 686}, :content {:text "从 DOM 到 JavaScript 对象）需要给相应的属性添加监听器"}, :properties {:color "yellow"}} {:id #uuid "63d3754d-b097-4f34-8e81-592605c5bdbd", :page 687, :position {:bounding {:x1 138.72499999403954, :y1 385.48753356933594, :x2 253.07932433485985, :y2 408.68748474121094, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.72499999403954, :y1 385.48753356933594, :x2 253.07932433485985, :y2 408.68748474121094, :width 941, :height 1174.9597806215722}), :page 687}, :content {:text "升级自定义元素"}, :properties {:color "green"}} {:id #uuid "63d37573-5010-48f4-9799-5ee79238e67c", :page 687, :position {:bounding {:x1 0, :y1 236.80001068115234, :x2 811.6741577088833, :y2 480.28751373291016, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 236.80001068115234, :x2 0, :y2 259.2000045776367, :width 941, :height 1174.9597806215722} {:x1 403.88750609755516, :y1 432.35001373291016, :x2 811.6741577088833, :y2 454.75000762939453, :width 941, :height 1174.9597806215722} {:x1 119.8414703309536, :y1 432.7125015258789, :x2 389.62746581435204, :y2 455.91251373291016, :width 941, :height 1174.9597806215722} {:x1 120.43750151991844, :y1 435.62500762939453, :x2 389.62746581435204, :y2 451.93750762939453, :width 941, :height 1174.9597806215722} {:x1 403.88750609755516, :y1 436.35001373291016, :x2 811.6741577088833, :y2 451.8375015258789, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 457.0875015258789, :x2 440.5948882997036, :y2 480.28751373291016, :width 941, :height 1174.9597806215722}), :page 687}, :content {:text "Web 组件在 CustomElementRegistry 上额外暴露了一些方法。这些方法可以用来检测自定义元素是否定义完成，然后可以用它来升级已有元素。"}, :properties {:color "yellow"}} {:id #uuid "63d3758f-d753-4d48-8c53-6b29609011ac", :page 687, :position {:bounding {:x1 0, :y1 268.80001068115234, :x2 815.6119018495083, :y2 529.1000137329102, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 268.80001068115234, :x2 0, :y2 291.2000045776367, :width 941, :height 1174.9597806215722} {:x1 623.2249999940395, :y1 481.53751373291016, :x2 815.6119018495083, :y2 504.7374954223633, :width 941, :height 1174.9597806215722} {:x1 365.57500609755516, :y1 481.5499954223633, :x2 591.5997558534145, :y2 504.75000762939453, :width 941, :height 1174.9597806215722} {:x1 372.3000122010708, :y1 485.16251373291016, :x2 591.5997558534145, :y2 500.6500015258789, :width 941, :height 1174.9597806215722} {:x1 623.2249999940395, :y1 485.53751373291016, :x2 815.6119018495083, :y2 501.85001373291016, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 505.9000015258789, :x2 119.70760497450829, :y2 529.1000137329102, :width 941, :height 1174.9597806215722}), :page 687}, :content {:text " CustomElementRegistry.get()方法会返回相应自定义元素的类"}, :properties {:color "yellow"}} {:id #uuid "63d375af-7602-458f-986a-c078a9c123ea", :page 687, :position {:bounding {:x1 0, :y1 284.80001068115234, :x2 813.811547845602, :y2 553.4625015258789, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 284.80001068115234, :x2 0, :y2 307.2000045776367, :width 941, :height 1174.9597806215722} {:x1 199.3828521668911, :y1 505.9000015258789, :x2 495.7232147157192, :y2 529.1000137329102, :width 941, :height 1174.9597806215722} {:x1 525.8875366151333, :y1 505.9000015258789, :x2 813.811547845602, :y2 529.1000137329102, :width 941, :height 1174.9597806215722} {:x1 200.75000914931297, :y1 509.5250015258789, :x2 495.7232147157192, :y2 525.0125198364258, :width 941, :height 1174.9597806215722} {:x1 525.8875366151333, :y1 509.9000015258789, :x2 813.811547845602, :y2 526.2125015258789, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 530.2625198364258, :x2 200.05071410536766, :y2 553.4625015258789, :width 941, :height 1174.9597806215722}), :page 687}, :content {:text "CustomElementRegistry.whenDefined()方法会返回一个期约，当相应自定义元素有定义之后解决"}, :properties {:color "yellow"}} {:id #uuid "63d375c8-1eba-414c-b544-5d76ccdcfc5b", :page 687, :position {:bounding {:x1 87.82499846816063, :y1 756, :x2 477.2914672791958, :y2 779.2000122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 87.82499846816063, :y1 756, :x2 415.4604125916958, :y2 779.2000122070312, :width 941, :height 1174.9597806215722} {:x1 445.2750183045864, :y1 756, :x2 477.2914672791958, :y2 779.2000122070312, :width 941, :height 1174.9597806215722} {:x1 153.04999694228172, :y1 760, :x2 415.4604125916958, :y2 776.3125, :width 941, :height 1174.9597806215722}), :page 687}, :content {:text "可以使用 CustomElementRegistry.upgrade()方法"}, :properties {:color "yellow"}} {:id #uuid "63d375db-4ba6-4e8a-a4d1-4b47ee799633", :page 688, :position {:bounding {:x1 206.31250914931297, :y1 129.10000610351562, :x2 413.1838012635708, :y2 163.5, :width 941, :height 1174.9597806215722}, :rects ({:x1 206.31250914931297, :y1 129.10000610351562, :x2 413.1838012635708, :y2 163.5, :width 941, :height 1174.9597806215722}), :page 688}, :content {:text "Web Cryptography API"}, :properties {:color "green"}} {:id #uuid "63d375f9-70d2-42e0-a6de-2d6bfde8a8ef", :page 688, :position {:bounding {:x1 211.48749694228172, :y1 351.41251373291016, :x2 315.5052123963833, :y2 380.2125015258789, :width 941, :height 1174.9597806215722}, :rects ({:x1 211.48749694228172, :y1 351.41251373291016, :x2 315.5052123963833, :y2 380.2125015258789, :width 941, :height 1174.9597806215722}), :page 688}, :content {:text "生成随机数"}, :properties {:color "green"}} {:id #uuid "63d376b2-3844-4665-8bfb-b24e4f12024f", :page 688, :position {:bounding {:x1 0, :y1 396.7999954223633, :x2 846.1449218690395, :y2 514.4500198364258, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 396.7999954223633, :x2 0, :y2 419.2000198364258, :width 941, :height 1174.9597806215722} {:x1 266.3400817811489, :y1 466.9000015258789, :x2 846.1449218690395, :y2 490.10001373291016, :width 941, :height 1174.9597806215722} {:x1 334.4000183045864, :y1 470.9000015258789, :x2 846.1449218690395, :y2 487.2125015258789, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 491.25000762939453, :x2 250.24543914198875, :y2 514.4500198364258, :width 941, :height 1174.9597806215722}), :page 688}, :content {:text "每次调用 Math.random()，这个内部状态都会被一个算法修改，而结果会被转换为一个新的随机值"}, :properties {:color "yellow"}} {:id #uuid "63d376cb-bc78-49a7-bbce-f4b42376e1ab", :page 688, :position {:bounding {:x1 0, :y1 524.8000183105469, :x2 861.250024408102, :y2 709.5500183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 524.8000183105469, :x2 0, :y2 547.2000122070312, :width 941, :height 1174.9597806215722} {:x1 154.0164733827114, :y1 661.9875183105469, :x2 827.7909179627895, :y2 685.1875, :width 941, :height 1174.9597806215722} {:x1 845.250024408102, :y1 661.9875183105469, :x2 861.250024408102, :y2 685.1875, :width 941, :height 1174.9597806215722} {:x1 154.61249694228172, :y1 664.8999938964844, :x2 827.7909179627895, :y2 681.2124938964844, :width 941, :height 1174.9597806215722} {:x1 845.250024408102, :y1 665.9875183105469, :x2 861.250024408102, :y2 682.3000183105469, :width 941, :height 1174.9597806215722} {:x1 122.01249846816063, :y1 686.3500061035156, :x2 329.37031707167625, :y2 709.5500183105469, :width 941, :height 1174.9597806215722}), :page 688}, :content {:text "密码学安全伪随机数生成器（CSPRNG，Cryptographically Secure PseudoRandom Number Generator）额外增加了一个熵作为输入，"}, :properties {:color "yellow"}} {:id #uuid "63d376d4-c86b-46d2-9c3e-28895e7f98af", :page 688, :position {:bounding {:x1 0, :y1 444.8000030517578, :x2 850.2578979432583, :y2 587.625, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 444.8000030517578, :x2 0, :y2 467.1999969482422, :width 941, :height 1174.9597806215722} {:x1 786.1097656190395, :y1 540.0625, :x2 850.2578979432583, :y2 563.2625122070312, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 564.4250183105469, :x2 359.8430114686489, :y2 587.625, :width 941, :height 1174.9597806215722} {:x1 370.53749999403954, :y1 564.4250183105469, :x2 722.4527221620083, :y2 587.625, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 568.4250183105469, :x2 359.8430114686489, :y2 584.7375183105469, :width 941, :height 1174.9597806215722} {:x1 370.53749999403954, :y1 568.4250183105469, :x2 714.1624999940395, :y2 584.7375183105469, :width 941, :height 1174.9597806215722}), :page 688}, :content {:text "这种循环被称为置换循环（permutation cycle），而这个循环的长度被称为一个周期（period）。"}, :properties {:color "yellow"}} {:id #uuid "63d376e9-a20d-4f71-81fb-3acc9231e2b4", :page 688, :position {:bounding {:x1 0, :y1 572.8000144958496, :x2 853.3123413026333, :y2 782.7125091552734, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 572.8000144958496, :x2 0, :y2 595.2000122070312, :width 941, :height 1174.9597806215722} {:x1 821.5999999940395, :y1 735.1500091552734, :x2 853.3123413026333, :y2 758.3500213623047, :width 941, :height 1174.9597806215722} {:x1 453.78594359755516, :y1 735.1750183105469, :x2 799.3277221620083, :y2 758.3750152587891, :width 941, :height 1174.9597806215722} {:x1 821.5999999940395, :y1 739.1500091552734, :x2 853.3123413026333, :y2 755.4625091552734, :width 941, :height 1174.9597806215722} {:x1 470.47499999403954, :y1 739.1750183105469, :x2 799.3277221620083, :y2 755.4875183105469, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 759.5125122070312, :x2 276.9934936463833, :y2 782.7125091552734, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 763.5125122070312, :x2 197.97499999403954, :y2 779.8250122070312, :width 941, :height 1174.9597806215722}), :page 688}, :content {:text "个 CSPRNG 可以通过 crypto.getRandomValues()在全局 Crypto 对象上访问"}, :properties {:color "yellow"}} {:id #uuid "63d376f8-566c-4f49-a759-fdcae5834ac7", :page 688, :position {:bounding {:x1 0, :y1 588.8000144958496, :x2 843.3317504823208, :y2 807.0625305175781, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 588.8000144958496, :x2 0, :y2 611.2000122070312, :width 941, :height 1174.9597806215722} {:x1 704.1499877870083, :y1 759.1375122070312, :x2 843.3317504823208, :y2 782.3375091552734, :width 941, :height 1174.9597806215722} {:x1 704.1499877870083, :y1 763.1375122070312, :x2 843.3317504823208, :y2 778.6250152587891, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 783.8625183105469, :x2 441.0547500550747, :y2 807.0625305175781, :width 941, :height 1174.9597806215722}), :page 688}, :content {:text "getRandomValues()会把随机值写入作为参数传给它的定型数组。"}, :properties {:color "yellow"}} {:id #uuid "63d3770e-766f-4961-921e-08c08a6655c1", :page 688, :position {:bounding {:x1 152.96250304579735, :y1 1049.9000244140625, :x2 540.8537231385708, :y2 1073.4750366210938, :width 941, :height 1174.9597806215722}, :rects ({:x1 152.96250304579735, :y1 1049.9000244140625, :x2 299.7088561952114, :y2 1072.300048828125, :width 941, :height 1174.9597806215722} {:x1 310.88750609755516, :y1 1050.2750244140625, :x2 421.1130309998989, :y2 1073.4750366210938, :width 941, :height 1174.9597806215722} {:x1 431.4374938905239, :y1 1050.2750244140625, :x2 540.8537231385708, :y2 1073.4750366210938, :width 941, :height 1174.9597806215722} {:x1 310.88750609755516, :y1 1054.2750244140625, :x2 488.82875975966454, :y2 1070.5875244140625, :width 941, :height 1174.9597806215722}), :page 688}, :content {:text "getRandomValues()最多可以生成 2 16（65 536）字节"}, :properties {:color "yellow"}} {:id #uuid "63d3772c-1821-4e47-8f63-18b58190f0bb", :page 689, :position {:bounding {:x1 0, :y1 76.79999542236328, :x2 816.2040039002895, :y2 269.6124954223633, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 76.79999542236328, :x2 0, :y2 99.20000457763672, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 222.04999542236328, :x2 816.2040039002895, :y2 245.25000762939453, :width 941, :height 1174.9597806215722} {:x1 169.47499999403954, :y1 226.04999542236328, :x2 816.2040039002895, :y2 242.36249542236328, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 246.41251373291016, :x2 574.197290033102, :y2 269.6124954223633, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 250.41251373291016, :x2 506.94170531630516, :y2 266.72501373291016, :width 941, :height 1174.9597806215722}), :page 689}, :content {:text "要使用 CSPRNG 重新实现 Math.random()，可以通过生成一个随机的 32 位数值，然后用它去除最大的可能值 0xFFFFFFFF。这样就会得到一个介于 0 和 1 之间的值"}, :properties {:color "yellow"}} {:id #uuid "63d37738-c6df-4164-be3c-7f8f8af40388", :page 689, :position {:bounding {:x1 177.32500609755516, :y1 494.37501525878906, :x2 413.6945739686489, :y2 523.1750030517578, :width 941, :height 1174.9597806215722}, :rects ({:x1 177.32500609755516, :y1 494.37501525878906, :x2 354.81597289443016, :y2 523.1750030517578, :width 941, :height 1174.9597806215722} {:x1 366.2375122010708, :y1 495.08750915527344, :x2 413.6945739686489, :y2 523.0875091552734, :width 941, :height 1174.9597806215722} {:x1 218.61249694228172, :y1 499.1750030517578, :x2 354.81597289443016, :y2 519.8125152587891, :width 941, :height 1174.9597806215722} {:x1 366.2375122010708, :y1 499.8874969482422, :x2 366.44143065810204, :y2 519.6999969482422, :width 941, :height 1174.9597806215722}), :page 689}, :content {:text "使用 SubtleCrypto 对象"}, :properties {:color "green"}} {:id #uuid "63d37745-f4cb-42a5-8000-4cd9da20c76d", :page 689, :position {:bounding {:x1 0, :y1 268.7999954223633, :x2 805.4060913026333, :y2 583.1500091552734, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 268.7999954223633, :x2 0, :y2 291.1999969482422, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 535.5749969482422, :x2 535.0682617127895, :y2 558.7750091552734, :width 941, :height 1174.9597806215722} {:x1 547.3625122010708, :y1 536.2874908447266, :x2 805.4060913026333, :y2 558.6875152587891, :width 941, :height 1174.9597806215722} {:x1 280.41249999403954, :y1 539.5749969482422, :x2 535.0682617127895, :y2 555.8874969482422, :width 941, :height 1174.9597806215722} {:x1 547.3625122010708, :y1 540.2874908447266, :x2 805.4060913026333, :y2 555.7750091552734, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 560.7500152587891, :x2 180.29299315810204, :y2 583.1500091552734, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 564.7500152587891, :x2 143.77498778700829, :y2 580.2375030517578, :width 941, :height 1174.9597806215722}), :page 689}, :content {:text "Web Cryptography API 重头特性都暴露在了 SubtleCrypto 对象上，可以通过 window.crypto. subtle 访问"}, :properties {:color "yellow"}} {:id #uuid "63d3777d-ff66-4026-b4b3-619a4e02f27c", :page 689, :position {:bounding {:x1 0, :y1 316.8000030517578, :x2 818.9250122010708, :y2 687.2250213623047, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 316.8000030517578, :x2 0, :y2 339.1999969482422, :width 941, :height 1174.9597806215722} {:x1 0, :y1 332.8000030517578, :x2 0, :y2 355.1999969482422, :width 941, :height 1174.9597806215722} {:x1 758.4668823182583, :y1 615.3125152587891, :x2 806.3106323182583, :y2 638.5124969482422, :width 941, :height 1174.9597806215722} {:x1 532.500024408102, :y1 639.3000030517578, :x2 778.2705932557583, :y2 661.6999969482422, :width 941, :height 1174.9597806215722} {:x1 795.4875122010708, :y1 639.3000030517578, :x2 818.9250122010708, :y2 661.6999969482422, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 639.6750030517578, :x2 520.189721673727, :y2 662.8749847412109, :width 941, :height 1174.9597806215722} {:x1 532.500024408102, :y1 643.3000030517578, :x2 778.2705932557583, :y2 658.7874908447266, :width 941, :height 1174.9597806215722} {:x1 795.4875122010708, :y1 643.3000030517578, :x2 818.9250122010708, :y2 658.7874908447266, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 643.6750030517578, :x2 520.189721673727, :y2 659.9875030517578, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 663.6625213623047, :x2 208.42786559462547, :y2 686.0624847412109, :width 941, :height 1174.9597806215722} {:x1 227.17499694228172, :y1 663.6625213623047, :x2 227.66384276747704, :y2 686.0624847412109, :width 941, :height 1174.9597806215722} {:x1 238.52500304579735, :y1 664.0250091552734, :x2 286.3434997498989, :y2 687.2250213623047, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 667.6625213623047, :x2 208.42786559462547, :y2 683.1500091552734, :width 941, :height 1174.9597806215722} {:x1 227.17499694228172, :y1 667.6625213623047, :x2 227.66384276747704, :y2 683.1500091552734, :width 941, :height 1174.9597806215722}), :page 689}, :content {:text "为所有密码学操作都在原始二进制数据上执行，所以 SubtleCrypto 的每个方法都要用到 ArrayBuffer 和 ArrayBufferView 类 型 。"}, :properties {:color "yellow"}} {:id #uuid "63d3779b-388b-400a-901a-d7cb9688f857", :page 689, :position {:bounding {:x1 138.72499999403954, :y1 808.6875305175781, :x2 253.07932433485985, :y2 831.8875122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.72499999403954, :y1 808.6875305175781, :x2 253.07932433485985, :y2 831.8875122070312, :width 941, :height 1174.9597806215722}), :page 689}, :content {:text "生成密码学摘要"}, :properties {:color "green"}} {:id #uuid "63d377a3-af19-40d3-b073-bf4b1471dfa5", :page 689, :position {:bounding {:x1 0, :y1 428.80001068115234, :x2 818.937524408102, :y2 878.0250244140625, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 428.80001068115234, :x2 0, :y2 451.20001220703125, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 831.5375061035156, :x2 818.937524408102, :y2 854.7375183105469, :width 941, :height 1174.9597806215722} {:x1 586.3374877870083, :y1 835.5375061035156, :x2 818.937524408102, :y2 851.8500061035156, :width 941, :height 1174.9597806215722} {:x1 87.84999999403954, :y1 854.8250122070312, :x2 150.09999999403954, :y2 878.0250244140625, :width 941, :height 1174.9597806215722} {:x1 87.84999999403954, :y1 858.8250122070312, :x2 135.67353209853172, :y2 875.1375122070312, :width 941, :height 1174.9597806215722}), :page 689}, :content {:text "计算数据的密码学摘要是非常常用的密码学操作。这个规范支持 4 种摘要算法：SHA-1 和 3 种 SHA-2。"}, :properties {:color "yellow"}} {:id #uuid "63d377da-fc9c-40dd-bcff-a64dc3072bcf", :page 689, :position {:bounding {:x1 0, :y1 492.8000183105469, :x2 811.245141595602, :y2 976.6500396728516, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 492.8000183105469, :x2 0, :y2 515.2000427246094, :width 941, :height 1174.9597806215722} {:x1 795.1919799745083, :y1 929.0875396728516, :x2 811.245141595602, :y2 952.2875366210938, :width 941, :height 1174.9597806215722} {:x1 141.48749694228172, :y1 953.4500427246094, :x2 499.3358093202114, :y2 976.6500396728516, :width 941, :height 1174.9597806215722} {:x1 141.48749694228172, :y1 957.4500427246094, :x2 431.1025329530239, :y2 973.7625427246094, :width 941, :height 1174.9597806215722}), :page 689}, :content {:text "规范支持其中 3 种：SHA-256、SHA-384 和 SHA-512"}, :properties {:color "yellow"}} {:id #uuid "63d377e1-7075-4f51-8739-1f4894a8dc08", :page 689, :position {:bounding {:x1 118.80000457167625, :y1 1026.2625427246094, :x2 504.1603637635708, :y2 1049.8375396728516, :width 941, :height 1174.9597806215722}, :rects ({:x1 118.80000457167625, :y1 1026.2625427246094, :x2 278.348527520895, :y2 1048.6625366210938, :width 941, :height 1174.9597806215722} {:x1 315.1125122010708, :y1 1026.6375427246094, :x2 504.1603637635708, :y2 1049.8375396728516, :width 941, :height 1174.9597806215722}), :page 689}, :content {:text "SubtleCrypto.digest()方法用于生成消息摘要。"}, :properties {:color "yellow"}} {:id #uuid "63d37819-5c9c-409a-9c42-755f888dff62", :page 690, :position {:bounding {:x1 0, :y1 332.6000213623047, :x2 852.5832153260708, :y2 403.1999969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 649.4789062440395, :y1 332.6000213623047, :x2 777.1605468690395, :y2 355.80003356933594, :width 941, :height 1174.9597806215722} {:x1 788.8374877870083, :y1 332.6000213623047, :x2 852.5832153260708, :y2 355.80003356933594, :width 941, :height 1174.9597806215722} {:x1 788.8374877870083, :y1 336.6000213623047, :x2 852.5832153260708, :y2 352.9125213623047, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 356.96250915527344, :x2 345.9654479920864, :y2 380.1625213623047, :width 941, :height 1174.9597806215722} {:x1 368.2750183045864, :y1 356.96250915527344, :x2 705.0896850526333, :y2 380.1625213623047, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 360.96250915527344, :x2 345.9654479920864, :y2 377.27500915527344, :width 941, :height 1174.9597806215722} {:x1 0, :y1 380.80003356933594, :x2 0, :y2 403.1999969482422, :width 941, :height 1174.9597806215722}), :page 690}, :content {:text "过将二进制数据按 8 位进行分割，然后再调用 toString(16)就可以把任何数组缓冲区转换为十六进制字符串"}, :properties {:color "yellow"}} {:id #uuid "63d37898-0dd9-45e1-a7a0-69cdb47587c3", :page 691, :position {:bounding {:x1 138.71250304579735, :y1 440.4000015258789, :x2 275.9001403748989, :y2 462.7999954223633, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.71250304579735, :y1 440.4000015258789, :x2 275.9001403748989, :y2 462.7999954223633, :width 941, :height 1174.9597806215722} {:x1 222.32500609755516, :y1 444.4000015258789, :x2 225.42499694228172, :y2 459.8875198364258, :width 941, :height 1174.9597806215722}), :page 691}, :content {:text "CryptoKey 与算法"}, :properties {:color "green"}} {:id #uuid "63d378a4-46a3-4399-b882-dded13f7114f", :page 691, :position {:bounding {:x1 0, :y1 284.80001068115234, :x2 817.6408325135708, :y2 510.1124954223633, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 284.80001068115234, :x2 0, :y2 307.2000198364258, :width 941, :height 1174.9597806215722} {:x1 447.3375183045864, :y1 462.1749954223633, :x2 546.6147094666958, :y2 484.5750198364258, :width 941, :height 1174.9597806215722} {:x1 558.9250122010708, :y1 462.1749954223633, :x2 817.6408325135708, :y2 484.5750198364258, :width 941, :height 1174.9597806215722} {:x1 558.9250122010708, :y1 466.1749954223633, :x2 817.6408325135708, :y2 481.66251373291016, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 486.91251373291016, :x2 151.87043151259422, :y2 510.1124954223633, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 490.91251373291016, :x2 151.87043151259422, :y2 507.22501373291016, :width 941, :height 1174.9597806215722}), :page 691}, :content {:text "SubtleCrypto 对象使用 CryptoKey 类的实例来生成密钥。"}, :properties {:color "yellow"}} {:id #uuid "63d378bc-8927-4955-b516-4e43a7d9276e", :page 691, :position {:bounding {:x1 153.06250914931297, :y1 486.53749084472656, :x2 594.2783904969692, :y2 508.93751525878906, :width 941, :height 1174.9597806215722}, :rects ({:x1 153.06250914931297, :y1 486.53749084472656, :x2 594.2783904969692, :y2 508.93751525878906, :width 941, :height 1174.9597806215722} {:x1 236.77500304579735, :y1 490.53749084472656, :x2 239.87500914931297, :y2 506.02500915527344, :width 941, :height 1174.9597806215722}), :page 691}, :content {:text "CryptoKey 类支持多种加密算法，允许控制密钥抽取和使用。"}, :properties {:color "yellow"}} {:id #uuid "63d37db2-d407-4e75-9e13-13b98dcc32dd", :page 692, :position {:bounding {:x1 167.50000858306885, :y1 856.6500244140625, :x2 276.5765619277954, :y2 879.0500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000858306885, :y1 856.6500244140625, :x2 276.5765619277954, :y2 879.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 199.0999994277954, :y1 860.6500244140625, :x2 202.26250553131104, :y2 876.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 692}, :content {:text "生成 CryptoKey"}, :properties {:color "green"}} {:id #uuid "63d37dba-8f07-4f62-9fee-4ef2e84f5707", :page 692, :position {:bounding {:x1 0, :y1 716.8000183105469, :x2 829.2842035293579, :y2 924.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 716.8000183105469, :x2 0, :y2 739.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.88750553131104, :y1 878.8000183105469, :x2 383.54695987701416, :y2 901.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 422.4000177383423, :y1 878.8000183105469, :x2 829.2842035293579, :y2 901.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 181.4874963760376, :y1 882.8000183105469, :x2 383.54695987701416, :y2 898.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 422.4000177383423, :y1 882.8000183105469, :x2 829.2842035293579, :y2 898.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 902.4125061035156, :x2 368.06197452545166, :y2 924.8125305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 906.4125061035156, :x2 333.4000177383423, :y2 922.2125244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 692}, :content {:text "使用 SubtleCrypto.generateKey()方法可以生成随机 CryptoKey，这个方法返回一个期约，解决为一个或多个 CryptoKey 实例"}, :properties {:color "yellow"}} {:id #uuid "63d37dc6-3d91-493b-a9cf-b8f184785ea1", :page 692, :position {:bounding {:x1 0, :y1 732.8000183105469, :x2 832.9603509902954, :y2 971.7500305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 732.8000183105469, :x2 0, :y2 755.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 748.8000183105469, :x2 0, :y2 771.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 528.3717889785767, :y1 902.4000244140625, :x2 832.9603509902954, :y2 924.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 926.0125122070312, :x2 832.7483758926392, :y2 948.4125061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 930.0125122070312, :x2 832.7483758926392, :y2 945.8125305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 949.3500061035156, :x2 211.3078088760376, :y2 970.9500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 226.20000553131104, :y1 949.3500061035156, :x2 541.5000238418579, :y2 971.7500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 953.3500061035156, :x2 211.3078088760376, :y2 968.3500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 226.20000553131104, :y1 953.3500061035156, :x2 533.5999994277954, :y2 968.3500366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 692}, :content {:text "法传入一个指定目标算法的参数对象、一个表示密钥是否可以从 CryptoKey 对象中提取出来的布尔值，以及一个表示这个密钥可以与哪个 SubtleCrypto 方法一起使用的字符串数组（keyUsages）。"}, :properties {:color "yellow"}} {:id #uuid "63d37df5-088c-48e1-9976-6781083cf77c", :page 694, :position {:bounding {:x1 167.50000858306885, :y1 251.75003051757812, :x2 278.28960514068604, :y2 274.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000858306885, :y1 251.75003051757812, :x2 278.28960514068604, :y2 274.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 694}, :content {:text "导出和导入密钥"}, :properties {:color "green"}} {:id #uuid "63d37e43-e174-43be-8f2c-72a6d8014d8c", :page 694, :position {:bounding {:x1 0, :y1 273.8000183105469, :x2 830.8266839981079, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 797.4027948379517, :y1 273.8000183105469, :x2 830.8266839981079, :y2 296.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 297.1499938964844, :x2 200.25469303131104, :y2 318.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 217.40000247955322, :y1 297.5, :x2 561.6031122207642, :y2 319.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 572.8999872207642, :y1 297.5, :x2 764.1734247207642, :y2 319.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 301.1499938964844, :x2 200.25469303131104, :y2 316.1499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 217.40000247955322, :y1 301.5, :x2 561.6031122207642, :y2 317.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 572.8999872207642, :y1 301.5, :x2 628.0285882949829, :y2 317.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 332.8000183105469, :x2 0, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 694}, :content {:text "使用 exportKey()方法并指定目标格式（\"raw\"、\"pkcs8\"、\"spki\"或\"jwk\"）就可以取得密钥"}, :properties {:color "yellow"}} {:id #uuid "63d37e5a-9e9d-4ade-b2e7-c0fd17f0f81c", :page 694, :position {:bounding {:x1 0, :y1 572.800012588501, :x2 828.6001214981079, :y2 633.800012588501, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 572.800012588501, :x2 0, :y2 595.2000370025635, :width 911.6666666666666, :height 1138.3333333333333} {:x1 585.0999994277954, :y1 587.4500370025635, :x2 669.6348505020142, :y2 609.050012588501, :width 911.6666666666666, :height 1138.3333333333333} {:x1 684.2000360488892, :y1 587.800012588501, :x2 828.6001214981079, :y2 610.2000370025635, :width 911.6666666666666, :height 1138.3333333333333} {:x1 684.2000360488892, :y1 591.800012588501, :x2 828.6001214981079, :y2 607.6000003814697, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 611.050012588501, :x2 216.2296838760376, :y2 632.6499881744385, :width 911.6666666666666, :height 1138.3333333333333} {:x1 235.20000553131104, :y1 611.3999881744385, :x2 337.0546808242798, :y2 633.800012588501, :width 911.6666666666666, :height 1138.3333333333333} {:x1 353.9999933242798, :y1 611.3999881744385, :x2 418.1097650527954, :y2 633.800012588501, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 615.050012588501, :x2 216.2296838760376, :y2 630.050012588501, :width 911.6666666666666, :height 1138.3333333333333} {:x1 235.20000553131104, :y1 615.3999881744385, :x2 337.0546808242798, :y2 631.2000370025635, :width 911.6666666666666, :height 1138.3333333333333}), :page 694}, :content {:text "importKey()方法的签名实际上是 generateKey()和 exportKey()的组合。"}, :properties {:color "yellow"}} {:id #uuid "63d37e71-f891-4cc4-a263-3ee0ba13ba4d", :page 694, :position {:bounding {:x1 167.50000858306885, :y1 953.9500427246094, :x2 294.0895929336548, :y2 976.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000858306885, :y1 953.9500427246094, :x2 294.0895929336548, :y2 976.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 694}, :content {:text "从主密钥派生密钥"}, :properties {:color "green"}} {:id #uuid "63d37e87-635a-48c6-8180-56a6ecc0610a", :page 694, :position {:bounding {:x1 0, :y1 860.8000373840332, :x2 827.3999872207642, :y2 1022.1125335693359, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 860.8000373840332, :x2 0, :y2 883.2000389099121, :width 911.6666666666666, :height 1138.3333333333333} {:x1 665.0000238418579, :y1 975.7500457763672, :x2 758.1983270645142, :y2 998.1500549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 773.0999994277954, :y1 975.7500457763672, :x2 827.3999872207642, :y2 997.3500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 665.0000238418579, :y1 979.7500457763672, :x2 758.1983270645142, :y2 994.7500457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 773.0999994277954, :y1 979.7500457763672, :x2 827.3999872207642, :y2 994.7500457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 237.00000858306885, :y1 999.7000427246094, :x2 400.97344303131104, :y2 1022.1000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 428.0999994277954, :y1 999.7000427246094, :x2 476.10006046295166, :y2 1022.1000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 999.7125396728516, :x2 218.1703119277954, :y2 1022.1125335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 237.00000858306885, :y1 1003.7000427246094, :x2 400.97344303131104, :y2 1019.5000457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 428.0999994277954, :y1 1003.7000427246094, :x2 476.10006046295166, :y2 1019.5000457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 1003.7125396728516, :x2 218.1703119277954, :y2 1019.5125427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 694}, :content {:text "SubtleCrypto 支持一个 deriveKey()方法和一个 deriveBits()方法，"}, :properties {:color "yellow"}} {:id #uuid "63d37e96-5dfb-4000-9209-eedd59c29fde", :page 695, :position {:bounding {:x1 115.09999942779541, :y1 203.54999923706055, :x2 656.5223016738892, :y2 226.29999923706055, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999942779541, :y1 203.54999923706055, :x2 195.97344303131104, :y2 225.15000534057617, :width 911.6666666666666, :height 1138.3333333333333} {:x1 223.0999994277954, :y1 203.90000534057617, :x2 656.5223016738892, :y2 226.29999923706055, :width 911.6666666666666, :height 1138.3333333333333}), :page 695}, :content {:text "deriveBits()方法接收一个算法参数对象、主密钥和输出的位长作为参数。"}, :properties {:color "yellow"}} {:id #uuid "63d37ea2-3bf7-434f-afda-6ffe6b70c842", :page 695, :position {:bounding {:x1 115.09999942779541, :y1 841.6500244140625, :x2 711.2471551895142, :y2 864.4000549316406, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999942779541, :y1 841.6500244140625, :x2 195.27031803131104, :y2 863.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 214.0999994277954, :y1 842.0000305175781, :x2 711.2471551895142, :y2 864.4000549316406, :width 911.6666666666666, :height 1138.3333333333333} {:x1 214.0999994277954, :y1 846.0000305175781, :x2 711.2471551895142, :y2 861.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 695}, :content {:text "deriveKey()方法是类似的，只不过返回的是 CryptoKey 的实例而不是 ArrayBuffer"}, :properties {:color "yellow"}} {:id #uuid "63d37ebb-d884-43a5-808d-1c7d56274248", :page 696, :position {:bounding {:x1 163.08750247955322, :y1 569.400016784668, :x2 389.0792169570923, :y2 591.8000106811523, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 163.08750247955322, :y1 569.400016784668, :x2 389.0792169570923, :y2 591.8000106811523, :width 911.6666666666666, :height 1138.3333333333333}), :page 696}, :content {:text " 使用非对称密钥签名和验证消息"}, :properties {:color "green"}} {:id #uuid "63d37ec4-f2e5-403a-9e8e-f1e5f9da7fc1", :page 696, :position {:bounding {:x1 336.45821475982666, :y1 590.5000152587891, :x2 737.1858148574829, :y2 612.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 336.45821475982666, :y1 590.5000152587891, :x2 737.1858148574829, :y2 612.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 696}, :content {:text "可以使用公钥算法用私钥生成签名，或者用公钥验证签名"}, :properties {:color "yellow"}} {:id #uuid "63d37f0d-c403-4350-a299-3ed6a09208da", :page 696, :position {:bounding {:x1 0, :y1 637.3500366210938, :x2 827.0000238418579, :y2 683.8000335693359, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 801.5999994277954, :y1 637.3500366210938, :x2 827.0000238418579, :y2 658.9500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000247955322, :y1 637.7125396728516, :x2 782.3471307754517, :y2 660.1125411987305, :width 911.6666666666666, :height 1138.3333333333333} {:x1 523.0999994277954, :y1 641.3500366210938, :x2 782.3471307754517, :y2 657.1500473022461, :width 911.6666666666666, :height 1138.3333333333333} {:x1 801.5999994277954, :y1 641.3500366210938, :x2 827.0000238418579, :y2 656.3500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 652.8000411987305, :x2 0, :y2 675.2000427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 661.0500335693359, :x2 231.4171838760376, :y2 682.6500396728516, :width 911.6666666666666, :height 1138.3333333333333} {:x1 253.20000553131104, :y1 661.4000396728516, :x2 269.22982120513916, :y2 683.8000335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 665.0500335693359, :x2 231.4171838760376, :y2 680.0500335693359, :width 911.6666666666666, :height 1138.3333333333333}), :page 696}, :content {:text "签名消息需要传入参数对象以指定算法和必要的值、CryptoKey 和要签名的 ArrayBuffer 或 ArrayBufferView。"}, :properties {:color "yellow"}} {:id #uuid "63d37f16-a13b-41aa-adf4-2bb090b83059", :page 697, :position {:bounding {:x1 116.7999963760376, :y1 127.10000610351562, :x2 674.3000726699829, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 127.10000610351562, :x2 599.0810174942017, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 642.3000116348267, :y1 127.10000610351562, :x2 674.3000726699829, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 453.20000553131104, :y1 130.75, :x2 599.0810174942017, :y2 145.75, :width 911.6666666666666, :height 1138.3333333333333}), :page 697}, :content {:text "希望通过这个签名验证消息的人可以使用公钥和 SubtleCrypto.verify()方法"}, :properties {:color "yellow"}} {:id #uuid "63d37f1b-a2d7-409c-b6f6-103f8742c15d", :page 697, :position {:bounding {:x1 250.72972965240479, :y1 150.69998168945312, :x2 426.0943536758423, :y2 173.0999755859375, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 250.72972965240479, :y1 150.69998168945312, :x2 426.0943536758423, :y2 173.0999755859375, :width 911.6666666666666, :height 1138.3333333333333}), :page 697}, :content {:text "是必须提供公钥以及签名"}, :properties {:color "yellow"}} {:id #uuid "63d37f1f-3ae0-446f-8bf9-e5716b07ce48", :page 697, :position {:bounding {:x1 134.40000247955322, :y1 575.7500152587891, :x2 308.4843988418579, :y2 598.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.40000247955322, :y1 575.7500152587891, :x2 308.4843988418579, :y2 598.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 697}, :content {:text "使用对称密钥加密和解密"}, :properties {:color "green"}} {:id #uuid "63d37f29-d02b-4624-beab-8c43caf93085", :page 697, :position {:bounding {:x1 116.7999963760376, :y1 645.2000274658203, :x2 658.8268518447876, :y2 667.6000213623047, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 645.2000274658203, :x2 658.8268518447876, :y2 667.6000213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 697}, :content {:text "加密消息需要传入参数对象以指定算法和必要的值、加密密钥和要加密的数据"}, :properties {:color "yellow"}} {:id #uuid "63d37f6c-03ef-4d6c-a427-caf192ad99e0", :page 698, :position {:bounding {:x1 161.78252506256104, :y1 279.8999938964844, :x2 278.28960514068604, :y2 302.29998779296875, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 161.78252506256104, :y1 279.8999938964844, :x2 278.28960514068604, :y2 302.29998779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 163.08750247955322, :y1 283.8999938964844, :x2 163.40250492095947, :y2 299.70001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 698}, :content {:text " 包装和解包密钥"}, :properties {:color "green"}} {:id #uuid "63d384a9-f883-45c7-8389-2dc3baa31ee6", :page 698, :position {:bounding {:x1 0, :y1 301.00000762939453, :x2 815.0179071426392, :y2 387.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 617.4624872207642, :y1 301.00000762939453, :x2 815.0179071426392, :y2 323.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 759.8499994277954, :y1 305.00000762939453, :x2 815.0179071426392, :y2 320.80001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 324.23751068115234, :x2 241.00939273834229, :y2 345.83750915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 262.20000553131104, :y1 324.60001373291016, :x2 469.21407413482666, :y2 347.00000762939453, :width 911.6666666666666, :height 1138.3333333333333} {:x1 498.0000238418579, :y1 324.60001373291016, :x2 562.0000848770142, :y2 347.00000762939453, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 328.23751068115234, :x2 241.00939273834229, :y2 343.23751068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 262.20000553131104, :y1 328.60001373291016, :x2 469.21407413482666, :y2 344.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 364.8000183105469, :x2 0, :y2 387.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 698}, :content {:text "这两种操作分别通过 SubtleCrypto.wrapKey()和 SubtleCrypto.unwrapKey()方法完成"}, :properties {:color "yellow"}} {:id #uuid "63d384c0-8510-4a39-bf91-a3e20ea490ce", :page 700, :position {:bounding {:x1 186.9874963760376, :y1 575.9500122070312, :x2 349.57784366607666, :y2 609.5499877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 186.9874963760376, :y1 575.9500122070312, :x2 349.57784366607666, :y2 609.5499877929688, :width 911.6666666666666, :height 1138.3333333333333}), :page 700}, :content {:text "浏览器错误报告"}, :properties {:color "green"}} {:id #uuid "63d3854d-66d7-4484-985e-5e44c4e97140", :page 700, :position {:bounding {:x1 193.7999963760376, :y1 708.0125122070312, :x2 293.80001163482666, :y2 736.8125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 708.0125122070312, :x2 293.80001163482666, :y2 736.8125, :width 911.6666666666666, :height 1138.3333333333333}), :page 700}, :content {:text "桌面控制台"}, :properties {:color "green"}} {:id #uuid "63d38584-29bb-4f4f-8d9a-07837438aaa4", :page 701, :position {:bounding {:x1 160.70000553131104, :y1 125.31253051757812, :x2 260.70000553131104, :y2 154.11251831054688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 125.31253051757812, :x2 260.70000553131104, :y2 154.11251831054688, :width 911.6666666666666, :height 1138.3333333333333}), :page 701}, :content {:text "移动控制台"}, :properties {:color "green"}} {:id #uuid "63d386e7-bc1b-4017-9e9a-c1258db4812b", :page 701, :position {:bounding {:x1 116.78749942779541, :y1 284.4250030517578, :x2 730.9681024551392, :y2 306.8249969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.78749942779541, :y1 284.4250030517578, :x2 730.9681024551392, :y2 306.8249969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 480.8499994277954, :y1 287.3625030517578, :x2 730.9681024551392, :y2 303.16249084472656, :width 911.6666666666666, :height 1138.3333333333333}), :page 701}, :content {:text "此外也可以使用第三方工具直接在移动设备上调试。Firefox 常用的调试工具是 Firebug Lite"}, :properties {:color "yellow"}} {:id #uuid "63d386e9-281d-4429-bd95-12c16d21760f", :page 701, :position {:bounding {:x1 153.88750553131104, :y1 368.4500274658203, :x2 246.80123233795166, :y2 402.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 153.88750553131104, :y1 368.4500274658203, :x2 246.80123233795166, :y2 402.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 701}, :content {:text "错误处理"}, :properties {:color "green"}} {:id #uuid "63d3871c-fe93-489a-a054-beafbb7c33e3", :page 701, :position {:bounding {:x1 141.83789920806885, :y1 662.3999938964844, :x2 303.9999933242798, :y2 691.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 662.3999938964844, :x2 303.9999933242798, :y2 690.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 141.83789920806885, :y1 663.0499877929688, :x2 141.83789920806885, :y2 691.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 160.70000553131104, :y1 667.2000122070312, :x2 258.5101251602173, :y2 686.3999938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 701}, :content {:text "try/catch 语句"}, :properties {:color "green"}} {:id #uuid "63d3872c-144e-4fb5-95d7-9bdd002d96a0", :page 701, :position {:bounding {:x1 116.7999963760376, :y1 840, :x2 681.1480340957642, :y2 862.3999938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 840, :x2 681.1480340957642, :y2 862.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 342.4000177383423, :y1 843.6499938964844, :x2 647.5999994277954, :y2 858.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 701}, :content {:text "任何可能出错的代码都应该放到 try 块中，而处理错误的代码则放在 catch 块中"}, :properties {:color "yellow"}} {:id #uuid "63d38742-57b9-45cf-84bc-ac6c985a9665", :page 702, :position {:bounding {:x1 0, :y1 243, :x2 834.9875116348267, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 492.6641778945923, :y1 243, :x2 834.9875116348267, :y2 265.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 500.80001163482666, :y1 246.64999389648438, :x2 834.9875116348267, :y2 262.45001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 265.5625, :x2 568.1175928115845, :y2 287.9625244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 269.5625, :x2 234.06250858306885, :y2 285.3625183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 332.79998779296875, :x2 0, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 702}, :content {:text "。message 属性是唯一一个在 IE、Firefox、Safari、 Chrome 和 Opera 中都有的属性，尽管每个浏览器添加了其他属性"}, :properties {:color "yellow"}} {:id #uuid "63d387a5-c2a7-4c78-854c-1f4b04da4cf0", :page 702, :position {:bounding {:x1 167.50000858306885, :y1 366.85003662109375, :x2 266.5999994277954, :y2 388.45001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000858306885, :y1 366.85003662109375, :x2 210.8265619277954, :y2 388.45001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 230.50000858306885, :y1 366.85003662109375, :x2 266.5999994277954, :y2 388.45001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 230.50000858306885, :y1 370.85003662109375, :x2 233.50000858306885, :y2 385.85003662109375, :width 911.6666666666666, :height 1138.3333333333333}), :page 702}, :content {:text "finally 子句"}, :properties {:color "green"}} {:id #uuid "63d387bf-c4d2-4f80-8de6-dc3aabbffd29", :page 702, :position {:bounding {:x1 0, :y1 411.5499954223633, :x2 827.0999994277954, :y2 467.2000198364258, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 777.8000116348267, :y1 411.5499954223633, :x2 827.0999994277954, :y2 433.94998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 777.8000116348267, :y1 415.5499954223633, :x2 827.0999994277954, :y2 430.5499954223633, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 435.1500015258789, :x2 294.1265802383423, :y2 457.5499954223633, :width 911.6666666666666, :height 1138.3333333333333} {:x1 313.80001163482666, :y1 435.1500015258789, :x2 461.16094303131104, :y2 457.5499954223633, :width 911.6666666666666, :height 1138.3333333333333} {:x1 471.30001163482666, :y1 435.1500015258789, :x2 507.8320550918579, :y2 456.75000762939453, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 439.1500015258789, :x2 294.1265802383423, :y2 454.94998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 313.80001163482666, :y1 439.1500015258789, :x2 461.16094303131104, :y2 454.94998931884766, :width 911.6666666666666, :height 1138.3333333333333} {:x1 471.30001163482666, :y1 439.1500015258789, :x2 471.48751163482666, :y2 454.1500015258789, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 444.7999954223633, :x2 0, :y2 467.2000198364258, :width 911.6666666666666, :height 1138.3333333333333}), :page 702}, :content {:text "try 或 catch 块无法阻止 finally 块执行，包括 return 语句"}, :properties {:color "yellow"}} {:id #uuid "63d387f2-a6e9-4ee1-8595-6e7c25ab8624", :page 702, :position {:bounding {:x1 167.50000858306885, :y1 802.0499877929688, :x2 230.70000553131104, :y2 824.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000858306885, :y1 802.0499877929688, :x2 230.70000553131104, :y2 824.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 702}, :content {:text "错误类型"}, :properties {:color "green"}} {:id #uuid "63d3880e-b15d-48be-821b-fce42d2161be", :page 703, :position {:bounding {:x1 115.09999942779541, :y1 173.94998168945312, :x2 660.5567255020142, :y2 196.3499755859375, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999942779541, :y1 173.94998168945312, :x2 205.9437494277954, :y2 195.54998779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 232.0999994277954, :y1 173.94998168945312, :x2 660.5567255020142, :y2 196.3499755859375, :width 911.6666666666666, :height 1138.3333333333333} {:x1 232.0999994277954, :y1 177.94998168945312, :x2 449.1097345352173, :y2 193.74996948242188, :width 911.6666666666666, :height 1138.3333333333333}), :page 703}, :content {:text "InternalError 类型的错误会在底层 JavaScript 引擎抛出异常时由浏览器抛出"}, :properties {:color "yellow"}} {:id #uuid "63d38814-eb6f-4d41-9fc9-8b001732170f", :page 703, :position {:bounding {:x1 115.09999942779541, :y1 244.85000610351562, :x2 545.1729364395142, :y2 267.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999942779541, :y1 244.85000610351562, :x2 179.61875247955322, :y2 266.4499816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 196.0999994277954, :y1 244.85000610351562, :x2 386.0374994277954, :y2 267.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 400.9999933242798, :y1 245.19998168945312, :x2 545.1729364395142, :y2 267.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 196.0999994277954, :y1 248.85000610351562, :x2 386.0374994277954, :y2 264.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 703}, :content {:text "EvalError 类型的错误会在使用 eval()函数发生异常时抛出"}, :properties {:color "yellow"}} {:id #uuid "63d3882d-0274-4dde-829b-7cae1b7e33af", :page 703, :position {:bounding {:x1 115.09999942779541, :y1 454.9500045776367, :x2 401.4024896621704, :y2 476.55001068115234, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999942779541, :y1 454.9500045776367, :x2 194.46875858306885, :y2 476.55001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 205.0999994277954, :y1 454.9500045776367, :x2 401.4024896621704, :y2 476.55001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 205.0999994277954, :y1 458.9500045776367, :x2 205.2874994277954, :y2 473.95003509521484, :width 911.6666666666666, :height 1138.3333333333333}), :page 703}, :content {:text "RangeError 错误会在数值越界时抛出。"}, :properties {:color "yellow"}} {:id #uuid "63d38834-9e93-4c05-a643-e7377db7392f", :page 703, :position {:bounding {:x1 124.52187442779541, :y1 570.5500106811523, :x2 427.49614810943604, :y2 592.1499862670898, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 124.52187442779541, :y1 570.5500106811523, :x2 220.4281244277954, :y2 592.1499862670898, :width 911.6666666666666, :height 1138.3333333333333} {:x1 241.0999994277954, :y1 570.5500106811523, :x2 427.49614810943604, :y2 592.1499862670898, :width 911.6666666666666, :height 1138.3333333333333} {:x1 241.0999994277954, :y1 574.5500106811523, :x2 427.49614810943604, :y2 589.5500106811523, :width 911.6666666666666, :height 1138.3333333333333}), :page 703}, :content {:text "eferenceError 会在找不到对象时发生。"}, :properties {:color "yellow"}} {:id #uuid "63d38846-fc80-4aa7-b81a-a59410194943", :page 703, :position {:bounding {:x1 115.09999942779541, :y1 646.7499923706055, :x2 651.7708368301392, :y2 669.4999923706055, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999942779541, :y1 646.7499923706055, :x2 198.04062747955322, :y2 668.3500289916992, :width 911.6666666666666, :height 1138.3333333333333} {:x1 214.0999994277954, :y1 646.7499923706055, :x2 324.91341495513916, :y2 669.1499557495117, :width 911.6666666666666, :height 1138.3333333333333} {:x1 339.9000177383423, :y1 647.1000289916992, :x2 651.7708368301392, :y2 669.4999923706055, :width 911.6666666666666, :height 1138.3333333333333} {:x1 214.0999994277954, :y1 650.7499923706055, :x2 324.91341495513916, :y2 666.5499801635742, :width 911.6666666666666, :height 1138.3333333333333} {:x1 339.9000177383423, :y1 651.1000289916992, :x2 539.5249872207642, :y2 666.900016784668, :width 911.6666666666666, :height 1138.3333333333333}), :page 703}, :content {:text "SyntaxError 经常在给 eval()传入的字符串包含 JavaScript 语法错误时发生"}, :properties {:color "yellow"}} {:id #uuid "63d38850-7c4d-4ce1-baa0-d1caf8bb3c95", :page 703, :position {:bounding {:x1 115.09999942779541, :y1 746.5499877929688, :x2 768.0928583145142, :y2 768.949951171875, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999942779541, :y1 746.5499877929688, :x2 184.65313053131104, :y2 768.1500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 196.0999994277954, :y1 746.5499877929688, :x2 768.0928583145142, :y2 768.949951171875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 196.0999994277954, :y1 750.5499877929688, :x2 289.4374933242798, :y2 766.3499755859375, :width 911.6666666666666, :height 1138.3333333333333}), :page 703}, :content {:text "TypeError 在 JavaScript 中很常见，主要发生在变量不是预期类型，或者访问不存在的方法时"}, :properties {:color "yellow"}} {:id #uuid "63d3885b-b426-485a-ba2d-0d6aeb974be7", :page 703, :position {:bounding {:x1 0, :y1 524.8000144958496, :x2 795.4920892715454, :y2 923.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 524.8000144958496, :x2 0, :y2 547.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 335.30001163482666, :y1 878.3000183105469, :x2 520.4765863418579, :y2 900.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 532.5000238418579, :y1 878.3000183105469, :x2 639.4171991348267, :y2 900.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 651.3000116348267, :y1 878.3000183105469, :x2 795.4920892715454, :y2 900.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 244.97078800201416, :y1 878.3125305175781, :x2 323.6583490371704, :y2 900.7125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 263.20000553131104, :y1 881.9500122070312, :x2 323.6583490371704, :y2 896.9500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 335.30001163482666, :y1 882.3000183105469, :x2 520.4765863418579, :y2 898.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 532.5000238418579, :y1 882.3000183105469, :x2 639.4171991348267, :y2 898.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 651.3000116348267, :y1 882.3000183105469, :x2 795.4920892715454, :y2 898.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 900.9500122070312, :x2 179.63968753814697, :y2 923.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 904.9500122070312, :x2 112.39756870269775, :y2 920.7500305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 703}, :content {:text "是 URIError，只会在使用 encodeURI()或 decodeURI()但传入了格式错误的 URI 时发生。"}, :properties {:color "yellow"}} {:id #uuid "63d38899-f691-44da-b535-9bb60a420646", :page 704, :position {:bounding {:x1 167.50000858306885, :y1 299.6499938964844, :x2 295.80001163482666, :y2 321.25, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000858306885, :y1 299.6499938964844, :x2 295.80001163482666, :y2 321.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 194.50000858306885, :y1 304, :x2 244.08751773834229, :y2 319.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 704}, :content {:text "try/catch 的用法"}, :properties {:color "green"}} {:id #uuid "63d388b6-cf7c-4c25-b320-c0589e83d6f5", :page 704, :position {:bounding {:x1 193.7999963760376, :y1 547.2124938964844, :x2 273.80001163482666, :y2 576.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 547.2124938964844, :x2 273.80001163482666, :y2 576.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 704}, :content {:text "抛出错误"}, :properties {:color "green"}} {:id #uuid "63d388d7-c424-40c7-9824-40ba90315f34", :page 704, :position {:bounding {:x1 149.90000247955322, :y1 588.2000122070312, :x2 750.0818719863892, :y2 610.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000247955322, :y1 588.2000122070312, :x2 750.0818719863892, :y2 610.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 165.70000553131104, :y1 592.2000122070312, :x2 458.0873041152954, :y2 608, :width 911.6666666666666, :height 1138.3333333333333}), :page 704}, :content {:text "与 try/catch 语句对应的一个机制是 throw 操作符，用于在任何时候抛出自定义错误"}, :properties {:color "yellow"}} {:id #uuid "63d38904-b969-4a2a-a41b-9c57d6035a12", :page 704, :position {:bounding {:x1 149.90000247955322, :y1 711.8999938964844, :x2 717.4729242324829, :y2 734.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000247955322, :y1 711.8999938964844, :x2 717.4729242324829, :y2 734.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 185.50000858306885, :y1 715.5500183105469, :x2 568.9873285293579, :y2 730.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 704}, :content {:text "使用 throw 操作符时，代码立即停止执行，除非 try/catch 语句捕获了抛出的值"}, :properties {:color "yellow"}} {:id #uuid "63d38910-5cc7-45db-ab3e-3c51a21165f3", :page 704, :position {:bounding {:x1 149.90000247955322, :y1 1006.0500183105469, :x2 773.5999994277954, :y2 1028.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 652.3000116348267, :y1 1006.0500183105469, :x2 746.1531610488892, :y2 1028.4500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000247955322, :y1 1006.3999938964844, :x2 499.86873722076416, :y2 1028.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 510.5000238418579, :y1 1006.3999938964844, :x2 631.6281366348267, :y2 1028.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 757.5999994277954, :y1 1006.3999938964844, :x2 773.5999994277954, :y2 1028.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 359.70000553131104, :y1 1010.0500183105469, :x2 499.86873722076416, :y2 1025.0500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 652.3000116348267, :y1 1010.0500183105469, :x2 746.1531610488892, :y2 1025.8500671386719, :width 911.6666666666666, :height 1138.3333333333333} {:x1 510.5000238418579, :y1 1010.3999938964844, :x2 631.6281366348267, :y2 1026.2000427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 704}, :content {:text "自定义错误常用的错误类型是 Error、RangeError、ReferenceError 和 TypeError。"}, :properties {:color "yellow"}} {:id #uuid "63d38995-c8f1-4401-ac90-f218b1575eae", :page 705, :position {:bounding {:x1 0, :y1 12.799995422363281, :x2 799.8078851699829, :y2 173.11249542236328, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 12.799995422363281, :x2 0, :y2 35.19999694824219, :width 911.6666666666666, :height 1138.3333333333333} {:x1 656.1917352676392, :y1 127.0999984741211, :x2 799.8078851699829, :y2 149.49999237060547, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0749979019165, :y1 150.7125015258789, :x2 423.6800775527954, :y2 173.11249542236328, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0749979019165, :y1 154.7125015258789, :x2 339.28728580474854, :y2 170.51250457763672, :width 911.6666666666666, :height 1138.3333333333333}), :page 705}, :content {:text "创建自定义错误类型时，需要提供 name 属性和 message 属性，比如"}, :properties {:color "yellow"}} {:id #uuid "63d389c8-7222-4d6e-a01d-425637b001e5", :page 705, :position {:bounding {:x1 134.40000247955322, :y1 382.25, :x2 229.3895959854126, :y2 404.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.40000247955322, :y1 382.25, :x2 229.3895959854126, :y2 404.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 705}, :content {:text "何时抛出错误"}, :properties {:color "green"}} {:id #uuid "63d389e4-4ba2-4417-a5a2-2ab38fb7367e", :page 706, :position {:bounding {:x1 167.51250553131104, :y1 362.06250762939453, :x2 320.15157413482666, :y2 384.46251678466797, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.51250553131104, :y1 362.06250762939453, :x2 320.15157413482666, :y2 384.46251678466797, :width 911.6666666666666, :height 1138.3333333333333} {:x1 246.51250553131104, :y1 366.06250762939453, :x2 283.13750553131104, :y2 381.86251068115234, :width 911.6666666666666, :height 1138.3333333333333}), :page 706}, :content {:text "抛出错误与 try/catch"}, :properties {:color "green"}} {:id #uuid "63d38a67-7af0-47b0-a9de-2dd10d95e9f7", :page 706, :position {:bounding {:x1 193.7999963760376, :y1 563.7000274658203, :x2 296.9999933242798, :y2 591.7000274658203, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 563.7000274658203, :x2 296.9999933242798, :y2 591.7000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 251.31249332427979, :y1 568.5000152587891, :x2 255.1624994277954, :y2 587.7000274658203, :width 911.6666666666666, :height 1138.3333333333333}), :page 706}, :content {:text "error 事件"}, :properties {:color "green"}} {:id #uuid "63d38a7b-9d2d-4b6f-aabd-83b73f0a26f9", :page 706, :position {:bounding {:x1 0, :y1 572.8000183105469, :x2 828.8929681777954, :y2 673.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 572.8000183105469, :x2 0, :y2 595.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 591.3904657363892, :y1 627.6125183105469, :x2 828.8929681777954, :y2 650.0125122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 604.7000360488892, :y1 631.2500152587891, :x2 828.8929681777954, :y2 646.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 651.3000183105469, :x2 765.7347650527954, :y2 673.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 655.3000183105469, :x2 703.5674066543579, :y2 671.1000366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 706}, :content {:text "在 onerror 事件处理程序中，任何浏览器都不会传入 event 对象。相反，会传入 3 个参数：错误消息、发生错误的 URL 和行号。"}, :properties {:color "yellow"}} {:id #uuid "63d38a8e-432a-4d1f-b993-c4639f657292", :page 706, :position {:bounding {:x1 200.40000247955322, :y1 698.1500244140625, :x2 590.3333978652954, :y2 720.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 200.40000247955322, :y1 698.1500244140625, :x2 590.3333978652954, :y2 720.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 261.48751163482666, :y1 702.1500244140625, :x2 511.9749994277954, :y2 717.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 706}, :content {:text "onerror 事件处理程序需要使用 DOM Level 0 技术来指定"}, :properties {:color "yellow"}} {:id #uuid "63d38ac1-a896-4a70-8d55-c92a6dcaf2ec", :page 706, :position {:bounding {:x1 149.90000247955322, :y1 805.9500427246094, :x2 813.6458978652954, :y2 828.7000427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 597.3999872207642, :y1 805.9500427246094, :x2 813.6458978652954, :y2 827.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000247955322, :y1 806.3000183105469, :x2 587.3172235488892, :y2 828.7000427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 552.3999872207642, :y1 809.9500427246094, :x2 587.3172235488892, :y2 824.9500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 597.3999872207642, :y1 809.9500427246094, :x2 600.3999872207642, :y2 824.9500427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 706}, :content {:text "在任何错误发生时，无论是否是浏览器生成的，都会触发 error 事件并执行这个事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d38acc-192f-4a48-b50d-37500a2d22c1", :page 706, :position {:bounding {:x1 0, :y1 716.8000335693359, :x2 828.0960931777954, :y2 876.0125427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 716.8000335693359, :x2 0, :y2 739.2000274658203, :width 911.6666666666666, :height 1138.3333333333333} {:x1 708.2000360488892, :y1 829.6500244140625, :x2 828.0960931777954, :y2 851.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 599.0349359512329, :y1 830.0000305175781, :x2 696.0266962051392, :y2 852.4000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 663.0999994277954, :y1 833.6500244140625, :x2 696.0266962051392, :y2 848.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 708.2000360488892, :y1 833.6500244140625, :x2 828.0960931777954, :y2 848.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 853.6125183105469, :x2 262.44698429107666, :y2 876.0125427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 706}, :content {:text "可以返回 false 来阻止浏览器默认报告错误的行为，"}, :properties {:color "yellow"}} {:id #uuid "63d38ae8-3943-47c3-b848-3e0c229a102e", :page 707, :position {:bounding {:x1 116.7999963760376, :y1 248.54999923706055, :x2 296.6640558242798, :y2 271.29999923706055, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 244.90001773834229, :y1 248.54999923706055, :x2 296.6640558242798, :y2 270.1500053405762, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.7999963760376, :y1 248.90000534057617, :x2 234.7986536026001, :y2 271.29999923706055, :width 911.6666666666666, :height 1138.3333333333333} {:x1 199.7999963760376, :y1 252.54999923706055, :x2 234.7986536026001, :y2 267.54999923706055, :width 911.6666666666666, :height 1138.3333333333333} {:x1 244.90001773834229, :y1 252.54999923706055, :x2 247.90001773834229, :y2 267.54999923706055, :width 911.6666666666666, :height 1138.3333333333333}), :page 707}, :content {:text "图片也支持 error 事件。"}, :properties {:color "yellow"}} {:id #uuid "63d38aee-fce2-4570-98f4-24358d657a0b", :page 707, :position {:bounding {:x1 160.70000553131104, :y1 528.3125114440918, :x2 280.70000553131104, :y2 557.1124992370605, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 528.3125114440918, :x2 280.70000553131104, :y2 557.1124992370605, :width 911.6666666666666, :height 1138.3333333333333}), :page 707}, :content {:text "错误处理策略"}, :properties {:color "green"}} {:id #uuid "63d38cbe-b9cf-437e-84f6-74c60984e2c0", :page 707, :position {:bounding {:x1 160.70000553131104, :y1 771.8125305175781, :x2 240.70000553131104, :y2 800.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 771.8125305175781, :x2 240.70000553131104, :y2 800.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 707}, :content {:text "识别错误"}, :properties {:color "green"}} {:id #uuid "63d38cca-ec11-4c74-b7a9-362be5e6e8ed", :page 707, :position {:bounding {:x1 116.7999963760376, :y1 812.8000106811523, :x2 629.6781091690063, :y2 835.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 812.8000106811523, :x2 629.6781091690063, :y2 835.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 707}, :content {:text "错误处理非常重要的部分是首先识别错误可能会在代码中的什么地方发生"}, :properties {:color "yellow"}} {:id #uuid "63d38ced-fcf8-43d7-8bec-b5b98de3e0c8", :page 707, :position {:bounding {:x1 134.38750553131104, :y1 983.2500305175781, :x2 245.17711734771729, :y2 1005.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.38750553131104, :y1 983.2500305175781, :x2 245.17711734771729, :y2 1005.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 707}, :content {:text "静态代码分析器"}, :properties {:color "green"}} {:id #uuid "63d38d05-c004-47a0-b4c0-d285ab18b93f", :page 708, :position {:bounding {:x1 167.50000858306885, :y1 336.95000076293945, :x2 262.4896173477173, :y2 359.3499946594238, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000858306885, :y1 336.95000076293945, :x2 262.4896173477173, :y2 359.3499946594238, :width 911.6666666666666, :height 1138.3333333333333}), :page 708}, :content {:text "类型转换错误"}, :properties {:color "green"}} {:id #uuid "63d38d1e-7a1d-49f8-b5a4-e5b24301ae70", :page 708, :position {:bounding {:x1 344.6174249649048, :y1 359.1000061035156, :x2 752.6065912246704, :y2 381.5000305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 344.6174249649048, :y1 359.1000061035156, :x2 752.6065912246704, :y2 381.5000305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 708}, :content {:text "使用了会自动改变某个值的数据类型的操作符或语言构造"}, :properties {:color "yellow"}} {:id #uuid "63d38d52-cfd4-42fd-8813-7efe880edb28", :page 708, :position {:bounding {:x1 260.5565118789673, :y1 429.9125061035156, :x2 787.1146173477173, :y2 452.31251525878906, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 260.5565118789673, :y1 429.9125061035156, :x2 787.1146173477173, :y2 452.31251525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 708}, :content {:text "，相等和不相等操作符会自动把执行比较的两个不同类型的值转换为相同类"}, :properties {:color "yellow"}} {:id #uuid "63d38d7e-17ae-425f-9589-fc83fc0fbe64", :page 708, :position {:bounding {:x1 0, :y1 588.8000030517578, :x2 835.6920862197876, :y2 717.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 588.8000030517578, :x2 0, :y2 611.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 229.79932498931885, :y1 671.7124938964844, :x2 835.6920862197876, :y2 694.1125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 695.3125, :x2 310.47567081451416, :y2 717.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 708}, :content {:text "使用严格相等和严格不相等操作符可以避免比较过程的类型转换错误，强烈推荐用它们代替相等和不相等操作符。"}, :properties {:color "yellow"}} {:id #uuid "63d38dbd-234b-45fe-ad42-51e995d4cd65", :page 708, :position {:bounding {:x1 149.90000247955322, :y1 829.3000183105469, :x2 782.6753778457642, :y2 851.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000247955322, :y1 829.3000183105469, :x2 782.6753778457642, :y2 851.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 482.70000553131104, :y1 832.9500122070312, :x2 501.07503604888916, :y2 847.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 708}, :content {:text "类型转换错误也会发生在流控制语句中。比如，if 语句会自动把条件表达式转换为布尔值"}, :properties {:color "yellow"}} {:id #uuid "63d38e58-868b-410f-adc2-beb5d25b09d0", :page 709, :position {:bounding {:x1 116.78749942779541, :y1 198, :x2 531.2786493301392, :y2 220.39999389648438, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.78749942779541, :y1 198, :x2 531.2786493301392, :y2 220.39999389648438, :width 911.6666666666666, :height 1138.3333333333333}), :page 709}, :content {:text "在流控制语句中使用非布尔值作为条件是很常见的错误来源"}, :properties {:color "yellow"}} {:id #uuid "63d38e63-4608-4f58-bdf2-6054d8992ffd", :page 709, :position {:bounding {:x1 134.38750553131104, :y1 421.4499816894531, :x2 229.3770990371704, :y2 443.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.38750553131104, :y1 421.4499816894531, :x2 229.3770990371704, :y2 443.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 709}, :content {:text "数据类型错误"}, :properties {:color "green"}} {:id #uuid "63d38ee8-7697-4ec1-b03d-c1f93a9bb874", :page 709, :position {:bounding {:x1 116.7999963760376, :y1 701.3999938964844, :x2 441.7647943496704, :y2 723.8000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 701.3999938964844, :x2 441.7647943496704, :y2 723.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 310.7874994277954, :y1 704.3500061035156, :x2 346.1033868789673, :y2 720.1499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 709}, :content {:text "这个函数的用途是返回给定 URL 的查询字符串"}, :properties {:color "yellow"}} {:id #uuid "63d38f02-7881-4610-9256-3336f5a9ede2", :page 710, :position {:bounding {:x1 148.20000553131104, :y1 246.35001373291016, :x2 723.9893426895142, :y2 269.10001373291016, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.20000553131104, :y1 246.35001373291016, :x2 239.3812494277954, :y2 267.9500198364258, :width 911.6666666666666, :height 1138.3333333333333} {:x1 265.20000553131104, :y1 246.70001983642578, :x2 449.68486881256104, :y2 269.10001373291016, :width 911.6666666666666, :height 1138.3333333333333} {:x1 465.70000553131104, :y1 246.70001983642578, :x2 547.3047113418579, :y2 269.10001373291016, :width 911.6666666666666, :height 1138.3333333333333} {:x1 566.5000238418579, :y1 246.70001983642578, :x2 723.9893426895142, :y2 269.10001373291016, :width 911.6666666666666, :height 1138.3333333333333} {:x1 265.20000553131104, :y1 250.70001983642578, :x2 449.68486881256104, :y2 266.50000762939453, :width 911.6666666666666, :height 1138.3333333333333} {:x1 465.70000553131104, :y1 250.70001983642578, :x2 547.3047113418579, :y2 266.50000762939453, :width 911.6666666666666, :height 1138.3333333333333}), :page 710}, :content {:text "reverseSort()函数可以使用数组的 sort()和 reverse()方法，将数组反向排序"}, :properties {:color "yellow"}} {:id #uuid "63d38f74-ee9c-4531-b260-7b980b7fdead", :page 710, :position {:bounding {:x1 0, :y1 683.5, :x2 831.2251214981079, :y2 729.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 799.0500726699829, :y1 683.5, :x2 831.2251214981079, :y2 705.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 700.7999877929688, :x2 0, :y2 723.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 275.4999933242798, :y1 706.75, :x2 424.28814029693604, :y2 728.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 707.1124877929688, :x2 258.4554376602173, :y2 729.5125122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 275.4999933242798, :y1 710.75, :x2 275.6872797012329, :y2 725.75, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 711.1124877929688, :x2 258.4554376602173, :y2 726.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 710}, :content {:text "那么最好使用 instanceof 来确定值的正确类型"}, :properties {:color "yellow"}} {:id #uuid "63d38f83-1d95-4958-be9a-c372935982a7", :page 710, :position {:bounding {:x1 167.4874963760376, :y1 954.1625061035156, :x2 230.68750858306885, :y2 976.5625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.4874963760376, :y1 954.1625061035156, :x2 230.68750858306885, :y2 976.5625, :width 911.6666666666666, :height 1138.3333333333333}), :page 710}, :content {:text "通信错误"}, :properties {:color "green"}} {:id #uuid "63d38f92-cde7-4b4d-8783-3f33aa91c727", :page 710, :position {:bounding {:x1 229.31873416900635, :y1 901.5500183105469, :x2 749.7469110488892, :y2 924.3125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 713.8000116348267, :y1 901.5500183105469, :x2 749.7469110488892, :y2 923.1499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 229.31873416900635, :y1 901.9125061035156, :x2 696.7703485488892, :y2 924.3125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 389.20000553131104, :y1 905.5500183105469, :x2 696.7703485488892, :y2 920.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 713.8000116348267, :y1 905.5500183105469, :x2 716.8000116348267, :y2 920.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 710}, :content {:text "原始类型的值应该使用 typeof 检测，而对象值应该使用 instanceof 检测"}, :properties {:color "yellow"}} {:id #uuid "63d38fc5-8393-4a8c-adaa-2fea21718a9b", :page 711, :position {:bounding {:x1 116.7999963760376, :y1 255.79998779296875, :x2 556.6565179824829, :y2 278.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 255.79998779296875, :x2 556.6565179824829, :y2 278.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 344.5999994277954, :y1 259.45001220703125, :x2 515.4031610488892, :y2 274.45001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 711}, :content {:text "对于查询字符串，应该都要通过 encodeURIComponent()编码"}, :properties {:color "yellow"}} {:id #uuid "63d38fd6-e189-4464-b7a6-a17aef84ae58", :page 711, :position {:bounding {:x1 160.70000553131104, :y1 729.7125244140625, :x2 360.70000553131104, :y2 758.5125427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 729.7125244140625, :x2 360.70000553131104, :y2 758.5125427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 711}, :content {:text "区分重大与非重大错误"}, :properties {:color "green"}} {:id #uuid "63d39005-e6ad-439f-9791-d2491399c9b1", :page 712, :position {:bounding {:x1 149.88750553131104, :y1 292.4250183105469, :x2 470.43633365631104, :y2 314.8249816894531, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.88750553131104, :y1 292.4250183105469, :x2 470.43633365631104, :y2 314.8249816894531, :width 911.6666666666666, :height 1138.3333333333333}), :page 712}, :content {:text "代码中则不要区分什么是或什么不是重大错误"}, :properties {:color "yellow"}} {:id #uuid "63d39015-0e3d-420a-b9e9-dce579eca6cf", :page 712, :position {:bounding {:x1 0, :y1 508.8000068664551, :x2 835.6086053848267, :y2 564.412525177002, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 508.8000068664551, :x2 0, :y2 531.2000007629395, :width 911.6666666666666, :height 1138.3333333333333} {:x1 532.7027215957642, :y1 518.4124946594238, :x2 835.6086053848267, :y2 540.8124885559082, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 542.0125007629395, :x2 294.4881525039673, :y2 564.412525177002, :width 911.6666666666666, :height 1138.3333333333333}), :page 712}, :content {:text "好在可以简单地重写以上代码，让每个模块的错误变成非重大错误："}, :properties {:color "yellow"}} {:id #uuid "63d3901c-951c-4854-aaad-760c06c6726f", :page 712, :position {:bounding {:x1 0, :y1 652.8000373840332, :x2 832.0683832168579, :y2 735.6125373840332, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 652.8000373840332, :x2 0, :y2 675.2000007629395, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000247955322, :y1 689.600025177002, :x2 832.0683832168579, :y2 711.9999885559082, :width 911.6666666666666, :height 1138.3333333333333} {:x1 201.5999994277954, :y1 693.2499885559082, :x2 832.0683832168579, :y2 708.2499885559082, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 713.2125129699707, :x2 599.1294183731079, :y2 735.6125373840332, :width 911.6666666666666, :height 1138.3333333333333}), :page 712}, :content {:text "通过在 for 循环中加入 try/catch 语句，模块初始化过程中的任何错误都不会影响其他模块初始化。如果代码中有错误发生，则可以单独处理，并不会影响用户体验"}, :properties {:color "yellow"}} {:id #uuid "63d39023-cb98-4338-bf42-37c0888642f1", :page 712, :position {:bounding {:x1 193.7999963760376, :y1 750.3125305175781, :x2 393.80001163482666, :y2 779.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 750.3125305175781, :x2 393.80001163482666, :y2 779.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 712}, :content {:text "把错误记录到服务器中"}, :properties {:color "green"}} {:id #uuid "63d3905b-ede1-430a-a03a-0be4e1b2fa42", :page 712, :position {:bounding {:x1 149.8624963760376, :y1 885.8250122070312, :x2 753.5680170059204, :y2 908.2250061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.8624963760376, :y1 885.8250122070312, :x2 753.5680170059204, :y2 908.2250061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 202.76250553131104, :y1 888.7625122070312, :x2 271.9124994277954, :y2 904.5625305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 712}, :content {:text "要建立 JavaScript 错误日志系统，首先需要在服务器上有页面或入口可以处理错误数据"}, :properties {:color "yellow"}} {:id #uuid "63d39065-492d-4c47-814b-468dc3be2c7e", :page 712, :position {:bounding {:x1 0, :y1 764.8000030517578, :x2 833.7189569473267, :y2 931.8250122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 764.8000030517578, :x2 0, :y2 787.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 769.5982294082642, :y1 885.8250122070312, :x2 833.7189569473267, :y2 908.2250061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.16249942779541, :y1 909.4250183105469, :x2 592.1902093887329, :y2 931.8250122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.16249942779541, :y1 913.4250183105469, :x2 358.54668521881104, :y2 929.2250061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 712}, :content {:text "该页面只要从查询字符串中取得错误数据，然后把它们保存到错误日志中即可"}, :properties {:color "yellow"}} {:id #uuid "63d3907d-25c2-46cf-987c-3b6a1cf8053b", :page 713, :position {:bounding {:x1 0, :y1 92.79998779296875, :x2 796.5841913223267, :y2 291.2124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 92.79998779296875, :x2 0, :y2 115.19998168945312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 137.0999994277954, :y1 245.19998168945312, :x2 796.5841913223267, :y2 267.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 374.4749994277954, :y1 249.19998168945312, :x2 796.5841913223267, :y2 264.9999694824219, :width 911.6666666666666, :height 1138.3333333333333} {:x1 137.1124963760376, :y1 268.8124694824219, :x2 650.0437707901001, :y2 291.2124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 713}, :content {:text "记录错误的过程很少出错。大多数 Ajax 通信借助 JavaScript 库的包装来处理。如果这个库本身出错，而你又要利用它记录错误，那么显然错误消息永远不会发给服务器"}, :properties {:color "yellow"}} {:id #uuid "63d390a6-961b-4ab5-9143-332578b600f7", :page 713, :position {:bounding {:x1 153.88750553131104, :y1 522.9500122070312, :x2 246.80123233795166, :y2 556.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 153.88750553131104, :y1 522.9500122070312, :x2 246.80123233795166, :y2 556.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 713}, :content {:text "调试技术"}, :properties {:color "green"}} {:id #uuid "63d390b5-77c0-46a9-946b-3c540537ff52", :page 713, :position {:bounding {:x1 318.7750177383423, :y1 594.3125, :x2 682.4466180801392, :y2 616.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 318.7750177383423, :y1 594.3125, :x2 682.4466180801392, :y2 616.7124938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 639.3999872207642, :y1 597.9500122070312, :x2 682.4466180801392, :y2 612.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 713}, :content {:text "其中最为常用的调试技术是在相关代码中插入 alert()"}, :properties {:color "yellow"}} {:id #uuid "63d390b9-d11f-4791-b476-b0a979516aba", :page 713, :position {:bounding {:x1 160.70000553131104, :y1 678.7124938964844, :x2 340.70000553131104, :y2 707.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 678.7124938964844, :x2 340.70000553131104, :y2 707.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 713}, :content {:text "把消息记录到控制台"}, :properties {:color "green"}} {:id #uuid "63d39124-e4f6-4d51-9a47-edd707ab9d75", :page 713, :position {:bounding {:x1 85.09999942779541, :y1 743.3125, :x2 484.36446475982666, :y2 765.7125244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 85.09999942779541, :y1 743.3125, :x2 484.36446475982666, :y2 765.7125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 152.2999963760376, :y1 746.9500122070312, :x2 372.1500177383423, :y2 761.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 713}, :content {:text "支持通过 console 对象直接把 JavaScript 消息写入控制台"}, :properties {:color "yellow"}} {:id #uuid "63d3912c-5a6d-4e6a-8f7f-02c6c0c00554", :page 714, :position {:bounding {:x1 193.7999963760376, :y1 344.3124694824219, :x2 353.80001163482666, :y2 373.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 344.3124694824219, :x2 353.80001163482666, :y2 373.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 714}, :content {:text "理解控制台运行时"}, :properties {:color "green"}} {:id #uuid "63d39139-7e43-44f9-8c35-875f1ff62cfb", :page 714, :position {:bounding {:x1 0, :y1 364.8000183105469, :x2 827.1883172988892, :y2 431.3124694824219, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 364.8000183105469, :x2 0, :y2 387.1999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000247955322, :y1 385.3000183105469, :x2 606.1126337051392, :y2 407.7000427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 627.6875238418579, :y1 385.3000183105469, :x2 827.1883172988892, :y2 407.6999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 308.2750177383423, :y1 389.3000183105469, :x2 606.1126337051392, :y2 405.1000671386719, :width 911.6666666666666, :height 1138.3333333333333} {:x1 627.6875238418579, :y1 389.3000183105469, :x2 827.1883172988892, :y2 405.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 573.5000238418579, :y1 408.8999938964844, :x2 685.6680536270142, :y2 431.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 408.9125061035156, :x2 557.8484735488892, :y2 431.3124694824219, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 412.9125061035156, :x2 557.8484735488892, :y2 428.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 714}, :content {:text "浏览器控制台是个读取求值打印循环（REPL，read-eval-print-loop），与页面的 JavaScript 运行时并发。这个运行时就像浏览器对新出现在 DOM 中的<script>标签求值一样。"}, :properties {:color "yellow"}} {:id #uuid "63d3915a-4ed5-415f-80d9-fa1573903387", :page 714, :position {:bounding {:x1 0, :y1 508.8000183105469, :x2 828.2801141738892, :y2 667.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 508.8000183105469, :x2 0, :y2 531.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 524.8000183105469, :x2 0, :y2 547.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 608.5515985488892, :y1 597.9375305175781, :x2 818.1546869277954, :y2 620.3375244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 639.3999872207642, :y1 601.5500183105469, :x2 818.1546869277954, :y2 617.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 693.5000238418579, :y1 621.5000305175781, :x2 828.2801141738892, :y2 643.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 621.5125122070312, :x2 668.3543939590454, :y2 643.9125366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 693.5000238418579, :y1 625.5000305175781, :x2 828.2801141738892, :y2 641.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 625.5125122070312, :x2 668.3543939590454, :y2 641.3125305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 264.70000553131104, :y1 645.1000366210938, :x2 288.5999994277954, :y2 667.5000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 645.1125183105469, :x2 250.21935367584229, :y2 667.5125122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 264.70000553131104, :y1 649.1000366210938, :x2 280.70000553131104, :y2 664.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 649.1125183105469, :x2 250.21935367584229, :y2 664.9125366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 714}, :content {:text "使用$0 引用该节点的 JavaScript实例。它就跟普通的 JavaScript 实例一样，因此可以读取属性（如$0.scrollWidth），或者调用成员方法（如$0.remove()）。"}, :properties {:color "yellow"}} {:id #uuid "63d3915c-810a-4c29-8247-ff8d47479431", :page 714, :position {:bounding {:x1 193.7999963760376, :y1 682.3125305175781, :x2 396.5999994277954, :y2 711.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 682.3125305175781, :x2 396.5999994277954, :y2 711.1125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 233.7999963760376, :y1 687.1125183105469, :x2 332.3646173477173, :y2 707.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 714}, :content {:text "使用 JavaScript 调试器"}, :properties {:color "green"}} {:id #uuid "63d39179-5899-48c9-8bbf-23e44538d64b", :page 714, :position {:bounding {:x1 0, :y1 700.8000183105469, :x2 839.2445459365845, :y2 932.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 700.8000183105469, :x2 0, :y2 723.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000247955322, :y1 886.4000549316406, :x2 839.2445459365845, :y2 908.8000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 910.0125427246094, :x2 660.241997718811, :y2 932.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 714}, :content {:text "在运行时碰到这个关键字时，所有主流浏览器都会打开开发者工具面板，并在指定位置显示断点。然后，可以通过单独的浏览器控制台在断点所在的特定词法作用域中执行代码"}, :properties {:color "yellow"}} {:id #uuid "63d39182-9eb1-4120-a88e-171aa244950c", :page 715, :position {:bounding {:x1 160.70000553131104, :y1 125.3125, :x2 320.70000553131104, :y2 154.11248779296875, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 125.3125, :x2 320.70000553131104, :y2 154.11248779296875, :width 911.6666666666666, :height 1138.3333333333333}), :page 715}, :content {:text "在页面中打印消息"}, :properties {:color "green"}} {:id #uuid "63d391d7-d8dd-4f55-ae59-174e59ff4402", :page 715, :position {:bounding {:x1 357.2321710586548, :y1 166.1999969482422, :x2 581.6355829238892, :y2 188.59999084472656, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 357.2321710586548, :y1 166.1999969482422, :x2 581.6355829238892, :y2 188.59999084472656, :width 911.6666666666666, :height 1138.3333333333333}), :page 715}, :content {:text "是把消息写到页面中指定的区域"}, :properties {:color "yellow"}} {:id #uuid "63d391eb-479c-4fb1-b3d5-a8c9caa1355b", :page 715, :position {:bounding {:x1 160.70000553131104, :y1 661.3125267028809, :x2 300.70000553131104, :y2 690.1125144958496, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 661.3125267028809, :x2 300.70000553131104, :y2 690.1125144958496, :width 911.6666666666666, :height 1138.3333333333333}), :page 715}, :content {:text "补充控制台方法"}, :properties {:color "green"}} {:id #uuid "63d39202-7fdd-4db2-8c9a-a4fbe875b9a3", :page 715, :position {:bounding {:x1 160.70000553131104, :y1 963.6125183105469, :x2 240.70000553131104, :y2 992.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 963.6125183105469, :x2 240.70000553131104, :y2 992.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 715}, :content {:text "抛出错误"}, :properties {:color "green"}} {:id #uuid "63d39272-65a4-40ca-9284-8becefa9cba5", :page 716, :position {:bounding {:x1 149.90000247955322, :y1 354.3000183105469, :x2 755.609902381897, :y2 376.6999816894531, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000247955322, :y1 354.3000183105469, :x2 755.609902381897, :y2 376.6999816894531, :width 911.6666666666666, :height 1138.3333333333333}), :page 716}, :content {:text "这里，任何一个参数不是数值都会抛出错误。错误消息中包含函数名和错误的具体原因"}, :properties {:color "yellow"}} {:id #uuid "63d39278-bc9c-4e6e-a176-394cfe023058", :page 716, :position {:bounding {:x1 149.9124994277954, :y1 425.1999969482422, :x2 602.4823846817017, :y2 447.61253356933594, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 506.39998722076416, :y1 425.1999969482422, :x2 602.4823846817017, :y2 447.6000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.9124994277954, :y1 425.21250915527344, :x2 487.2047052383423, :y2 447.61253356933594, :width 911.6666666666666, :height 1138.3333333333333} {:x1 287.9124994277954, :y1 429.21250915527344, :x2 487.2047052383423, :y2 445.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 716}, :content {:text "在大型应用程序中，自定义错误通常使用 assert()函数抛出错误"}, :properties {:color "yellow"}} {:id #uuid "63d39318-e6c8-4007-90d7-743ac6140b2d", :page 716, :position {:bounding {:x1 149.90000247955322, :y1 559.5000152587891, :x2 671.5609979629517, :y2 581.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000247955322, :y1 559.5000152587891, :x2 239.68169498443604, :y2 581.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 258.9000177383423, :y1 559.5000152587891, :x2 671.5609979629517, :y2 581.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 186.7999963760376, :y1 563.1500244140625, :x2 239.68169498443604, :y2 578.1500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 258.9000177383423, :y1 563.5000152587891, :x2 424.8708429336548, :y2 579.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 716}, :content {:text "这个 assert()函数可用于代替多个 if 语句，同时也是记录错误的好地方"}, :properties {:color "yellow"}} {:id #uuid "63d3933a-1de5-413b-97bd-1f9626566224", :page 716, :position {:bounding {:x1 186.9874963760376, :y1 755.5500183105469, :x2 382.74532413482666, :y2 789.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 186.9874963760376, :y1 755.5500183105469, :x2 382.74532413482666, :y2 789.1500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 233.58750247955322, :y1 761.1500244140625, :x2 261.7819757461548, :y2 784.4500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 716}, :content {:text "旧版 IE 的常见错误"}, :properties {:color "green"}} {:id #uuid "63d3937b-15a2-444f-931e-f83ca6b6b60f", :page 716, :position {:bounding {:x1 193.7999963760376, :y1 887.6125183105469, :x2 273.80001163482666, :y2 916.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 887.6125183105469, :x2 273.80001163482666, :y2 916.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 716}, :content {:text "无效字符"}, :properties {:color "green"}} {:id #uuid "63d3938e-ac51-4002-be5a-6668d6df0fe5", :page 717, :position {:bounding {:x1 160.70000553131104, :y1 187.81246948242188, :x2 260.70000553131104, :y2 216.61251831054688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 187.81246948242188, :x2 260.70000553131104, :y2 216.61251831054688, :width 911.6666666666666, :height 1138.3333333333333}), :page 717}, :content {:text "未找到成员"}, :properties {:color "green"}} {:id #uuid "63d393cd-c745-4ae3-b54d-8ea5074ea751", :page 717, :position {:bounding {:x1 0, :y1 108.80000305175781, :x2 795.6631708145142, :y2 345.72499084472656, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 108.80000305175781, :x2 0, :y2 131.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.78749942779541, :y1 299.71250915527344, :x2 795.6631708145142, :y2 322.11253356933594, :width 911.6666666666666, :height 1138.3333333333333} {:x1 612.1750116348267, :y1 302.66249084472656, :x2 795.6631708145142, :y2 318.46250915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.0749979019165, :y1 323.3249969482422, :x2 117.03720951080322, :y2 345.72499084472656, :width 911.6666666666666, :height 1138.3333333333333}), :page 717}, :content {:text "这个错误通常会在给一个已被销毁的对象赋值时发生。这个对象必须是 COM 对象才会出现这个消息。"}, :properties {:color "yellow"}} {:id #uuid "63d3943f-0d0e-4307-a8c3-86d60a0135ae", :page 717, :position {:bounding {:x1 160.70000553131104, :y1 633.9125213623047, :x2 300.70000553131104, :y2 662.7125091552734, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 633.9125213623047, :x2 300.70000553131104, :y2 662.7125091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 717}, :content {:text "未知运行时错误"}, :properties {:color "green"}} {:id #uuid "63d39470-825d-4214-8b39-3eab0bde4daa", :page 717, :position {:bounding {:x1 160.70000553131104, :y1 835.4125213623047, :x2 240.70000553131104, :y2 864.2125091552734, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 835.4125213623047, :x2 240.70000553131104, :y2 864.2125091552734, :width 911.6666666666666, :height 1138.3333333333333}), :page 717}, :content {:text "语法错误"}, :properties {:color "green"}} {:id #uuid "63d39479-e533-4796-9886-629bb921e34c", :page 718, :position {:bounding {:x1 174.9378900527954, :y1 211.51251220703125, :x2 373.80001163482666, :y2 241.64999389648438, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 211.51251220703125, :x2 373.80001163482666, :y2 240.3125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 174.9378900527954, :y1 212.85000610351562, :x2 174.9378900527954, :y2 241.64999389648438, :width 911.6666666666666, :height 1138.3333333333333}), :page 718}, :content {:text "系统找不到指定资源"}, :properties {:color "green"}} {:id #uuid "63d3948a-600e-487b-b8cd-e4cee0dd6233", :page 719, :position {:bounding {:x1 153.88750553131104, :y1 528.75, :x2 435.88961124420166, :y2 563.8999938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 153.88750553131104, :y1 528.75, :x2 338.1777276992798, :y2 562.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 360.9749994277954, :y1 530.2999877929688, :x2 435.88961124420166, :y2 563.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 247.20000553131104, :y1 534.3500061035156, :x2 338.1777276992798, :y2 557.6499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 360.9749994277954, :y1 535.8999938964844, :x2 361.2267999649048, :y2 559.2000122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 719}, :content {:text "浏览器对 XML DOM 的支持"}, :properties {:color "green"}} {:id #uuid "63d3989d-3a12-453b-8f8d-2a1dc3addf06", :page 719, :position {:bounding {:x1 160.70000553131104, :y1 660.5499877929688, :x2 298.5327081680298, :y2 689.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 660.5499877929688, :x2 298.5327081680298, :y2 689.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 719}, :content {:text "DOM Level 2 Core"}, :properties {:color "green"}} {:id #uuid "63d398be-48da-40ec-b5e7-50867bea3ed7", :page 719, :position {:bounding {:x1 118.20000553131104, :y1 748.5125122070312, :x2 754.2133417129517, :y2 767.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 118.20000553131104, :y1 748.5125122070312, :x2 602.8240442276001, :y2 767.7124938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 638.1750116348267, :y1 748.5125122070312, :x2 754.2133417129517, :y2 767.7124938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 142.1749963760376, :y1 751.7124938964844, :x2 602.8240442276001, :y2 765.0125122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 638.1750116348267, :y1 751.7124938964844, :x2 686.5572748184204, :y2 765.0125122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 719}, :content {:text "let xmldom = document.implementation.createDocument(namespaceUri, root, doctype);"}, :properties {:color "yellow"}} {:id #uuid "63d3990c-9b92-4261-91ea-4fea9fc97d4c", :page 719, :position {:bounding {:x1 116.7999963760376, :y1 977.5, :x2 672.9515008926392, :y2 999.8999938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 977.5, :x2 672.9515008926392, :y2 999.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 263.20000553131104, :y1 980.4499816894531, :x2 346.12471866607666, :y2 996.25, :width 911.6666666666666, :height 1138.3333333333333}), :page 719}, :content {:text "这个例子创建了一个 XML DOM 文档，该文档没有默认的命名空间和文档类型。"}, :properties {:color "yellow"}} {:id #uuid "63d3994e-434f-428c-b191-b35f753787ae", :page 720, :position {:bounding {:x1 149.88750553131104, :y1 174.31248474121094, :x2 584.3728876113892, :y2 196.71250915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.88750553131104, :y1 174.31248474121094, :x2 584.3728876113892, :y2 196.71250915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 312.0875177383423, :y1 177.2624969482422, :x2 430.4558038711548, :y2 193.06248474121094, :width 911.6666666666666, :height 1138.3333333333333}), :page 720}, :content {:text "要检查浏览器是否支持 DOM Level 2 XML，可以使用如下代码"}, :properties {:color "yellow"}} {:id #uuid "63d3995c-8a1d-4855-baae-aa67589fdb3e", :page 720, :position {:bounding {:x1 193.7999963760376, :y1 288.2999954223633, :x2 342.9999933242798, :y2 316.2999954223633, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 288.2999954223633, :x2 342.9999933242798, :y2 316.2999954223633, :width 911.6666666666666, :height 1138.3333333333333} {:x1 297.32500553131104, :y1 293.10001373291016, :x2 301.17501163482666, :y2 312.2999954223633, :width 911.6666666666666, :height 1138.3333333333333}), :page 720}, :content {:text "DOMParser 类型"}, :properties {:color "green"}} {:id #uuid "63d39973-def0-4045-897b-11a3e2e31f16", :page 720, :position {:bounding {:x1 165.6400384902954, :y1 375.9000015258789, :x2 682.2000360488892, :y2 398.2999954223633, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 165.6400384902954, :y1 375.9000015258789, :x2 647.3694696426392, :y2 398.2999954223633, :width 911.6666666666666, :height 1138.3333333333333} {:x1 666.2000360488892, :y1 375.9000015258789, :x2 682.2000360488892, :y2 398.2999954223633, :width 911.6666666666666, :height 1138.3333333333333} {:x1 305.5875177383423, :y1 379.9000015258789, :x2 647.3694696426392, :y2 395.7000198364258, :width 911.6666666666666, :height 1138.3333333333333} {:x1 666.2000360488892, :y1 379.9000015258789, :x2 682.2000360488892, :y2 395.7000198364258, :width 911.6666666666666, :height 1138.3333333333333}), :page 720}, :content {:text "两个参数：要解析的 XML 字符串和内容类型（始终应该是\"text/html\"）"}, :properties {:color "yellow"}} {:id #uuid "63d3997b-d921-4c87-a688-5ca37cb30657", :page 720, :position {:bounding {:x1 0, :y1 375.8999938964844, :x2 828.5091180801392, :y2 421.8999938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 689.6136102676392, :y1 375.8999938964844, :x2 828.5091180801392, :y2 398.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 754.7000360488892, :y1 379.5500183105469, :x2 828.5091180801392, :y2 394.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 380.8000183105469, :x2 0, :y2 403.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 399.5, :x2 166.2720422744751, :y2 421.8999938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 720}, :content {:text "返回值是 Document的实例"}, :properties {:color "yellow"}} {:id #uuid "63d399c9-c2e5-4d9b-b333-7079c20013ed", :page 720, :position {:bounding {:x1 148.20000553131104, :y1 657.25, :x2 680.2920770645142, :y2 679.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 148.20000553131104, :y1 657.25, :x2 680.2920770645142, :y2 679.6499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 226.88750553131104, :y1 661.25, :x2 654.1748285293579, :y2 677.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 720}, :content {:text "DOMParser 只能解析格式良好的 XML，因此不能把 HTML 解析为 HTML 文档"}, :properties {:color "yellow"}} {:id #uuid "63d399d3-d8f0-4898-bad4-9396161776b4", :page 720, :position {:bounding {:x1 0, :y1 588.8000030517578, :x2 828.5921258926392, :y2 750.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 588.8000030517578, :x2 0, :y2 611.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 604.8000030517578, :x2 0, :y2 627.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 556.2405023574829, :y1 681.2125091552734, :x2 803.0420770645142, :y2 703.6125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 679.5000238418579, :y1 684.8500061035156, :x2 803.0420770645142, :y2 699.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 704.8999938964844, :x2 663.6441888809204, :y2 727.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 684.3999872207642, :y1 704.8999938964844, :x2 828.5921258926392, :y2 727.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 708.8999938964844, :x2 663.6441888809204, :y2 724.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 684.3999872207642, :y1 708.8999938964844, :x2 828.5921258926392, :y2 724.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 728.5125122070312, :x2 230.4016809463501, :y2 750.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 720}, :content {:text "发生解析错误时，parseFromString()方法仍会返回一个 Document 对象，只不过其 document 元素是<parsererror>，该元素的内容为解析错误的描述。"}, :properties {:color "yellow"}} {:id #uuid "63d399fc-fcbd-4899-86e1-1cab1d6e02dc", :page 720, :position {:bounding {:x1 198.30674076080322, :y1 875.4500427246094, :x2 655.3553705215454, :y2 898.2000427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 345.70000553131104, :y1 875.4500427246094, :x2 655.3553705215454, :y2 897.050048828125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 198.30674076080322, :y1 875.800048828125, :x2 327.85064029693604, :y2 898.2000427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 345.70000553131104, :y1 879.4500427246094, :x2 345.91228580474854, :y2 894.4500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 260.5875177383423, :y1 879.800048828125, :x2 327.85064029693604, :y2 895.6000366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 720}, :content {:text "最好使用 try/catch 来判断是否发生了解析错误，如果没有错误"}, :properties {:color "yellow"}} {:id #uuid "63d39a0c-747a-4dad-8fea-82585dcd88d0", :page 721, :position {:bounding {:x1 160.70000553131104, :y1 347.3000030517578, :x2 355.9000177383423, :y2 375.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 347.3000030517578, :x2 289.3369073867798, :y2 375.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 310.2249994277954, :y1 347.3000030517578, :x2 355.9000177383423, :y2 375.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 310.2249994277954, :y1 352.1000061035156, :x2 314.07500553131104, :y2 371.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 721}, :content {:text "XMLSerializer 类型"}, :properties {:color "green"}} {:id #uuid "63d39a84-81be-4f50-99da-cae9e53ed815", :page 721, :position {:bounding {:x1 0, :y1 188.8000030517578, :x2 794.3000726699829, :y2 433.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 188.8000030517578, :x2 0, :y2 211.20000457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 704.1546258926392, :y1 387.6000061035156, :x2 794.3000726699829, :y2 410, :width 911.6666666666666, :height 1138.3333333333333} {:x1 717.5750360488892, :y1 391.6000061035156, :x2 794.3000726699829, :y2 407.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 411.2124938964844, :x2 238.84119510650635, :y2 433.6125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 415.2124938964844, :x2 192.35991764068604, :y2 431.01251220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 721}, :content {:text "把 DOM 文档序列化为 XML 字符串"}, :properties {:color "yellow"}} {:id #uuid "63d39a9c-cf61-46bb-b855-a6c3864e796c", :page 721, :position {:bounding {:x1 153.88750553131104, :y1 687.75, :x2 391.3896417617798, :y2 721.3500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 153.88750553131104, :y1 687.75, :x2 391.3896417617798, :y2 721.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 247.20000553131104, :y1 693.3500061035156, :x2 316.81002140045166, :y2 716.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 721}, :content {:text "浏览器对 XPath 的支持"}, :properties {:color "green"}} {:id #uuid "63d39b0a-4576-4ac2-a1fd-29ffe0dc159c", :page 721, :position {:bounding {:x1 116.7999963760376, :y1 856.8500061035156, :x2 636.8359003067017, :y2 879.2500305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 856.8500061035156, :x2 241.54686832427979, :y2 879.25, :width 911.6666666666666, :height 1138.3333333333333} {:x1 256.2125177383423, :y1 856.8500061035156, :x2 636.8359003067017, :y2 879.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 256.2125177383423, :y1 860.8500061035156, :x2 569.8212518692017, :y2 876.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 721}, :content {:text "DOM Level 3 XPath 规范定义了接口，用于在 DOM 中求值 XPath 表达式。"}, :properties {:color "yellow"}} {:id #uuid "63d39b78-7a10-43ed-a363-bf670a1450d1", :page 721, :position {:bounding {:x1 85.09999942779541, :y1 957.2500305175781, :x2 596.6619501113892, :y2 979.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 85.09999942779541, :y1 957.2500305175781, :x2 192.76250553131104, :y2 978.8500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 211.0999994277954, :y1 957.2500305175781, :x2 596.6619501113892, :y2 979.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 211.0999994277954, :y1 961.2500305175781, :x2 433.32125186920166, :y2 977.050048828125, :width 911.6666666666666, :height 1138.3333333333333}), :page 721}, :content {:text "XPathEvaluator 用于在特定上下文中求值 XPath 表达式，包含三个方法"}, :properties {:color "yellow"}} {:id #uuid "63d39bda-73f1-47cb-9d25-24e9632cdf2e", :page 722, :position {:bounding {:x1 0, :y1 268.79998779296875, :x2 828.0835809707642, :y2 371.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 498.5999994277954, :y1 268.79998779296875, :x2 828.0835809707642, :y2 291.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 403.52974796295166, :y1 268.8125, :x2 478.9227228164673, :y2 291.2125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 408.4999933242798, :y1 272.45001220703125, :x2 478.9227228164673, :y2 287.45001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 498.5999994277954, :y1 272.79998779296875, :x2 828.0835809707642, :y2 288.60003662109375, :width 911.6666666666666, :height 1138.3333333333333} {:x1 540.0000238418579, :y1 292.04998779296875, :x2 827.2000360488892, :y2 314.449951171875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 292.41253662109375, :x2 525.7023553848267, :y2 314.8125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 540.0000238418579, :y1 296.04998779296875, :x2 827.2000360488892, :y2 311.04998779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 296.41253662109375, :x2 525.7023553848267, :y2 312.2125244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 316.10003662109375, :x2 294.39214420318604, :y2 338.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 320.10003662109375, :x2 294.39214420318604, :y2 335.9000244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 332.79998779296875, :x2 0, :y2 355.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 348.79998779296875, :x2 0, :y2 371.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 722}, :content {:text "evaluate()。这个方法接收五个参数：XPath 表达式、上下文节点、命名空间解析器、返回的结果类型和 XPathResult 对象（用于填充结果，通常是 null，因为结果也可能是函数值）"}, :properties {:color "yellow"}} {:id #uuid "63d39c2b-7f53-465e-b046-7c7bc8f3e766", :page 722, :position {:bounding {:x1 149.90000247955322, :y1 979.8500366210938, :x2 835.5841913223267, :y2 1002.6000366210938, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 606.7000360488892, :y1 979.8500366210938, :x2 835.5841913223267, :y2 1001.4500427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000247955322, :y1 980.2000427246094, :x2 594.2827997207642, :y2 1002.6000366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 264.70000553131104, :y1 983.8500366210938, :x2 594.2827997207642, :y2 998.8500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 606.7000360488892, :y1 983.8500366210938, :x2 609.7000360488892, :y2 998.8500366210938, :width 911.6666666666666, :height 1138.3333333333333}), :page 722}, :content {:text "这个例子使用了 XPathResult.ORDERED_NODE_ITERATOR_TYPE 结果类型，也是最常用的类型。"}, :properties {:color "yellow"}} {:id #uuid "63d39c6d-002e-4356-b783-5b4f9f12f2b5", :page 723, :position {:bounding {:x1 85.09999942779541, :y1 127.10000610351562, :x2 615.7768182754517, :y2 149.50003051757812, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 85.09999942779541, :y1 127.10000610351562, :x2 363.8062677383423, :y2 149.50003051757812, :width 911.6666666666666, :height 1138.3333333333333} {:x1 392.9999933242798, :y1 127.10000610351562, :x2 615.7768182754517, :y2 149.50003051757812, :width 911.6666666666666, :height 1138.3333333333333} {:x1 275.9999933242798, :y1 130.75003051757812, :x2 363.8062677383423, :y2 145.75003051757812, :width 911.6666666666666, :height 1138.3333333333333}), :page 723}, :content {:text "有序还是无序，都必须使用 iterateNext()方法获取结果中每个匹配的节点"}, :properties {:color "yellow"}} {:id #uuid "63d39c94-3b30-4e1f-8caa-cbc20980f046", :page 723, :position {:bounding {:x1 160.70000553131104, :y1 406.21251678466797, :x2 280.70000553131104, :y2 435.01253509521484, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 406.21251678466797, :x2 280.70000553131104, :y2 435.01253509521484, :width 911.6666666666666, :height 1138.3333333333333}), :page 723}, :content {:text "单个节点结果"}, :properties {:color "green"}} {:id #uuid "63d39cac-306f-49f4-8629-a034ab6fff34", :page 723, :position {:bounding {:x1 160.70000553131104, :y1 663.3125, :x2 280.70000553131104, :y2 692.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 663.3125, :x2 280.70000553131104, :y2 692.1125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 723}, :content {:text "简单类型结果"}, :properties {:color "green"}} {:id #uuid "63d39ce0-9af5-4996-b0a3-f12e97ae403a", :page 723, :position {:bounding {:x1 116.7999963760376, :y1 703.9500122070312, :x2 764.7001581192017, :y2 726.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 409.9000177383423, :y1 703.9500122070312, :x2 764.7001581192017, :y2 726.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.7999963760376, :y1 704.3000183105469, :x2 395.61251163482666, :y2 726.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 310.9000177383423, :y1 707.9500122070312, :x2 395.61251163482666, :y2 722.9500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 409.9000177383423, :y1 707.9500122070312, :x2 572.5625238418579, :y2 722.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 723}, :content {:text "使用布尔值、数值和字符串 XPathResult 类型，可以根据 XPath 获取简单、非节点数据类型"}, :properties {:color "yellow"}} {:id #uuid "63d39d51-81b0-477f-94a5-92c40693f8d6", :page 724, :position {:bounding {:x1 149.90000247955322, :y1 234.89999389648438, :x2 796.2454462051392, :y2 257.3000183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000247955322, :y1 234.89999389648438, :x2 796.2454462051392, :y2 257.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 276.4999933242798, :y1 238.55001831054688, :x2 406.17266178131104, :y2 253.55001831054688, :width 911.6666666666666, :height 1138.3333333333333}), :page 724}, :content {:text "这个例子输出了与\"employee/name\"匹配的第一个元素中第一个文本节点包含的文本字符串"}, :properties {:color "yellow"}} {:id #uuid "63d39d8c-17af-42a4-92f6-7c42898ed242", :page 724, :position {:bounding {:x1 193.7999963760376, :y1 272.01250648498535, :x2 313.80001163482666, :y2 300.8124942779541, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 272.01250648498535, :x2 313.80001163482666, :y2 300.8124942779541, :width 911.6666666666666, :height 1138.3333333333333}), :page 724}, :content {:text "默认类型结果"}, :properties {:color "green"}} {:id #uuid "63d39dae-f8d2-4257-b57f-b8ef4eded59a", :page 724, :position {:bounding {:x1 118.20000553131104, :y1 336.35001373291016, :x2 610.4502191543579, :y2 359.10001373291016, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 365.4999933242798, :y1 336.35001373291016, :x2 610.4502191543579, :y2 357.9500045776367, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 336.7000045776367, :x2 346.36885929107666, :y2 359.10001373291016, :width 911.6666666666666, :height 1138.3333333333333} {:x1 185.40000247955322, :y1 340.35001373291016, :x2 346.36885929107666, :y2 355.35001373291016, :width 911.6666666666666, :height 1138.3333333333333} {:x1 365.4999933242798, :y1 340.35001373291016, :x2 368.4999933242798, :y2 355.35001373291016, :width 911.6666666666666, :height 1138.3333333333333}), :page 724}, :content {:text "可以使用 XPathResult.ANY_TYPE 类型让求值自动返回默认类型结果"}, :properties {:color "yellow"}} {:id #uuid "63d39df4-7382-491a-b016-b9edf68e5d82", :page 724, :position {:bounding {:x1 0, :y1 732.8000183105469, :x2 830.9397821426392, :y2 865.3125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 732.8000183105469, :x2 0, :y2 755.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 365.4999933242798, :y1 818.9500122070312, :x2 830.9397821426392, :y2 841.3500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000247955322, :y1 819.2999877929688, :x2 346.3749933242798, :y2 841.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 185.50000858306885, :y1 822.9500122070312, :x2 346.3749933242798, :y2 837.9500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 365.4999933242798, :y1 822.9500122070312, :x2 830.9397821426392, :y2 837.9500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 842.9125366210938, :x2 198.26758670806885, :y2 865.3125, :width 911.6666666666666, :height 1138.3333333333333}), :page 724}, :content {:text "使用 XPathResult.ANY_TYPE 可以让使用 XPath 变得更自然，但在返回结果后则需要增加额外的判断和处理"}, :properties {:color "yellow"}} {:id #uuid "63d39dfe-cb8d-4fc9-a474-58395da04a58", :page 724, :position {:bounding {:x1 193.7999963760376, :y1 880.0125122070312, :x2 313.80001163482666, :y2 908.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 880.0125122070312, :x2 313.80001163482666, :y2 908.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 724}, :content {:text "命名空间支持"}, :properties {:color "green"}} {:id #uuid "63d39e2d-c6bb-4017-9c36-fe0c490e4484", :page 724, :position {:bounding {:x1 149.90000247955322, :y1 920.6500396728516, :x2 820.4502191543579, :y2 943.4000396728516, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 575.5000238418579, :y1 920.6500396728516, :x2 820.4502191543579, :y2 942.2500457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 149.90000247955322, :y1 921.0000457763672, :x2 557.1624994277954, :y2 943.4000396728516, :width 911.6666666666666, :height 1138.3333333333333} {:x1 296.30001163482666, :y1 923.9500427246094, :x2 557.1624994277954, :y2 939.7500457763672, :width 911.6666666666666, :height 1138.3333333333333} {:x1 575.5000238418579, :y1 924.6500396728516, :x2 578.5000238418579, :y2 939.6500396728516, :width 911.6666666666666, :height 1138.3333333333333}), :page 724}, :content {:text "对于使用命名空间的 XML 文档，必须告诉 XPathEvaluator 命名空间信息，才能进行正确求值"}, :properties {:color "yellow"}} {:id #uuid "63d3ab46-0eb0-4591-ba05-ca75119f80c9", :page 725, :position {:bounding {:x1 0, :y1 140.80001831054688, :x2 794.9961175918579, :y2 308.5125427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 140.80001831054688, :x2 0, :y2 163.20004272460938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 778.9800653457642, :y1 262.5000305175781, :x2 794.9961175918579, :y2 284.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 286.1125183105469, :x2 595.8989343643188, :y2 308.5125427246094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 290.1125183105469, :x2 192.1329584121704, :y2 305.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 725}, :content {:text "如果想使用 XPath 查询该文档，就需要指定使用的命名空间，否则求值会失"}, :properties {:color "yellow"}} {:id #uuid "63d3ab73-467d-45af-9e5c-6311b0a246e3", :page 725, :position {:bounding {:x1 116.78749942779541, :y1 309.3500003814697, :x2 762.4000482559204, :y2 332.112512588501, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 724.3999872207642, :y1 309.3500003814697, :x2 762.4000482559204, :y2 330.95000648498535, :width 911.6666666666666, :height 1138.3333333333333} {:x1 521.2000360488892, :y1 309.70000648498535, :x2 710.3456659317017, :y2 332.1000003814697, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.78749942779541, :y1 309.7125186920166, :x2 493.3572931289673, :y2 332.112512588501, :width 911.6666666666666, :height 1138.3333333333333} {:x1 359.0999994277954, :y1 313.3500003814697, :x2 493.3572931289673, :y2 328.3500003814697, :width 911.6666666666666, :height 1138.3333333333333} {:x1 724.3999872207642, :y1 313.3500003814697, :x2 724.6498041152954, :y2 328.3500003814697, :width 911.6666666666666, :height 1138.3333333333333} {:x1 521.2000360488892, :y1 313.70000648498535, :x2 710.3456659317017, :y2 329.4999942779541, :width 911.6666666666666, :height 1138.3333333333333}), :page 725}, :content {:text "第一种处理命名空间的方式是通过 createNSResolver()方法创建 XPathNSResolver 对象"}, :properties {:color "yellow"}} {:id #uuid "63d3abf3-352e-47d2-9bbb-cbc19efded91", :page 725, :position {:bounding {:x1 116.81250858306885, :y1 569.6000003814697, :x2 674.3085565567017, :y2 592.0000247955322, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.81250858306885, :y1 569.6000003814697, :x2 674.3085565567017, :y2 592.0000247955322, :width 911.6666666666666, :height 1138.3333333333333} {:x1 595.8125238418579, :y1 572.550012588501, :x2 626.1375360488892, :y2 588.3500003814697, :width 911.6666666666666, :height 1138.3333333333333}), :page 725}, :content {:text "第二种处理命名空间的方式是定义一个接收命名空间前缀并返回相应 URI 的函数"}, :properties {:color "yellow"}} {:id #uuid "63d3abff-ad06-4942-800c-0cdf6f33cbbb", :page 725, :position {:bounding {:x1 153.88750553131104, :y1 832.9500427246094, :x2 384.4870538711548, :y2 866.5500183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 153.88750553131104, :y1 832.9500427246094, :x2 384.4870538711548, :y2 866.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 247.20000553131104, :y1 838.5500183105469, :x2 309.87004947662354, :y2 861.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 725}, :content {:text "浏览器对 XSLT 的支持"}, :properties {:color "green"}} {:id #uuid "63d3ac12-8254-4550-b9ca-d033b3a3ed49", :page 725, :position {:bounding {:x1 163.97116947174072, :y1 904.3124847412109, :x2 542.6382074356079, :y2 926.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 163.97116947174072, :y1 904.3124847412109, :x2 542.6382074356079, :y2 926.7124938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 229.2999963760376, :y1 907.2624969482422, :x2 271.9625177383423, :y2 923.0624847412109, :width 911.6666666666666, :height 1138.3333333333333}), :page 725}, :content {:text "可以利用 XPath 将一种文档表示转换为另一种文档表示"}, :properties {:color "yellow"}} {:id #uuid "63d3ac63-b19c-400d-ba8a-a18c1e934223", :page 725, :position {:bounding {:x1 116.7999963760376, :y1 880.6999969482422, :x2 672.3999872207642, :y2 903.0999908447266, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 880.6999969482422, :x2 614.3108758926392, :y2 903.0999908447266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 656.3999872207642, :y1 880.6999969482422, :x2 672.3999872207642, :y2 903.0999908447266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 290.8749933242798, :y1 883.6499938964844, :x2 614.3108758926392, :y2 899.4499969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 725}, :content {:text "可扩展样式表语言转换（XSLT，Extensible Stylesheet Language Transformations）"}, :properties {:color "yellow"}} {:id #uuid "63d3ac6f-7034-474d-9347-33df8664063f", :page 725, :position {:bounding {:x1 160.70000553131104, :y1 987.2999877929688, :x2 355.9000177383423, :y2 1015.2999877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 987.2999877929688, :x2 299.6110773086548, :y2 1015.2999877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 310.2249994277954, :y1 987.2999877929688, :x2 355.9000177383423, :y2 1015.2999877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 310.2249994277954, :y1 992.1000061035156, :x2 314.07500553131104, :y2 1011.2999877929688, :width 911.6666666666666, :height 1138.3333333333333}), :page 725}, :content {:text "XSLTProcessor 类型"}, :properties {:color "green"}} {:id #uuid "63d3aca4-f0c0-428a-a682-e86b99db8a71", :page 726, :position {:bounding {:x1 0, :y1 127.0999755859375, :x2 827.2874994277954, :y2 259.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 303.4999933242798, :y1 127.0999755859375, :x2 827.2874994277954, :y2 149.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 418.4000177383423, :y1 130.04998779296875, :x2 827.2874994277954, :y2 145.8499755859375, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 150.7125244140625, :x2 134.07201480865479, :y2 173.11248779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 236.79998779296875, :x2 0, :y2 259.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 726}, :content {:text "开发者可以使用 XSLT 转换 XML 文档，其方式类似于在 IE 中使用 XSL 处理器"}, :properties {:color "yellow"}} {:id #uuid "63d3acb1-610e-4410-9fc2-c99774ddb5db", :page 726, :position {:bounding {:x1 268.49044132232666, :y1 198.0124969482422, :x2 665.8395013809204, :y2 220.41249084472656, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 268.49044132232666, :y1 198.0124969482422, :x2 665.8395013809204, :y2 220.41249084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 414.48751163482666, :y1 200.96250915527344, :x2 630.7730340957642, :y2 216.7625274658203, :width 911.6666666666666, :height 1138.3333333333333}), :page 726}, :content {:text "，第一步是加载两个 DOM 文档：XML 文档和 XSLT 文档"}, :properties {:color "yellow"}} {:id #uuid "63d3acbb-d84b-4074-9e83-7da19dd39f58", :page 726, :position {:bounding {:x1 0, :y1 198.0124969482422, :x2 817.1244134902954, :y2 307.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 729.7435541152954, :y1 198.0124969482422, :x2 817.1244134902954, :y2 220.41249084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 760.0999994277954, :y1 202.0124969482422, :x2 817.1244134902954, :y2 217.81251525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 221.2375030517578, :x2 203.4203119277954, :y2 242.83750915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 226.20000553131104, :y1 221.59999084472656, :x2 458.7883234024048, :y2 244.00001525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 473.9000177383423, :y1 221.59999084472656, :x2 614.9027338027954, :y2 244.00001525878906, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 225.2375030517578, :x2 203.4203119277954, :y2 240.2375030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 226.20000553131104, :y1 225.59999084472656, :x2 458.7883234024048, :y2 241.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 473.9000177383423, :y1 225.59999084472656, :x2 547.6730585098267, :y2 241.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 0, :y1 284.8000030517578, :x2 0, :y2 307.1999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 726}, :content {:text "使用 importStyleSheet()方法创建一个新的 XSLTProcessor，将 XSLT 指定给它"}, :properties {:color "yellow"}} {:id #uuid "63d3acdd-d7ce-4a51-9cc8-a7e0198197c2", :page 726, :position {:bounding {:x1 149.90000247955322, :y1 290.00001525878906, :x2 286.8801202774048, :y2 312.40000915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000247955322, :y1 290.00001525878906, :x2 286.8801202774048, :y2 312.40000915527344, :width 911.6666666666666, :height 1138.3333333333333}), :page 726}, :content {:text "最后一步是执行转换"}, :properties {:color "yellow"}} {:id #uuid "63d3ace5-94af-456a-9e24-6eabde6d8304", :page 726, :position {:bounding {:x1 439.0802240371704, :y1 290.00001525878906, :x2 802.5617303848267, :y2 312.40000915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 439.0802240371704, :y1 290.00001525878906, :x2 802.5617303848267, :y2 312.40000915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 513.8000116348267, :y1 292.9499969482422, :x2 802.5617303848267, :y2 308.75001525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 726}, :content {:text "返回完整的 DOM 文档，就调用 transformToDocument()"}, :properties {:color "yellow"}} {:id #uuid "63d3ad61-ca93-4e7a-936b-776ca4bc8e26", :page 726, :position {:bounding {:x1 149.32834720611572, :y1 313.6125030517578, :x2 504.7927484512329, :y2 336.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.32834720611572, :y1 313.6125030517578, :x2 504.7927484512329, :y2 336.0124969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 268.5999994277954, :y1 317.6125030517578, :x2 346.67366886138916, :y2 333.4125213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 726}, :content {:text "想得到文档片段，则可以调用 transformToFragment()"}, :properties {:color "yellow"}} {:id #uuid "63d3add4-55de-4ae9-89fe-024cdcd72681", :page 726, :position {:bounding {:x1 193.7999963760376, :y1 894.6125183105469, :x2 273.80001163482666, :y2 923.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 894.6125183105469, :x2 273.80001163482666, :y2 923.4125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 726}, :content {:text "使用参数"}, :properties {:color "green"}} {:id #uuid "63d3ade4-e8d1-441c-a1f5-05fe53d9f9c1", :page 726, :position {:bounding {:x1 0, :y1 780.7999877929688, :x2 829.9676752090454, :y2 981.6124877929688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 780.7999877929688, :x2 0, :y2 803.1999893188477, :width 911.6666666666666, :height 1138.3333333333333} {:x1 148.20000553131104, :y1 935.2499847412109, :x2 250.09688663482666, :y2 956.8499908447266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 265.20000553131104, :y1 935.2499847412109, :x2 458.80001163482666, :y2 957.6499786376953, :width 911.6666666666666, :height 1138.3333333333333} {:x1 480.4000177383423, :y1 935.5999908447266, :x2 829.9676752090454, :y2 957.9999847412109, :width 911.6666666666666, :height 1138.3333333333333} {:x1 265.20000553131104, :y1 939.2499847412109, :x2 458.80001163482666, :y2 955.0499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 480.4000177383423, :y1 939.5999908447266, :x2 829.9676752090454, :y2 955.3999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 959.2124938964844, :x2 417.1930170059204, :y2 981.6124877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 963.2124938964844, :x2 185.0979700088501, :y2 979.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 726}, :content {:text "XSLTProcessor 还允许使用 setParameter()方法设置 XSLT 参数。该方法接收三个参数：命名空间 URI、参数本地名称和要设置的值。"}, :properties {:color "yellow"}} {:id #uuid "63d3ae4c-ef0c-45b8-b178-77d92f763932", :page 726, :position {:bounding {:x1 118.20000553131104, :y1 982.4499969482422, :x2 819.6768426895142, :y2 1005.1999816894531, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 118.20000553131104, :y1 982.4499969482422, :x2 222.5999994277954, :y2 1004.0499877929688, :width 911.6666666666666, :height 1138.3333333333333} {:x1 244.20000553131104, :y1 982.7999877929688, :x2 528.7196283340454, :y2 1005.1999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 547.3999872207642, :y1 982.7999877929688, :x2 730.9906244277954, :y2 1005.1999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 755.5999994277954, :y1 982.7999877929688, :x2 819.6768426895142, :y2 1005.1999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 244.20000553131104, :y1 986.7999877929688, :x2 528.7196283340454, :y2 1002.6000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 547.3999872207642, :y1 986.7999877929688, :x2 730.9906244277954, :y2 1002.6000061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 726}, :content {:text "setParameter()方法必须在调用 transformToDocument()或 transformToFragment()之前调用"}, :properties {:color "yellow"}} {:id #uuid "63d3ae5e-f391-4d37-9616-5038bbe6ac7d", :page 727, :position {:bounding {:x1 0, :y1 76.80000305175781, :x2 795.8761224746704, :y2 242.81251525878906, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 76.80000305175781, :x2 0, :y2 99.19999694824219, :width 911.6666666666666, :height 1138.3333333333333} {:x1 321.70000553131104, :y1 196.4499969482422, :x2 427.2953119277954, :y2 218.84999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 447.70000553131104, :y1 196.8000030517578, :x2 604.2437372207642, :y2 219.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 620.5000238418579, :y1 196.8000030517578, :x2 795.8761224746704, :y2 219.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 321.70000553131104, :y1 200.4499969482422, :x2 427.2953119277954, :y2 215.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 447.70000553131104, :y1 200.8000030517578, :x2 604.2437372207642, :y2 216.59999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 620.5000238418579, :y1 200.8000030517578, :x2 795.8761224746704, :y2 216.59999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 220.41249084472656, :x2 261.4361505508423, :y2 242.81251525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 727}, :content {:text "getParameter()和 removeParameter()。它们分别用于取得参数的当前值和移除参数的值"}, :properties {:color "yellow"}} {:id #uuid "63d3ae75-256b-4b4a-9761-8388e52c5391", :page 727, :position {:bounding {:x1 160.70000553131104, :y1 439.71250915527344, :x2 260.70000553131104, :y2 468.51251220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 439.71250915527344, :x2 260.70000553131104, :y2 468.51251220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 727}, :content {:text "重置处理器"}, :properties {:color "green"}} {:id #uuid "63d3ae7e-74a6-44c9-b906-5e356cabcf30", :page 727, :position {:bounding {:x1 0, :y1 252.80001211166382, :x2 795.2755975723267, :y2 526.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 252.80001211166382, :x2 0, :y2 275.2000117301941, :width 911.6666666666666, :height 1138.3333333333333} {:x1 731.1315546035767, :y1 480.70001220703125, :x2 795.2755975723267, :y2 503.1000213623047, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 503.95001220703125, :x2 130.36719608306885, :y2 525.5500183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 148.70000553131104, :y1 504.3000183105469, :x2 380.5809259414673, :y2 526.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 507.95001220703125, :x2 130.36719608306885, :y2 522.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 727}, :content {:text "处理器的 reset()方法可以删除所有参数和样式表"}, :properties {:color "yellow"}} {:id #uuid "63d3ae89-2553-4a9c-bea3-2489aa7517af", :page 727, :position {:bounding {:x1 0, :y1 268.800012588501, :x2 795.1521234512329, :y2 549.2625122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 268.800012588501, :x2 0, :y2 291.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 463.3955011367798, :y1 504.3000183105469, :x2 648.8499994277954, :y2 526.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 679.5999994277954, :y1 504.3000183105469, :x2 795.1521234512329, :y2 526.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 517.0000238418579, :y1 507.95001220703125, :x2 648.8499994277954, :y2 522.9500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 679.5999994277954, :y1 508.3000183105469, :x2 795.1521234512329, :y2 524.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750247955322, :y1 526.8625183105469, :x2 158.43552494049072, :y2 549.2625122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750247955322, :y1 530.8625183105469, :x2 123.2730188369751, :y2 546.6625061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 727}, :content {:text "以使用 importStylesheet()方法加载不同的 XSLT 样表"}, :properties {:color "yellow"}} {:id #uuid "63d3ae9c-55ce-4ad2-a7f7-bb14cab99c1f", :page 728, :position {:bounding {:x1 186.9874963760376, :y1 694.0500183105469, :x2 233.3944787979126, :y2 727.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 186.9874963760376, :y1 694.0500183105469, :x2 233.3944787979126, :y2 727.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 728}, :content {:text "语法"}, :properties {:color "green"}} {:id #uuid "63d3c27a-e3c4-4ce3-87dd-1a6bb4f17789", :page 728, :position {:bounding {:x1 149.90000247955322, :y1 740.7500305175781, :x2 396.9960870742798, :y2 763.1500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.90000247955322, :y1 740.7500305175781, :x2 396.9960870742798, :y2 763.1500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 190.7999963760376, :y1 745.8000335693359, :x2 297.83309268951416, :y2 761.6000213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 728}, :content {:text "JSON 语法支持表示 3 种类型的值。"}, :properties {:color "yellow"}} {:id #uuid "63d3c353-68fd-43f9-bee7-3f9117ee02aa", :page 728, :position {:bounding {:x1 174.9378900527954, :y1 944.3125305175781, :x2 253.80001163482666, :y2 974.4500427246094, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 944.3125305175781, :x2 253.80001163482666, :y2 973.1125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 174.9378900527954, :y1 945.6500244140625, :x2 174.9378900527954, :y2 974.4500427246094, :width 911.6666666666666, :height 1138.3333333333333}), :page 728}, :content {:text "简单值"}, :properties {:color "green"}} {:id #uuid "63d3c3af-4b14-449d-b6f6-dfa6b02cae1e", :page 729, :position {:bounding {:x1 116.77500247955322, :y1 226.9124755859375, :x2 396.1200189590454, :y2 249.3125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.77500247955322, :y1 226.9124755859375, :x2 396.1200189590454, :y2 249.3125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 184.00000858306885, :y1 230.54998779296875, :x2 382.67070865631104, :y2 245.54998779296875, :width 911.6666666666666, :height 1138.3333333333333}), :page 729}, :content {:text "布尔值和 null 本身也是有效的 JSON 值"}, :properties {:color "yellow"}} {:id #uuid "63d3c3b9-c3b3-439c-935e-bb196a47be82", :page 729, :position {:bounding {:x1 160.70000553131104, :y1 285.51251220703125, :x2 200.70000553131104, :y2 314.3125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 285.51251220703125, :x2 200.70000553131104, :y2 314.3125, :width 911.6666666666666, :height 1138.3333333333333}), :page 729}, :content {:text "对象"}, :properties {:color "green"}} {:id #uuid "63d3c40c-1e0f-4a84-9147-df9eabb824ad", :page 729, :position {:bounding {:x1 0, :y1 204.8000030517578, :x2 796.6676874160767, :y2 470.3125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 204.8000030517578, :x2 0, :y2 227.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 523.3203363418579, :y1 423.25, :x2 796.6676874160767, :y2 445.6499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 556.1875238418579, :y1 428.3000183105469, :x2 796.6676874160767, :y2 444.1000061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750247955322, :y1 447.9125061035156, :x2 149.19727420806885, :y2 470.3125, :width 911.6666666666666, :height 1138.3333333333333}), :page 729}, :content {:text "SON 中的对象必须使用双引号把属性名包围起来"}, :properties {:color "yellow"}} {:id #uuid "63d3c486-22f6-4670-a9e7-b3dcfc77bc0e", :page 729, :position {:bounding {:x1 405.6910333633423, :y1 879.6125335693359, :x2 678.1933832168579, :y2 902.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 405.6910333633423, :y1 879.6125335693359, :x2 678.1933832168579, :y2 902.0124969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 729}, :content {:text "同一个对象中不允许出现两个相同的属"}, :properties {:color "yellow"}} {:id #uuid "63d3c49e-0f24-486c-9859-cbd0d4a949e5", :page 729, :position {:bounding {:x1 160.70000553131104, :y1 964.0125122070312, :x2 200.70000553131104, :y2 992.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 964.0125122070312, :x2 200.70000553131104, :y2 992.8125305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 729}, :content {:text "数组"}, :properties {:color "green"}} {:id #uuid "63d3c4eb-4911-42b7-a5dd-b46b28faaa92", :page 731, :position {:bounding {:x1 153.87500858306885, :y1 284.4499969482422, :x2 293.1562738418579, :y2 318.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 153.87500858306885, :y1 284.4499969482422, :x2 293.1562738418579, :y2 318.0500030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 731}, :content {:text "解析与序列化"}, :properties {:color "green"}} {:id #uuid "63d3c595-9910-4e9d-a604-a363f35cdb15", :page 731, :position {:bounding {:x1 160.70000553131104, :y1 593.8500366210938, :x2 258.4000177383423, :y2 622.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 593.8500366210938, :x2 258.4000177383423, :y2 622.6500244140625, :width 911.6666666666666, :height 1138.3333333333333} {:x1 214.07500553131104, :y1 598.6500244140625, :x2 218.07500553131104, :y2 618.6500244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 731}, :content {:text "JSON 对象"}, :properties {:color "green"}} {:id #uuid "63d3c5c9-d13e-4443-acdb-de61c9fad916", :page 731, :position {:bounding {:x1 0, :y1 604.7999877929688, :x2 795.5841302871704, :y2 1038.8500061035156, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 604.7999877929688, :x2 0, :y2 627.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 211.68750858306885, :y1 993.8999938964844, :x2 326.6265802383423, :y2 1016.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 359.80001163482666, :y1 993.8999938964844, :x2 795.5841302871704, :y2 1016.3000183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 211.68750858306885, :y1 997.8999938964844, :x2 326.6265802383423, :y2 1013.6999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 359.80001163482666, :y1 997.8999938964844, :x2 795.5841302871704, :y2 1013.6999816894531, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 1017.2500305175781, :x2 143.33281803131104, :y2 1038.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 157.0999994277954, :y1 1017.2500305175781, :x2 183.4682092666626, :y2 1038.8500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.09999942779541, :y1 1021.2500305175781, :x2 143.33281803131104, :y2 1036.2500305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 157.0999994277954, :y1 1021.2500305175781, :x2 157.50415897369385, :y2 1036.2500305175781, :width 911.6666666666666, :height 1138.3333333333333}), :page 731}, :content {:text " JSON.stringify()把一个 JavaScript 对象序列化为一个 JSON 字符串，保存在变量 jsonText 中"}, :properties {:color "yellow"}} {:id #uuid "63d3c63a-9512-4106-8062-37844177a76c", :page 731, :position {:bounding {:x1 299.20000553131104, :y1 1017.2500305175781, :x2 745.1680536270142, :y2 1040.0000305175781, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 299.20000553131104, :y1 1017.2500305175781, :x2 410.02657413482666, :y2 1038.8500366210938, :width 911.6666666666666, :height 1138.3333333333333} {:x1 443.9000177383423, :y1 1017.6000366210938, :x2 745.1680536270142, :y2 1040.0000305175781, :width 911.6666666666666, :height 1138.3333333333333} {:x1 443.9000177383423, :y1 1021.6000366210938, :x2 693.7813348770142, :y2 1037.4000549316406, :width 911.6666666666666, :height 1138.3333333333333}), :page 731}, :content {:text "JSON.stringify()会输出不包含空格或缩进的 JSON 字符串"}, :properties {:color "yellow"}} {:id #uuid "63d3c662-f98f-496b-a254-f8211d55e558", :page 732, :position {:bounding {:x1 149.88750553131104, :y1 241.66249084472656, :x2 668.8136835098267, :y2 265.09999084472656, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.88750553131104, :y1 241.66249084472656, :x2 433.73125553131104, :y2 264.06248474121094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 449.20000553131104, :y1 242.6999969482422, :x2 668.8136835098267, :y2 265.09999084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 449.20000553131104, :y1 246.6999969482422, :x2 651.2375116348267, :y2 262.49998474121094, :width 911.6666666666666, :height 1138.3333333333333} {:x1 192.2999963760376, :y1 246.71250915527344, :x2 433.73125553131104, :y2 262.5124969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 732}, :content {:text "JSON 字符串可以直接传给 JSON.parse()，然后得到相应的 JavaScript 值"}, :properties {:color "yellow"}} {:id #uuid "63d3c6c5-ba3a-4446-b753-702136698d29", :page 732, :position {:bounding {:x1 174.9378900527954, :y1 379.6125030517578, :x2 293.80001163482666, :y2 409.75001525878906, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 193.7999963760376, :y1 379.6125030517578, :x2 293.80001163482666, :y2 408.41249084472656, :width 911.6666666666666, :height 1138.3333333333333} {:x1 174.9378900527954, :y1 380.9500274658203, :x2 174.9378900527954, :y2 409.75001525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 732}, :content {:text "序列化选项"}, :properties {:color "green"}} {:id #uuid "63d3c6e0-a8c4-4f8e-b77a-10a6baaa27b7", :page 732, :position {:bounding {:x1 416.38008975982666, :y1 444.2124938964844, :x2 704.9203119277954, :y2 466.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 416.38008975982666, :y1 444.2124938964844, :x2 704.9203119277954, :y2 466.6125183105469, :width 911.6666666666666, :height 1138.3333333333333}), :page 732}, :content {:text "第一个参数是过滤器，可以是数组或函数"}, :properties {:color "yellow"}} {:id #uuid "63d3c704-e125-4ffa-bbe5-7cc598248af4", :page 732, :position {:bounding {:x1 0, :y1 428.8000183105469, :x2 833.1603631973267, :y2 490.3125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 428.8000183105469, :x2 0, :y2 451.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 720.9502801895142, :y1 444.2124938964844, :x2 833.1603631973267, :y2 466.6125183105469, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 467.9125061035156, :x2 338.4719171524048, :y2 490.3125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.18750858306885, :y1 471.9125061035156, :x2 244.66698551177979, :y2 487.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 732}, :content {:text "第二个参数是用于缩进结果 JSON 字符串的选项"}, :properties {:color "yellow"}} {:id #uuid "63d3c72f-c99c-4202-a271-136870762c18", :page 732, :position {:bounding {:x1 167.4749994277954, :y1 496.5625, :x2 230.6749963760376, :y2 518.9624938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.4749994277954, :y1 496.5625, :x2 230.6749963760376, :y2 518.9624938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 732}, :content {:text "过滤结果"}, :properties {:color "green"}} {:id #uuid "63d3c784-43a4-446e-8d26-a52c32437e0c", :page 732, :position {:bounding {:x1 0, :y1 476.7999954223633, :x2 830.5058832168579, :y2 564.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 476.7999954223633, :x2 0, :y2 499.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 540.5999994277954, :y1 518.6999969482422, :x2 830.5058832168579, :y2 541.0999908447266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 182.08878421783447, :y1 518.7124938964844, :x2 507.3265619277954, :y2 541.1125030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 396.4999933242798, :y1 522.3499908447266, :x2 507.3265619277954, :y2 537.3499908447266, :width 911.6666666666666, :height 1138.3333333333333} {:x1 540.5999994277954, :y1 522.6999969482422, :x2 830.5058832168579, :y2 538.5, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 542.3125, :x2 150.2523889541626, :y2 564.7124938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 732}, :content {:text "第二个参数是一个数组，那么 JSON.stringify()返回的结果只会包含该数组中列出的对象属性"}, :properties {:color "yellow"}} {:id #uuid "63d3c7ef-2bce-4be9-a8d2-da22030052fd", :page 732, :position {:bounding {:x1 0, :y1 716.7999877929688, :x2 827.6024408340454, :y2 859.5125122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 716.7999877929688, :x2 0, :y2 739.2000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 486.8810052871704, :y1 813.5, :x2 827.6024408340454, :y2 835.8999938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 736.3000116348267, :y1 817.1499938964844, :x2 827.6024408340454, :y2 832.1499938964844, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 837.1124877929688, :x2 572.7451410293579, :y2 859.5125122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 841.1124877929688, :x2 347.0999994277954, :y2 856.9125061035156, :width 911.6666666666666, :height 1138.3333333333333}), :page 732}, :content {:text "提供的函数接收两个参数：属性名（key）和属性值（value）。可以根据这个 key 决定要对相应属性执行什么操作"}, :properties {:color "yellow"}} {:id #uuid "63d3c806-21c0-4bbd-8001-2411bd95882f", :page 733, :position {:bounding {:x1 180.55535221099854, :y1 357.5, :x2 308.0660333633423, :y2 379.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 180.55535221099854, :y1 357.5, :x2 308.0660333633423, :y2 379.9000244140625, :width 911.6666666666666, :height 1138.3333333333333}), :page 733}, :content {:text "基于键进行了过滤"}, :properties {:color "yellow"}} {:id #uuid "63d3c812-cb92-4be2-9e9f-b9edb9837168", :page 733, :position {:bounding {:x1 134.38750553131104, :y1 596.25, :x2 213.48230838775635, :y2 618.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 134.38750553131104, :y1 596.25, :x2 213.48230838775635, :y2 618.6499938964844, :width 911.6666666666666, :height 1138.3333333333333}), :page 733}, :content {:text "字符串缩进"}, :properties {:color "green"}} {:id #uuid "63d3c821-5e58-485e-8cbe-20f4551ebbb0", :page 733, :position {:bounding {:x1 0, :y1 412.8000030517578, :x2 800.5083856582642, :y2 664.4125137329102, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 412.8000030517578, :x2 0, :y2 435.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 513.8804559707642, :y1 618.4000129699707, :x2 800.5083856582642, :y2 640.8000106811523, :width 911.6666666666666, :height 1138.3333333333333} {:x1 85.08750247955322, :y1 642.0125122070312, :x2 133.13990116119385, :y2 664.4125137329102, :width 911.6666666666666, :height 1138.3333333333333}), :page 733}, :content {:text "在这个参数是数值时，表示每一级缩进的空格数"}, :properties {:color "yellow"}} {:id #uuid "63d3c8b3-616d-4392-a5a6-68f69ae01bc7", :page 733, :position {:bounding {:x1 164.18804264068604, :y1 1016.3000183105469, :x2 623.2909784317017, :y2 1038.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 164.18804264068604, :y1 1016.3000183105469, :x2 350.7073907852173, :y2 1038.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 383.9000177383423, :y1 1016.3000183105469, :x2 623.2909784317017, :y2 1038.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 239.7999963760376, :y1 1019.9500122070312, :x2 350.7073907852173, :y2 1034.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 733}, :content {:text "除了缩进，JSON.stringify()方法还为方便阅读插入了换行符。"}, :properties {:color "yellow"}} {:id #uuid "63d3c8c0-bfd6-46df-8fab-507257d3a2ff", :page 734, :position {:bounding {:x1 149.88750553131104, :y1 150.7125244140625, :x2 823.1333856582642, :y2 173.11248779296875, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 149.88750553131104, :y1 150.7125244140625, :x2 823.1333856582642, :y2 173.11248779296875, :width 911.6666666666666, :height 1138.3333333333333} {:x1 411.0999994277954, :y1 154.7125244140625, :x2 489.28130435943604, :y2 170.51251220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 734}, :content {:text "如果缩进参数是一个字符串而非数值，那么 JSON 字符串中就会使用这个字符串而不是空格来缩进"}, :properties {:color "yellow"}} {:id #uuid "63d3c8ca-92a7-46e9-9122-56bb970c552a", :page 734, :position {:bounding {:x1 167.50000858306885, :y1 435.4499931335449, :x2 271.0999994277954, :y2 457.04999923706055, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 167.50000858306885, :y1 435.4499931335449, :x2 271.0999994277954, :y2 457.04999923706055, :width 911.6666666666666, :height 1138.3333333333333}), :page 734}, :content {:text "toJSON()方法"}, :properties {:color "green"}} {:id #uuid "63d3c967-713e-4081-affb-230ba04efa85", :page 734, :position {:bounding {:x1 290.0360345840454, :y1 504.0999870300293, :x2 733.3423700332642, :y2 526.5000114440918, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 290.0360345840454, :y1 504.0999870300293, :x2 733.3423700332642, :y2 526.5000114440918, :width 911.6666666666666, :height 1138.3333333333333} {:x1 368.48751163482666, :y1 508.0999870300293, :x2 653.5374994277954, :y2 523.9000358581543, :width 911.6666666666666, :height 1138.3333333333333}), :page 734}, :content {:text "能够自动将 JavaScript 的 Date 对象转换为 ISO 8601 日期字符串"}, :properties {:color "yellow"}} {:id #uuid "63d3c976-122f-4a7b-9495-887c0df71396", :page 734, :position {:bounding {:x1 470.10006046295166, :y1 456.8999938964844, :x2 609.4703607559204, :y2 479.3000030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 470.10006046295166, :y1 456.8999938964844, :x2 609.4703607559204, :y2 479.3000030517578, :width 911.6666666666666, :height 1138.3333333333333} {:x1 517.0999994277954, :y1 460.8999938964844, :x2 564.5669794082642, :y2 476.6999969482422, :width 911.6666666666666, :height 1138.3333333333333}), :page 734}, :content {:text "自定义 JSON 序列化"}, :properties {:color "yellow"}} {:id #uuid "63d3c9e2-3429-4b3e-8e63-4cd3cf9a7622", :page 734, :position {:bounding {:x1 0, :y1 828.8000335693359, :x2 829.1722040176392, :y2 910.8124847412109, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 0, :y1 828.8000335693359, :x2 0, :y2 851.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 407.2589044570923, :y1 864.8000335693359, :x2 829.1722040176392, :y2 887.1999969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 566.3999872207642, :y1 868.4499969482422, :x2 829.1722040176392, :y2 883.4499969482422, :width 911.6666666666666, :height 1138.3333333333333} {:x1 118.20000553131104, :y1 888.4125213623047, :x2 470.84307193756104, :y2 910.8124847412109, :width 911.6666666666666, :height 1138.3333333333333}), :page 734}, :content {:text "箭头函数不能用来定义 toJSON()方法。主要原因是箭头函数的词法作用域是全局作用域，在这种情况下不合适"}, :properties {:color "yellow"}} {:id #uuid "63d3c9f5-2095-4dff-b83c-2c3802b08fac", :page 735, :position {:bounding {:x1 160.70000553131104, :y1 187.8125, :x2 240.70000553131104, :y2 216.61251831054688, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 160.70000553131104, :y1 187.8125, :x2 240.70000553131104, :y2 216.61251831054688, :width 911.6666666666666, :height 1138.3333333333333}), :page 735}, :content {:text "解析选项"}, :properties {:color "green"}} {:id #uuid "63d3ca63-5ec4-441e-962c-ddc2c86fafac", :page 735, :position {:bounding {:x1 115.09999942779541, :y1 228.45000457763672, :x2 732.3726434707642, :y2 251.20001220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 115.09999942779541, :y1 228.45000457763672, :x2 207.6312494277954, :y2 250.05001068115234, :width 911.6666666666666, :height 1138.3333333333333} {:x1 223.0999994277954, :y1 228.80001068115234, :x2 732.3726434707642, :y2 251.20001220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 223.0999994277954, :y1 232.80001068115234, :x2 622.4875116348267, :y2 248.60001373291016, :width 911.6666666666666, :height 1138.3333333333333}), :page 735}, :content {:text "JSON.parse()方法也可以接收一个额外的参数，这个函数会针对每个键/值对都调用一次"}, :properties {:color "yellow"}} {:id #uuid "63d3ca9b-db14-4d3c-b8bf-be7f5c7df106", :page 735, :position {:bounding {:x1 308.4132318496704, :y1 276.1125030517578, :x2 747.0115594863892, :y2 298.51251220703125, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 308.4132318496704, :y1 276.1125030517578, :x2 747.0115594863892, :y2 298.51251220703125, :width 911.6666666666666, :height 1138.3333333333333} {:x1 557.8000116348267, :y1 279.75001525878906, :x2 739.2000360488892, :y2 294.75001525878906, :width 911.6666666666666, :height 1138.3333333333333}), :page 735}, :content {:text "还原函数也接收两个参数，属性名（key）和属性值（value），"}, :properties {:color "yellow"}} {:id #uuid "63d3caa1-32a6-4cb2-92d3-893be780f5c9", :page 735, :position {:bounding {:x1 85.09999942779541, :y1 299.71250915527344, :x2 165.18006229400635, :y2 322.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 85.09999942779541, :y1 299.71250915527344, :x2 165.18006229400635, :y2 322.1125030517578, :width 911.6666666666666, :height 1138.3333333333333}), :page 735}, :content {:text "需要返回值"}, :properties {:color "yellow"}} {:id #uuid "63d3caab-5bb0-46c9-ab46-160932c77fe3", :page 735, :position {:bounding {:x1 116.7999963760376, :y1 323.31251525878906, :x2 542.2223749160767, :y2 345.71250915527344, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 116.7999963760376, :y1 323.31251525878906, :x2 542.2223749160767, :y2 345.71250915527344, :width 911.6666666666666, :height 1138.3333333333333} {:x1 251.90001773834229, :y1 326.95001220703125, :x2 324.08281803131104, :y2 341.95001220703125, :width 911.6666666666666, :height 1138.3333333333333}), :page 735}, :content {:text "如果还原函数返回 undefined，则结果中就会删除相应的键"}, :properties {:color "yellow"}} {:id #uuid "63d3caf5-0a1a-4500-abf7-422009b74d5c", :page 735, :position {:bounding {:x1 116.7999963760376, :y1 604.9500122070312, :x2 635.9886713027954, :y2 627.7000122070312, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 440.9000177383423, :y1 604.9500122070312, :x2 635.9886713027954, :y2 627.3500061035156, :width 911.6666666666666, :height 1138.3333333333333} {:x1 116.7999963760376, :y1 605.3000183105469, :x2 424.8286066055298, :y2 627.7000122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 200.50000858306885, :y1 608.9500122070312, :x2 424.8286066055298, :y2 623.9500122070312, :width 911.6666666666666, :height 1138.3333333333333} {:x1 440.9000177383423, :y1 608.9500122070312, :x2 585.0999994277954, :y2 623.9500122070312, :width 911.6666666666666, :height 1138.3333333333333}), :page 735}, :content {:text "以上代码在 book 对象中增加了 releaseDate 属性，是一个 Date 对象。"}, :properties {:color "yellow"}} {:id #uuid "63d3cb84-cfde-43ca-852b-de50e1097fe7", :page 736, :position {:bounding {:x1 187.00000858306885, :y1 934.5500335693359, :x2 429.09981632232666, :y2 966.5500335693359, :width 911.6666666666666, :height 1138.3333333333333}, :rects ({:x1 187.00000858306885, :y1 934.5500335693359, :x2 429.09981632232666, :y2 966.5500335693359, :width 911.6666666666666, :height 1138.3333333333333} {:x1 375.9000177383423, :y1 939.3500213623047, :x2 380.4000177383423, :y2 961.8500213623047, :width 911.6666666666666, :height 1138.3333333333333}), :page 736}, :content {:text "XMLHttpRequest 对象"}, :properties {:color "green"}} {:id #uuid "63d3cc10-895d-4ed3-b8bd-8fbff697fabe", :page 736, :position {:bounding {:x1 314.3869262635708, :y1 495.375, :x2 844.0972534120083, :y2 518.5749969482422, :width 941, :height 1174.9597806215722}, :rects ({:x1 314.3869262635708, :y1 495.375, :x2 844.0972534120083, :y2 518.5749969482422, :width 941, :height 1174.9597806215722} {:x1 317.9875122010708, :y1 499.375, :x2 786.2055297791958, :y2 515.6875, :width 941, :height 1174.9597806215722}), :page 736}, :content {:text " Ajax（Asynchronous JavaScript+XML，即异步 JavaScript 加 XML）的技术"}, :properties {:color "yellow"}} {:id #uuid "63d3cc92-2cf5-4045-bfff-07251b548375", :page 736, :position {:bounding {:x1 299.29116210341454, :y1 617.2749938964844, :x2 682.7679077088833, :y2 640.4750061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 299.29116210341454, :y1 617.2749938964844, :x2 682.7679077088833, :y2 640.4750061035156, :width 941, :height 1174.9597806215722} {:x1 302.84999999403954, :y1 620.1875, :x2 343.5130554139614, :y2 636.5, :width 941, :height 1174.9597806215722}), :page 736}, :content {:text "XHR 为发送服务器请求和获取响应提供了合理的接口"}, :properties {:color "yellow"}} {:id #uuid "63d3cd8a-7316-424e-a26a-2a97fc7bfdc2", :page 736, :position {:bounding {:x1 170.11113891005516, :y1 690.4625244140625, :x2 810.361108392477, :y2 713.6625061035156, :width 941, :height 1174.9597806215722}, :rects ({:x1 170.11113891005516, :y1 690.4625244140625, :x2 763.4818664491177, :y2 713.6625061035156, :width 941, :height 1174.9597806215722} {:x1 775.5125366151333, :y1 690.4625244140625, :x2 810.361108392477, :y2 713.6625061035156, :width 941, :height 1174.9597806215722} {:x1 775.5125366151333, :y1 694.4625244140625, :x2 778.7749877870083, :y2 710.7750244140625, :width 941, :height 1174.9597806215722}), :page 736}, :content {:text "这个技术主要是可以实现在不刷新页面的情况下从服务器获取数据，格式并不一定是 XM"}, :properties {:color "yellow"}} {:id #uuid "63d3ce10-1714-4ca4-a49e-f075c240c05e", :page 736, :position {:bounding {:x1 0, :y1 668.8000335693359, :x2 852.7923217713833, :y2 1060.050048828125, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 668.8000335693359, :x2 0, :y2 691.2000350952148, :width 941, :height 1174.9597806215722} {:x1 437.99160155653954, :y1 1012.4875335693359, :x2 852.7923217713833, :y2 1035.6875457763672, :width 941, :height 1174.9597806215722} {:x1 555.625024408102, :y1 1016.4875335693359, :x2 852.7923217713833, :y2 1032.800033569336, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 1036.8500366210938, :x2 138.07898864150047, :y2 1060.050048828125, :width 941, :height 1174.9597806215722}), :page 736}, :content {:text "这个对象是通过 ActiveX 对象实现并包含在 MSXML 库中的"}, :properties {:color "yellow"}} {:id #uuid "63d3ce23-3357-4045-b994-0a04606c0cb8", :page 737, :position {:bounding {:x1 120.55000457167625, :y1 131.32501220703125, :x2 627.4789672791958, :y2 154.52499389648438, :width 941, :height 1174.9597806215722}, :rects ({:x1 120.55000457167625, :y1 131.32501220703125, :x2 627.4789672791958, :y2 154.52499389648438, :width 941, :height 1174.9597806215722} {:x1 283.8375183045864, :y1 135.32501220703125, :x2 598.2265258729458, :y2 151.63751220703125, :width 941, :height 1174.9597806215722}), :page 737}, :content {:text "所有现代浏览器都通过 XMLHttpRequest 构造函数原生支持 XHR 对象"}, :properties {:color "yellow"}} {:id #uuid "63d3ce2b-0a12-48bd-b466-f2aeacc2f35d", :page 737, :position {:bounding {:x1 165.86249694228172, :y1 199.47500610351562, :x2 248.81891784071922, :y2 228.27499389648438, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 199.47500610351562, :x2 248.81891784071922, :y2 228.27499389648438, :width 941, :height 1174.9597806215722} {:x1 207.15000304579735, :y1 204.27499389648438, :x2 211.28749999403954, :y2 224.91250610351562, :width 941, :height 1174.9597806215722}), :page 737}, :content {:text "使用 XHR"}, :properties {:color "green"}} {:id #uuid "63d3ce66-1e86-491d-a597-bcaf4a8df7c3", :page 737, :position {:bounding {:x1 0, :y1 60.80000305175781, :x2 827.2874999940395, :y2 289.32501220703125, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 60.80000305175781, :x2 0, :y2 83.19999694824219, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 241.76251220703125, :x2 827.2874999940395, :y2 264.9624938964844, :width 941, :height 1174.9597806215722} {:x1 153.16249999403954, :y1 245.76251220703125, :x2 827.2874999940395, :y2 262.07501220703125, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 266.125, :x2 413.8314300477505, :y2 289.32501220703125, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 270.125, :x2 162.1976257264614, :y2 286.4375, :width 941, :height 1174.9597806215722}), :page 737}, :content {:text "使用 XHR 对象首先要调用 open()方法，这个方法接收 3 个参数：请求类型（\"get\"、\"post\"等）、请求 URL，以及表示请求是否异步的布尔值。"}, :properties {:color "yellow"}} {:id #uuid "63d3cede-2995-40ed-8e18-49bd7ddd7a71", :page 737, :position {:bounding {:x1 0, :y1 124.80000305175781, :x2 817.0161987245083, :y2 392.3374938964844, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 124.80000305175781, :x2 0, :y2 147.20001220703125, :width 941, :height 1174.9597806215722} {:x1 609.2484985291958, :y1 344.7875061035156, :x2 817.0161987245083, :y2 367.9875183105469, :width 941, :height 1174.9597806215722} {:x1 643.1375366151333, :y1 348.7875061035156, :x2 817.0161987245083, :y2 365.1000061035156, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 369.13751220703125, :x2 296.3012634217739, :y2 392.3374938964844, :width 941, :height 1174.9597806215722}), :page 737}, :content {:text "调用 open()不会实际发送请求，只是为发送请求做好准备"}, :properties {:color "yellow"}} {:id #uuid "63d3cef3-5dbe-4d6e-9317-fba1283d540a", :page 737, :position {:bounding {:x1 136.58857116103172, :y1 484.2250003814697, :x2 522.9164672791958, :y2 507.425012588501, :width 941, :height 1174.9597806215722}, :rects ({:x1 136.58857116103172, :y1 484.2250003814697, :x2 522.9164672791958, :y2 507.425012588501, :width 941, :height 1174.9597806215722} {:x1 430.9999938905239, :y1 488.2250003814697, :x2 482.3216491639614, :y2 504.5375003814697, :width 941, :height 1174.9597806215722}), :page 737}, :content {:text "发送定义好的请求，必须像下面这样调用 send()方法"}, :properties {:color "yellow"}} {:id #uuid "63d3cf75-d857-4b96-8c4c-ee5f5221c595", :page 737, :position {:bounding {:x1 118.80000457167625, :y1 554.4500370025635, :x2 820.062524408102, :y2 578.0249881744385, :width 941, :height 1174.9597806215722}, :rects ({:x1 118.80000457167625, :y1 554.4500370025635, :x2 751.8903442323208, :y2 576.8500003814697, :width 941, :height 1174.9597806215722} {:x1 762.7124877870083, :y1 554.8250370025635, :x2 820.062524408102, :y2 578.0249881744385, :width 941, :height 1174.9597806215722} {:x1 174.53749999403954, :y1 558.8250370025635, :x2 751.8903442323208, :y2 575.1375370025635, :width 941, :height 1174.9597806215722} {:x1 762.7124877870083, :y1 558.8250370025635, :x2 795.6831909120083, :y2 575.1375370025635, :width 941, :height 1174.9597806215722}), :page 737}, :content {:text "send()方法接收一个参数，是作为请求体发送的数据。如果不需要发送请求体，则必须传 null，"}, :properties {:color "yellow"}} {:id #uuid "63d3cfc1-9333-445c-a576-ba0778ae8d49", :page 737, :position {:bounding {:x1 0, :y1 396.80000615119934, :x2 826.1382690370083, :y2 846.1875, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 396.80000615119934, :x2 0, :y2 419.2000057697296, :width 941, :height 1174.9597806215722} {:x1 734.141870111227, :y1 798.625, :x2 826.1382690370083, :y2 821.8250122070312, :width 941, :height 1174.9597806215722} {:x1 772.2375122010708, :y1 802.625, :x2 826.1382690370083, :y2 818.9375, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 822.9875183105469, :x2 582.8946166932583, :y2 846.1875, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 826.9875183105469, :x2 182.15522155165672, :y2 843.3000183105469, :width 941, :height 1174.9597806215722}), :page 737}, :content {:text "如果 HTTP状态码是 304，则表示资源未修改过，是从浏览器缓存中直接拿取的。"}, :properties {:color "yellow"}} {:id #uuid "63d3cfc9-27e9-438f-b54b-416527dc97e8", :page 737, :position {:bounding {:x1 0, :y1 380.80000495910645, :x2 818.9250122010708, :y2 821.8250122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 380.80000495910645, :x2 0, :y2 403.20000648498535, :width 941, :height 1174.9597806215722} {:x1 576.3002563416958, :y1 774.2625122070312, :x2 818.9250122010708, :y2 797.4625244140625, :width 941, :height 1174.9597806215722} {:x1 661.5874877870083, :y1 777.1750183105469, :x2 818.9250122010708, :y2 793.4875183105469, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 798.625, :x2 135.93201598525047, :y2 821.8250122070312, :width 941, :height 1174.9597806215722}), :page 737}, :content {:text "一般来说，HTTP 状态码为 2xx 表示成功"}, :properties {:color "yellow"}} {:id #uuid "63d3d042-9ee4-4587-b4c5-31bf38529202", :page 738, :position {:bounding {:x1 289.5390563905239, :y1 179.67501831054688, :x2 858.5078979432583, :y2 203.25003051757812, :width 941, :height 1174.9597806215722}, :rects ({:x1 516.8000122010708, :y1 179.67501831054688, :x2 858.5078979432583, :y2 202.87503051757812, :width 941, :height 1174.9597806215722} {:x1 289.5390563905239, :y1 180.05001831054688, :x2 504.4996276795864, :y2 203.25003051757812, :width 941, :height 1174.9597806215722} {:x1 300.16249999403954, :y1 182.96249389648438, :x2 504.4996276795864, :y2 199.27499389648438, :width 941, :height 1174.9597806215722} {:x1 516.8000122010708, :y1 183.67501831054688, :x2 699.312524408102, :y2 199.98751831054688, :width 941, :height 1174.9597806215722}), :page 738}, :content {:text "。XHR 对象有一个 readyState 属性，表示当前处在请求/响应过程的哪个阶段。"}, :properties {:color "yellow"}} {:id #uuid "63d3d059-4ef8-4a1f-b36f-56a96fc5f42e", :page 738, :position {:bounding {:x1 154.71250304579735, :y1 350.38750648498535, :x2 738.5960327088833, :y2 373.9750003814697, :width 941, :height 1174.9597806215722}, :rects ({:x1 284.3625122010708, :y1 350.38750648498535, :x2 670.636499017477, :y2 372.7875003814697, :width 941, :height 1174.9597806215722} {:x1 686.0874877870083, :y1 350.38750648498535, :x2 738.5960327088833, :y2 372.7875003814697, :width 941, :height 1174.9597806215722} {:x1 154.71250304579735, :y1 350.7750186920166, :x2 272.04961547255516, :y2 373.9750003814697, :width 941, :height 1174.9597806215722} {:x1 284.3625122010708, :y1 354.38750648498535, :x2 670.636499017477, :y2 369.8749942779541, :width 941, :height 1174.9597806215722} {:x1 686.0874877870083, :y1 354.38750648498535, :x2 689.187524408102, :y2 369.8749942779541, :width 941, :height 1174.9597806215722} {:x1 187.32500609755516, :y1 354.7750186920166, :x2 272.04961547255516, :y2 371.0875186920166, :width 941, :height 1174.9597806215722}), :page 738}, :content {:text "每次 readyState 从一个值变成另一个值，都会触发 readystatechange 事件。"}, :properties {:color "yellow"}} {:id #uuid "63d3d068-c7d9-4e24-99fe-39cfe5effb9e", :page 738, :position {:bounding {:x1 0, :y1 375.1249942779541, :x2 849.120629876852, :y2 422.6874942779541, :width 941, :height 1174.9597806215722}, :rects ({:x1 785.9933105409145, :y1 375.1249942779541, :x2 849.120629876852, :y2 398.32500648498535, :width 941, :height 1174.9597806215722} {:x1 0, :y1 396.800012588501, :x2 0, :y2 419.20000648498535, :width 941, :height 1174.9597806215722} {:x1 370.9625183045864, :y1 399.112512588501, :x2 679.3261352479458, :y2 421.51250648498535, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 399.487512588501, :x2 356.4920593202114, :y2 422.6874942779541, :width 941, :height 1174.9597806215722} {:x1 370.9625183045864, :y1 403.112512588501, :x2 608.8029418885708, :y2 418.6000003814697, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 403.487512588501, :x2 356.4920593202114, :y2 419.800012588501, :width 941, :height 1174.9597806215722}), :page 738}, :content {:text "保证跨浏览器兼容，onreadystatechange 事件处理程序应该在调用 open()之前赋值"}, :properties {:color "yellow"}} {:id #uuid "63d3d0d9-7053-4124-9126-28fad9d54fbd", :page 738, :position {:bounding {:x1 154.71250304579735, :y1 843.7250061035156, :x2 615.0996948182583, :y2 866.9250183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.71250304579735, :y1 843.7250061035156, :x2 553.973168939352, :y2 866.9250183105469, :width 941, :height 1174.9597806215722} {:x1 567.0750366151333, :y1 843.7250061035156, :x2 615.0996948182583, :y2 866.9250183105469, :width 941, :height 1174.9597806215722} {:x1 497.7750183045864, :y1 847.7250061035156, :x2 553.973168939352, :y2 864.0375061035156, :width 941, :height 1174.9597806215722}), :page 738}, :content {:text "在收到响应之前如果想取消异步请求，可以调用 abort()方法："}, :properties {:color "yellow"}} {:id #uuid "63d3d113-a251-46b2-aa7a-6c91df380fd9", :page 738, :position {:bounding {:x1 200.02500304579735, :y1 962.0874938964844, :x2 300.0570922791958, :y2 990.8875427246094, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 962.0874938964844, :x2 300.0570922791958, :y2 990.8875427246094, :width 941, :height 1174.9597806215722} {:x1 253.96250304579735, :y1 966.8875427246094, :x2 258.09999999403954, :y2 987.5249938964844, :width 941, :height 1174.9597806215722}), :page 738}, :content {:text "HTTP 头部"}, :properties {:color "green"}} {:id #uuid "63d3d179-7745-4e44-8e55-3973cd34d4f5", :page 738, :position {:bounding {:x1 154.68750914931297, :y1 1051.8250274658203, :x2 482.9079528748989, :y2 1075.0250244140625, :width 941, :height 1174.9597806215722}, :rects ({:x1 154.68750914931297, :y1 1051.8250274658203, :x2 482.9079528748989, :y2 1075.0250244140625, :width 941, :height 1174.9597806215722} {:x1 252.75000914931297, :y1 1054.7375259399414, :x2 293.28237304091454, :y2 1071.0500259399414, :width 941, :height 1174.9597806215722}), :page 738}, :content {:text "默认情况下，XHR 请求会发送以下头部字段。"}, :properties {:color "yellow"}} {:id #uuid "63d3d1c0-75f4-41b0-b3b2-a2be52f68cc7", :page 739, :position {:bounding {:x1 0, :y1 172.80000972747803, :x2 806.4066406190395, :y2 422.68751525878906, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 172.80000972747803, :x2 0, :y2 195.20001125335693, :width 941, :height 1174.9597806215722} {:x1 678.805444329977, :y1 375.12501525878906, :x2 806.4066406190395, :y2 398.32501220703125, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 399.4875183105469, :x2 408.28972777724266, :y2 422.68751525878906, :width 941, :height 1174.9597806215722} {:x1 426.8000122010708, :y1 399.4875183105469, :x2 474.9567504823208, :y2 422.68751525878906, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 403.4875183105469, :x2 408.28972777724266, :y2 419.8000183105469, :width 941, :height 1174.9597806215722}), :page 739}, :content {:text "如果需要发送额外的请求头部，可以使用 setRequestHeader()方法。"}, :properties {:color "yellow"}} {:id #uuid "63d3d1c9-a84a-41c6-8672-067fa247e0c0", :page 739, :position {:bounding {:x1 571.270288079977, :y1 399.4875183105469, :x2 796.0017944276333, :y2 422.68751525878906, :width 941, :height 1174.9597806215722}, :rects ({:x1 571.270288079977, :y1 399.4875183105469, :x2 796.0017944276333, :y2 422.68751525878906, :width 941, :height 1174.9597806215722}), :page 739}, :content {:text "两个参数：头部字段的名称和值"}, :properties {:color "yellow"}} {:id #uuid "63d3d1d3-617e-448f-b345-3332cbed63fb", :page 739, :position {:bounding {:x1 264.2174011170864, :y1 423.9500274658203, :x2 702.6647582948208, :y2 447.15000915527344, :width 941, :height 1174.9597806215722}, :rects ({:x1 264.2174011170864, :y1 423.9500274658203, :x2 702.6647582948208, :y2 447.15000915527344, :width 941, :height 1174.9597806215722} {:x1 316.53749999403954, :y1 427.9500274658203, :x2 702.6647582948208, :y2 444.2625274658203, :width 941, :height 1174.9597806215722}), :page 739}, :content {:text "必须在 open()之后、send()之前调用 setRequestHeader()"}, :properties {:color "yellow"}} {:id #uuid "63d3d239-7c0a-40f8-aa92-332850d638f9", :page 739, :position {:bounding {:x1 0, :y1 476.8000259399414, :x2 812.5784545838833, :y2 794.9875335693359, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 476.8000259399414, :x2 0, :y2 499.2000198364258, :width 941, :height 1174.9597806215722} {:x1 367.5500122010708, :y1 747.4250335693359, :x2 812.5784545838833, :y2 770.6250305175781, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 747.4375305175781, :x2 352.6443725526333, :y2 770.6375274658203, :width 941, :height 1174.9597806215722} {:x1 367.5500122010708, :y1 751.4250335693359, :x2 812.5784545838833, :y2 767.7375335693359, :width 941, :height 1174.9597806215722} {:x1 185.77500304579735, :y1 751.4375305175781, :x2 352.6443725526333, :y2 767.7500305175781, :width 941, :height 1174.9597806215722} {:x1 87.82499846816063, :y1 771.7875213623047, :x2 103.95516356825829, :y2 794.9875335693359, :width 941, :height 1174.9597806215722}), :page 739}, :content {:text "可以使用 getResponseHeader()方法从 XHR 对象获取响应头部，只要传入要获取头部的名称即可"}, :properties {:color "yellow"}} {:id #uuid "63d3d24b-e355-43a6-9251-14d0f521ef6c", :page 739, :position {:bounding {:x1 168.47580870985985, :y1 771.7875213623047, :x2 637.9219604432583, :y2 794.9875335693359, :width 941, :height 1174.9597806215722}, :rects ({:x1 168.47580870985985, :y1 771.7875213623047, :x2 579.8958373963833, :y2 794.9875335693359, :width 941, :height 1174.9597806215722} {:x1 605.6750122010708, :y1 771.7875213623047, :x2 637.9219604432583, :y2 794.9875335693359, :width 941, :height 1174.9597806215722} {:x1 383.6125122010708, :y1 775.7875213623047, :x2 579.8958373963833, :y2 792.1000213623047, :width 941, :height 1174.9597806215722}), :page 739}, :content {:text "取得所有响应头部，可以使用 getAllResponseHeaders()方法"}, :properties {:color "yellow"}} {:id #uuid "63d3d2d1-4646-4165-9f89-686a4f2e0c14", :page 740, :position {:bounding {:x1 200.02500304579735, :y1 130.875, :x2 288.5945983827114, :y2 159.67498779296875, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 130.875, :x2 288.5945983827114, :y2 159.67498779296875, :width 941, :height 1174.9597806215722} {:x1 242.47499999403954, :y1 135.67498779296875, :x2 246.61249694228172, :y2 156.3125, :width 941, :height 1174.9597806215722}), :page 740}, :content {:text "GET 请求"}, :properties {:color "green"}} {:id #uuid "63d3d2de-9f41-4674-8d47-e6ff6b6782d7", :page 740, :position {:bounding {:x1 0, :y1 171.67499923706055, :x2 858.5349975526333, :y2 275.200008392334, :width 941, :height 1174.9597806215722}, :rects ({:x1 682.2492309510708, :y1 171.67499923706055, :x2 858.5349975526333, :y2 194.87499618530273, :width 941, :height 1174.9597806215722} {:x1 721.2375122010708, :y1 175.67499923706055, :x2 858.5349975526333, :y2 191.98749923706055, :width 941, :height 1174.9597806215722} {:x1 121.98750457167625, :y1 196.13750839233398, :x2 314.4409042298794, :y2 219.33750534057617, :width 941, :height 1174.9597806215722} {:x1 0, :y1 252.79999923706055, :x2 0, :y2 275.200008392334, :width 941, :height 1174.9597806215722}), :page 740}, :content {:text "要在 GET 请求的 URL后面添加查询字符串参数。"}, :properties {:color "yellow"}} {:id #uuid "63d3d2ed-2f91-4a19-aa35-aed21b380160", :page 740, :position {:bounding {:x1 0, :y1 244.86249923706055, :x2 841.9989257752895, :y2 323.1999931335449, :width 941, :height 1174.9597806215722}, :rects ({:x1 585.3414550721645, :y1 244.86249923706055, :x2 841.9989257752895, :y2 268.06249618530273, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 268.85000228881836, :x2 598.4633422791958, :y2 291.24999618530273, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 272.85000228881836, :x2 550.500024408102, :y2 288.3375053405762, :width 941, :height 1174.9597806215722} {:x1 0, :y1 300.79999923706055, :x2 0, :y2 323.1999931335449, :width 941, :height 1174.9597806215722}), :page 740}, :content {:text "询字符串中的每个名和值都必须使用 encodeURIComponent()编码，所有名/值对必须以和号（&）分隔"}, :properties {:color "yellow"}} {:id #uuid "63d3d398-2c43-4c1e-b758-04a650ae1865", :page 740, :position {:bounding {:x1 200.02500304579735, :y1 746.2625122070312, :x2 302.33208617568016, :y2 775.0625305175781, :width 941, :height 1174.9597806215722}, :rects ({:x1 200.02500304579735, :y1 746.2625122070312, :x2 302.33208617568016, :y2 775.0625305175781, :width 941, :height 1174.9597806215722} {:x1 256.1750122010708, :y1 751.0625305175781, :x2 260.3124938905239, :y2 771.7000122070312, :width 941, :height 1174.9597806215722}), :page 740}, :content {:text "POST 请求"}, :properties {:color "green"}} {:id #uuid "63d3d3a4-f643-4ce1-bba7-30e2d97b73a6", :page 740, :position {:bounding {:x1 0, :y1 652.8000183105469, :x2 851.5954223573208, :y2 834.7375183105469, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 652.8000183105469, :x2 0, :y2 675.2000274658203, :width 941, :height 1174.9597806215722} {:x1 669.5280395448208, :y1 787.1625366210938, :x2 851.5954223573208, :y2 810.3625183105469, :width 941, :height 1174.9597806215722} {:x1 707.8374877870083, :y1 791.1625366210938, :x2 851.5954223573208, :y2 807.4750366210938, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 811.5375366210938, :x2 313.0496231019497, :y2 834.7375183105469, :width 941, :height 1174.9597806215722}), :page 740}, :content {:text "每个 POST 请求都应该在请求体中携带提交的数据，"}, :properties {:color "yellow"}} {:id #uuid "63d3d3b4-facc-4310-acf4-8475a284bddb", :page 740, :position {:bounding {:x1 0, :y1 764.8000335693359, :x2 844.692895501852, :y2 1010.925048828125, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 764.8000335693359, :x2 0, :y2 787.2000427246094, :width 941, :height 1174.9597806215722} {:x1 406.63799437880516, :y1 963.2750549316406, :x2 844.692895501852, :y2 986.4750366210938, :width 941, :height 1174.9597806215722} {:x1 476.41249999403954, :y1 967.2750549316406, :x2 844.692895501852, :y2 983.5875549316406, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 987.3500366210938, :x2 531.5655761659145, :y2 1009.7500305175781, :width 941, :height 1174.9597806215722} {:x1 561.3999877870083, :y1 987.7250366210938, :x2 784.3199706971645, :y2 1010.925048828125, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 991.3500366210938, :x2 531.5655761659145, :y2 1006.8375549316406, :width 941, :height 1174.9597806215722}), :page 740}, :content {:text "可以使用 XHR 模拟表单提交。为此，第一步需要把 ContentType 头部设置为\"application/x-www-formurlencoded\"，这是提交表单时使用的内容类"}, :properties {:color "yellow"}} {:id #uuid "63d3d448-72d0-43fc-b0f1-1639b4db49bf", :page 741, :position {:bounding {:x1 0, :y1 412.79999923706055, :x2 814.5271850526333, :y2 642.0625114440918, :width 941, :height 1174.9597806215722}, :rects ({:x1 0, :y1 412.79999923706055, :x2 0, :y2 435.1999931335449, :width 941, :height 1174.9597806215722} {:x1 340.4000183045864, :y1 594.5000114440918, :x2 814.5271850526333, :y2 616.9000358581543, :width 941, :height 1174.9597806215722} {:x1 120.55000457167625, :y1 594.8750114440918, :x2 330.03627929091454, :y2 618.075023651123, :width 941, :height 1174.9597806215722} {:x1 340.4000183045864, :y1 598.5000114440918, :x2 814.5271850526333, :y2 613.9874992370605, :width 941, :height 1174.9597806215722} {:x1 220.36249694228172, :y1 598.8750114440918, :x2 330.03627929091454, :y2 615.1875114440918, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 618.8624992370605, :x2 333.0079284608364, :y2 642.0625114440918, :width 941, :height 1174.9597806215722} {:x1 87.83750304579735, :y1 622.8624992370605, :x2 278.2738891541958, :y2 638.3499870300293, :width 941, :height 1174.9597806215722}), :page 741}, :content {:text "假如没有发送 Content-Type 头部，PHP 的全局$_POST 变量中就不会包含数据，而需要通过$HTTP_RAW_POST_DATA 来获取。"}, :properties {:color "yellow"}} {:id #uuid "63d3d44f-09f7-42a0-ad08-9d68ffefbf8f", :page 741, :position {:bounding {:x1 165.86249694228172, :y1 747.9125366210938, :x2 362.2998901307583, :y2 776.7125396728516, :width 941, :height 1174.9597806215722}, :rects ({:x1 165.86249694228172, :y1 747.9125366210938, :x2 362.2998901307583, :y2 776.7125396728516, :width 941, :height 1174.9597806215722}), :page 741}, :content {:text "XMLHttpRequest Level 2"}, :properties {:color "green"}} {:id #uuid "63d3d8f1-fffc-4ab6-a840-9d6b72baebe8", :page 741, :position {:bounding {:x1 138.71250304579735, :y1 890.8375244140625, :x2 250.29175719618797, :y2 913.2374877929688, :width 941, :height 1174.9597806215722}, :rects ({:x1 138.71250304579735, :y1 890.8375244140625, :x2 250.29175719618797, :y2 913.2374877929688, :width 941, :height 1174.9597806215722} {:x1 213.03749999403954, :y1 894.8375244140625, :x2 216.13750609755516, :y2 910.3250122070312, :width 941, :height 1174.9597806215722}), :page 741}, :content {:text "FormData 类型"}, :properties {:color "green"}} {:id #uuid "63d3d906-de9c-4f0d-b373-9ade2a11699f", :page 741, :position {:bounding {:x1 118.80000457167625, :y1 1031.9375305175781, :x2 403.4986205995083, :y2 1054.3375244140625, :width 941, :height 1174.9597806215722}, :rects ({:x1 118.80000457167625, :y1 1031.9375305175781, :x2 403.4986205995083, :y2 1054.3375244140625, :width 941, :height 1174.9597806215722}), :page 741}, :content {:text "append()方法接收两个参数：键和值，"}, :properties {:color "yellow"}} {:id #uuid "63d3d96b-01d6-4d9b-83ac-63591b91eaf2", :page 742, :position {:bounding {:x1 0, :y1 433.6500244140625, :x2 852.595727533102, :y2 515.2000122070312, :width 941, :height 1174.9597806215722}, :rects ({:x1 765.6619506776333, :y1 433.6500244140625, :x2 852.595727533102, :y2 456.85003662109375, :width 941, :height 1174.9597806215722} {:x1 766.687524408102, :y1 436.5625, :x2 852.595727533102, :y2 452.875, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 458.01251220703125, :x2 607.4784179627895, :y2 481.2125244140625, :width 941, :height 1174.9597806215722} {:x1 122.00000151991844, :y1 462.01251220703125, :x2 282.28725585341454, :y2 478.32501220703125, :width 941, :height 1174.9597806215722} {:x1 0, :y1 492.79998779296875, :x2 0, :y2 515.2000122070312, :width 941, :height 1174.9597806215722}), :page 742}, :content {:text "XHR 对象能够识别作为 FormData 实例传入的数据类型并自动配置相应的头部。"}, :properties {:color "yellow"}} {:id #uuid "63d3dbc2-889c-4383-b5b6-94de27435d9d", :page 742, :position {:bounding {:x1 154.14999694749713, :y1 435.88751220703125, :x2 180.57303161546588, :y2 455.0874938964844, :width 839, :height 1047.599634369287}, :rects ({:x1 154.14999694749713, :y1 435.88751220703125, :x2 180.57303161546588, :y2 455.0874938964844, :width 839, :height 1047.599634369287}), :page 742}, :content {:text "超时"}, :properties {:color "green"}} {:id #uuid "63d475d1-0cb9-4339-9363-d0f48bd17859", :page 742, :position {:bounding {:x1 0, :y1 481.21250915527344, :x2 766.1951782107353, :y2 595.1999969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 566.2006103396416, :y1 481.21250915527344, :x2 765.4112426638603, :y2 502.0124969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 598.0500366091728, :y1 484.4125213623047, :x2 765.4112426638603, :y2 499.0749969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 503.1999969482422, :x2 766.1951782107353, :y2 524.0000152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 506.40000915527344, :x2 766.1951782107353, :y2 521.0625152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 525.1000213623047, :x2 152.96237486600876, :y2 545.9000091552734, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.1999969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 572.8000030517578, :x2 0, :y2 595.1999969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 742}, :content {:text "在给 timeout 属性设置了一个时间且在该时间过后没有收到响应时，XHR 对象就会触发 timeout 事件，调用 ontimeout 事件处理程序。"}, :properties {:color "yellow"}} {:id #uuid "63d475db-9220-4321-a6a5-78098d0dbe7b", :page 742, :position {:bounding {:x1 0, :y1 481.21250915527344, :x2 766.1951782107353, :y2 595.1999969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 566.2006103396416, :y1 481.21250915527344, :x2 765.4112426638603, :y2 502.0124969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 598.0500366091728, :y1 484.4125213623047, :x2 765.4112426638603, :y2 499.0749969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 503.1999969482422, :x2 766.1951782107353, :y2 524.0000152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 506.40000915527344, :x2 766.1951782107353, :y2 521.0625152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 525.1000213623047, :x2 152.96237486600876, :y2 545.9000091552734, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 556.8000030517578, :x2 0, :y2 579.1999969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 572.8000030517578, :x2 0, :y2 595.1999969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 742}, :content {:text "在给 timeout 属性设置了一个时间且在该时间过后没有收到响应时，XHR 对象就会触发 timeout 事件，调用 ontimeout 事件处理程序。"}, :properties {:color "yellow"}} {:id #uuid "63d47617-76b6-4482-ace5-30aee6cd7609", :page 742, :position {:bounding {:x1 0, :y1 908.2625122070312, :x2 772.2150756716728, :y2 979.2000122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 411.44999998807907, :y1 908.2625122070312, :x2 772.2150756716728, :y2 929.0625305175781, :width 845.9999999999999, :height 1056.3400365630712} {:x1 452.1750060915947, :y1 911.4625244140625, :x2 772.2150756716728, :y2 926.1250305175781, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 930.2500305175781, :x2 568.7705566287041, :y2 951.050048828125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 933.4500122070312, :x2 521.5097534060478, :y2 948.112548828125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 956.800048828125, :x2 0, :y2 979.2000122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 742}, :content {:text "不过，如果在超时之后访问 status 属性则会发生错误。为做好防护，可以把检查 status 属性的代码封装在 try/catch 语句中"}, :properties {:color "yellow"}} {:id #uuid "63d4761e-c598-4ec7-b67f-fcd1acf8643a", :page 743, :position {:bounding {:x1 124.71250456571579, :y1 117.02500343322754, :x2 301.4414855837822, :y2 137.82499885559082, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 275.0500060915947, :y1 117.02500343322754, :x2 301.4414855837822, :y2 137.82499885559082, :width 845.9999999999999, :height 1056.3400365630712} {:x1 124.71250456571579, :y1 117.66250038146973, :x2 264.0224716067314, :y2 137.66250038146973, :width 845.9999999999999, :height 1056.3400365630712}), :page 743}, :content {:text "overrideMimeType()方法"}, :properties {:color "green"}} {:id #uuid "63d4765e-b210-4ef2-aeb1-58304b9877df", :page 743, :position {:bounding {:x1 228.5500060915947, :y1 137.57499885559082, :x2 633.2047607302666, :y2 158.37500953674316, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 228.5500060915947, :y1 137.57499885559082, :x2 372.9627563357353, :y2 158.37500953674316, :width 845.9999999999999, :height 1056.3400365630712} {:x1 383.9875060915947, :y1 137.57499885559082, :x2 633.2047607302666, :y2 158.37500953674316, :width 845.9999999999999, :height 1056.3400365630712} {:x1 233.56250303983688, :y1 140.43750190734863, :x2 372.9627563357353, :y2 154.36250495910645, :width 845.9999999999999, :height 1056.3400365630712} {:x1 383.9875060915947, :y1 140.77500343322754, :x2 603.6249877810478, :y2 155.43750953674316, :width 845.9999999999999, :height 1056.3400365630712}), :page 743}, :content {:text " overrideMimeType()方法用于重写 XHR 响应的 MIME 类型"}, :properties {:color "yellow"}} {:id #uuid "63d4767d-0658-4f59-9de7-f0004ce88982", :page 743, :position {:bounding {:x1 211.18750303983688, :y1 339.9625186920166, :x2 494.9127990603447, :y2 360.76250648498535, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 211.18750303983688, :y1 339.9625186920166, :x2 494.9127990603447, :y2 360.76250648498535, :width 845.9999999999999, :height 1056.3400365630712} {:x1 216.1125060915947, :y1 342.1874942779541, :x2 364.41249388456345, :y2 356.8500003814697, :width 845.9999999999999, :height 1056.3400365630712}), :page 743}, :content {:text " XHR 把响应当成 XML 而不是纯文本来处理"}, :properties {:color "yellow"}} {:id #uuid "63d4767f-65dc-4ac2-bcc9-8ec270c77933", :page 743, :position {:bounding {:x1 142.8000060915947, :y1 394.0000228881836, :x2 229.31274718046188, :y2 425.2000274658203, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 142.8000060915947, :y1 394.0000228881836, :x2 229.31274718046188, :y2 425.2000274658203, :width 845.9999999999999, :height 1056.3400365630712}), :page 743}, :content {:text "进度事件"}, :properties {:color "green"}} {:id #uuid "63d476a1-9f63-483a-a2a2-5db4a288c7ca", :page 743, :position {:bounding {:x1 340.7375060915947, :y1 458.37501525878906, :x2 456.10646361112595, :y2 479.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 340.7375060915947, :y1 458.37501525878906, :x2 456.10646361112595, :y2 479.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 743}, :content {:text "个进度相关的事件"}, :properties {:color "yellow"}} {:id #uuid "63d476a8-b534-4cd0-b3ec-1a46910a09e7", :page 743, :position {:bounding {:x1 149.1125060915947, :y1 686.7875366210938, :x2 233.91870421171188, :y2 712.3875122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 686.7875366210938, :x2 233.91870421171188, :y2 712.3875122070312, :width 845.9999999999999, :height 1056.3400365630712} {:x1 191.82499998807907, :y1 690.7875366210938, :x2 195.39999693632126, :y2 708.6000366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 743}, :content {:text "load 事件"}, :properties {:color "green"}} {:id #uuid "63d476c2-9dec-4dcc-8a70-39c154f9d908", :page 743, :position {:bounding {:x1 257.97499388456345, :y1 743.6750183105469, :x2 495.76542967557907, :y2 764.4750213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 257.97499388456345, :y1 743.6750183105469, :x2 495.76542967557907, :y2 764.4750213623047, :width 845.9999999999999, :height 1056.3400365630712} {:x1 257.97499388456345, :y1 746.8750152587891, :x2 294.16249388456345, :y2 760.8000183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 743}, :content {:text "load 事件在响应接收完成后立即触发"}, :properties {:color "yellow"}} {:id #uuid "63d476e0-a7f6-4b1f-8886-e92cb3b1910d", :page 743, :position {:bounding {:x1 0, :y1 460.80001068115234, :x2 734.2808105349541, :y2 808.7000122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 460.80001068115234, :x2 0, :y2 483.20001220703125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 107.77883452177048, :y1 765.9125213623047, :x2 734.2808105349541, :y2 786.7125091552734, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.28750151395798, :y1 768.7750091552734, :x2 734.2808105349541, :y2 782.7000122070312, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 787.9000091552734, :x2 305.25419920682907, :y2 808.7000122070312, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 791.1000213623047, :x2 203.607943713665, :y2 805.7625122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 743}, :content {:text "onload 事件处理程序会收到一个 event 对象，其 target 属性设置为 XHR 实例，在这个实例上可以访问所有 XHR 对象属性和方法"}, :properties {:color "yellow"}} {:id #uuid "63d47728-d8db-4606-8a73-c60496506ee5", :page 744, :position {:bounding {:x1 139.1000091433525, :y1 118.46249389648438, :x2 569.4864379763603, :y2 139.26254272460938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 118.46249389648438, :x2 569.4864379763603, :y2 139.26254272460938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 311.87501829862595, :y1 121.66250610351562, :x2 539.2375366091728, :y2 136.32504272460938, :width 845.9999999999999, :height 1056.3400365630712}), :page 744}, :content {:text "只要是从服务器收到响应，无论状态码是什么，都会触发 load 事件"}, :properties {:color "yellow"}} {:id #uuid "63d4772d-9242-41d3-93a8-9c94c85e76e0", :page 744, :position {:bounding {:x1 179.83749693632126, :y1 175.375, :x2 307.3187133669853, :y2 200.97500610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 175.375, :x2 307.3187133669853, :y2 200.97500610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 265.2375060915947, :y1 179.375, :x2 268.81251829862595, :y2 197.1875, :width 845.9999999999999, :height 1056.3400365630712}), :page 744}, :content {:text "progress 事件"}, :properties {:color "green"}} {:id #uuid "63d4775e-2a8f-4ee7-86ad-eda69a24a8af", :page 744, :position {:bounding {:x1 0, :y1 212.83749389648438, :x2 761.5378295779228, :y2 307.20001220703125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 489.89149779081345, :y1 212.83749389648438, :x2 761.5378295779228, :y2 233.63751220703125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 234.82501220703125, :x2 124.06602019071579, :y2 255.625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 284.8000183105469, :x2 0, :y2 307.20001220703125, :width 845.9999999999999, :height 1056.3400365630712}), :page 744}, :content {:text "在浏览器接收数据期间，这个事件会反复触发"}, :properties {:color "yellow"}} {:id #uuid "63d47770-3a7e-4c58-9085-d5a0f1462c85", :page 744, :position {:bounding {:x1 0, :y1 234.82501220703125, :x2 766.0950805544853, :y2 323.20001220703125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 138.44452208280563, :y1 234.82501220703125, :x2 766.0950805544853, :y2 255.625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 226.4125091433525, :y1 237.70001220703125, :x2 766.0950805544853, :y2 251.625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 555.5749999880791, :y1 256.7250061035156, :x2 569.9769164919853, :y2 277.5249938964844, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.66250151395798, :y1 256.7375183105469, :x2 540.3555175662041, :y2 277.5375061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.66250151395798, :y1 259.9375, :x2 540.3555175662041, :y2 274.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 300.8000183105469, :x2 0, :y2 323.20001220703125, :width 845.9999999999999, :height 1056.3400365630712}), :page 744}, :content {:text "每次触发时，onprogress 事件处理程序都会收到 event 对象，其 target 属性是 XHR 对象，且包含 3 个额外属性：lengthComputable、position 和 totalSize。"}, :properties {:color "yellow"}} {:id #uuid "63d4783c-3973-4634-b138-a51d331b3959", :page 744, :position {:bounding {:x1 173.50000303983688, :y1 729.4624938964844, :x2 303.18593138456345, :y2 760.6625061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.50000303983688, :y1 729.4624938964844, :x2 303.18593138456345, :y2 760.6625061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 744}, :content {:text "跨源资源共享"}, :properties {:color "green"}} {:id #uuid "63d47862-1e4d-48b7-8a34-762c5f02026d", :page 744, :position {:bounding {:x1 0, :y1 814.4000244140625, :x2 767.1370117068291, :y2 902.7000122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 814.4000244140625, :x2 0, :y2 833.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 862.2125244140625, :x2 767.1370117068291, :y2 879.8125305175781, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.69999998807907, :y1 885.1000061035156, :x2 241.80595701932907, :y2 902.7000122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 744}, :content {:text "CORS 背后的基本思路就是使用自定义的 HTTP 头部允许浏览器和服务器相互了解，以确实请求或响应应该成功还是失败。"}, :properties {:color "yellow"}} {:id #uuid "63d47870-af72-4c95-b6ba-1b11c3bf2a25", :page 744, :position {:bounding {:x1 0, :y1 862.4000091552734, :x2 767.1603881716728, :y2 968.3875122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 862.4000091552734, :x2 0, :y2 881.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 459.9875060915947, :y1 927.75, :x2 767.1603881716728, :y2 945.3500061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 950.7875061035156, :x2 440.1317016482353, :y2 968.3875122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 744}, :content {:text "Origin 头部包含发送请求的页面的源（协议、域名和端口），以便服务器确定是否为其提供响应。"}, :properties {:color "yellow"}} {:id #uuid "63d478c2-c5fd-45d8-a725-016db0fba58f", :page 745, :position {:bounding {:x1 123.02665251493454, :y1 235.5, :x2 447.9188110232353, :y2 253.10000610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 123.02665251493454, :y1 235.5, :x2 447.9188110232353, :y2 253.10000610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 745}, :content {:text "注意，无论请求还是响应都不会包含 cookie 信息。"}, :properties {:color "yellow"}} {:id #uuid "63d478de-42d0-40a2-9912-5e77d56bed8b", :page 745, :position {:bounding {:x1 167.03744810819626, :y1 279.3000183105469, :x2 743.9499999880791, :y2 296.9000244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 167.03744810819626, :y1 279.3000183105469, :x2 743.9499999880791, :y2 296.9000244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 745}, :content {:text "。要向不同域的源发送请求，可以使用标准 XHR 对象并给 open()方法传入一个绝对 URL，"}, :properties {:color "yellow"}} {:id #uuid "63d478f5-4d43-4830-9fe7-4e4eac1468e4", :page 745, :position {:bounding {:x1 149.1125060915947, :y1 699.4375457763672, :x2 223.36271971464157, :y2 721.8375396728516, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 699.4375457763672, :x2 223.36271971464157, :y2 721.8375396728516, :width 845.9999999999999, :height 1056.3400365630712}), :page 745}, :content {:text "预检请求"}, :properties {:color "green"}} {:id #uuid "63d47913-dc6e-40e1-b484-8eb0a9d88af8", :page 745, :position {:bounding {:x1 0, :y1 494.4000358581543, :x2 736.9993774294853, :y2 777.0375366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 494.4000358581543, :x2 0, :y2 513.6000366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 223.07499998807907, :y1 736.5500335693359, :x2 381.34437865018845, :y2 754.1500396728516, :width 845.9999999999999, :height 1056.3400365630712} {:x1 403.76249998807907, :y1 737.5375366210938, :x2 736.9993774294853, :y2 755.1375427246094, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 759.4375457763672, :x2 399.68661803007126, :y2 777.0375366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 745}, :content {:text "预检请求（preflighted request）的服务器验证机制，允许使用自定义头部、除 GET和 POST 之外的方法，以及不同请求体内容类型。"}, :properties {:color "yellow"}} {:id #uuid "63d4792f-984e-49b1-99ef-9d2e2b952603", :page 746, :position {:bounding {:x1 0, :y1 322.4499969482422, :x2 767.0219604372978, :y2 417.59999084472656, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 591.7737304568291, :y1 322.4499969482422, :x2 767.0219604372978, :y2 340.0500030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 344.4499969482422, :x2 373.4039184451103, :y2 362.0500030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 398.3999786376953, :x2 0, :y2 417.59999084472656, :width 845.9999999999999, :height 1056.3400365630712}), :page 746}, :content {:text "只有第一次发送这种类型的请求时才会多发送一次额外的 HTTP 请求"}, :properties {:color "yellow"}} {:id #uuid "63d479a1-6182-4531-976a-a81d0140687d", :page 746, :position {:bounding {:x1 162.33604735136032, :y1 378.8249969482422, :x2 254.0877258181572, :y2 402.4624786376953, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 378.8249969482422, :x2 254.0877258181572, :y2 401.22499084472656, :width 845.9999999999999, :height 1056.3400365630712} {:x1 162.33604735136032, :y1 380.06248474121094, :x2 162.33957213163376, :y2 402.4624786376953, :width 845.9999999999999, :height 1056.3400365630712}), :page 746}, :content {:text "凭据请求"}, :properties {:color "green"}} {:id #uuid "63d47aa8-9699-4ab9-9c12-8282da6c0cc8", :page 746, :position {:bounding {:x1 0, :y1 416.9125061035156, :x2 767.2186767458916, :y2 465.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 688.3630248904228, :y1 416.9125061035156, :x2 767.2186767458916, :y2 434.51251220703125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 437.6875, :x2 221.61809080839157, :y2 455.2875061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 234.94999998807907, :y1 437.6875, :x2 502.63969725370407, :y2 455.2875061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 446.3999938964844, :x2 0, :y2 465.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 746}, :content {:text "可以通过将 withCredentials 属性设置为 true 来表明请求会发送凭据"}, :properties {:color "yellow"}} {:id #uuid "63d47c43-0940-40f5-be91-8092253b9734", :page 746, :position {:bounding {:x1 173.52499693632126, :y1 589.3250122070312, :x2 325.0268432497978, :y2 615.7250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.52499693632126, :y1 589.3250122070312, :x2 325.0268432497978, :y2 615.7250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 746}, :content {:text "替代性跨源技术"}, :properties {:color "green"}} {:id #uuid "63d47c99-185f-41b1-9d5c-7d7f180c96f9", :page 746, :position {:bounding {:x1 179.83749693632126, :y1 709.2750244140625, :x2 254.0877258181572, :y2 731.6750183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 709.2750244140625, :x2 254.0877258181572, :y2 731.6750183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 746}, :content {:text "图片探测"}, :properties {:color "green"}} {:id #uuid "63d47cb4-e285-4db1-92f0-52f6fe63d01c", :page 746, :position {:bounding {:x1 139.1000091433525, :y1 811.0375061035156, :x2 525.3302490115166, :y2 828.6375122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 811.0375061035156, :x2 525.3302490115166, :y2 828.6375122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 746}, :content {:text "这种动态创建图片的技术经常用于图片探测（image pings）。"}, :properties {:color "yellow"}} {:id #uuid "63d47cbf-fae8-40e0-b850-acbc202c537c", :page 746, :position {:bounding {:x1 0, :y1 718.3999938964844, :x2 767.2853271365166, :y2 894.4249877929688, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 718.3999938964844, :x2 0, :y2 737.5999908447266, :width 845.9999999999999, :height 1056.3400365630712} {:x1 373.9843322634697, :y1 854.9249877929688, :x2 767.2853271365166, :y2 872.5249938964844, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 876.8249816894531, :x2 153.73431700468063, :y2 894.4249877929688, :width 845.9999999999999, :height 1056.3400365630712}), :page 746}, :content {:text "可以通过监听 onload 和 onerror 事件知道什么时候能接收到响应"}, :properties {:color "yellow"}} {:id #uuid "63d47ceb-e0c2-4217-816e-6b573b09f0cd", :page 747, :position {:bounding {:x1 108.37500303983688, :y1 185.8499755859375, :x2 531.9145538210869, :y2 203.44998168945312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 185.8499755859375, :x2 531.9145538210869, :y2 203.44998168945312, :width 845.9999999999999, :height 1056.3400365630712}), :page 747}, :content {:text "图片探测频繁用于跟踪用户在页面上的点击操作或动态显示广告。"}, :properties {:color "yellow"}} {:id #uuid "63d47cf3-4352-4e4c-9e4c-92d3e4e27a17", :page 747, :position {:bounding {:x1 149.1125060915947, :y1 263.78750014305115, :x2 204.51298826932907, :y2 286.1874940395355, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 263.78750014305115, :x2 204.51298826932907, :y2 286.1874940395355, :width 845.9999999999999, :height 1056.3400365630712}), :page 747}, :content {:text "JSONP"}, :properties {:color "green"}} {:id #uuid "63d47d26-0a8b-4ef4-a4d6-acdc20843923", :page 747, :position {:bounding {:x1 0, :y1 126.40000319480896, :x2 736.4183837771416, :y2 338.85000014305115, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 126.40000319480896, :x2 0, :y2 145.60000014305115, :width 845.9999999999999, :height 1056.3400365630712} {:x1 646.0500366091728, :y1 298.3625123500824, :x2 736.4183837771416, :y2 315.962518453598, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.94999998807907, :y1 321.2499940395355, :x2 370.31120604276657, :y2 338.85000014305115, :width 845.9999999999999, :height 1056.3400365630712}), :page 747}, :content {:text "JSONP 看起来跟 JSON 一样，只是会被包在一个函数调用里"}, :properties {:color "yellow"}} {:id #uuid "63d47d4b-3fcb-45f1-b101-41fb43e50797", :page 747, :position {:bounding {:x1 0, :y1 174.40000319480896, :x2 736.5165893435478, :y2 409.5624940395355, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 174.40000319480896, :x2 0, :y2 193.60000014305115, :width 845.9999999999999, :height 1056.3400365630712} {:x1 372.75783079862595, :y1 370.0500123500824, :x2 736.5165893435478, :y2 387.650018453598, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 391.962518453598, :x2 328.3368789553642, :y2 409.5624940395355, :width 845.9999999999999, :height 1056.3400365630712}), :page 747}, :content {:text "回调是在页面接收到响应之后应该调用的函数，通常回调函数的名称是通过请求来动态指定的。"}, :properties {:color "yellow"}} {:id #uuid "63d47d55-d295-4ba2-8b36-d454cc14f98f", :page 747, :position {:bounding {:x1 342.98610228300095, :y1 391.962518453598, :x2 634.2692138552666, :y2 409.5624940395355, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 342.98610228300095, :y1 391.962518453598, :x2 634.2692138552666, :y2 409.5624940395355, :width 845.9999999999999, :height 1056.3400365630712}), :page 747}, :content {:text "数据就是作为参数传给回调函数的 JSON 数据"}, :properties {:color "yellow"}} {:id #uuid "63d47d80-8919-40c8-894e-438c45bbedbb", :page 747, :position {:bounding {:x1 108.38749998807907, :y1 505.4999940395355, :x2 612.4441406130791, :y2 523.1000001430511, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.38749998807907, :y1 505.4999940395355, :x2 612.4441406130791, :y2 523.1000001430511, :width 845.9999999999999, :height 1056.3400365630712}), :page 747}, :content {:text "JSONP 调用是通过动态创建<script>元素并为 src 属性指定跨域 URL 实现的"}, :properties {:color "yellow"}} {:id #uuid "63d47d9e-9472-4cf7-ad06-2e58fd716a08", :page 747, :position {:bounding {:x1 142.7875091433525, :y1 891.2375411987305, :x2 226.42717283964157, :y2 917.6375350952148, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 142.7875091433525, :y1 891.2375411987305, :x2 226.42717283964157, :y2 917.6375350952148, :width 845.9999999999999, :height 1056.3400365630712}), :page 747}, :content {:text "Fetch API"}, :properties {:color "green"}} {:id #uuid "63d47ddb-8364-4a79-93e7-306c8d5ee73e", :page 748, :position {:bounding {:x1 0, :y1 119.0875244140625, :x2 774.6270629763603, :y2 257.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 636.1000244021416, :y1 119.0875244140625, :x2 774.6270629763603, :y2 136.6875, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.66250151395798, :y1 141.9625244140625, :x2 388.8000060915947, :y2 159.5625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 238.4000244140625, :x2 0, :y2 257.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 748}, :content {:text "Fetch 标准定义请求、响应，以及绑定二者的流程：获取（fetch）"}, :properties {:color "yellow"}} {:id #uuid "63d47dec-d6f0-4cbc-9768-45ca7b572b98", :page 748, :position {:bounding {:x1 179.83749693632126, :y1 220.22500610351562, :x2 254.0877258181572, :y2 242.62500762939453, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 220.22500610351562, :x2 254.0877258181572, :y2 242.62500762939453, :width 845.9999999999999, :height 1056.3400365630712}), :page 748}, :content {:text "基本用法"}, :properties {:color "green"}} {:id #uuid "63d47f1d-5370-4177-99dc-556167fedf46", :page 748, :position {:bounding {:x1 142.8790618777275, :y1 257.2000045776367, :x2 665.975619494915, :y2 275.9250030517578, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 142.8790618777275, :y1 257.2000045776367, :x2 184.42895811796188, :y2 274.8000030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 195.9750091433525, :y1 258.3250045776367, :x2 665.975619494915, :y2 275.9250030517578, :width 845.9999999999999, :height 1056.3400365630712}), :page 748}, :content {:text "etch()方法是暴露在全局作用域中的，包括主页面执行线程、模块和工作线程。"}, :properties {:color "yellow"}} {:id #uuid "63d47f2c-93ce-4b93-9fa7-06afa3dd289c", :page 748, :position {:bounding {:x1 139.1125060915947, :y1 434.6500244140625, :x2 533.6745483279228, :y2 452.25, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1125060915947, :y1 434.6500244140625, :x2 533.6745483279228, :y2 452.25, :width 845.9999999999999, :height 1056.3400365630712}), :page 748}, :content {:text "请求完成、资源可用时，期约会解决为一个 Response 对象。"}, :properties {:color "yellow"}} {:id #uuid "63d47f3f-419e-4773-98cf-c7fb9b073191", :page 748, :position {:bounding {:x1 155.43750303983688, :y1 306.82501220703125, :x2 209.15976256132126, :y2 324.4250144958496, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 306.82501220703125, :x2 209.15976256132126, :y2 324.4250144958496, :width 845.9999999999999, :height 1056.3400365630712}), :page 748}, :content {:text "分派请求"}, :properties {:color "green"}} {:id #uuid "63d47f6f-cf46-4cfa-a23d-f69611640482", :page 748, :position {:bounding {:x1 139.1000091433525, :y1 625.9000244140625, :x2 635.0393554568291, :y2 643.5000305175781, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 625.9000244140625, :x2 593.1309081912041, :y2 643.5000305175781, :width 845.9999999999999, :height 1056.3400365630712} {:x1 605.6750366091728, :y1 625.9000244140625, :x2 635.0393554568291, :y2 643.5000305175781, :width 845.9999999999999, :height 1056.3400365630712}), :page 748}, :content {:text "读取响应内容的最简单方式是取得纯文本格式的内容，这要用到 text()方法"}, :properties {:color "yellow"}} {:id #uuid "63d47f81-b35d-4a3b-84f4-98584e5a460d", :page 748, :position {:bounding {:x1 155.43750303983688, :y1 911.6625213623047, :x2 289.98488157987595, :y2 929.2625122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 911.6625213623047, :x2 289.98488157987595, :y2 929.2625122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 748}, :content {:text "处理状态码和请求失败"}, :properties {:color "green"}} {:id #uuid "63d47fb4-504a-4811-b1b0-cb9b49e14c1f", :page 749, :position {:bounding {:x1 0, :y1 494.40001678466797, :x2 736.2958251833916, :y2 688.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 494.40001678466797, :x2 0, :y2 513.6000137329102, :width 845.9999999999999, :height 1056.3400365630712} {:x1 473.10548704862595, :y1 648.7250213623047, :x2 736.2958251833916, :y2 666.3250122070312, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 670.6250305175781, :x2 618.8679000735283, :y2 688.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 749}, :content {:text "个行为是合理的：系统级网络协议已经成功完成消息的一次往返传输。至于真正的“成功”请求，则需要在处理响应时再定义。"}, :properties {:color "yellow"}} {:id #uuid "63d47fcb-02b7-4236-986c-10673f6e3366", :page 749, :position {:bounding {:x1 108.37500303983688, :y1 692.6250305175781, :x2 561.2178832888603, :y2 710.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 692.6250305175781, :x2 561.2178832888603, :y2 710.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 749}, :content {:text "通常状态码为 200 时就会被认为成功了，其他情况可以被认为未成功。"}, :properties {:color "yellow"}} {:id #uuid "63d47fd8-463b-4fb5-916e-c381aaef8f10", :page 749, :position {:bounding {:x1 108.37500303983688, :y1 890.837516784668, :x2 655.2468749880791, :y2 908.4375152587891, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 890.837516784668, :x2 496.8571349978447, :y2 908.4375152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 508.4250060915947, :y1 890.837516784668, :x2 655.2468749880791, :y2 908.4375152587891, :width 845.9999999999999, :height 1056.3400365630712}), :page 749}, :content {:text "因为服务器没有响应而导致浏览器超时，这样真正的 fetch()失败会导致期约被拒绝"}, :properties {:color "yellow"}} {:id #uuid "63d48006-9398-4d07-a2e0-db22ddb1391e", :page 750, :position {:bounding {:x1 139.1000091433525, :y1 201.625, :x2 703.0915405154228, :y2 219.22500610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 201.625, :x2 703.0915405154228, :y2 219.22500610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 750}, :content {:text "违反 CORS、无网络连接、HTTPS 错配及其他浏览器/网络策略问题都会导致期约被拒绝"}, :properties {:color "yellow"}} {:id #uuid "63d4800f-f112-4027-b7c2-dd4ec9c00add", :page 750, :position {:bounding {:x1 155.43750303983688, :y1 468.00001525878906, :x2 222.67663878202438, :y2 485.59999084472656, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 468.00001525878906, :x2 222.67663878202438, :y2 485.59999084472656, :width 845.9999999999999, :height 1056.3400365630712}), :page 750}, :content {:text "自定义选项"}, :properties {:color "green"}} {:id #uuid "63d48156-8d7b-4653-952c-f0a268f023ba", :page 750, :position {:bounding {:x1 139.1000091433525, :y1 488.5499954223633, :x2 605.7998535037041, :y2 506.1624984741211, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 488.5499954223633, :x2 295.12895506620407, :y2 506.1499938964844, :width 845.9999999999999, :height 1056.3400365630712} {:x1 306.68751829862595, :y1 488.56249237060547, :x2 605.7998535037041, :y2 506.1624984741211, :width 845.9999999999999, :height 1056.3400365630712}), :page 750}, :content {:text "只使用 URL 时，fetch()会发送 GET 请求，只包含最低限度的请求头。"}, :properties {:color "yellow"}} {:id #uuid "63d4816d-5d9d-40a2-b6d0-8e3cd73d10c2", :page 750, :position {:bounding {:x1 168.39578551054, :y1 509.3249969482422, :x2 662.6996948122978, :y2 528.0625152587891, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 352.43751829862595, :y1 509.3249969482422, :x2 423.2073852419853, :y2 526.9250030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 434.09999388456345, :y1 509.3249969482422, :x2 662.6996948122978, :y2 526.9250030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 168.39578551054, :y1 510.46250915527344, :x2 341.5448791384697, :y2 528.0625152587891, :width 845.9999999999999, :height 1056.3400365630712}), :page 750}, :content {:text "传入可选的第二个参数 init 对象。init 对象要按照下表中的键/值进行填充"}, :properties {:color "yellow"}} {:id #uuid "63d48183-789c-447c-bc63-7a4870696a86", :page 753, :position {:bounding {:x1 149.1125060915947, :y1 510.31250619888306, :x2 315.61271971464157, :y2 532.7125000953674, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 510.31250619888306, :x2 315.61271971464157, :y2 532.7125000953674, :width 845.9999999999999, :height 1056.3400365630712}), :page 753}, :content {:text "常见 Fetch 请求模式"}, :properties {:color "green"}} {:id #uuid "63d481d2-540d-4583-98d8-8756c63b8ef7", :page 753, :position {:bounding {:x1 0, :y1 318.3999938964844, :x2 736.4996826052666, :y2 587.9124908447266, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 318.3999938964844, :x2 0, :y2 337.59999084472656, :width 845.9999999999999, :height 1056.3400365630712} {:x1 642.2499877810478, :y1 547.2749938964844, :x2 736.4996826052666, :y2 564.875, :width 845.9999999999999, :height 1056.3400365630712} {:x1 574.0797607302666, :y1 548.4124908447266, :x2 631.3230468630791, :y2 566.0124969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 570.3125, :x2 173.64462584257126, :y2 587.9124908447266, :width 845.9999999999999, :height 1056.3400365630712} {:x1 185.21249693632126, :y1 570.3125, :x2 420.1834594607353, :y2 587.9124908447266, :width 845.9999999999999, :height 1056.3400365630712}), :page 753}, :content {:text "使用 init 对象参数，可以配置 fetch()在请求体中发送各种序列化的数据。"}, :properties {:color "yellow"}} {:id #uuid "63d48233-f623-40ec-b85d-fed3dbb0c010", :page 753, :position {:bounding {:x1 124.72500151395798, :y1 596.8999938964844, :x2 227.0236389040947, :y2 614.5, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.72500151395798, :y1 596.8999938964844, :x2 227.0236389040947, :y2 614.5, :width 845.9999999999999, :height 1056.3400365630712}), :page 753}, :content {:text "发送 JSON 数据"}, :properties {:color "green"}} {:id #uuid "63d4824a-fec9-4656-bbac-78ae303e49d9", :page 753, :position {:bounding {:x1 127.43213957548141, :y1 714.4249877929688, :x2 354.2044250369072, :y2 729.625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 127.43213957548141, :y1 714.4249877929688, :x2 220.3059875369072, :y2 729.625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 235.8625060915947, :y1 714.4249877929688, :x2 354.2044250369072, :y2 729.625, :width 845.9999999999999, :height 1056.3400365630712}), :page 753}, :content {:text "Content-Type': 'application/json'"}, :properties {:color "yellow"}} {:id #uuid "63d48250-5bbe-4a06-80f0-b7c2cea46b47", :page 753, :position {:bounding {:x1 124.71250456571579, :y1 847.1749877929688, :x2 245.7544738650322, :y2 864.7749938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.71250456571579, :y1 847.1749877929688, :x2 245.7544738650322, :y2 864.7749938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 753}, :content {:text "在请求体中发送参数"}, :properties {:color "green"}} {:id #uuid "63d4825f-4980-43fd-8666-e3c5e5953032", :page 754, :position {:bounding {:x1 155.43750303983688, :y1 220.97500610351562, :x2 209.15976256132126, :y2 238.57501220703125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 220.97500610351562, :x2 209.15976256132126, :y2 238.57501220703125, :width 845.9999999999999, :height 1056.3400365630712}), :page 754}, :content {:text "发送文件"}, :properties {:color "green"}} {:id #uuid "63d48273-eeee-4dd8-b324-be690f158a7e", :page 753, :position {:bounding {:x1 108.37500303983688, :y1 867.7250061035156, :x2 519.5083038210869, :y2 885.3250122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 867.7250061035156, :x2 519.5083038210869, :y2 885.3250122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 753}, :content {:text "因为请求体支持任意字符串值，所以可以通过它发送请求参数："}, :properties {:color "yellow"}} {:id #uuid "63d4828a-a863-4809-b6f5-c982d10c9298", :page 754, :position {:bounding {:x1 259.9518615603447, :y1 407.82500648498535, :x2 377.4218627810478, :y2 425.425012588501, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 259.9518615603447, :y1 407.82500648498535, :x2 377.4218627810478, :y2 425.425012588501, :width 845.9999999999999, :height 1056.3400365630712}), :page 754}, :content {:text "可以支持多个文件"}, :properties {:color "yellow"}} {:id #uuid "63d48290-8fad-42a3-add5-36ee63510dac", :page 754, :position {:bounding {:x1 168.454135119915, :y1 241.52500343322754, :x2 345.9289123415947, :y2 259.12500953674316, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 168.454135119915, :y1 241.52500343322754, :x2 345.9289123415947, :y2 259.12500953674316, :width 845.9999999999999, :height 1056.3400365630712}), :page 754}, :content {:text "请求体支持 FormData 实现"}, :properties {:color "yellow"}} {:id #uuid "63d48303-510b-4031-b2ee-215106ef4bc9", :page 754, :position {:bounding {:x1 155.43750303983688, :y1 608.2124881744385, :x2 252.91113585233688, :y2 625.8125247955322, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 608.2124881744385, :x2 252.91113585233688, :y2 625.8125247955322, :width 845.9999999999999, :height 1056.3400365630712}), :page 754}, :content {:text "加载 Blob 文件"}, :properties {:color "green"}} {:id #uuid "63d4831e-12a3-46a5-9514-4e52d6849b8e", :page 754, :position {:bounding {:x1 0, :y1 650.6750030517578, :x2 774.7543212771416, :y2 690.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 510.72487181425095, :y1 650.6750030517578, :x2 774.7543212771416, :y2 668.2750244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 654.4000091552734, :x2 0, :y2 673.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 672.5750122070312, :x2 416.5211974978447, :y2 690.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 754}, :content {:text "可以使用响应对象上暴露的 blob()方法。这个方法返回一个期约，解决为一个 Blob 的实例"}, :properties {:color "yellow"}} {:id #uuid "63d48359-b429-41bd-bf90-0375965abe1e", :page 754, :position {:bounding {:x1 155.43750303983688, :y1 836.125, :x2 236.18205565214157, :y2 853.7250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 836.125, :x2 236.18205565214157, :y2 853.7250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 754}, :content {:text "发送跨源请求"}, :properties {:color "green"}} {:id #uuid "63d483cf-ed8f-4b52-b57f-92ee103ef26b", :page 754, :position {:bounding {:x1 139.1000091433525, :y1 856.5875091552734, :x2 592.4014770388603, :y2 874.1875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 856.5875091552734, :x2 592.4014770388603, :y2 874.1875, :width 845.9999999999999, :height 1056.3400365630712}), :page 754}, :content {:text "从不同的源请求资源，响应要包含 CORS 头部才能保证浏览器收到响应"}, :properties {:color "yellow"}} {:id #uuid "63d483ee-fdae-4b82-9498-0f569d80ebb0", :page 755, :position {:bounding {:x1 124.71250456571579, :y1 217.53753662109375, :x2 178.43475645780563, :y2 235.13751220703125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.71250456571579, :y1 217.53753662109375, :x2 178.43475645780563, :y2 235.13751220703125, :width 845.9999999999999, :height 1056.3400365630712}), :page 755}, :content {:text "中断请求"}, :properties {:color "green"}} {:id #uuid "63d48405-11bd-42f5-a5c4-13fc0a173714", :page 755, :position {:bounding {:x1 0, :y1 94.40000534057617, :x2 715.7307006716728, :y2 277.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 94.40000534057617, :x2 0, :y2 113.60000610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 565.0952636599541, :y1 238.10000610351562, :x2 715.7307006716728, :y2 255.70000457763672, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 258.86251068115234, :x2 127.11921232938766, :y2 276.46250915527344, :width 845.9999999999999, :height 1056.3400365630712} {:x1 137.4250060915947, :y1 260.00000762939453, :x2 530.6565429568291, :y2 277.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 755}, :content {:text "调用 AbortController. abort()会中断所有网络传输，特别适合希望停止传输大型负载的情况"}, :properties {:color "yellow"}} {:id #uuid "63d48427-dd25-4f57-aa4e-8c545d8a7bbe", :page 755, :position {:bounding {:x1 0, :y1 110.40000534057617, :x2 736.4308959841728, :y2 299.50001525878906, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 110.40000534057617, :x2 0, :y2 129.60000610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 542.0624877810478, :y1 260.00000762939453, :x2 680.8914672732353, :y2 277.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 692.4499999880791, :y1 260.00000762939453, :x2 736.4308959841728, :y2 277.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 281.90000915527344, :x2 225.72037810087204, :y2 299.50001525878906, :width 845.9999999999999, :height 1056.3400365630712}), :page 755}, :content {:text "中断进行中的 fetch()请求会导致包含错误的拒绝。"}, :properties {:color "yellow"}} {:id #uuid "63d48431-fd84-41c1-bc4d-85393b0d8d32", :page 755, :position {:bounding {:x1 149.1125060915947, :y1 461.3125, :x2 266.2438842654228, :y2 482.9125061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 461.3125, :x2 266.2438842654228, :y2 482.9125061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 755}, :content {:text "Headers 对象"}, :properties {:color "green"}} {:id #uuid "63d4846b-c36f-4231-9e3d-53e3d906be7f", :page 755, :position {:bounding {:x1 0, :y1 270.3999938964844, :x2 736.4895507693291, :y2 559.125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 270.3999938964844, :x2 0, :y2 289.5999984741211, :width 845.9999999999999, :height 1056.3400365630712} {:x1 501.65712279081345, :y1 520.7625045776367, :x2 736.4895507693291, :y2 538.3625030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 541.5250091552734, :x2 285.3995468020439, :y2 559.125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 296.1125060915947, :y1 541.5250091552734, :x2 542.8539306521416, :y2 559.125, :width 845.9999999999999, :height 1056.3400365630712}), :page 755}, :content {:text "每个入站 Response 实例也可以通过 Response.prototype.headers 访问包含着响应头部的 Headers 对象"}, :properties {:color "yellow"}} {:id #uuid "63d48476-4704-48c4-b4c1-a7486bcf2006", :page 755, :position {:bounding {:x1 120.62500303983688, :y1 592.125, :x2 302.18913573026657, :y2 609.7250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 120.62500303983688, :y1 592.125, :x2 302.18913573026657, :y2 609.7250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 755}, :content {:text " Headers 与 Map 的相似之处"}, :properties {:color "green"}} {:id #uuid "63d48491-698d-43cb-b9a1-9b3ab58dce05", :page 755, :position {:bounding {:x1 0, :y1 254.39999389648438, :x2 736.3934814333916, :y2 537.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 254.39999389648438, :x2 0, :y2 273.59999084472656, :width 845.9999999999999, :height 1056.3400365630712} {:x1 463.64406126737595, :y1 498.7625045776367, :x2 736.3934814333916, :y2 516.3625030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 519.625, :x2 440.9230529665947, :y2 537.2250061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 454.51249998807907, :y1 519.625, :x2 487.3380004763603, :y2 537.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 755}, :content {:text "每个外发的 Request 实例都包含一个空的 Headers 实例，可以通过 Request.prototype.headers 访问"}, :properties {:color "yellow"}} {:id #uuid "63d484af-d22a-4070-b678-3f1d8a13080b", :page 755, :position {:bounding {:x1 0, :y1 334.4000015258789, :x2 736.6179077029228, :y2 651.1999969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 334.4000015258789, :x2 0, :y2 353.5999984741211, :width 845.9999999999999, :height 1056.3400365630712} {:x1 439.26771849393845, :y1 611.6999969482422, :x2 736.6179077029228, :y2 629.3000030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 187.9750091433525, :y1 632.625, :x2 308.3969604372978, :y2 650.2250061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 633.6000061035156, :x2 176.91818541288376, :y2 651.1999969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 755}, :content {:text "因为 HTTP 头部本质上是序列化后的键/值对，它们的 JavaScript 表示则是中间接口"}, :properties {:color "yellow"}} {:id #uuid "63d484e1-8635-436f-963b-ba39d4c4f5d3", :page 756, :position {:bounding {:x1 155.4250060915947, :y1 669.125, :x2 285.2210571169853, :y2 686.7250366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.4250060915947, :y1 669.125, :x2 285.2210571169853, :y2 686.7250366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 756}, :content {:text "Headers 独有的特性"}, :properties {:color "green"}} {:id #uuid "63d48593-8201-4fde-9e0c-9d2aa4cbd2a0", :page 756, :position {:bounding {:x1 0, :y1 654.4000015258789, :x2 773.5794555544853, :y2 729.3375091552734, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 654.4000015258789, :x2 0, :y2 673.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 379.9324828982353, :y1 689.8375091552734, :x2 773.5794555544853, :y2 707.4375152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 711.7375030517578, :x2 215.99064940214157, :y2 729.3375091552734, :width 845.9999999999999, :height 1056.3400365630712}), :page 756}, :content {:text "在初始化 Headers 对象时，也可以使用键/值对形式的对象，而 Map 则不可以"}, :properties {:color "yellow"}} {:id #uuid "63d4859b-8c95-4a06-a497-f3b83aeeb7e7", :page 756, :position {:bounding {:x1 403.93751829862595, :y1 847.4750061035156, :x2 737.6123535037041, :y2 865.0750122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 403.93751829862595, :y1 847.4750061035156, :x2 737.6123535037041, :y2 865.0750122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 756}, :content {:text "Headers 对象通过 append()方法支持添加多个值"}, :properties {:color "yellow"}} {:id #uuid "63d485ae-1a13-499b-a421-8a61cea373d5", :page 757, :position {:bounding {:x1 120.62500303983688, :y1 177.875, :x2 178.43475645780563, :y2 195.47500610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 120.62500303983688, :y1 177.875, :x2 178.43475645780563, :y2 195.47500610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 757}, :content {:text " 头部护卫"}, :properties {:color "green"}} {:id #uuid "63d485e5-634c-42d2-a99c-8df3956e83b8", :page 757, :position {:bounding {:x1 0, :y1 62.39999961853027, :x2 736.4622680544853, :y2 236.96250343322754, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 62.39999961853027, :x2 0, :y2 81.60000038146973, :width 845.9999999999999, :height 1056.3400365630712} {:x1 496.00001829862595, :y1 196.32500648498535, :x2 736.4622680544853, :y2 213.9249973297119, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 219.3624973297119, :x2 140.80838316679, :y2 236.96250343322754, :width 845.9999999999999, :height 1056.3400365630712}), :page 757}, :content {:text "Headers 对象使用护卫来防止不被允许的修改"}, :properties {:color "yellow"}} {:id #uuid "63d48613-a41a-434d-89fa-8ee0c9773edc", :page 757, :position {:bounding {:x1 149.1125060915947, :y1 540.6500091552734, :x2 266.2438842654228, :y2 562.2500152587891, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 540.6500091552734, :x2 266.2438842654228, :y2 562.2500152587891, :width 845.9999999999999, :height 1056.3400365630712}), :page 757}, :content {:text "Request 对象"}, :properties {:color "green"}} {:id #uuid "63d4861f-9198-4bba-852c-bb3a2a151201", :page 757, :position {:bounding {:x1 182.14999693632126, :y1 576.9750061035156, :x2 426.2829162478447, :y2 594.5750122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 182.14999693632126, :y1 576.9750061035156, :x2 426.2829162478447, :y2 594.5750122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 757}, :content {:text "Request 对象是获取资源请求的接口"}, :properties {:color "yellow"}} {:id #uuid "63d48628-99b6-4fec-aad5-2dd867b74290", :page 757, :position {:bounding {:x1 124.71250456571579, :y1 687.1875, :x2 247.24862974882126, :y2 704.7875061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.71250456571579, :y1 687.1875, :x2 247.24862974882126, :y2 704.7875061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 757}, :content {:text "创建 Request 对象"}, :properties {:color "green"}} {:id #uuid "63d4866a-89d5-4bf5-a1a7-24a22bd3a572", :page 757, :position {:bounding {:x1 108.37500303983688, :y1 707.7375183105469, :x2 670.1743041872978, :y2 725.3375244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 707.7375183105469, :x2 670.1743041872978, :y2 725.3375244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 757}, :content {:text "可以通过构造函数初始化 Request 对象。为此需要传入一个 input 参数，一般是 URL"}, :properties {:color "yellow"}} {:id #uuid "63d48687-3ff3-4bc8-8005-3845bec25183", :page 757, :position {:bounding {:x1 106.79999846220016, :y1 784.7500152587891, :x2 475.1684142947197, :y2 802.3500366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 106.79999846220016, :y1 784.7500152587891, :x2 430.7323791384697, :y2 802.3500366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 441.6125060915947, :y1 784.7500152587891, :x2 475.1684142947197, :y2 802.3500061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 757}, :content {:text "Request 构造函数也接收第二个参数——一个 init 对象"}, :properties {:color "yellow"}} {:id #uuid "63d48693-6d1f-4e6d-8509-fb80a5f302f8", :page 758, :position {:bounding {:x1 155.43750303983688, :y1 588.3625183105469, :x2 277.9611389040947, :y2 605.9625244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 588.3625183105469, :x2 277.9611389040947, :y2 605.9625244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 758}, :content {:text "克隆 Request 对象"}, :properties {:color "green"}} {:id #uuid "63d486a4-fe86-4dd9-99c6-960922dfbc99", :page 758, :position {:bounding {:x1 0, :y1 608.8250122070312, :x2 767.2126342654228, :y2 737.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 406.74953001737595, :y1 608.8250122070312, :x2 767.2126342654228, :y2 626.4250183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 630.8125305175781, :x2 230.4933654665947, :y2 648.4125061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 718.4000244140625, :x2 0, :y2 737.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 758}, :content {:text "创建 Request 对象的副本：使用 Request 构造函数和使用 clone()方法。"}, :properties {:color "yellow"}} {:id #uuid "63d486b7-6d18-40c6-99c6-c718a3fb8ca6", :page 758, :position {:bounding {:x1 139.1000091433525, :y1 744.3750305175781, :x2 574.0340453982353, :y2 763.1125183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 249.62500303983688, :y1 744.3750305175781, :x2 338.7355529665947, :y2 761.9750061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 349.66249388456345, :y1 744.3750305175781, :x2 574.0340453982353, :y2 761.9750061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 139.1000091433525, :y1 745.5125122070312, :x2 238.69804686307907, :y2 763.1125183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 758}, :content {:text "如果再传入 init 对象，则 init 对象的值会覆盖源对象中同名的值"}, :properties {:color "yellow"}} {:id #uuid "63d486ca-de14-47b3-ab49-7ce45b82273f", :page 759, :position {:bounding {:x1 0, :y1 46.400001525878906, :x2 736.5186645388603, :y2 203.45000457763672, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 46.400001525878906, :x2 0, :y2 65.5999984741211, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.38749998807907, :y1 163.86251068115234, :x2 736.5186645388603, :y2 181.46251678466797, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.94999998807907, :y1 185.8499984741211, :x2 167.06161803007126, :y2 203.45000457763672, :width 845.9999999999999, :height 1056.3400365630712}), :page 759}, :content {:text "第二种克隆 Request 对象的方式是使用 clone()方法，这个方法会创建一模一样的副本，任何值都不会被覆盖"}, :properties {:color "yellow"}} {:id #uuid "63d4870d-846d-4ecc-93da-d1f901795921", :page 759, :position {:bounding {:x1 0, :y1 174.40001678466797, :x2 736.4268676638603, :y2 376.98751068115234, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 174.40001678466797, :x2 0, :y2 193.5999984741211, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 337.3875045776367, :x2 736.4268676638603, :y2 354.98751068115234, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 359.3875045776367, :x2 225.80512541532516, :y2 376.98751068115234, :width 845.9999999999999, :height 1056.3400365630712}), :page 759}, :content {:text "如果请求对象的 bodyUsed 属性为 true（即请求体已被读取），那么上述任何一种方式都不能用来创建这个对象的副本。"}, :properties {:color "yellow"}} {:id #uuid "63d48723-2134-45ec-af6c-06b1af4fcf00", :page 759, :position {:bounding {:x1 124.71250456571579, :y1 574.4375152587891, :x2 338.8361389040947, :y2 592.0375213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.71250456571579, :y1 574.4375152587891, :x2 189.99145811796188, :y2 592.0375213623047, :width 845.9999999999999, :height 1056.3400365630712} {:x1 201.5500060915947, :y1 574.4375152587891, :x2 338.8361389040947, :y2 592.0375213623047, :width 845.9999999999999, :height 1056.3400365630712}), :page 759}, :content {:text "在 fetch()中使用 Request 对象"}, :properties {:color "green"}} {:id #uuid "63d4874d-ad83-4e37-90de-ff4010ad8d1b", :page 759, :position {:bounding {:x1 0, :y1 382.40000915527344, :x2 736.4895507693291, :y2 634.4125061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 382.40000915527344, :x2 0, :y2 401.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 526.8812744021416, :y1 594.9000244140625, :x2 622.1414672732353, :y2 612.5, :width 845.9999999999999, :height 1056.3400365630712} {:x1 633.6999999880791, :y1 594.9000244140625, :x2 736.4895507693291, :y2 612.5, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 616.8125, :x2 328.9743224978447, :y2 634.4125061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 759}, :content {:text "在调用 fetch()时，可以传入已经创建好的 Request 实例而不是 URL"}, :properties {:color "yellow"}} {:id #uuid "63d4876f-aa04-454b-a5c1-e4a7bfb63108", :page 759, :position {:bounding {:x1 0, :y1 510.39998626708984, :x2 736.5669433474541, :y2 815.1749877929688, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 510.39998626708984, :x2 0, :y2 529.5999870300293, :width 845.9999999999999, :height 1056.3400365630712} {:x1 560.5749999880791, :y1 774.5374908447266, :x2 607.4789916872978, :y2 792.1374969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 619.0375244021416, :y1 775.6749877929688, :x2 736.5669433474541, :y2 793.2749938964844, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 797.5749969482422, :x2 306.81755369901657, :y2 815.1749877929688, :width 845.9999999999999, :height 1056.3400365630712}), :page 759}, :content {:text "fetch()也不能拿请求体已经用过的 Request 对象来发送请求"}, :properties {:color "yellow"}} {:id #uuid "63d487b3-d4d4-4b58-a810-5e136c9f3b96", :page 760, :position {:bounding {:x1 0, :y1 293.5875015258789, :x2 767.3308593630791, :y2 385.60001373291016, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 293.5875015258789, :x2 520.5196411013603, :y2 311.18750762939453, :width 845.9999999999999, :height 1056.3400365630712} {:x1 532.0875121951103, :y1 293.5875015258789, :x2 711.7696411013603, :y2 311.18750762939453, :width 845.9999999999999, :height 1056.3400365630712} {:x1 723.3500244021416, :y1 293.5875015258789, :x2 767.3308593630791, :y2 311.18750762939453, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 315.50000762939453, :x2 191.71930235624313, :y2 333.10001373291016, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 366.4000015258789, :x2 0, :y2 385.60001373291016, :width 845.9999999999999, :height 1056.3400365630712}), :page 760}, :content {:text "要想基于包含请求体的相同 Request 对象多次调用 fetch()，必须在第一次发送 fetch()请求前调用 clone()"}, :properties {:color "yellow"}} {:id #uuid "63d487ba-ae79-43d5-ae55-f64c7e9724a4", :page 760, :position {:bounding {:x1 211.25407713651657, :y1 120.06249237060547, :x2 559.7423583865166, :y2 137.66251373291016, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 211.25407713651657, :y1 120.06249237060547, :x2 559.7423583865166, :y2 137.66251373291016, :width 845.9999999999999, :height 1056.3400365630712}), :page 760}, :content {:text "通过 fetch 使用 Request 会将请求体标记为已使用。"}, :properties {:color "yellow"}} {:id #uuid "63d487d3-88d8-4157-998e-c9c57081b2a2", :page 760, :position {:bounding {:x1 179.83749693632126, :y1 465.4875030517578, :x2 307.63136595487595, :y2 487.08750915527344, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 465.4875030517578, :x2 307.63136595487595, :y2 487.08750915527344, :width 845.9999999999999, :height 1056.3400365630712}), :page 760}, :content {:text "Response 对象"}, :properties {:color "green"}} {:id #uuid "63d487e6-803d-444a-8387-fe609cbca2ef", :page 760, :position {:bounding {:x1 212.12500303983688, :y1 501.81250762939453, :x2 459.1962463259697, :y2 519.4125061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 212.12500303983688, :y1 501.81250762939453, :x2 459.1962463259697, :y2 519.4125061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 760}, :content {:text "Response 对象是获取资源响应的接口"}, :properties {:color "yellow"}} {:id #uuid "63d487ed-1fb0-442d-af79-e6fd71cca5ca", :page 760, :position {:bounding {:x1 155.43750303983688, :y1 612.1125030517578, :x2 286.3111450076103, :y2 629.7125091552734, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 612.1125030517578, :x2 286.3111450076103, :y2 629.7125091552734, :width 845.9999999999999, :height 1056.3400365630712}), :page 760}, :content {:text "创建 Response 对象"}, :properties {:color "green"}} {:id #uuid "63d4880e-8392-47e0-90c4-a19dce7d8ac4", :page 760, :position {:bounding {:x1 139.1000091433525, :y1 632.6625061035156, :x2 491.4294006228447, :y2 650.2625122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 632.6625061035156, :x2 491.4294006228447, :y2 650.2625122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 760}, :content {:text "可以通过构造函数初始化 Response 对象且不需要参数"}, :properties {:color "yellow"}} {:id #uuid "63d48816-5906-493c-b188-138319809448", :page 760, :position {:bounding {:x1 137.52499693632126, :y1 878.5625, :x2 459.9461547732353, :y2 896.1625061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 137.52499693632126, :y1 878.5625, :x2 459.9461547732353, :y2 896.1625061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 760}, :content {:text "Response 构造函数接收一个可选的 body 参数。"}, :properties {:color "yellow"}} {:id #uuid "63d4882a-440d-4934-adce-c88a1cb9b627", :page 760, :position {:bounding {:x1 228.3759338259697, :y1 900.4625396728516, :x2 446.01918333768845, :y2 919.2000350952148, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 412.47499388456345, :y1 900.4625396728516, :x2 446.01918333768845, :y2 918.0625381469727, :width 845.9999999999999, :height 1056.3400365630712} {:x1 228.3759338259697, :y1 901.6000366210938, :x2 401.59486693143845, :y2 919.2000350952148, :width 845.9999999999999, :height 1056.3400365630712}), :page 760}, :content {:text "还可以接收一个可选的 init 对象"}, :properties {:color "yellow"}} {:id #uuid "63d48843-db8a-45ba-93b0-3f096cca9bd7", :page 761, :position {:bounding {:x1 0, :y1 398.40000915527344, :x2 736.3593627810478, :y2 611.375, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 398.40000915527344, :x2 0, :y2 417.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 573, :x2 539.4664794802666, :y2 590.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 551.8625366091728, :y1 573, :x2 736.3593627810478, :y2 590.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 593.7750244140625, :x2 226.41971129179, :y2 611.375, :width 845.9999999999999, :height 1056.3400365630712}), :page 761}, :content {:text "大多数情况下，产生 Response 对象的主要方式是调用 fetch()，它返回一个最后会解决为 Response 对象的期约"}, :properties {:color "yellow"}} {:id #uuid "63d48850-99a3-4573-8249-1362a0ac4983", :page 761, :position {:bounding {:x1 0, :y1 686.4000396728516, :x2 736.1774169802666, :y2 924.3750305175781, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 686.4000396728516, :x2 0, :y2 705.6000366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 261.86793822050095, :y1 885.9125366210938, :x2 628.1142455935478, :y2 903.5125427246094, :width 845.9999999999999, :height 1056.3400365630712} {:x1 645.9499999880791, :y1 885.9125366210938, :x2 736.1774169802666, :y2 903.5125427246094, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 906.7750549316406, :x2 121.96055907011032, :y2 924.3750305175781, :width 845.9999999999999, :height 1056.3400365630712}), :page 761}, :content {:text "于生成 Response 对象的静态方法：Response.redirect()和 Response. error()"}, :properties {:color "yellow"}} {:id #uuid "63d48860-8585-4c0d-89a2-082f630d0d40", :page 762, :position {:bounding {:x1 0, :y1 367.9249954223633, :x2 767.2833740115166, :y2 497.60001373291016, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 241.8770324587822, :y1 367.9249954223633, :x2 365.8703185915947, :y2 385.5250015258789, :width 845.9999999999999, :height 1056.3400365630712} {:x1 380.7375060915947, :y1 367.9249954223633, :x2 767.2833740115166, :y2 385.5250015258789, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 388.68750762939453, :x2 156.57895201444626, :y2 406.28751373291016, :width 845.9999999999999, :height 1056.3400365630712} {:x1 168.13749998807907, :y1 389.8250198364258, :x2 263.53749388456345, :y2 407.4250259399414, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 478.4000015258789, :x2 0, :y2 497.60001373291016, :width 845.9999999999999, :height 1056.3400365630712}), :page 762}, :content {:text " Response.error()用于产生表示网络错误的 Response 对象（网络错误会导致 fetch()期约被拒绝）。"}, :properties {:color "yellow"}} {:id #uuid "63d48873-b6c7-42aa-94ba-0ba74d27f944", :page 761, :position {:bounding {:x1 0, :y1 702.4000129699707, :x2 740.5927001833916, :y2 947.4125061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 702.4000129699707, :x2 0, :y2 721.6000137329102, :width 845.9999999999999, :height 1056.3400365630712} {:x1 145.77499693632126, :y1 907.9125213623047, :x2 740.5927001833916, :y2 925.5125122070312, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 929.8125152587891, :x2 122.94334715604782, :y2 947.4125061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 761}, :content {:text "前者接收一个 URL 和一个重定向状态码（301、302、303、307 或 308），返回重定向的 Response对象："}, :properties {:color "yellow"}} {:id #uuid "63d4888a-f81e-42c2-93a6-a0fc9e9a5a82", :page 762, :position {:bounding {:x1 155.43750303983688, :y1 604.8750152587891, :x2 263.0432006716728, :y2 622.4750213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 604.8750152587891, :x2 263.0432006716728, :y2 622.4750213623047, :width 845.9999999999999, :height 1056.3400365630712}), :page 762}, :content {:text "读取响应状态信息"}, :properties {:color "green"}} {:id #uuid "63d48897-c262-4eab-8bf7-03768878d9e7", :page 762, :position {:bounding {:x1 137.52499693632126, :y1 624.2999877929688, :x2 531.5266601443291, :y2 641.8999862670898, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 137.52499693632126, :y1 624.2999877929688, :x2 531.5266601443291, :y2 641.8999862670898, :width 845.9999999999999, :height 1056.3400365630712}), :page 762}, :content {:text "Response 对象包含一组只读属性，描述了请求完成后的状态"}, :properties {:color "yellow"}} {:id #uuid "63d488ac-922b-40c0-ae31-860b9084a84d", :page 763, :position {:bounding {:x1 124.71250456571579, :y1 908.1375122070312, :x2 255.59865111112595, :y2 925.7375183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.71250456571579, :y1 908.1375122070312, :x2 255.59865111112595, :y2 925.7375183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 763}, :content {:text "克隆 Response 对象"}, :properties {:color "green"}} {:id #uuid "63d488ba-d9a1-40f4-81fe-06b92a30f175", :page 763, :position {:bounding {:x1 108.37500303983688, :y1 928.6875305175781, :x2 457.4291564822197, :y2 946.2875061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 928.6875305175781, :x2 457.4291564822197, :y2 946.2875061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 763}, :content {:text "克隆 Response 对象的主要方式是使用 clone()方法"}, :properties {:color "yellow"}} {:id #uuid "63d488c6-474a-4fa7-8651-f1daa9e102e3", :page 764, :position {:bounding {:x1 139.1000091433525, :y1 201.625, :x2 738.2752563357353, :y2 219.22500610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 201.625, :x2 738.2752563357353, :y2 219.22500610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 764}, :content {:text "如果响应对象的 bodyUsed 属性为 true（即响应体已被读取），则不能再创建这个对象的副本"}, :properties {:color "yellow"}} {:id #uuid "63d488e4-0cd2-4699-81e1-4dea96223505", :page 764, :position {:bounding {:x1 0, :y1 606.4000091552734, :x2 767.2067748904228, :y2 659.0875091552734, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 606.4000091552734, :x2 0, :y2 625.6000213623047, :width 845.9999999999999, :height 1056.3400365630712} {:x1 182.82211607694626, :y1 619.5875091552734, :x2 767.2067748904228, :y2 637.1875152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 641.4875030517578, :x2 490.3736450076103, :y2 659.0875091552734, :width 845.9999999999999, :height 1056.3400365630712}), :page 764}, :content {:text "通过创建带有原始响应体的 Response 实例，可以执行伪克隆操作。关键是这样不会把第一个 Response 实例标记为已读，而是会在两个响应之间共享"}, :properties {:color "yellow"}} {:id #uuid "63d488f9-76bd-48dd-81de-64698954fd0d", :page 764, :position {:bounding {:x1 179.83749693632126, :y1 820.9000244140625, :x2 472.06886595487595, :y2 843.3000183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 820.9000244140625, :x2 472.06886595487595, :y2 843.3000183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 764}, :content {:text "Request、Response 及 Body 混入"}, :properties {:color "green"}} {:id #uuid "63d48922-96b6-4107-afd6-59ae5355895e", :page 765, :position {:bounding {:x1 0, :y1 30.399993896484375, :x2 736.4261352419853, :y2 181.46249389648438, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 30.399993896484375, :x2 0, :y2 49.600006103515625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 106.79999846220016, :y1 140.82498168945312, :x2 736.4261352419853, :y2 158.42498779296875, :width 845.9999999999999, :height 1056.3400365630712} {:x1 159.8625060915947, :y1 162.88748168945312, :x2 413.24330443143845, :y2 180.48748779296875, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 163.86248779296875, :x2 148.82422178983688, :y2 181.46249389648438, :width 845.9999999999999, :height 1056.3400365630712}), :page 765}, :content {:text "Body 混入提供了 5 个方法，用于将 ReadableStream 转存到缓冲区的内存里，将缓冲区转换为某种 JavaScript 对象类型，以及通过期约来产生结果。"}, :properties {:color "yellow"}} {:id #uuid "63d48948-26b0-40bb-b45b-afde9361599d", :page 765, :position {:bounding {:x1 124.71250456571579, :y1 211.16250915825367, :x2 200.444857776165, :y2 228.76250000298023, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.71250456571579, :y1 211.16250915825367, :x2 200.444857776165, :y2 228.76250000298023, :width 845.9999999999999, :height 1056.3400365630712}), :page 765}, :content {:text "Body.text()"}, :properties {:color "green"}} {:id #uuid "63d48953-74de-4c01-82d9-0f7b227067d0", :page 765, :position {:bounding {:x1 106.79999846220016, :y1 229.63750000298023, :x2 604.3229247927666, :y2 248.36250610649586, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 106.79999846220016, :y1 229.63750000298023, :x2 182.53236693143845, :y2 247.23750610649586, :width 845.9999999999999, :height 1056.3400365630712} {:x1 198.6750060915947, :y1 230.76250000298023, :x2 604.3229247927666, :y2 248.36250610649586, :width 845.9999999999999, :height 1056.3400365630712}), :page 765}, :content {:text "Body.text()方法返回期约，解决为将缓冲区转存得到的 UTF-8 格式字符串"}, :properties {:color "yellow"}} {:id #uuid "63d489a4-742b-4e17-88d7-165c06b6228e", :page 765, :position {:bounding {:x1 120.91744536161423, :y1 545.7250244170427, :x2 203.353060901165, :y2 563.3250000029802, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 120.91744536161423, :y1 545.7250244170427, :x2 203.353060901165, :y2 563.3250000029802, :width 845.9999999999999, :height 1056.3400365630712}), :page 765}, :content {:text "Body.json()"}, :properties {:color "green"}} {:id #uuid "63d489ad-cbfa-4fcc-a377-453b8bf41e5c", :page 765, :position {:bounding {:x1 106.79999846220016, :y1 563.0500183105469, :x2 532.4871703982353, :y2 581.7875213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 106.79999846220016, :y1 563.0500183105469, :x2 185.44055479764938, :y2 580.6500091552734, :width 845.9999999999999, :height 1056.3400365630712} {:x1 198.6750060915947, :y1 564.1875152587891, :x2 532.4871703982353, :y2 581.7875213623047, :width 845.9999999999999, :height 1056.3400365630712}), :page 765}, :content {:text "Body.json()方法返回期约，解决为将缓冲区转存得到的 JSON。"}, :properties {:color "yellow"}} {:id #uuid "63d489bd-ae0a-43a0-b797-9079014ed734", :page 765, :position {:bounding {:x1 124.71250456571579, :y1 833.9250183105469, :x2 239.4743224978447, :y2 851.5250244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.71250456571579, :y1 833.9250183105469, :x2 239.4743224978447, :y2 851.5250244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 765}, :content {:text "Body.formData()"}, :properties {:color "green"}} {:id #uuid "63d489c7-d19a-493b-a728-d2caad934bea", :page 765, :position {:bounding {:x1 108.38749998807907, :y1 853.5375061035156, :x2 451.54384154081345, :y2 871.1375122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.38749998807907, :y1 853.5375061035156, :x2 451.54384154081345, :y2 871.1375122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 765}, :content {:text "浏览器可以将 FormData 对象序列化/反序列化为主体"}, :properties {:color "yellow"}} {:id #uuid "63d489e3-2f88-4bd0-9ca6-f0cfa9477f80", :page 766, :position {:bounding {:x1 137.52499693632126, :y1 171.07498168945312, :x2 649.6890746951103, :y2 189.81253051757812, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 137.52499693632126, :y1 171.07498168945312, :x2 252.2868224978447, :y2 188.67501831054688, :width 845.9999999999999, :height 1056.3400365630712} {:x1 262.8000060915947, :y1 172.21249389648438, :x2 649.6890746951103, :y2 189.81253051757812, :width 845.9999999999999, :height 1056.3400365630712}), :page 766}, :content {:text "Body.formData()方法返回期约，解决为将缓冲区转存得到的 FormData 实例"}, :properties {:color "yellow"}} {:id #uuid "63d48a20-fe62-4f17-83a2-32dc6e4cdb32", :page 766, :position {:bounding {:x1 155.4250060915947, :y1 486.12501525878906, :x2 283.8627807497978, :y2 503.72499084472656, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.4250060915947, :y1 486.12501525878906, :x2 283.8627807497978, :y2 503.72499084472656, :width 845.9999999999999, :height 1056.3400365630712}), :page 766}, :content {:text "Body.arrayBuffer()"}, :properties {:color "green"}} {:id #uuid "63d48a4b-10d1-42b7-9b44-6331c8d49439", :page 766, :position {:bounding {:x1 155.4250060915947, :y1 812.125, :x2 235.58676451444626, :y2 829.7250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.4250060915947, :y1 812.125, :x2 235.58676451444626, :y2 829.7250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 766}, :content {:text "Body.blob()"}, :properties {:color "green"}} {:id #uuid "63d48a55-53d3-45bc-aa2e-069c1de3174c", :page 767, :position {:bounding {:x1 124.71250456571579, :y1 261.625, :x2 178.43475645780563, :y2 279.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.71250456571579, :y1 261.625, :x2 178.43475645780563, :y2 279.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 767}, :content {:text "一次性流"}, :properties {:color "green"}} {:id #uuid "63d48a8b-2bba-45e5-985a-4e16e18abf51", :page 767, :position {:bounding {:x1 0, :y1 126.39999854564667, :x2 736.4980346560478, :y2 321.6875122785568, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 126.39999854564667, :x2 0, :y2 145.6000031232834, :width 845.9999999999999, :height 1056.3400365630712} {:x1 692.4243041872978, :y1 282.1750000715256, :x2 736.4980346560478, :y2 299.7750061750412, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 304.0875061750412, :x2 431.37494963407516, :y2 321.6875122785568, :width 845.9999999999999, :height 1056.3400365630712}), :page 767}, :content {:text "所有主体混入方法都只能调用一次，再次调用就会抛出错误。"}, :properties {:color "yellow"}} {:id #uuid "63d48ac7-3fe1-4d86-aec6-c5f5074ba17a", :page 767, :position {:bounding {:x1 0, :y1 270.4000061750412, :x2 736.4996826052666, :y2 509.8750122785568, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 270.4000061750412, :x2 0, :y2 289.60001838207245, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 470.3750122785568, :x2 736.4996826052666, :y2 487.97501838207245, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 492.2750061750412, :x2 181.73007506132126, :y2 509.8750122785568, :width 845.9999999999999, :height 1056.3400365630712}), :page 767}, :content {:text "即使是在读取流的过程中，所有这些方法也会在它们被调用时给 ReadableStream 加锁，以阻止其他读取器访问"}, :properties {:color "yellow"}} {:id #uuid "63d48af3-eebb-4619-8e07-0d43302736a1", :page 767, :position {:bounding {:x1 0, :y1 478.40000915527344, :x2 743.9499999880791, :y2 756.8999938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 478.40000915527344, :x2 0, :y2 497.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 717.3999938964844, :x2 743.9499999880791, :y2 735, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 739.3000183105469, :x2 313.93155974149704, :y2 756.8999938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 767}, :content {:text "作为 Body 混入的一部分，bodyUsed 布尔值属性表示 ReadableStream 是否已摄受（disturbed），意思是读取器是否已经在流上加了锁"}, :properties {:color "yellow"}} {:id #uuid "63d48b0d-323e-45a4-9043-af4451762743", :page 768, :position {:bounding {:x1 155.43750303983688, :y1 118.625, :x2 336.42363280057907, :y2 136.22503662109375, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 155.43750303983688, :y1 118.625, :x2 336.42363280057907, :y2 136.22503662109375, :width 845.9999999999999, :height 1056.3400365630712}), :page 768}, :content {:text "使用 ReadableStream 主体"}, :properties {:color "green"}} {:id #uuid "63d48b59-df6c-4b8a-8034-69d61a8fd146", :page 768, :position {:bounding {:x1 0, :y1 330.25, :x2 767.0588867068291, :y2 385.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 295.00429075956345, :y1 330.25, :x2 767.0588867068291, :y2 347.8500061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 351.01251220703125, :x2 555.2861358523369, :y2 368.6125183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 366.3999938964844, :x2 0, :y2 385.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 768}, :content {:text "，ReadableStream 暴露了 getReader()方法，用于产生 ReadableStreamDefaultReader，这个读取器可以用于在数据到达时异步获取数据块"}, :properties {:color "yellow"}} {:id #uuid "63d48b6d-9cf5-4996-93db-7ad8fbc5b5b5", :page 769, :position {:bounding {:x1 108.37500303983688, :y1 120.0625, :x2 706.6594116091728, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 120.0625, :x2 320.5446349978447, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 332.1125060915947, :y1 120.0625, :x2 706.6594116091728, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 769}, :content {:text "异步函数非常适合这样的 fetch()操作。可以通过使用 async/await 将上面的递归调用打平"}, :properties {:color "yellow"}} {:id #uuid "63d48b8c-4de3-46cc-94bf-0c53e0dc42df", :page 769, :position {:bounding {:x1 0, :y1 286.40000009536743, :x2 736.5078002810478, :y2 487.5125184059143, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 286.40000009536743, :x2 0, :y2 305.6000123023987, :width 845.9999999999999, :height 1056.3400365630712} {:x1 151.71249693632126, :y1 446.87500619888306, :x2 406.60878294706345, :y2 464.4750123023987, :width 845.9999999999999, :height 1056.3400365630712} {:x1 419.34999388456345, :y1 446.87500619888306, :x2 657.2160522341728, :y2 464.4750123023987, :width 845.9999999999999, :height 1056.3400365630712} {:x1 673.6999999880791, :y1 446.87500619888306, :x2 736.5078002810478, :y2 464.4750123023987, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 469.9125123023987, :x2 196.38444823026657, :y2 487.5125184059143, :width 845.9999999999999, :height 1056.3400365630712}), :page 769}, :content {:text "read()方法也可以真接封装到 Iterable 接口中。因此就可以在 for-await-of 循环中方便地实现这种转换"}, :properties {:color "yellow"}} {:id #uuid "63d48bb1-5f2b-49bd-8dc5-c91c01246b32", :page 769, :position {:bounding {:x1 0, :y1 670.4000244140625, :x2 736.2133514285088, :y2 918.0000228881836, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 670.4000244140625, :x2 0, :y2 689.6000213623047, :width 845.9999999999999, :height 1056.3400365630712} {:x1 239.6285735964775, :y1 878.5000228881836, :x2 736.2133514285088, :y2 896.1000289916992, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 900.4000244140625, :x2 122.95585173368454, :y2 918.0000228881836, :width 845.9999999999999, :height 1056.3400365630712}), :page 769}, :content {:text "如果流因为耗尽或错误而终止，读取器会释放锁，以允许不同的流读取器继续操作："}, :properties {:color "yellow"}} {:id #uuid "63d48bd1-a1db-4087-a900-d4f9098c1f09", :page 770, :position {:bounding {:x1 139.08749693632126, :y1 736.4250183105469, :x2 708.4540283083916, :y2 754.0250244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.08749693632126, :y1 736.4250183105469, :x2 708.4540283083916, :y2 754.0250244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 770}, :content {:text "要将 Uint8Array 转换为可读文本，可以将缓冲区传给 TextDecoder，返回转换后的值"}, :properties {:color "yellow"}} {:id #uuid "63d48bee-4dfd-4e04-9af5-c3dee4fe7bc1", :page 771, :position {:bounding {:x1 0, :y1 286.3999938964844, :x2 736.4186889529228, :y2 446.8625183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 286.3999938964844, :x2 0, :y2 305.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 152.38731688261032, :y1 407.3625183105469, :x2 736.4186889529228, :y2 424.9625244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 429.26251220703125, :x2 167.05827635526657, :y2 446.8625183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 771}, :content {:text "以使用 ReadableStream 创建 Response 对象，所以就可以在读取流之后，将其通过管道导入另一个流"}, :properties {:color "yellow"}} {:id #uuid "63d48c07-1c68-4d0f-b3d3-4fcd6f3a6fb7", :page 772, :position {:bounding {:x1 173.51249998807907, :y1 118.70001220703125, :x2 274.22706907987595, :y2 145.10000610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.51249998807907, :y1 118.70001220703125, :x2 274.22706907987595, :y2 145.10000610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "Beacon API"}, :properties {:color "green"}} {:id #uuid "63d48c4c-467f-4e21-a9d2-2c9ab65ebb78", :page 772, :position {:bounding {:x1 227.09363096952438, :y1 312.62501859664917, :x2 711.0916625857353, :y2 330.22499418258667, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 227.09363096952438, :y1 312.62501859664917, :x2 711.0916625857353, :y2 330.22499418258667, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "浏览器会因为要等待 unload 事件处理程序完成而延迟导航到下一个页面。"}, :properties {:color "yellow"}} {:id #uuid "63d48c6f-627e-4756-bdfa-3719015e63b8", :page 772, :position {:bounding {:x1 0, :y1 355.375, :x2 768.7234985232353, :y2 417.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 109.67499846220016, :y1 355.375, :x2 768.7234985232353, :y2 372.9750061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 378.4125061035156, :x2 168.2186614871025, :y2 396.01251220703125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 398.3999938964844, :x2 0, :y2 417.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "sendBeacon()方法。这个简单的方法接收一个 URL 和一个数据有效载荷参数，并会发送一个 POST请求。可"}, :properties {:color "yellow"}} {:id #uuid "63d48ca0-d601-47d8-83a6-122cfaf71c42", :page 772, :position {:bounding {:x1 0, :y1 558.4000244140625, :x2 767.1006957888603, :y2 613.1625061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 558.4000244140625, :x2 0, :y2 577.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 157.93750303983688, :y1 573.6500244140625, :x2 767.1006957888603, :y2 591.25, :width 845.9999999999999, :height 1056.3400365630712} {:x1 157.93750303983688, :y1 595.5625, :x2 245.974642932415, :y2 613.1625061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "调用 sendBeacon()后，浏览器会把请求添加到一个内部的请求队列。浏览器会主动地发送队列中的请求。"}, :properties {:color "yellow"}} {:id #uuid "63d48cb1-4894-4625-b37b-ba4d7a2429cc", :page 772, :position {:bounding {:x1 157.93750303983688, :y1 661.2500152587891, :x2 610.6874877810478, :y2 678.8500061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 157.93750303983688, :y1 661.2500152587891, :x2 610.6874877810478, :y2 678.8500061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "信标（beacon）请求会携带调用 sendBeacon()时所有相关的 cookie。"}, :properties {:color "yellow"}} {:id #uuid "63d48ce6-9ad7-463c-bccf-b980369ff2bb", :page 772, :position {:bounding {:x1 173.51249998807907, :y1 697.2000122070312, :x2 276.26115721464157, :y2 723.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.51249998807907, :y1 697.2000122070312, :x2 276.26115721464157, :y2 723.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "Web Socket"}, :properties {:color "green"}} {:id #uuid "63d48cf5-9e32-4a8e-9168-a2eaefd2dab8", :page 772, :position {:bounding {:x1 338.25709837675095, :y1 737.6250381469727, :x2 673.1708862185478, :y2 755.2250366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 338.25709837675095, :y1 737.6250381469727, :x2 673.1708862185478, :y2 755.2250366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "通过一个长时连接实现与服务器全双工、双向的通信"}, :properties {:color "yellow"}} {:id #uuid "63d48d11-2c97-472a-98c0-ee9b34363cbb", :page 772, :position {:bounding {:x1 124.33945769071579, :y1 759.6125411987305, :x2 551.0160400271416, :y2 777.2125473022461, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 124.33945769071579, :y1 759.6125411987305, :x2 551.0160400271416, :y2 777.2125473022461, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "创建 Web Socket 时，一个 HTTP 请求会发送到服务器以初始化连接"}, :properties {:color "yellow"}} {:id #uuid "63d48d1a-db42-4821-9bd1-8907461872b3", :page 772, :position {:bounding {:x1 0, :y1 670.40003657341, :x2 768.7335082888603, :y2 799.1250381469727, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 670.40003657341, :x2 0, :y2 689.6000373363495, :width 845.9999999999999, :height 1056.3400365630712} {:x1 565.6337768435478, :y1 759.6125411987305, :x2 768.7335082888603, :y2 777.2125396728516, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 781.5250396728516, :x2 456.8870727419853, :y2 799.1250381469727, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "服务器响应后，连接使用 HTTP的 Upgrade 头部从 HTTP 协议切换到 Web Socket 协议"}, :properties {:color "yellow"}} {:id #uuid "63d48d29-af9c-4689-b533-9087d94e509a", :page 772, :position {:bounding {:x1 0, :y1 718.4000358581543, :x2 767.9750244021416, :y2 864.925048828125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 718.4000358581543, :x2 0, :y2 737.6000366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 137.7875091433525, :y1 825.3250427246094, :x2 767.9750244021416, :y2 842.925048828125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 847.3250427246094, :x2 247.84213560819626, :y2 864.925048828125, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "因为 Web Socket 使用了自定义协议，所以 URL 方案（scheme）稍有变化：不能再使用 http://或 https://，而要使用 ws://和 wss://"}, :properties {:color "yellow"}} {:id #uuid "63d48d3b-68c2-4ccf-baa6-84302c6ccc22", :page 772, :position {:bounding {:x1 109.67499846220016, :y1 933.9625549316406, :x2 559.6414062380791, :y2 952.5375366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 527.3000366091728, :y1 933.9625549316406, :x2 559.6414062380791, :y2 951.5625305175781, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 934.9375305175781, :x2 508.40248411893845, :y2 952.5375366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 772}, :content {:text "使用自定义协议的缺点是，定义协议的时间比定义 JavaScript API 要长"}, :properties {:color "yellow"}} {:id #uuid "63d48d5d-cb84-4855-9579-e19b5dde7e95", :page 773, :position {:bounding {:x1 149.1125060915947, :y1 118.0875244140625, :x2 174.78676146268845, :y2 140.48751831054688, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 118.0875244140625, :x2 174.78676146268845, :y2 140.48751831054688, :width 845.9999999999999, :height 1056.3400365630712}), :page 773}, :content {:text "API"}, :properties {:color "green"}} {:id #uuid "63d48d72-b65e-45e4-a36f-228e2ae6d0b8", :page 773, :position {:bounding {:x1 152.06488341093063, :y1 202.375009059906, :x2 460.1758911013603, :y2 219.97501516342163, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 152.06488341093063, :y1 202.375009059906, :x2 460.1758911013603, :y2 219.97501516342163, :width 845.9999999999999, :height 1056.3400365630712}), :page 773}, :content {:text "必须给 WebSocket 构造函数传入一个绝对 URL"}, :properties {:color "yellow"}} {:id #uuid "63d48d84-8836-4c04-8d17-b61530ad2587", :page 773, :position {:bounding {:x1 108.36249846220016, :y1 443.46251821517944, :x2 467.75004881620407, :y2 461.06249380111694, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.36249846220016, :y1 443.46251821517944, :x2 292.05620115995407, :y2 461.06249380111694, :width 845.9999999999999, :height 1056.3400365630712} {:x1 302.78749388456345, :y1 443.46251821517944, :x2 467.75004881620407, :y2 461.06249380111694, :width 845.9999999999999, :height 1056.3400365630712}), :page 773}, :content {:text "任何时候都可以调用 close()方法关闭 Web Socket 连接"}, :properties {:color "yellow"}} {:id #uuid "63d48d99-1f0f-4374-bbdd-2c25be22aad1", :page 773, :position {:bounding {:x1 149.1125060915947, :y1 526.6499876976013, :x2 279.05348509550095, :y2 549.0500121116638, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 526.6499876976013, :x2 279.05348509550095, :y2 549.0500121116638, :width 845.9999999999999, :height 1056.3400365630712}), :page 773}, :content {:text "发送和接收数据"}, :properties {:color "green"}} {:id #uuid "63d48da6-ecbe-425d-a10f-cfae9c024f43", :page 773, :position {:bounding {:x1 0, :y1 302.3999996185303, :x2 736.5183593630791, :y2 604.25, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 302.3999996185303, :x2 0, :y2 321.60000228881836, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 564.75, :x2 736.5183593630791, :y2 582.3500061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 288.41249388456345, :y1 585.5125122070312, :x2 343.1166869997978, :y2 603.1125183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 586.6499938964844, :x2 277.6672241091728, :y2 604.25, :width 845.9999999999999, :height 1056.3400365630712}), :page 773}, :content {:text "打开 Web Socket 之后，可以通过连接发送和接收数据。要向服务器发送数据，使用 send()方法并传入一个字符串、ArrayBuffer 或 Blob"}, :properties {:color "yellow"}} {:id #uuid "63d48e30-2275-471a-b6b9-295d36f02fa0", :page 773, :position {:bounding {:x1 108.37500303983688, :y1 750.1499938964844, :x2 580.1558715701103, :y2 767.75, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 750.1499938964844, :x2 580.1558715701103, :y2 767.75, :width 845.9999999999999, :height 1056.3400365630712}), :page 773}, :content {:text "服务器向客户端发送消息时，WebSocket 对象上会触发 message 事件。"}, :properties {:color "yellow"}} {:id #uuid "63d48e38-8257-45d8-a76a-b37be4fbf16a", :page 773, :position {:bounding {:x1 149.1125060915947, :y1 919.3625183105469, :x2 223.36271971464157, :y2 941.7625122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 919.3625183105469, :x2 223.36271971464157, :y2 941.7625122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 773}, :content {:text "其他事件"}, :properties {:color "green"}} {:id #uuid "63d48e98-7007-48e4-9f37-347996a2d5c3", :page 774, :position {:bounding {:x1 0, :y1 184.87501525878906, :x2 767.2790405154228, :y2 305.59999084472656, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 646.8625366091728, :y1 184.87501525878906, :x2 767.2790405154228, :y2 202.47499084472656, :width 845.9999999999999, :height 1056.3400365630712} {:x1 499.30787962675095, :y1 185.84999084472656, :x2 635.6345703005791, :y2 203.4499969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.66250151395798, :y1 207.7624969482422, :x2 227.08444517850876, :y2 225.3625030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 286.40000915527344, :x2 0, :y2 305.59999084472656, :width 845.9999999999999, :height 1056.3400365630712}), :page 774}, :content {:text "需要使用 DOM Level 0 风格的事件处理程序来监听这些事件"}, :properties {:color "yellow"}} {:id #uuid "63d48fe8-e730-4178-84e4-92cc233baebc", :page 774, :position {:bounding {:x1 243.29716795682907, :y1 388.71250915527344, :x2 752.4470092654228, :y2 406.31251525878906, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 243.29716795682907, :y1 388.71250915527344, :x2 752.4470092654228, :y2 406.31251525878906, :width 845.9999999999999, :height 1056.3400365630712}), :page 774}, :content {:text "只有 close 事件的 event 对象上有额外信息。这个对象上有 3 个额外属性"}, :properties {:color "yellow"}} {:id #uuid "63d49022-3327-4f40-b593-9333344652d4", :page 774, :position {:bounding {:x1 173.51249998807907, :y1 561.3875122070312, :x2 216.75993651151657, :y2 587.7875061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.51249998807907, :y1 561.3875122070312, :x2 216.75993651151657, :y2 587.7875061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 774}, :content {:text "安全"}, :properties {:color "green"}} {:id #uuid "63d49049-30a3-4637-bbdb-6c3efa5e64b9", :page 774, :position {:bounding {:x1 0, :y1 734.4000396728516, :x2 774.7250244021416, :y2 802.9375305175781, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 734.4000396728516, :x2 0, :y2 753.6000366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 139.0500060915947, :y1 763.4375457763672, :x2 729.9984008669853, :y2 781.0375366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 760.0624877810478, :y1 763.4375457763672, :x2 774.7250244021416, :y2 781.0375366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.63749998807907, :y1 785.3375396728516, :x2 138.95389097929, :y2 802.9375305175781, :width 845.9999999999999, :height 1056.3400365630712}), :page 774}, :content {:text "在未授权系统可以访问某个资源时，可以将其视为跨站点请求伪造（CSRF，cross-site request forgery）攻击"}, :properties {:color "yellow"}} {:id #uuid "63d4906e-ca24-4a0b-aad3-34be0daac038", :page 774, :position {:bounding {:x1 157.93750303983688, :y1 873.0125427246094, :x2 445.3751098513603, :y2 890.612548828125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 157.93750303983688, :y1 873.0125427246094, :x2 445.3751098513603, :y2 890.612548828125, :width 845.9999999999999, :height 1056.3400365630712}), :page 774}, :content {:text "要求通过 SSL 访问能够被 Ajax 访问的资源。"}, :properties {:color "yellow"}} {:id #uuid "63d49077-0b0c-40db-bd8f-10998515e024", :page 774, :position {:bounding {:x1 157.93750303983688, :y1 894.9125366210938, :x2 550.4625121951103, :y2 912.5125427246094, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 157.93750303983688, :y1 894.9125366210938, :x2 550.4625121951103, :y2 912.5125427246094, :width 845.9999999999999, :height 1056.3400365630712}), :page 774}, :content {:text "要求每个请求都发送一个按约定算法计算好的令牌（token）。"}, :properties {:color "yellow"}} {:id #uuid "63d490bd-d67e-4eba-8cf8-ed0bf0d1c27e", :page 776, :position {:bounding {:x1 173.51249998807907, :y1 505.1125183105469, :x2 229.8282043337822, :y2 531.5125122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.51249998807907, :y1 505.1125183105469, :x2 229.8282043337822, :y2 531.5125122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 776}, :content {:text "cookie"}, :properties {:color "green"}} {:id #uuid "63d4ccbc-4f4a-4ccd-996a-c66f7729f69d", :page 776, :position {:bounding {:x1 365.8096496462822, :y1 545.6250305175781, :x2 573.9460937380791, :y2 563.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 365.8096496462822, :y1 545.6250305175781, :x2 573.9460937380791, :y2 563.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 776}, :content {:text "最初用于在客户端存储会话信息"}, :properties {:color "yellow"}} {:id #uuid "63d4ccd2-e7e6-44ee-9a3a-d9fe2b9d101d", :page 776, :position {:bounding {:x1 0, :y1 430.40000915527344, :x2 767.1974975466728, :y2 584.1500244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 430.40000915527344, :x2 0, :y2 449.6000213623047, :width 845.9999999999999, :height 1056.3400365630712} {:x1 648.2570068240166, :y1 545.6250305175781, :x2 767.1974975466728, :y2 563.2250061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 566.5500183105469, :x2 506.4312621951103, :y2 584.1500244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 776}, :content {:text "要求服务器在响应 HTTP 请求时，通过发送 Set-Cookie HTTP 头部包含会话信息"}, :properties {:color "yellow"}} {:id #uuid "63d4cd1f-e757-4988-a6a8-73105fecfc3b", :page 776, :position {:bounding {:x1 139.1000091433525, :y1 804.25, :x2 550.2939178347588, :y2 821.8500366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 804.25, :x2 550.2939178347588, :y2 821.8500366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 776}, :content {:text "这些发送回服务器的额外信息可用于唯一标识发送请求的客户端"}, :properties {:color "yellow"}} {:id #uuid "63d4cd26-1460-46b7-89cf-1a232cf73ed7", :page 776, :position {:bounding {:x1 179.83749693632126, :y1 838.7250213623047, :x2 216.96887511014938, :y2 861.1250152587891, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 838.7250213623047, :x2 216.96887511014938, :y2 861.1250152587891, :width 845.9999999999999, :height 1056.3400365630712}), :page 776}, :content {:text "限制"}, :properties {:color "green"}} {:id #uuid "63d4cdbb-29d8-4cf8-a5f3-5fd3749a0c0c", :page 776, :position {:bounding {:x1 139.1000091433525, :y1 875.8375091552734, :x2 302.04970091581345, :y2 893.4375152587891, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 875.8375091552734, :x2 302.04970091581345, :y2 893.4375152587891, :width 845.9999999999999, :height 1056.3400365630712}), :page 776}, :content {:text "cookie 是与特定域绑定的"}, :properties {:color "yellow"}} {:id #uuid "63d4cdd8-4c23-431e-b8c8-15575254df05", :page 777, :position {:bounding {:x1 108.37500303983688, :y1 229.66250610351562, :x2 535.9706909060478, :y2 247.26251220703125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 229.66250610351562, :x2 535.9706909060478, :y2 247.26251220703125, :width 845.9999999999999, :height 1056.3400365630712}), :page 777}, :content {:text "每个域能设置的 cookie 总数也是受限的，但不同浏览器的限制不同"}, :properties {:color "yellow"}} {:id #uuid "63d4ce14-3f46-4580-ac6b-c4f9cad5b100", :page 777, :position {:bounding {:x1 149.1125060915947, :y1 528.3500244170427, :x2 262.44081419706345, :y2 550.749987795949, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 528.3500244170427, :x2 262.44081419706345, :y2 550.749987795949, :width 845.9999999999999, :height 1056.3400365630712}), :page 777}, :content {:text "cookie 的构成"}, :properties {:color "green"}} {:id #uuid "63d4cf00-5954-4b19-b7b3-d754988a0026", :page 778, :position {:bounding {:x1 179.83749693632126, :y1 424.9750121831894, :x2 360.5684387087822, :y2 447.37500607967377, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 424.9750121831894, :x2 360.5684387087822, :y2 447.37500607967377, :width 845.9999999999999, :height 1056.3400365630712}), :page 778}, :content {:text "JavaScript 中的 cookie"}, :properties {:color "green"}} {:id #uuid "63d4cf30-6e0e-437a-bf29-6f93e3bd3e95", :page 778, :position {:bounding {:x1 412.4493286013603, :y1 461.83749997615814, :x2 759.8625366091728, :y2 479.43750607967377, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 412.4493286013603, :y1 461.83749997615814, :x2 759.8625366091728, :y2 479.43750607967377, :width 845.9999999999999, :height 1056.3400365630712}), :page 778}, :content {:text "接口过于简单，只有 BOM 的 document.cookie 属性"}, :properties {:color "yellow"}} {:id #uuid "63d4cf45-5f05-48ea-abad-83945bff9f87", :page 778, :position {:bounding {:x1 139.1000091433525, :y1 554.4375152587891, :x2 639.5433837771416, :y2 572.0374908447266, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 554.4375152587891, :x2 639.5433837771416, :y2 572.0374908447266, :width 845.9999999999999, :height 1056.3400365630712}), :page 778}, :content {:text "所有名和值都是 URL 编码的，因此必须使用 decodeURIComponent()解码。"}, :properties {:color "yellow"}} {:id #uuid "63d4cf6e-4b08-4644-80c1-c9c2be00c978", :page 778, :position {:bounding {:x1 139.1000091433525, :y1 576.4375152587891, :x2 594.0468627810478, :y2 594.0374908447266, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 576.4375152587891, :x2 594.0468627810478, :y2 594.0374908447266, :width 845.9999999999999, :height 1056.3400365630712}), :page 778}, :content {:text "在设置值时，可以通过 document.cookie 属性设置新的 cookie 字符串"}, :properties {:color "yellow"}} {:id #uuid "63d4cf9b-8357-48d8-b21c-8ba2fa1dffe8", :page 778, :position {:bounding {:x1 300.5863830447197, :y1 761.5749969482422, :x2 691.7360717654228, :y2 779.1750335693359, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 300.5863830447197, :y1 761.5749969482422, :x2 691.7360717654228, :y2 779.1750335693359, :width 845.9999999999999, :height 1056.3400365630712}), :page 778}, :content {:text "最好还是使用 encodeURIComponent()对名称和值进行编码"}, :properties {:color "yellow"}} {:id #uuid "63d4cfc4-7d91-4c67-9b26-d3202652e461", :page 780, :position {:bounding {:x1 179.83749693632126, :y1 672.4250183105469, :x2 251.35592955350876, :y2 694.8250122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 672.4250183105469, :x2 251.35592955350876, :y2 694.8250122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 780}, :content {:text "子 cookie"}, :properties {:color "green"}} {:id #uuid "63d4cff3-c818-4825-be33-001799e4f519", :page 780, :position {:bounding {:x1 140.39999693632126, :y1 777.9125366210938, :x2 664.2946502566338, :y2 793.112548828125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 140.39999693632126, :y1 777.9125366210938, :x2 664.2946502566338, :y2 793.112548828125, :width 845.9999999999999, :height 1056.3400365630712}), :page 780}, :content {:text "name=name1=value1&name2=value2&name3=value3&name4=value4&name5=v"}, :properties {:color "yellow"}} {:id #uuid "63d4d00d-20c9-496a-a570-87e00d075b0b", :page 784, :position {:bounding {:x1 179.83749693632126, :y1 176.33749389648438, :x2 372.1221496462822, :y2 198.73751831054688, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 176.33749389648438, :x2 372.1221496462822, :y2 198.73751831054688, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "使用 cookie 的注意事项"}, :properties {:color "green"}} {:id #uuid "63d4d01e-41fc-4cc9-baaf-fd70776aeb3b", :page 784, :position {:bounding {:x1 0, :y1 213.46249723434448, :x2 767.0300781130791, :y2 305.59999418258667, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 375.44999998807907, :y1 213.46249723434448, :x2 767.0300781130791, :y2 231.0625033378601, :width 845.9999999999999, :height 1056.3400365630712} {:x1 350.8375121951103, :y1 235.4500002861023, :x2 517.1164428591728, :y2 253.05000638961792, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 236.42500638961792, :x2 339.7867309451103, :y2 254.02499723434448, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 286.40001249313354, :x2 0, :y2 305.59999418258667, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "HTTP-only 可以在浏览器设置，也可以在服务器设置，但只能在服务器上读取，这是因为 JavaScript 无法取得这种 cookie 的值"}, :properties {:color "yellow"}} {:id #uuid "63d4d061-c2a8-4e30-8db7-db2fae525a5b", :page 784, :position {:bounding {:x1 173.51249998807907, :y1 458.25001859664917, :x2 283.7716857790947, :y2 484.65001249313354, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.51249998807907, :y1 458.25001859664917, :x2 283.7716857790947, :y2 484.65001249313354, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "Web Storage"}, :properties {:color "green"}} {:id #uuid "63d4d072-f4c9-46e6-bed8-808fc748a3b0", :page 784, :position {:bounding {:x1 0, :y1 478.40001678466797, :x2 767.2571899294853, :y2 582.1625213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 478.40001678466797, :x2 0, :y2 497.60001373291016, :width 845.9999999999999, :height 1056.3400365630712} {:x1 286.43385618925095, :y1 542.5750122070312, :x2 767.2571899294853, :y2 560.1750183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 564.5625152587891, :x2 258.2433654665947, :y2 582.1625213623047, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "。Web Storage 的目的是解决通过客户端存储不需要频繁发送回服务器的数据时使用 cookie 的问题"}, :properties {:color "yellow"}} {:id #uuid "63d4d079-b15f-40d9-bcdb-c06e90d6ad57", :page 784, :position {:bounding {:x1 157.93750303983688, :y1 608.3625183105469, :x2 423.97316282987595, :y2 625.9625091552734, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 157.93750303983688, :y1 608.3625183105469, :x2 423.97316282987595, :y2 625.9625091552734, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "提供在 cookie 之外的存储会话数据的途径"}, :properties {:color "yellow"}} {:id #uuid "63d4d084-be24-499d-8d8d-ce2d2cf461f3", :page 784, :position {:bounding {:x1 157.93750303983688, :y1 630.2625122070312, :x2 407.54848021268845, :y2 647.8625183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 157.93750303983688, :y1 630.2625122070312, :x2 407.54848021268845, :y2 647.8625183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "提供跨会话持久化存储大量数据的机制"}, :properties {:color "yellow"}} {:id #uuid "63d4d08e-0bdf-4bf9-a2b3-4a2a43baefa3", :page 784, :position {:bounding {:x1 0, :y1 558.4000244140625, :x2 767.3375121951103, :y2 691.7625122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 558.4000244140625, :x2 0, :y2 577.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 748.4999877810478, :y1 651.1125183105469, :x2 767.3375121951103, :y2 668.7125244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 648.2624999880791, :y1 652.2500305175781, :x2 737.9816161990166, :y2 669.8500366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 674.1625061035156, :x2 197.78746336698532, :y2 691.7625122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "localStorage 是永久存储机制"}, :properties {:color "yellow"}} {:id #uuid "63d4d094-10b0-40ea-9c79-b447aad1914a", :page 784, :position {:bounding {:x1 212.50000303983688, :y1 673.0125122070312, :x2 468.53740233182907, :y2 690.6125183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 212.50000303983688, :y1 673.0125122070312, :x2 468.53740233182907, :y2 690.6125183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "sessionStorage 是跨会话的存储机制"}, :properties {:color "yellow"}} {:id #uuid "63d4d09b-d901-4027-9d6e-68e33e15f61d", :page 784, :position {:bounding {:x1 162.33604735136032, :y1 808.5625305175781, :x2 296.9563781619072, :y2 831.5500183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 808.5625305175781, :x2 296.9563781619072, :y2 830.1625366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 162.33604735136032, :y1 809.1500244140625, :x2 162.33957213163376, :y2 831.5500183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "Storage 类型"}, :properties {:color "green"}} {:id #uuid "63d4d0f1-4ec4-442f-b48f-703cb2205a38", :page 784, :position {:bounding {:x1 137.52499693632126, :y1 844.8750305175781, :x2 611.2159911990166, :y2 862.4750366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 137.52499693632126, :y1 844.8750305175781, :x2 611.2159911990166, :y2 862.4750366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 784}, :content {:text "Storage 类型用于保存名/值对数据，直至存储空间上限（由浏览器决定）"}, :properties {:color "yellow"}} {:id #uuid "63d4d12c-13df-4070-944b-2c510379ea94", :page 785, :position {:bounding {:x1 167.12500303983688, :y1 292.0875122100115, :x2 677.50467222929, :y2 309.6875183135271, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 167.12500303983688, :y1 292.0875122100115, :x2 677.50467222929, :y2 309.6875183135271, :width 845.9999999999999, :height 1056.3400365630712}), :page 785}, :content {:text "Storage 类型只能存储字符串。非字符串数据在存储之前会自动转换为字符串"}, :properties {:color "yellow"}} {:id #uuid "63d4d132-bd0a-4b50-b153-d894024b0f8a", :page 785, :position {:bounding {:x1 149.1125060915947, :y1 360.90000915527344, :x2 340.94386595487595, :y2 382.5, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 360.90000915527344, :x2 340.94386595487595, :y2 382.5, :width 845.9999999999999, :height 1056.3400365630712}), :page 785}, :content {:text "sessionStorage 对象"}, :properties {:color "green"}} {:id #uuid "63d4d13d-d981-46a9-91e0-d1acecd828e6", :page 785, :position {:bounding {:x1 114.74906462430954, :y1 397.22499084472656, :x2 605.5942108035088, :y2 414.8249969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 114.74906462430954, :y1 397.22499084472656, :x2 605.5942108035088, :y2 414.8249969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 785}, :content {:text "essionStorage 对象只存储会话数据，这意味着数据只会存储到浏览器关闭"}, :properties {:color "yellow"}} {:id #uuid "63d4d14b-6f1f-42ff-9ca6-fccb6167f43c", :page 785, :position {:bounding {:x1 0, :y1 190.39999389648438, :x2 736.5186645388603, :y2 459.8625030517578, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 190.39999389648438, :x2 0, :y2 209.59999465942383, :width 845.9999999999999, :height 1056.3400365630712} {:x1 257.49379271268845, :y1 420.34999084472656, :x2 736.5186645388603, :y2 437.9499969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.94999998807907, :y1 442.2624969482422, :x2 167.0499603152275, :y2 459.8625030517578, :width 845.9999999999999, :height 1056.3400365630712}), :page 785}, :content {:text "存储在 sessionStorage 中的数据不受页面刷新影响，可以在浏览器崩溃并重启后恢复"}, :properties {:color "yellow"}} {:id #uuid "63d4d158-ba6d-4304-822e-e4e558f9a367", :page 785, :position {:bounding {:x1 142.3500091433525, :y1 506.8125, :x2 421.63432615995407, :y2 524.4125061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 142.3500091433525, :y1 506.8125, :x2 421.63432615995407, :y2 524.4125061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 785}, :content {:text "sessionStorage 对象是 Storage 的实例"}, :properties {:color "yellow"}} {:id #uuid "63d4d1a6-f0f9-4742-82bf-84e24bedf06b", :page 785, :position {:bounding {:x1 108.37500303983688, :y1 633.4125061035156, :x2 706.4995757937431, :y2 651.0125122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 633.4125061035156, :x2 706.4995757937431, :y2 651.0125122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 785}, :content {:text "所有现代浏览器在实现存储写入时都使用了同步阻塞方式，因此数据会被立即提交到存储。"}, :properties {:color "yellow"}} {:id #uuid "63d4d1c6-037c-4145-89aa-b436d6d6ca9d", :page 785, :position {:bounding {:x1 108.37500303983688, :y1 934.2750091552734, :x2 663.3348266482353, :y2 951.8750152587891, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 934.2750091552734, :x2 663.3348266482353, :y2 951.8750152587891, :width 845.9999999999999, :height 1056.3400365630712}), :page 785}, :content {:text "对存在于 sessionStorage 上的数据，可以使用 getItem()或直接访问属性名来取得"}, :properties {:color "yellow"}} {:id #uuid "63d4d1df-0a2e-4bc4-aa40-e36cfe9f0f93", :page 786, :position {:bounding {:x1 0, :y1 480.4875030517578, :x2 767.2219726443291, :y2 561.5999908447266, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.08749693632126, :y1 480.4875030517578, :x2 767.2219726443291, :y2 498.08753967285156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 501.33753967285156, :x2 239.2681457400322, :y2 518.9375152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 542.4000396728516, :x2 0, :y2 561.5999908447266, :width 845.9999999999999, :height 1056.3400365630712}), :page 786}, :content {:text "要从 sessionStorage 中删除数据，可以使用 delete 操作符直接删除对象属性，也可以使用 removeItem()方法"}, :properties {:color "yellow"}} {:id #uuid "63d4d1e5-5d78-4408-b6b1-786cf12c4080", :page 786, :position {:bounding {:x1 184.7593566775322, :y1 662.8625183105469, :x2 350.31886595487595, :y2 684.4625244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 184.7593566775322, :y1 662.8625183105469, :x2 294.01848143339157, :y2 684.4625244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 307.9250060915947, :y1 662.8625183105469, :x2 350.31886595487595, :y2 684.4625244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 786}, :content {:text "ocalStorage 对象"}, :properties {:color "green"}} {:id #uuid "63d4d1fa-196d-4e49-9b64-6d22e4f977b8", :page 786, :position {:bounding {:x1 0, :y1 702.4000244140625, :x2 767.1961547732353, :y2 761.8125305175781, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 702.4000244140625, :x2 0, :y2 721.6000366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 389.5500060915947, :y1 721.1750183105469, :x2 767.1961547732353, :y2 738.7750244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 197.5729095339775, :y1 722.3125305175781, :x2 379.04408568143845, :y2 739.9125366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 744.2125244140625, :x2 241.77585142850876, :y2 761.8125305175781, :width 845.9999999999999, :height 1056.3400365630712}), :page 786}, :content {:text "要访问同一个 localStorage 对象，页面必须来自同一个域（子域不可以）、在相同的端口上使用相同的协议"}, :properties {:color "yellow"}} {:id #uuid "63d4d201-fc26-4774-bc1f-ac64617fe1ec", :page 786, :position {:bounding {:x1 179.83749693632126, :y1 764.9750366210938, :x2 430.51713865995407, :y2 782.5750732421875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 764.9750366210938, :x2 269.6313354372978, :y2 782.5750427246094, :width 845.9999999999999, :height 1056.3400365630712} {:x1 280.1500121951103, :y1 764.9750366210938, :x2 430.51713865995407, :y2 782.5750732421875, :width 845.9999999999999, :height 1056.3400365630712}), :page 786}, :content {:text "localStorage 是 Storage 的 实 例 "}, :properties {:color "yellow"}} {:id #uuid "63d4d23e-53d8-475f-b58a-26b0c56925fe", :page 787, :position {:bounding {:x1 0, :y1 14.400009155273438, :x2 736.5871459841728, :y2 159.5625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 14.400009155273438, :x2 0, :y2 33.600006103515625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 429.5500060915947, :y1 118.92500305175781, :x2 634.5184203982353, :y2 136.52499389648438, :width 845.9999999999999, :height 1056.3400365630712} {:x1 645.5749999880791, :y1 119.08750915527344, :x2 736.5871459841728, :y2 136.6875, :width 845.9999999999999, :height 1056.3400365630712} {:x1 296.1769592165947, :y1 120.0625, :x2 419.03129881620407, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 141.96249389648438, :x2 181.73007506132126, :y2 159.5625, :width 845.9999999999999, :height 1056.3400365630712}), :page 787}, :content {:text "储在 localStorage 中的数据会保留到通过 JavaScript 删除或者用户清除浏览器缓存"}, :properties {:color "yellow"}} {:id #uuid "63d4d244-7edb-4dce-90fb-d96c6d1bdbab", :page 787, :position {:bounding {:x1 149.1125060915947, :y1 198.32501220703125, :x2 223.36271971464157, :y2 220.72500610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 198.32501220703125, :x2 223.36271971464157, :y2 220.72500610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 787}, :content {:text "存储事件"}, :properties {:color "green"}} {:id #uuid "63d4d258-d05d-44ba-827a-ce5fd2a72f70", :page 787, :position {:bounding {:x1 108.37500303983688, :y1 236.42500007152557, :x2 539.3728515505791, :y2 254.0250061750412, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 236.42500007152557, :x2 539.3728515505791, :y2 254.0250061750412, :width 845.9999999999999, :height 1056.3400365630712}), :page 787}, :content {:text "每当 Storage 对象发生变化时，都会在文档上触发 storage 事件"}, :properties {:color "yellow"}} {:id #uuid "63d4d270-7a20-4619-85e0-b5f92a5ba828", :page 787, :position {:bounding {:x1 149.1125060915947, :y1 505.5750274658203, :x2 186.24386900663376, :y2 527.9750213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 505.5750274658203, :x2 186.24386900663376, :y2 527.9750213623047, :width 845.9999999999999, :height 1056.3400365630712}), :page 787}, :content {:text "限制"}, :properties {:color "green"}} {:id #uuid "63d4d280-f526-436a-9444-6e63dd84cafd", :page 787, :position {:bounding {:x1 0, :y1 334.40000915527344, :x2 736.5121337771416, :y2 648.9750213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 334.40000915527344, :x2 0, :y2 353.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 300.47499388456345, :y1 608.3375091552734, :x2 736.5121337771416, :y2 625.9375152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 609.4875030517578, :x2 289.95659178495407, :y2 627.0875091552734, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 631.3750152587891, :x2 147.72703856229782, :y2 648.9750213623047, :width 845.9999999999999, :height 1056.3400365630712}), :page 787}, :content {:text "不同浏览器给 localStorage 和 sessionStorage 设置了不同的空间限制，但大多数会限制为每个源 5MB"}, :properties {:color "yellow"}} {:id #uuid "63d4d289-03a2-4afe-a844-e074fc4f6060", :page 787, :position {:bounding {:x1 142.7875091433525, :y1 711.125, :x2 238.62488096952438, :y2 737.5249938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 142.7875091433525, :y1 711.125, :x2 238.62488096952438, :y2 737.5249938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 787}, :content {:text "IndexedDB"}, :properties {:color "green"}} {:id #uuid "63d4d2aa-98a8-402c-8cd3-6f22b6419904", :page 787, :position {:bounding {:x1 0, :y1 430.4000244140625, :x2 736.4188110232353, :y2 813.0375366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 430.4000244140625, :x2 0, :y2 449.6000213623047, :width 845.9999999999999, :height 1056.3400365630712} {:x1 337.88749998807907, :y1 772.5625305175781, :x2 678.3367187380791, :y2 790.1625366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 689.3749877810478, :y1 772.5625305175781, :x2 736.4188110232353, :y2 790.1625213623047, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 795.4375305175781, :x2 313.920069873333, :y2 813.0375366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 787}, :content {:text "IndexedDB 背后的思想是创造一套 API，方便 JavaScript 对象的存储和获取，同时也支持查询和搜索"}, :properties {:color "yellow"}} {:id #uuid "63d4d2b2-4489-4400-ac44-788ff118e2eb", :page 787, :position {:bounding {:x1 108.37500303983688, :y1 816.3750305175781, :x2 352.75261229276657, :y2 833.9750366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 816.3750305175781, :x2 352.75261229276657, :y2 833.9750366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 787}, :content {:text "IndexedDB 的设计几乎完全是异步的。"}, :properties {:color "yellow"}} {:id #uuid "63d4d2ce-b79d-489d-a645-596bb6eb7d16", :page 788, :position {:bounding {:x1 179.83749693632126, :y1 118.3375244140625, :x2 235.52829283475876, :y2 140.73748779296875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 118.3375244140625, :x2 235.52829283475876, :y2 140.73748779296875, :width 845.9999999999999, :height 1056.3400365630712}), :page 788}, :content {:text "数据库"}, :properties {:color "green"}} {:id #uuid "63d4d2dc-11f4-4ded-b901-d1e3e5d82d5e", :page 788, :position {:bounding {:x1 109.68750303983688, :y1 177.36248779296875, :x2 401.61650389432907, :y2 194.96249389648438, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 109.68750303983688, :y1 177.36248779296875, :x2 401.61650389432907, :y2 194.96249389648438, :width 845.9999999999999, :height 1056.3400365630712}), :page 788}, :content {:text "IndexedDB 使用对象存储而不是表格保存数据"}, :properties {:color "yellow"}} {:id #uuid "63d4d30f-db10-4a87-9cf8-c251c0116899", :page 788, :position {:bounding {:x1 0, :y1 222.14999389648438, :x2 767.0704833865166, :y2 321.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 304.70314329862595, :y1 222.14999389648438, :x2 767.0704833865166, :y2 239.75, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 244.03750610351562, :x2 153.49754637479782, :y2 261.63751220703125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 302.3999938964844, :x2 0, :y2 321.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 788}, :content {:text "第一步是调用 indexedDB.open()方法，并给它传入一个要打开的数据库名称"}, :properties {:color "yellow"}} {:id #uuid "63d4d324-a6ba-4950-acf1-01393682360f", :page 788, :position {:bounding {:x1 0, :y1 266.0375061035156, :x2 767.4250366091728, :y2 353.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 260.60365599393845, :y1 266.0375061035156, :x2 767.4250366091728, :y2 283.63751220703125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 286.79998779296875, :x2 277.10612791776657, :y2 304.3999938964844, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 334.3999938964844, :x2 0, :y2 353.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 788}, :content {:text "这个方法会返回 IDBRequest 的实例，可以在这个实例上添加 onerror 和 onsuccess 事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d4d344-498f-488e-83c8-b7601134cf9f", :page 788, :position {:bounding {:x1 0, :y1 534.6749877929688, :x2 768.9258911013603, :y2 577.6000366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 658.9499999880791, :y1 534.6749877929688, :x2 768.9258911013603, :y2 552.2750244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 508.1500121951103, :y1 555.4500122070312, :x2 752.5406982302666, :y2 573.0499877929688, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 556.5750122070312, :x2 480.21962279081345, :y2 574.1749877929688, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 558.4000244140625, :x2 0, :y2 577.6000366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 788}, :content {:text "如果 onsuccess事件处理程序被调用，说明可以通过 event.target.result 访问数据库（IDBDatabase）实例了"}, :properties {:color "yellow"}} {:id #uuid "63d4d34c-8dc8-4416-a81c-8c8546b48e7e", :page 788, :position {:bounding {:x1 162.33604735136032, :y1 716.3250122070312, :x2 254.0877258181572, :y2 739.9624938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 716.3250122070312, :x2 254.0877258181572, :y2 738.7250061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 162.33604735136032, :y1 717.5625, :x2 162.33957213163376, :y2 739.9624938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 788}, :content {:text "对象存储"}, :properties {:color "green"}} {:id #uuid "63d4d357-c722-4924-9a00-62ef9e677889", :page 788, :position {:bounding {:x1 0, :y1 578.4750061035156, :x2 767.1857787966728, :y2 618.0750122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 723.0964233279228, :y1 578.4750061035156, :x2 767.1857787966728, :y2 596.0750122070312, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 590.3999938964844, :x2 0, :y2 609.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 455.07499998807907, :y1 599.3374938964844, :x2 664.8166381716728, :y2 616.9375, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 600.4750061035156, :x2 433.4814025759697, :y2 618.0750122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 788}, :content {:text "如果打开数据库期间发生错误，event.target.errorCode 中就会存储表示问题的错误码。"}, :properties {:color "yellow"}} {:id #uuid "63d4d36b-8a27-4f50-9d93-ada776e7b402", :page 788, :position {:bounding {:x1 0, :y1 814.3999938964844, :x2 772.0021850466728, :y2 960.0375061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 814.3999938964844, :x2 0, :y2 833.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 625.1370117068291, :y1 920.5249938964844, :x2 772.0021850466728, :y2 938.125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 942.4375, :x2 697.1186630129814, :y2 960.0375061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 788}, :content {:text "用户名必须全局唯一，它也是大多数情况下访问数据的凭据。这个键很重要，因为创建对象存储时必须指定一个键"}, :properties {:color "yellow"}} {:id #uuid "63d4d376-3a0b-42c4-8416-e604395fb067", :page 789, :position {:bounding {:x1 108.37500303983688, :y1 120.0625, :x2 634.1560088992119, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 120.0625, :x2 634.1560088992119, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 789}, :content {:text "数据库的版本决定了数据库模式，包括数据库中的对象存储和这些对象存储的结构"}, :properties {:color "yellow"}} {:id #uuid "63d4d398-bae1-407b-a1c9-1117990213c8", :page 789, :position {:bounding {:x1 0, :y1 14.400000095367432, :x2 736.3849975466728, :y2 159.56250619888306, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 14.400000095367432, :x2 0, :y2 33.600000858306885, :width 845.9999999999999, :height 1056.3400365630712} {:x1 648.7424194216728, :y1 120.06249856948853, :x2 736.3849975466728, :y2 137.66249704360962, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 141.96250009536743, :x2 574.9205200076103, :y2 159.56250619888306, :width 845.9999999999999, :height 1056.3400365630712}), :page 789}, :content {:text "如果数据库还不存在，open()操作会创建一个新数据库，然后触发 upgradeneeded 事件"}, :properties {:color "yellow"}} {:id #uuid "63d4d3c1-2e63-415b-bfee-7c493bf2021b", :page 789, :position {:bounding {:x1 0, :y1 46.39999997615814, :x2 736.2009155154228, :y2 203.46249997615814, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 46.39999997615814, :x2 0, :y2 65.60000455379486, :width 845.9999999999999, :height 1056.3400365630712} {:x1 356.4595825076103, :y1 163.86250913143158, :x2 736.2009155154228, :y2 181.46249997615814, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 185.86250913143158, :x2 562.4851714968681, :y2 203.46249997615814, :width 845.9999999999999, :height 1056.3400365630712}), :page 789}, :content {:text "如果数据库存在，而你指定了一个升级版的版本号，则会立即触发 upgradeneeded 事件，因而可以在事件处理程序中更新数据库模式"}, :properties {:color "yellow"}} {:id #uuid "63d4d3de-252a-470e-9938-4ab887a2dec1", :page 789, :position {:bounding {:x1 108.37500303983688, :y1 403.46249997615814, :x2 556.5600463747978, :y2 421.06250607967377, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 403.46249997615814, :x2 556.5600463747978, :y2 421.06250607967377, :width 845.9999999999999, :height 1056.3400365630712}), :page 789}, :content {:text "这里第二个参数的 keyPath 属性表示应该用作键的存储对象的属性名"}, :properties {:color "yellow"}} {:id #uuid "63d4d3f2-d65d-4d80-80df-8175f3a2ab84", :page 789, :position {:bounding {:x1 131.62355345487595, :y1 437.8374938964844, :x2 186.24386900663376, :y2 461.4750061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 437.8374938964844, :x2 186.24386900663376, :y2 460.2375183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 131.62355345487595, :y1 439.07501220703125, :x2 131.62706297636032, :y2 461.4750061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 789}, :content {:text "事务"}, :properties {:color "green"}} {:id #uuid "63d4d3fe-c3bf-4c1d-bda0-b90c1c582064", :page 789, :position {:bounding {:x1 0, :y1 270.40000915527344, :x2 736.3934203982353, :y2 515.4375, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 270.40000915527344, :x2 0, :y2 289.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 532.7423583865166, :y1 475.9375, :x2 736.3934203982353, :y2 493.5375061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 496.70001220703125, :x2 170.3245422244072, :y2 514.3000183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 187.7250091433525, :y1 497.8374938964844, :x2 247.04428404569626, :y2 515.4375, :width 845.9999999999999, :height 1056.3400365630712}), :page 789}, :content {:text "事务要通过调用数据库对象的 transaction()方法创建"}, :properties {:color "yellow"}} {:id #uuid "63d4d454-5905-4218-bf6e-bb1f56e91a38", :page 789, :position {:bounding {:x1 0, :y1 286.40000915527344, :x2 736.4221679568291, :y2 537.3374938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 286.40000915527344, :x2 0, :y2 305.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 261.86781615018845, :y1 497.8374938964844, :x2 736.4221679568291, :y2 515.4375, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 519.7375183105469, :x2 108.33243864774704, :y2 537.3374938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 789}, :content {:text "任何时候，只要想要读取或修改数据，都要通过事务把所有修改操作组织起来"}, :properties {:color "yellow"}} {:id #uuid "63d4d46b-a286-4a46-b7e6-f7d7bdafeca7", :page 789, :position {:bounding {:x1 0, :y1 430.3999938964844, :x2 736.3116943240166, :y2 749.3875122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 430.3999938964844, :x2 0, :y2 449.5999946594238, :width 845.9999999999999, :height 1056.3400365630712} {:x1 400.42900389432907, :y1 709.875, :x2 736.3116943240166, :y2 727.4750061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 445.32499998807907, :y1 731.7749938964844, :x2 577.0013305544853, :y2 749.375, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 731.7875061035156, :x2 432.6548950076103, :y2 749.3875122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 789}, :content {:text "要修改访问模式，可以传入第二个参数。这个参数应该是下列三个字符串之一：\"readonly\"、\"readwrite\"或\"versionchange\""}, :properties {:color "yellow"}} {:id #uuid "63d4d479-1983-461f-b7d7-d25797d38056", :page 789, :position {:bounding {:x1 108.37500303983688, :y1 802.4874877929688, :x2 729.1442748904228, :y2 820.1000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 406.07499998807907, :y1 802.4874877929688, :x2 729.1442748904228, :y2 820.0874938964844, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 802.5, :x2 390.9201537966728, :y2 820.1000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 789}, :content {:text "有了事务的引用，就可以使用 objectStore()方法并传入对象存储的名称以访问特定的对象存储"}, :properties {:color "yellow"}} {:id #uuid "63d4d4a9-d03d-40f9-8d6d-be3c03c6be88", :page 790, :position {:bounding {:x1 139.1000091433525, :y1 120.0625, :x2 775.0375244021416, :y2 137.66253662109375, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 120.0625, :x2 775.0375244021416, :y2 137.66253662109375, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "因为一个事务可以完成任意多个请求，所以事务对象本身也有事件处理程序：onerror 和 oncomplete。"}, :properties {:color "yellow"}} {:id #uuid "63d4d4c8-9a43-4513-b49d-7b05ec48315a", :page 790, :position {:bounding {:x1 179.83749693632126, :y1 320.5375061035156, :x2 254.0877258181572, :y2 342.9375, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 320.5375061035156, :x2 254.0877258181572, :y2 342.9375, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "插入对象"}, :properties {:color "green"}} {:id #uuid "63d4d4d8-1a76-4cc5-a094-c31ae03b2981", :page 790, :position {:bounding {:x1 0, :y1 264.17499999701977, :x2 774.6433593630791, :y2 385.60001830756664, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 730.6625244021416, :y1 264.17499999701977, :x2 774.6433593630791, :y2 281.7750061005354, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 286.07499389350414, :x2 515.7758666872978, :y2 303.67499999701977, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 366.4000061005354, :x2 0, :y2 385.60001830756664, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "因此，仍然需要通过这些请求的 onsuccess 事件处理程序来获取数据"}, :properties {:color "yellow"}} {:id #uuid "63d4d521-4c45-4854-8bb6-482c48b84ba6", :page 790, :position {:bounding {:x1 182.06250303983688, :y1 401.312512204051, :x2 296.53959959745407, :y2 418.91251830756664, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 182.06250303983688, :y1 401.312512204051, :x2 296.53959959745407, :y2 418.91251830756664, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "add()会导致错误"}, :properties {:color "yellow"}} {:id #uuid "63d4d526-1abf-4199-bd3b-60c2301d4f1e", :page 790, :position {:bounding {:x1 329.32499998807907, :y1 401.312512204051, :x2 502.39540404081345, :y2 418.91251830756664, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 329.32499998807907, :y1 401.312512204051, :x2 502.39540404081345, :y2 418.91251830756664, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "put()会简单地重写该对象"}, :properties {:color "yellow"}} {:id #uuid "63d4d53a-35ab-433c-82aa-b6d102a17363", :page 790, :position {:bounding {:x1 0, :y1 517.2374999970198, :x2 767.1856567263603, :y2 561.5999877899885, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 520.5749999880791, :y1 517.2374999970198, :x2 767.1856567263603, :y2 534.8375366181135, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 539.1375244110823, :x2 596.8245727419853, :y2 556.7374999970198, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 542.4000366181135, :x2 0, :y2 561.5999877899885, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "如果想验证请求成功与否，可以把请求对象保存到一个变量，然后为它添加 onerror 和 onsuccess 事件处理程序"}, :properties {:color "yellow"}} {:id #uuid "63d4d54e-fc26-45ed-b5ca-9cbaeabaeb52", :page 790, :position {:bounding {:x1 179.83749693632126, :y1 798.6375122070312, :x2 291.20656126737595, :y2 821.0375366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 798.6375122070312, :x2 291.20656126737595, :y2 821.0375366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "通过游标查询"}, :properties {:color "green"}} {:id #uuid "63d4d580-0165-4fb6-bff8-d0461966527c", :page 790, :position {:bounding {:x1 427.4000121951103, :y1 836.7375183105469, :x2 757.3832885622978, :y2 854.3375244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 427.4000121951103, :y1 836.7375183105469, :x2 757.3832885622978, :y2 854.3375244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "如果想取得多条数据，则需要在事务中创建一个游标"}, :properties {:color "yellow"}} {:id #uuid "63d4d58e-2301-4798-a6b0-ede575539cca", :page 790, :position {:bounding {:x1 0, :y1 830.4000244140625, :x2 766.9258300662041, :y2 898.1375122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 830.4000244140625, :x2 0, :y2 849.6000366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 708.4916869997978, :y1 858.6375122070312, :x2 766.9258300662041, :y2 876.2375183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 880.5375366210938, :x2 462.1597930788994, :y2 898.1375122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "游标指向第一个结果，并在接到指令前不会主动查找下一条数据"}, :properties {:color "yellow"}} {:id #uuid "63d4d599-9394-4458-8035-4ec3db1c58a5", :page 790, :position {:bounding {:x1 139.1000091433525, :y1 902.4500122070312, :x2 476.83705443143845, :y2 920.0500183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 902.4500122070312, :x2 476.83705443143845, :y2 920.0500183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 790}, :content {:text "需要在对象存储上调用 openCursor()方法创建游标"}, :properties {:color "yellow"}} {:id #uuid "63d4d64e-57f6-49a6-b49b-7668d895df64", :page 791, :position {:bounding {:x1 225.41508787870407, :y1 413.8499938994646, :x2 475.0468322634697, :y2 431.45000000298023, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 225.41508787870407, :y1 413.8499938994646, :x2 475.0468322634697, :y2 431.45000000298023, :width 845.9999999999999, :height 1056.3400365630712}), :page 791}, :content {:text "游标使用的键。可能是对象键或索引键"}, :properties {:color "yellow"}} {:id #uuid "63d4d6c2-2d2c-4cf2-ad28-db35d52f5e3e", :page 791, :position {:bounding {:x1 280.4250060915947, :y1 600.7250213623047, :x2 620.9310180544853, :y2 618.3250122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 280.4250060915947, :y1 600.7250213623047, :x2 620.9310180544853, :y2 618.3250122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 791}, :content {:text "update()方法使用指定的对象更新当前游标对应的值"}, :properties {:color "yellow"}} {:id #uuid "63d4d718-9e7c-44c2-8f7c-e08150aa0aff", :page 791, :position {:bounding {:x1 152.34335631132126, :y1 936.9500122070312, :x2 407.46437376737595, :y2 954.550048828125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 152.34335631132126, :y1 936.9500122070312, :x2 243.90808409452438, :y2 954.550048828125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 260.66249388456345, :y1 936.9500122070312, :x2 407.46437376737595, :y2 954.550048828125, :width 845.9999999999999, :height 1056.3400365630712}), :page 791}, :content {:text "调用 delelte()来删除游标位置的记录"}, :properties {:color "yellow"}} {:id #uuid "63d4d728-9a95-4efc-923e-62559241bdf8", :page 792, :position {:bounding {:x1 227.2165099978447, :y1 385.1875, :x2 726.5561401247978, :y2 402.78753662109375, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 227.2165099978447, :y1 385.1875, :x2 726.5561401247978, :y2 402.78753662109375, :width 845.9999999999999, :height 1056.3400365630712}), :page 792}, :content {:text "每个游标只会创建一个请求。要创建另一个请求，必须调用下列中的一个方法"}, :properties {:color "yellow"}} {:id #uuid "63d4d995-f95c-48a5-8a81-8b3ad9ca720e", :page 792, :position {:bounding {:x1 281.13685911893845, :y1 407.08751833438873, :x2 471.3410217165947, :y2 424.68749392032623, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 281.13685911893845, :y1 407.08751833438873, :x2 471.3410217165947, :y2 424.68749392032623, :width 845.9999999999999, :height 1056.3400365630712}), :page 792}, :content {:text "移动到结果集中的下一条记录"}, :properties {:color "yellow"}} {:id #uuid "63d4d9a8-925c-40d0-b18a-1a2c7d9e2fb2", :page 792, :position {:bounding {:x1 289.53203123807907, :y1 450.97500002384186, :x2 515.4468261599541, :y2 468.5750061273575, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 289.53203123807907, :y1 450.97500002384186, :x2 515.4468261599541, :y2 468.5750061273575, :width 845.9999999999999, :height 1056.3400365630712}), :page 792}, :content {:text "游标向前移动指定的 count 条记录"}, :properties {:color "yellow"}} {:id #uuid "63d4d9b5-56b9-411c-92cb-e155c623ff38", :page 792, :position {:bounding {:x1 179.83749693632126, :y1 717.4375, :x2 235.52829283475876, :y2 739.8375244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 717.4375, :x2 235.52829283475876, :y2 739.8375244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 792}, :content {:text "键范围"}, :properties {:color "green"}} {:id #uuid "63d4d9f6-acb7-4647-9474-23529e02af21", :page 792, :position {:bounding {:x1 0, :y1 777.4375, :x2 767.0656005740166, :y2 833.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 677.9645873904228, :y1 777.4375, :x2 767.0656005740166, :y2 795.0375061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 798.2000122070312, :x2 149.3606750369072, :y2 815.8000183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 159.7875091433525, :y1 799.3375244140625, :x2 321.27580565214157, :y2 816.9375, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 814.4000244140625, :x2 0, :y2 833.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 792}, :content {:text "第一种是使用 only()方法并传入想要获取的键"}, :properties {:color "yellow"}} {:id #uuid "63d4da08-81ba-4565-83a9-38d3fbc4be78", :page 792, :position {:bounding {:x1 139.1000091433525, :y1 891.9500122070312, :x2 547.983431994915, :y2 909.5500183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 891.9500122070312, :x2 547.983431994915, :y2 909.5500183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 792}, :content {:text "第二种键范围可以定义结果集的下限。下限表示游标开始的位置"}, :properties {:color "yellow"}} {:id #uuid "63d4da1a-3c9e-4467-b2bf-5b615f6853e8", :page 793, :position {:bounding {:x1 0, :y1 62.399993896484375, :x2 736.5491821169853, :y2 223.03753662109375, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 62.399993896484375, :x2 0, :y2 81.60000610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 183.53753662109375, :x2 736.5491821169853, :y2 201.13751220703125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 205.4375, :x2 108.32686918973923, :y2 223.03753662109375, :width 845.9999999999999, :height 1056.3400365630712}), :page 793}, :content {:text "第三种键范围可以定义结果集的上限，通过调用 upperBound()方法可以指定游标不会越过的记录。"}, :properties {:color "yellow"}} {:id #uuid "63d4dab0-e391-4c19-85ce-1b2e6aabe116", :page 793, :position {:bounding {:x1 0, :y1 174.40000915527344, :x2 743.4504272341728, :y2 371.875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 174.40000915527344, :x2 0, :y2 193.60000610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 332.2875061035156, :x2 743.4504272341728, :y2 349.88751220703125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 354.2749938964844, :x2 504.8621169924736, :y2 371.875, :width 845.9999999999999, :height 1056.3400365630712}), :page 793}, :content {:text "要同时指定下限和上限，可以使用 bound()方法。这个方法接收四个参数：下限的键、上限的键、可选的布尔值表示是否跳过下限和可选的布尔值表示是否跳过上限"}, :properties {:color "yellow"}} {:id #uuid "63d4dac4-baf6-4cad-b33c-90e4b536b07d", :page 793, :position {:bounding {:x1 108.37500303983688, :y1 505.8125, :x2 638.3190795779228, :y2 523.4125366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 505.8125, :x2 638.3190795779228, :y2 523.4125366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 793}, :content {:text "定义了范围之后，把它传给 openCursor()方法，就可以得到位于该范围内的游标"}, :properties {:color "yellow"}} {:id #uuid "63d4dacd-09a2-48dc-a246-8768808bbcdc", :page 793, :position {:bounding {:x1 149.1125060915947, :y1 750.6625061035156, :x2 260.48158568143845, :y2 773.0625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 750.6625061035156, :x2 260.48158568143845, :y2 773.0625, :width 845.9999999999999, :height 1056.3400365630712}), :page 793}, :content {:text "设置游标方向"}, :properties {:color "green"}} {:id #uuid "63d4db3e-7cd9-46a6-ac81-b3551cd03290", :page 793, :position {:bounding {:x1 106.79999846220016, :y1 787.625, :x2 397.9689819216728, :y2 805.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 106.79999846220016, :y1 787.625, :x2 397.9689819216728, :y2 805.2250061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 793}, :content {:text "openCursor()方法实际上可以接收两个参数"}, :properties {:color "yellow"}} {:id #uuid "63d4db8e-91e4-448c-a3c9-fed98c585463", :page 794, :position {:bounding {:x1 179.83749693632126, :y1 276.46250915527344, :x2 216.96887511014938, :y2 298.8625030517578, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 276.46250915527344, :x2 216.96887511014938, :y2 298.8625030517578, :width 845.9999999999999, :height 1056.3400365630712}), :page 794}, :content {:text "索引"}, :properties {:color "green"}} {:id #uuid "63d4dc0f-8fbe-4db7-b026-24d803d02d10", :page 794, :position {:bounding {:x1 409.90703123807907, :y1 336.46250915527344, :x2 760.3718749880791, :y2 354.0625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 409.90703123807907, :y1 336.46250915527344, :x2 760.3718749880791, :y2 354.0625, :width 845.9999999999999, :height 1056.3400365630712}), :page 794}, :content {:text "可以考虑将用户 ID 作为主键，然后在用户名上创建索引"}, :properties {:color "yellow"}} {:id #uuid "63d4dd4f-02a4-4dd3-a98d-a1bdcc0a68f2", :page 794, :position {:bounding {:x1 139.1000091433525, :y1 783.1000061035156, :x2 657.0534545779228, :y2 800.7000427246094, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 783.1000061035156, :x2 657.0534545779228, :y2 800.7000427246094, :width 845.9999999999999, :height 1056.3400365630712}), :page 794}, :content {:text "使用 openKeyCursor()方法也可以在索引上创建特殊游标，只返回每条记录的主键"}, :properties {:color "yellow"}} {:id #uuid "63d4dd6b-0638-47f5-868f-ca671fccabee", :page 794, :position {:bounding {:x1 0, :y1 435.36249999701977, :x2 767.0423919558525, :y2 481.60001830756664, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 137.52499693632126, :y1 435.36249999701977, :x2 231.64609068632126, :y2 452.9625061005354, :width 845.9999999999999, :height 1056.3400365630712} {:x1 246.27499693632126, :y1 436.500012204051, :x2 767.0423919558525, :y2 454.10001830756664, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 458.4000061005354, :x2 296.16252440214157, :y2 476.000012204051, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 462.4000061005354, :x2 0, :y2 481.60001830756664, :width 845.9999999999999, :height 1056.3400365630712}), :page 794}, :content {:text "createIndex()的第一个参数是索引的名称，第二个参数是索引属性的名称，第三个参数是包含键 unique 的 options 对象"}, :properties {:color "yellow"}} {:id #uuid "63d4dd8c-a4c8-4711-a03e-22817469f22d", :page 794, :position {:bounding {:x1 0, :y1 766.4000244140625, :x2 743.9259521365166, :y2 844.5, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 766.4000244140625, :x2 0, :y2 785.6000366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 533.1249877810478, :y1 803.862548828125, :x2 743.9259521365166, :y2 821.4625244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 293.25126951932907, :y1 805, :x2 513.0916625857353, :y2 822.6000366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 826.9000244140625, :x2 256.4968368411064, :y2 844.5, :width 845.9999999999999, :height 1056.3400365630712}), :page 794}, :content {:text "最大的不同在于，event.result.key 是索引键，且 event.result.value是主键而不是整个记录"}, :properties {:color "yellow"}} {:id #uuid "63d4de1f-1799-49a2-9e37-2b3fc3a9c545", :page 795, :position {:bounding {:x1 108.37500303983688, :y1 120.0625, :x2 476.92648619413376, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 120.0625, :x2 476.92648619413376, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 795}, :content {:text "可以使用 get()方法并传入索引键通过索引取得单条记录"}, :properties {:color "yellow"}} {:id #uuid "63d4de3f-51a8-46eb-a132-d9331de70a0b", :page 795, :position {:bounding {:x1 108.37500303983688, :y1 297.95001220703125, :x2 531.7463256716728, :y2 315.54998779296875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 297.95001220703125, :x2 531.7463256716728, :y2 315.54998779296875, :width 845.9999999999999, :height 1056.3400365630712}), :page 795}, :content {:text "如果想只取得给定索引键的主键，可以使用 getKey()方法。"}, :properties {:color "yellow"}} {:id #uuid "63d4de51-37de-411f-9677-6f8b83294546", :page 795, :position {:bounding {:x1 181.76018065214157, :y1 489.6750183105469, :x2 564.9200927615166, :y2 507.2749938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 181.76018065214157, :y1 489.6750183105469, :x2 564.9200927615166, :y2 507.2749938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 795}, :content {:text "都可以使用 IDBIndex 对象的下列属性取得索引的相关信息"}, :properties {:color "yellow"}} {:id #uuid "63d4df2a-884a-40d4-a986-05565f6897ef", :page 795, :position {:bounding {:x1 108.38749998807907, :y1 599.2750244140625, :x2 563.6356689333916, :y2 616.875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.38749998807907, :y1 599.2750244140625, :x2 563.6356689333916, :y2 616.875, :width 845.9999999999999, :height 1056.3400365630712}), :page 795}, :content {:text "对象存储自身也有一个 indexNames 属性，保存着与之相关索引的名称"}, :properties {:color "yellow"}} {:id #uuid "63d4df71-6bec-4d57-9a7d-6b2927f2ac01", :page 795, :position {:bounding {:x1 137.73166197538376, :y1 883.8750305175781, :x2 534.2217742800713, :y2 901.4750061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 137.73166197538376, :y1 883.8750305175781, :x2 534.2217742800713, :y2 901.4750061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 795}, :content {:text "删除索引不会影响对象存储中的数据，所以这个操作没有回调"}, :properties {:color "yellow"}} {:id #uuid "63d4df78-c42c-4fc0-9623-0ef09b203ea8", :page 795, :position {:bounding {:x1 149.1125060915947, :y1 918.2500305175781, :x2 223.36271971464157, :y2 940.6499938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 918.2500305175781, :x2 223.36271971464157, :y2 940.6499938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 795}, :content {:text "并发问题"}, :properties {:color "green"}} {:id #uuid "63d4dfbe-fe9d-4342-b84a-a90827a5966d", :page 796, :position {:bounding {:x1 226.5216857790947, :y1 120.0625, :x2 620.9274780154228, :y2 137.6624755859375, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 226.5216857790947, :y1 120.0625, :x2 620.9274780154228, :y2 137.6624755859375, :width 845.9999999999999, :height 1056.3400365630712}), :page 796}, :content {:text "有可能出现一个网页尝试升级数据库而另一个尚未就绪的情形"}, :properties {:color "yellow"}} {:id #uuid "63d4dfc5-395b-48dd-8803-cd9efdb37fde", :page 796, :position {:bounding {:x1 138.44999998807907, :y1 163.875, :x2 581.2361328005791, :y2 181.4749755859375, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 138.44999998807907, :y1 163.875, :x2 581.2361328005791, :y2 181.4749755859375, :width 845.9999999999999, :height 1056.3400365630712}), :page 796}, :content {:text "第一次打开数据库时，添加 onversionchange 事件处理程序非常重要"}, :properties {:color "yellow"}} {:id #uuid "63d4dfde-afc3-4f2f-8a9f-e3642fd2b50c", :page 796, :position {:bounding {:x1 0, :y1 322.7250061035156, :x2 765.5897094607353, :y2 417.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 322.7250061035156, :x2 765.5897094607353, :y2 340.3249816894531, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 344.6249694824219, :x2 285.89811247587204, :y2 362.2250061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 398.3999938964844, :x2 0, :y2 417.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 796}, :content {:text "应该在每次成功打开数据库后都指定 onversionchange 事件处理程序。记住，onversionchange有可能会被其他标签页触发"}, :properties {:color "yellow"}} {:id #uuid "63d4dfe3-f712-4183-ad52-7877b7e86221", :page 796, :position {:bounding {:x1 190.12500303983688, :y1 422.9000244140625, :x2 227.256381213665, :y2 445.29998779296875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 190.12500303983688, :y1 422.9000244140625, :x2 227.256381213665, :y2 445.29998779296875, :width 845.9999999999999, :height 1056.3400365630712}), :page 796}, :content {:text "限制"}, :properties {:color "green"}} {:id #uuid "63d4e17a-5941-48c3-8b45-c82ef9e6bcee", :page 796, :position {:bounding {:x1 0, :y1 460.02500915527344, :x2 767.3450805544853, :y2 500.50001525878906, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 508.31251829862595, :y1 460.02500915527344, :x2 767.3450805544853, :y2 477.62501525878906, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 478.40000915527344, :x2 0, :y2 497.59999084472656, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.65000456571579, :y1 482.90000915527344, :x2 370.5035201907158, :y2 500.50001525878906, :width 845.9999999999999, :height 1056.3400365630712}), :page 796}, :content {:text "IndexedDB 数据库是与页面源（协议、域和端口）绑定的，因此信息不能跨域共享"}, :properties {:color "yellow"}} {:id #uuid "63d4e1ba-2a0a-49ac-9bc5-4446de625724", :page 797, :position {:bounding {:x1 108.36249846220016, :y1 522.2000122070312, :x2 728.9973022341728, :y2 540.7875061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 202.63749998807907, :y1 522.2000122070312, :x2 728.9973022341728, :y2 539.8000183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.36249846220016, :y1 523.1875, :x2 191.58090513944626, :y2 540.7875061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 797}, :content {:text "因为 JavaScript 是异步加载的解释型语言，所以得到广泛应用的各种模块实现也表现出不同的形态"}, :properties {:color "yellow"}} {:id #uuid "63d4e1bd-ed49-4519-b1fc-d2dbb8b347fa", :page 797, :position {:bounding {:x1 142.7875091433525, :y1 581.1499938964844, :x2 272.57350462675095, :y2 607.5500030517578, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 142.7875091433525, :y1 581.1499938964844, :x2 272.57350462675095, :y2 607.5500030517578, :width 845.9999999999999, :height 1056.3400365630712}), :page 797}, :content {:text "理解模块模式"}, :properties {:color "green"}} {:id #uuid "63d4e1dd-f674-4f23-96d1-40126ca3e3e6", :page 797, :position {:bounding {:x1 149.1125060915947, :y1 724.8625030517578, :x2 241.92215269804, :y2 747.2624969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 724.8625030517578, :x2 241.92215269804, :y2 747.2624969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 797}, :content {:text "模块标识符"}, :properties {:color "green"}} {:id #uuid "63d4e251-b69f-4600-b87d-9c149fdc3d96", :page 797, :position {:bounding {:x1 0, :y1 334.3999938964844, :x2 736.5614501833916, :y2 802.4624938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 334.3999938964844, :x2 0, :y2 353.59999084472656, :width 845.9999999999999, :height 1056.3400365630712} {:x1 375.67128294706345, :y1 762.9625091552734, :x2 736.5614501833916, :y2 780.5625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.94999998807907, :y1 784.8625030517578, :x2 195.80913084745407, :y2 802.4624938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 797}, :content {:text "模块系统本质上是键/值实体，其中每个模块都有个可用于引用它的标识符"}, :properties {:color "yellow"}} {:id #uuid "63d4e2c7-4501-4f44-8c2f-9d890045f2a3", :page 797, :position {:bounding {:x1 0, :y1 398.3999938964844, :x2 736.2763549685478, :y2 890.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 398.3999938964844, :x2 0, :y2 417.5999984741211, :width 845.9999999999999, :height 1056.3400365630712} {:x1 487.94447630643845, :y1 850.6625061035156, :x2 736.2763549685478, :y2 868.2625122070312, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.94999998807907, :y1 872.5750122070312, :x2 167.0499603152275, :y2 890.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 797}, :content {:text "系统中的任何模块都应该能够无歧义地引用其他模块"}, :properties {:color "yellow"}} {:id #uuid "63d4e2d5-b156-4185-90d4-ab885c9ba0ba", :page 798, :position {:bounding {:x1 179.83749693632126, :y1 118.33749389648438, :x2 254.0877258181572, :y2 140.73748779296875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 118.33749389648438, :x2 254.0877258181572, :y2 140.73748779296875, :width 845.9999999999999, :height 1056.3400365630712}), :page 798}, :content {:text "模块依赖"}, :properties {:color "green"}} {:id #uuid "63d4e2e9-0bf8-411a-9d3f-14e505d042fd", :page 798, :position {:bounding {:x1 139.1125060915947, :y1 222.14999389648438, :x2 580.6535522341728, :y2 239.75, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1125060915947, :y1 222.14999389648438, :x2 580.6535522341728, :y2 239.75, :width 845.9999999999999, :height 1056.3400365630712}), :page 798}, :content {:text "每个模块都会与某个唯一的标识符关联，该标识符可用于检索模块。"}, :properties {:color "yellow"}} {:id #uuid "63d4e2ee-a450-4b1d-bb9a-be19e971f9bf", :page 798, :position {:bounding {:x1 179.83749693632126, :y1 278.51251220703125, :x2 254.0877258181572, :y2 300.9125061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 278.51251220703125, :x2 254.0877258181572, :y2 300.9125061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 798}, :content {:text "模块加载"}, :properties {:color "green"}} {:id #uuid "63d4e354-99dc-4b7f-8e04-523fe32c8d72", :page 798, :position {:bounding {:x1 0, :y1 316.6000061035156, :x2 767.0219604372978, :y2 369.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 358.1385070681572, :y1 316.6000061035156, :x2 767.0219604372978, :y2 334.20001220703125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 338.51251220703125, :x2 271.19780272245407, :y2 356.1125183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 350.3999938964844, :x2 0, :y2 369.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 798}, :content {:text "当一个外部模块被指定为依赖时，本地模块期望在执行它时，依赖已准备好并已初始化。"}, :properties {:color "yellow"}} {:id #uuid "63d4e35d-9c3f-4edf-867f-6a25c4d0b672", :page 798, :position {:bounding {:x1 179.83749693632126, :y1 460.57499389350414, :x2 216.96887511014938, :y2 482.97501830756664, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 460.57499389350414, :x2 216.96887511014938, :y2 482.97501830756664, :width 845.9999999999999, :height 1056.3400365630712}), :page 798}, :content {:text "入口"}, :properties {:color "green"}} {:id #uuid "63d4e369-2b61-45db-8f92-a2cb21b1370b", :page 798, :position {:bounding {:x1 139.1000091433525, :y1 498.67499999701977, :x2 664.5160400271416, :y2 516.2750366181135, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 498.67499999701977, :x2 481.97975462675095, :y2 516.2750366181135, :width 845.9999999999999, :height 1056.3400365630712} {:x1 495.9625121951103, :y1 498.67499999701977, :x2 664.5160400271416, :y2 516.2750366181135, :width 845.9999999999999, :height 1056.3400365630712}), :page 798}, :content {:text "相互依赖的模块必须指定一个模块作为入口（entry point），这也是代码执行的起点"}, :properties {:color "yellow"}} {:id #uuid "63d4e3e4-c7ff-42c3-916f-8f15aef34d07", :page 798, :position {:bounding {:x1 0, :y1 494.4000061005354, :x2 767.1791259646416, :y2 582.0750244110823, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 494.4000061005354, :x2 0, :y2 513.5999877899885, :width 845.9999999999999, :height 1056.3400365630712} {:x1 557.9875366091728, :y1 541.5875366181135, :x2 767.1791259646416, :y2 559.187512204051, :width 845.9999999999999, :height 1056.3400365630712} {:x1 447.4422485232353, :y1 542.5750244110823, :x2 546.9308959841728, :y2 560.1749999970198, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 564.4749877899885, :x2 124.35195463895798, :y2 582.0750244110823, :width 845.9999999999999, :height 1056.3400365630712}), :page 798}, :content {:text "模块化 JavaScript 应用程序的所有模块会构成依赖图"}, :properties {:color "yellow"}} {:id #uuid "63d4e400-bc37-4071-974e-b4dd074c6d5a", :page 799, :position {:bounding {:x1 108.01249998807907, :y1 227.61248779296875, :x2 548.5246307253838, :y2 245.21249389648438, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.01249998807907, :y1 227.61248779296875, :x2 234.2538177371025, :y2 245.21249389648438, :width 845.9999999999999, :height 1056.3400365630712} {:x1 244.7875091433525, :y1 227.61248779296875, :x2 548.5246307253838, :y2 245.21249389648438, :width 845.9999999999999, :height 1056.3400365630712}), :page 799}, :content {:text "模块加载是“阻塞的”，这意味着前置操作必须完成才能执行后续操作"}, :properties {:color "yellow"}} {:id #uuid "63d4e40a-3aa6-437e-94ab-a58832876571", :page 799, :position {:bounding {:x1 149.1125060915947, :y1 305.7875061035156, :x2 223.36271971464157, :y2 328.1875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 305.7875061035156, :x2 223.36271971464157, :y2 328.1875, :width 845.9999999999999, :height 1056.3400365630712}), :page 799}, :content {:text "异步依赖"}, :properties {:color "green"}} {:id #uuid "63d4e4b4-e25e-419f-a5da-0dd0c5b6482e", :page 799, :position {:bounding {:x1 0, :y1 318.40000915527344, :x2 736.5250121951103, :y2 563.9750213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 318.40000915527344, :x2 0, :y2 337.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.38749998807907, :y1 524.4750213623047, :x2 736.5250121951103, :y2 542.0750274658203, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 546.3750152587891, :x2 108.27889555692673, :y2 563.9750213623047, :width 845.9999999999999, :height 1056.3400365630712}), :page 799}, :content {:text "如果重写前面的应用程序，只使用动态模块加载，那么使用一个<script>标签即可完成模块 A 的加载"}, :properties {:color "yellow"}} {:id #uuid "63d4e4b6-a538-47ac-80c1-75814a3bd966", :page 799, :position {:bounding {:x1 149.1125060915947, :y1 646.5374908447266, :x2 223.36271971464157, :y2 668.9375152587891, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 646.5374908447266, :x2 223.36271971464157, :y2 668.9375152587891, :width 845.9999999999999, :height 1056.3400365630712}), :page 799}, :content {:text "动态依赖"}, :properties {:color "green"}} {:id #uuid "63d4e4d2-a7dd-4c5d-8956-a21a5eeab89e", :page 799, :position {:bounding {:x1 167.0758849978447, :y1 706.5375061035156, :x2 725.1399719119072, :y2 724.1375122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 167.0758849978447, :y1 706.5375061035156, :x2 725.1399719119072, :y2 724.1375122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 799}, :content {:text "动态添加的依赖有别于模块开头列出的常规依赖，这些依赖必须在模块执行前加载完毕"}, :properties {:color "yellow"}} {:id #uuid "63d4e4e0-5219-49ca-95d3-2814f69a4d63", :page 799, :position {:bounding {:x1 131.62355345487595, :y1 906.7375335693359, :x2 223.36271971464157, :y2 930.3750305175781, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 906.7375335693359, :x2 223.36271971464157, :y2 929.1375427246094, :width 845.9999999999999, :height 1056.3400365630712} {:x1 131.62355345487595, :y1 907.9750213623047, :x2 131.62706297636032, :y2 930.3750305175781, :width 845.9999999999999, :height 1056.3400365630712}), :page 799}, :content {:text "静态分析"}, :properties {:color "green"}} {:id #uuid "63d4e4f8-8516-45ef-b395-cbe7763386a1", :page 800, :position {:bounding {:x1 139.08749693632126, :y1 163.87503051757812, :x2 533.3617889285088, :y2 181.47500610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.08749693632126, :y1 163.87503051757812, :x2 533.3617889285088, :y2 181.47500610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 800}, :content {:text "更复杂的模块行为，例如动态依赖，会导致静态分析更困难。"}, :properties {:color "yellow"}} {:id #uuid "63d4e4fe-ef46-4667-b778-92d2b8254da0", :page 800, :position {:bounding {:x1 162.33604735136032, :y1 242.12501525878906, :x2 254.0877258181572, :y2 265.7624969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 242.12501525878906, :x2 254.0877258181572, :y2 264.52500915527344, :width 845.9999999999999, :height 1056.3400365630712} {:x1 162.33604735136032, :y1 243.3625030517578, :x2 162.33957213163376, :y2 265.7624969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 800}, :content {:text "循环依赖"}, :properties {:color "green"}} {:id #uuid "63d4e6b8-9973-4041-90a6-27df2784075d", :page 800, :position {:bounding {:x1 139.1000091433525, :y1 279.25, :x2 549.8112670779228, :y2 297.8249969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 383.1500121951103, :y1 279.25, :x2 549.8112670779228, :y2 296.8500061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 139.1000091433525, :y1 280.2250061035156, :x2 372.0992309451103, :y2 297.8249969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 800}, :content {:text "要构建一个没有循环依赖的 JavaScript 应用程序几乎是不可能的"}, :properties {:color "yellow"}} {:id #uuid "63d4e6e8-284a-4e58-90be-fcb1ad3fcfc2", :page 801, :position {:bounding {:x1 142.81250303983688, :y1 774.1750335693359, :x2 294.31434935331345, :y2 800.5750427246094, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 142.81250303983688, :y1 774.1750335693359, :x2 294.31434935331345, :y2 800.5750427246094, :width 845.9999999999999, :height 1056.3400365630712}), :page 801}, :content {:text "凑合的模块系统"}, :properties {:color "green"}} {:id #uuid "63d4e703-53a7-4c09-b4bc-4cad97821e50", :page 802, :position {:bounding {:x1 139.1000091433525, :y1 120.0625, :x2 638.4187957644463, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 120.0625, :x2 638.4187957644463, :y2 137.66250610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 802}, :content {:text "如果把这个模块的返回值赋给一个变量，那么实际上就为模块创建了命名空间"}, :properties {:color "yellow"}} {:id #uuid "63d4e74e-5f03-46ed-89ba-424e7b7c4f96", :page 801, :position {:bounding {:x1 0, :y1 62.4000244140625, :x2 736.4129516482353, :y2 879.2125091552734, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 62.4000244140625, :x2 0, :y2 81.5999755859375, :width 845.9999999999999, :height 1056.3400365630712} {:x1 604.2189819216728, :y1 839.7125091552734, :x2 736.4129516482353, :y2 857.3125152587891, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.98749846220016, :y1 861.6125183105469, :x2 93.66955107450485, :y2 879.2125091552734, :width 845.9999999999999, :height 1056.3400365630712}), :page 801}, :content {:text "模块定义是立即执行的"}, :properties {:color "yellow"}} {:id #uuid "63d4e7a7-a494-4387-b7ac-a08712f46125", :page 802, :position {:bounding {:x1 139.1000091433525, :y1 227.61251831054688, :x2 699.3407470583916, :y2 245.21255493164062, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 227.61251831054688, :x2 699.3407470583916, :y2 245.21255493164062, :width 845.9999999999999, :height 1056.3400365630712}), :page 802}, :content {:text "为了暴露公共 API，模块 IIFE 会返回一个对象，其属性就是模块命名空间中的公共成员"}, :properties {:color "yellow"}} {:id #uuid "63d4e7d3-b2c1-4b2a-b3a6-3f668e30aeb8", :page 802, :position {:bounding {:x1 318.03349608182907, :y1 423.22499084472656, :x2 593.3375121951103, :y2 440.8250274658203, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 318.03349608182907, :y1 423.22499084472656, :x2 552.6595336794853, :y2 440.8250274658203, :width 845.9999999999999, :height 1056.3400365630712} {:x1 578.6750366091728, :y1 423.22499084472656, :x2 593.3375121951103, :y2 440.8250274658203, :width 845.9999999999999, :height 1056.3400365630712}), :page 802}, :content {:text "泄露模块模式”（revealing module pattern）"}, :properties {:color "yellow"}} {:id #uuid "63d4e7eb-1415-495d-9330-0fce6293f39a", :page 802, :position {:bounding {:x1 0, :y1 423.2250121831894, :x2 774.6110717654228, :y2 513.6000121831894, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 673.0427734255791, :y1 423.2250121831894, :x2 774.6110717654228, :y2 440.825018286705, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 445.2250121831894, :x2 315.23063963651657, :y2 462.825018286705, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 494.39999997615814, :x2 0, :y2 513.6000121831894, :width 845.9999999999999, :height 1056.3400365630712}), :page 802}, :content {:text "返回一个对象，其属性是私有数据和成员的引用"}, :properties {:color "yellow"}} {:id #uuid "63d4e85a-f2ba-4100-b8dc-27a366a983a2", :page 802, :position {:bounding {:x1 139.1000091433525, :y1 684.9125061035156, :x2 506.22531431913376, :y2 702.5125122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 684.9125061035156, :x2 506.22531431913376, :y2 702.5125122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 802}, :content {:text "在模块内部也可以定义模块，这样可以实现命名空间嵌套"}, :properties {:color "yellow"}} {:id #uuid "63d4e879-32b6-41a7-8ec3-bf9f687341d0", :page 801, :position {:bounding {:x1 0, :y1 46.399993896484375, :x2 736.4797851443291, :y2 857.3125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 46.399993896484375, :x2 0, :y2 65.60000610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 486.7665588259697, :y1 817.8000183105469, :x2 736.4797851443291, :y2 835.3999938964844, :width 845.9999999999999, :height 1056.3400365630712} {:x1 71.63749998807907, :y1 839.7124938964844, :x2 341.92338865995407, :y2 857.3125, :width 845.9999999999999, :height 1056.3400365630712} {:x1 383.91249388456345, :y1 839.7124938964844, :x2 589.5377685427666, :y2 857.3125, :width 845.9999999999999, :height 1056.3400365630712}), :page 801}, :content {:text "使用函数作用域和立即调用函数表达式（IIFE，Immediately Invoked Function Expression）将模块定义封装在匿名闭包中"}, :properties {:color "yellow"}} {:id #uuid "63d4e8bc-0cda-4e7b-b36d-5ddbf2cb4712", :page 803, :position {:bounding {:x1 108.37500303983688, :y1 120.06250464916229, :x2 498.1112853884697, :y2 137.6625031232834, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 120.06250464916229, :x2 498.1112853884697, :y2 137.6625031232834, :width 845.9999999999999, :height 1056.3400365630712}), :page 803}, :content {:text "为了让模块正确使用外部的值，可以将它们作为参数传给 IIFE"}, :properties {:color "yellow"}} {:id #uuid "63d4e973-6236-4ee9-8672-8163cd6efd6f", :page 803, :position {:bounding {:x1 108.37500303983688, :y1 344.1125183105469, :x2 729.0825683474541, :y2 362.68751525878906, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 408.28749388456345, :y1 344.1125183105469, :x2 729.0825683474541, :y2 361.7125244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 345.08750915527344, :x2 397.2237121462822, :y2 362.68751525878906, :width 845.9999999999999, :height 1056.3400365630712}), :page 803}, :content {:text "因为这里的模块实现其实就是在创建 JavaScript 对象的实例，所以完全可以在定义之后再扩展模块"}, :properties {:color "yellow"}} {:id #uuid "63d4ea09-e1db-44ce-98bc-70c71c8229dd", :page 803, :position {:bounding {:x1 108.37500303983688, :y1 673.0375213623047, :x2 460.8472930788994, :y2 690.6374969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 673.0375213623047, :x2 460.8472930788994, :y2 690.6374969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 803}, :content {:text "无论模块是否存在，配置模块扩展以执行扩展也很有用"}, :properties {:color "yellow"}} {:id #uuid "63d4ea1f-6057-41e2-bcbb-327ccf5a9543", :page 804, :position {:bounding {:x1 152.91270750761032, :y1 199.94998168945312, :x2 440.99342650175095, :y2 227.78750610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.51249998807907, :y1 199.94998168945312, :x2 440.99342650175095, :y2 226.35000610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 152.91270750761032, :y1 201.38748168945312, :x2 152.91574400663376, :y2 227.78750610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 804}, :content {:text "使用 ES6 之前的模块加载器"}, :properties {:color "green"}} {:id #uuid "63d4eaf9-b075-4042-aeb5-fc8ed59a51b4", :page 804, :position {:bounding {:x1 179.83749693632126, :y1 343.4000244140625, :x2 268.69581907987595, :y2 365.79998779296875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 343.4000244140625, :x2 268.69581907987595, :y2 365.79998779296875, :width 845.9999999999999, :height 1056.3400365630712}), :page 804}, :content {:text "CommonJS"}, :properties {:color "green"}} {:id #uuid "63d4eb05-3090-4999-9810-a7ca8e03ebe7", :page 804, :position {:bounding {:x1 139.1000091433525, :y1 377.98748779296875, :x2 444.85914915800095, :y2 395.5875244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 377.98748779296875, :x2 444.85914915800095, :y2 395.5875244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 804}, :content {:text "CommonJS 规范概述了同步声明依赖的模块定义"}, :properties {:color "yellow"}} {:id #uuid "63d4eb77-6089-423d-83b6-1539158ad229", :page 804, :position {:bounding {:x1 139.1000091433525, :y1 524.2375030517578, :x2 748.8829833865166, :y2 542.8125152587891, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 524.2375030517578, :x2 392.95448607206345, :y2 541.8375091552734, :width 845.9999999999999, :height 1056.3400365630712} {:x1 407.4625121951103, :y1 525.2125091552734, :x2 748.8829833865166, :y2 542.8125152587891, :width 845.9999999999999, :height 1056.3400365630712}), :page 804}, :content {:text "CommonJS 模块定义需要使用 require()指定依赖，而使用 exports 对象定义自己的公共 API"}, :properties {:color "yellow"}} {:id #uuid "63d4ebbe-4440-4fe4-b9a4-a337a1f8fe10", :page 804, :position {:bounding {:x1 139.1000091433525, :y1 805.8249816894531, :x2 541.7015869021416, :y2 823.4250183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 805.8249816894531, :x2 306.92949217557907, :y2 823.4250183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 321.43751829862595, :y1 805.8249816894531, :x2 541.7015869021416, :y2 823.4250183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 804}, :content {:text "无论一个模块在 require()中被引用多少次，模块永远是单例"}, :properties {:color "yellow"}} {:id #uuid "63d4ebe6-8d7c-470b-8b9b-1fe0ee882777", :page 805, :position {:bounding {:x1 108.37500303983688, :y1 186.96249389648438, :x2 465.024935901165, :y2 204.56253051757812, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 186.96249389648438, :x2 465.024935901165, :y2 204.56253051757812, :width 845.9999999999999, :height 1056.3400365630712}), :page 805}, :content {:text "在 CommonJS 中，模块加载是模块系统执行的同步操作"}, :properties {:color "yellow"}} {:id #uuid "63d4ec62-808e-4734-bf4c-b1b35359c7be", :page 805, :position {:bounding {:x1 0, :y1 286.3999938964844, :x2 743.7433959841728, :y2 516.5625152587891, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 286.3999938964844, :x2 0, :y2 305.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 302.3999938964844, :x2 0, :y2 321.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 699.7624999880791, :y1 455.15000915527344, :x2 743.7433959841728, :y2 472.75001525878906, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 477.06251525878906, :x2 736.3560668826103, :y2 494.66249084472656, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 498.96250915527344, :x2 181.7645599246025, :y2 516.5625152587891, :width 845.9999999999999, :height 1056.3400365630712}), :page 805}, :content {:text "不过，所有 CommonJS 风格的实现共同之处是模块不会指定自己的标识符，它们的标识符由其在模块文件层级中的位置决定。"}, :properties {:color "yellow"}} {:id #uuid "63d4ecce-6b50-42f6-92fd-702b13492c8d", :page 805, :position {:bounding {:x1 106.79999846220016, :y1 707.5375061035156, :x2 445.17946165800095, :y2 725.1375122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 106.79999846220016, :y1 707.5375061035156, :x2 445.17946165800095, :y2 725.1375122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 805}, :content {:text "module.exports 对象非常灵活，有多种使用方式。"}, :properties {:color "yellow"}} {:id #uuid "63d4ecfb-7521-46fc-9903-97d4473720bb", :page 806, :position {:bounding {:x1 139.1000091433525, :y1 172.2125244140625, :x2 722.8625366091728, :y2 189.81256103515625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 172.2125244140625, :x2 722.8625366091728, :y2 189.81256103515625, :width 845.9999999999999, :height 1056.3400365630712}), :page 806}, :content {:text "模块的一个主要用途是托管类定义（这里使用 ES6 风格的类定义，不过 ES5 风格也兼容）："}, :properties {:color "yellow"}} {:id #uuid "63d4ed16-1129-4025-8cbe-14ce1a7bb050", :page 806, :position {:bounding {:x1 138.7250091433525, :y1 449.81251215934753, :x2 533.7421752810478, :y2 467.41251826286316, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 138.7250091433525, :y1 449.81251215934753, :x2 533.7421752810478, :y2 467.41251826286316, :width 845.9999999999999, :height 1056.3400365630712}), :page 806}, :content {:text "CommonJS 依赖几个全局属性如 require 和 module.exports"}, :properties {:color "yellow"}} {:id #uuid "63d4ed29-2bd0-4cc3-b7cc-920c672dc268", :page 806, :position {:bounding {:x1 179.83749693632126, :y1 572.8625183105469, :x2 291.20656126737595, :y2 595.2625122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 572.8625183105469, :x2 291.20656126737595, :y2 595.2625122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 806}, :content {:text "异步模块定义"}, :properties {:color "green"}} {:id #uuid "63d4ed44-cd24-47fc-9255-ff219c577015", :page 806, :position {:bounding {:x1 0, :y1 558.4000244140625, :x2 774.5624877810478, :y2 672.3625183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 558.4000244140625, :x2 0, :y2 577.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 574.4000244140625, :x2 0, :y2 593.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 627.3520385622978, :y1 610.9625244140625, :x2 774.5624877810478, :y2 628.5625305175781, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 631.8875122070312, :x2 281.7455856204033, :y2 649.4875183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 311.78749388456345, :y1 632.8625183105469, :x2 767.0649902224541, :y2 650.4625244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 654.7625122070312, :x2 138.99139708280563, :y2 672.3625183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 806}, :content {:text "异步模块定义（AMD， Asynchronous Module Definition）的模块定义系统则以浏览器为目标执行环境，这需要考虑网络延迟的问题"}, :properties {:color "yellow"}} {:id #uuid "63d4ed50-c656-490e-86ef-ca457b21d59f", :page 806, :position {:bounding {:x1 0, :y1 590.4000244140625, :x2 767.0875732302666, :y2 694.2750244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 590.4000244140625, :x2 0, :y2 609.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 282.1028625369072, :y1 654.7625122070312, :x2 767.0875732302666, :y2 672.3625183105469, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 676.6750183105469, :x2 388.6883651614189, :y2 694.2750244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 806}, :content {:text "让模块声明自己的依赖，而运行在浏览器中的模块系统会按需获取依赖，并在依赖加载完成后立即执行依赖它们的模块"}, :properties {:color "yellow"}} {:id #uuid "63d4ed7f-9742-40d9-8415-cc5dd27841ee", :page 806, :position {:bounding {:x1 139.08749693632126, :y1 697.6875305175781, :x2 429.0684692263603, :y2 715.2875366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.08749693632126, :y1 697.6875305175781, :x2 429.0684692263603, :y2 715.2875366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 806}, :content {:text "AMD 模块实现的核心是用函数包装模块定义"}, :properties {:color "yellow"}} {:id #uuid "63d4ed89-0011-42a1-8ae9-fb8eb9277e7c", :page 806, :position {:bounding {:x1 502.54957884550095, :y1 698.6625061035156, :x2 620.1619140505791, :y2 716.2625122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 502.54957884550095, :y1 698.6625061035156, :x2 620.1619140505791, :y2 716.2625122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 806}, :content {:text "防止声明全局变量"}, :properties {:color "yellow"}} {:id #uuid "63d4ed8f-a075-4258-8c31-0199eae7f582", :page 806, :position {:bounding {:x1 0, :y1 622.4000244140625, :x2 767.1617309451103, :y2 738.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 622.4000244140625, :x2 0, :y2 641.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 649.5493652224541, :y1 698.6625061035156, :x2 767.1617309451103, :y2 716.2625122070312, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 720.5750122070312, :x2 199.34125059843063, :y2 738.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 806}, :content {:text "允许加载器库控制何时加载模块"}, :properties {:color "yellow"}} {:id #uuid "63d4ed9d-e539-4bcd-a358-43b0d1038112", :page 806, :position {:bounding {:x1 288.99476927518845, :y1 720.5750122070312, :x2 423.51323240995407, :y2 738.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 288.99476927518845, :y1 720.5750122070312, :x2 423.51323240995407, :y2 738.1750183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 806}, :content {:text "便于模块代码的移植"}, :properties {:color "yellow"}} {:id #uuid "63d4ee07-3197-4e4d-8754-be627955c7a0", :page 807, :position {:bounding {:x1 149.1125060915947, :y1 347.5500063896179, :x2 260.48158568143845, :y2 369.9500002861023, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 347.5500063896179, :x2 260.48158568143845, :y2 369.9500002861023, :width 845.9999999999999, :height 1056.3400365630712}), :page 807}, :content {:text "通用模块定义"}, :properties {:color "green"}} {:id #uuid "63d4ee15-c684-477f-ada1-bf64dd24751d", :page 807, :position {:bounding {:x1 371.39381712675095, :y1 385.65001249313354, :x2 658.3004028201103, :y2 403.25001859664917, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 371.39381712675095, :y1 385.65001249313354, :x2 658.3004028201103, :y2 403.25001859664917, :width 845.9999999999999, :height 1056.3400365630712}), :page 807}, :content {:text "通用模块定义（UMD，Universal Module Definition"}, :properties {:color "yellow"}} {:id #uuid "63d4ee55-7b44-42b8-abb9-29b77a71c40e", :page 807, :position {:bounding {:x1 0, :y1 222.39999723434448, :x2 744.0500366091728, :y2 469.0500063896179, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 222.39999723434448, :x2 0, :y2 241.60000944137573, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 238.39999723434448, :x2 0, :y2 257.60000944137573, :width 845.9999999999999, :height 1056.3400365630712} {:x1 495.26332396268845, :y1 407.6375002861023, :x2 736.4708740115166, :y2 425.2375063896179, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 429.53749418258667, :x2 744.0500366091728, :y2 447.1375002861023, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 451.4500002861023, :x2 108.34637755155563, :y2 469.0500063896179, :width 845.9999999999999, :height 1056.3400365630712}), :page 807}, :content {:text "本质上，UMD 定义的模块会在启动时检测要使用哪个模块系统，然后进行适当配置，并把所有逻辑包装在一个立即调用的函数表达式（IIFE）中。"}, :properties {:color "yellow"}} {:id #uuid "63d4ee7c-e4fa-4ac0-9d39-c9d9bb56e8c1", :page 807, :position {:bounding {:x1 139.38749998807907, :y1 614.3875122070312, :x2 474.2853576540947, :y2 629.5875244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.38749998807907, :y1 614.3875122070312, :x2 370.9888488650322, :y2 629.5875244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 391.7750121951103, :y1 614.3875122070312, :x2 474.2853576540947, :y2 629.5875244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 807}, :content {:text "module.exports = factory(require(' moduleB '));"}, :properties {:color "yellow"}} {:id #uuid "63d4ee9d-f44e-46da-bf73-f1b78bf0088d", :page 807, :position {:bounding {:x1 149.1125060915947, :y1 872.3125, :x2 316.17238157987595, :y2 894.7124938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 872.3125, :x2 316.17238157987595, :y2 894.7124938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 807}, :content {:text "模块加载器终将没落"}, :properties {:color "green"}} {:id #uuid "63d4eea6-e754-4804-bd16-497f39d55b7d", :page 808, :position {:bounding {:x1 173.51249998807907, :y1 118.8375244140625, :x2 311.13392943143845, :y2 145.23748779296875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.51249998807907, :y1 118.8375244140625, :x2 311.13392943143845, :y2 145.23748779296875, :width 845.9999999999999, :height 1056.3400365630712}), :page 808}, :content {:text "使用 ES6 模块"}, :properties {:color "green"}} {:id #uuid "63d4eec4-9062-49f2-9e84-cf046a4c1c04", :page 808, :position {:bounding {:x1 0, :y1 162.375, :x2 767.0150024294853, :y2 273.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 723.0727416872978, :y1 162.375, :x2 767.0150024294853, :y2 179.97500610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 184.375, :x2 418.00712126493454, :y2 201.97500610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 254.39999389648438, :x2 0, :y2 273.6000061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 808}, :content {:text "原生浏览器支持意味着加载器及其他预处理都不再必要"}, :properties {:color "yellow"}} {:id #uuid "63d4eeca-6b4a-4894-a9ab-400f37dff5cf", :page 808, :position {:bounding {:x1 162.33604735136032, :y1 240.65000295639038, :x2 309.77849119901657, :y2 264.28749990463257, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 240.65000295639038, :x2 309.77849119901657, :y2 263.0500121116638, :width 845.9999999999999, :height 1056.3400365630712} {:x1 162.33604735136032, :y1 241.8875060081482, :x2 162.33957213163376, :y2 264.28749990463257, :width 845.9999999999999, :height 1056.3400365630712}), :page 808}, :content {:text "模块标签及定义"}, :properties {:color "green"}} {:id #uuid "63d4ef01-81b3-4fff-acc3-e20bbe1b01a6", :page 808, :position {:bounding {:x1 0, :y1 278.7375121116638, :x2 758.6011230349541, :y2 337.59999990463257, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 514.7375366091728, :y1 278.7375121116638, :x2 758.6011230349541, :y2 296.33751821517944, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 300.6375060081482, :x2 594.2924606204033, :y2 318.2375121116638, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 318.40001821517944, :x2 0, :y2 337.59999990463257, :width 845.9999999999999, :height 1056.3400365630712}), :page 808}, :content {:text "带有 type=\"module\"属性的<script>标签会告诉浏览器相关代码应该作为模块执行，而不是作为传统的脚本执行"}, :properties {:color "yellow"}} {:id #uuid "63d4ef33-ea63-446c-9a08-cfea50ca238a", :page 808, :position {:bounding {:x1 0, :y1 446.40000915527344, :x2 758.2739745974541, :y2 490.4500274658203, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 446.40000915527344, :x2 0, :y2 465.6000213623047, :width 845.9999999999999, :height 1056.3400365630712} {:x1 664.6486694216728, :y1 452.08750915527344, :x2 758.2739745974541, :y2 469.68751525878906, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 472.8500213623047, :x2 603.2645141482353, :y2 490.4500274658203, :width 845.9999999999999, :height 1056.3400365630712}), :page 808}, :content {:text "解析到<script type=\"module\">标签后会立即下载模块文件，但执行会延迟到文档解析完成"}, :properties {:color "yellow"}} {:id #uuid "63d4ef75-e666-4f54-a0f1-f0947e3aa50a", :page 808, :position {:bounding {:x1 139.1000091433525, :y1 864.8500366210938, :x2 364.8122131228447, :y2 882.4500122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 864.8500366210938, :x2 364.8122131228447, :y2 882.4500122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 808}, :content {:text "也可以给模块标签添加 async 属性"}, :properties {:color "yellow"}} {:id #uuid "63d4ef7e-ed28-49cf-ba37-59fbb4169c9b", :page 808, :position {:bounding {:x1 0, :y1 750.4000244140625, :x2 767.3375121951103, :y2 904.4375305175781, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 750.4000244140625, :x2 0, :y2 769.6000366210938, :width 845.9999999999999, :height 1056.3400365630712} {:x1 525.2668945193291, :y1 864.8500366210938, :x2 767.3375121951103, :y2 882.4500122070312, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 886.8375244140625, :x2 255.74183958768845, :y2 904.4375305175781, :width 845.9999999999999, :height 1056.3400365630712}), :page 808}, :content {:text "不仅模块执行顺序不再与<script>标签在页面中的顺序绑定"}, :properties {:color "yellow"}} {:id #uuid "63d4ef89-daf8-4c62-966b-d47e67d091a3", :page 808, :position {:bounding {:x1 270.34108275175095, :y1 886.8375244140625, :x2 504.0280334353447, :y2 904.4375305175781, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 270.34108275175095, :y1 886.8375244140625, :x2 504.0280334353447, :y2 904.4375305175781, :width 845.9999999999999, :height 1056.3400365630712}), :page 808}, :content {:text "模块也不会等待文档完成解析才执行"}, :properties {:color "yellow"}} {:id #uuid "63d4efa7-d5af-4a28-a037-870b7c9ddc57", :page 809, :position {:bounding {:x1 149.1125060915947, :y1 357.38751220703125, :x2 223.36271971464157, :y2 379.7875061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 357.38751220703125, :x2 223.36271971464157, :y2 379.7875061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 809}, :content {:text "模块加载"}, :properties {:color "green"}} {:id #uuid "63d4efd1-468c-4103-b99a-b1067b034826", :page 809, :position {:bounding {:x1 0, :y1 334.3999938964844, :x2 736.3926269412041, :y2 588.5, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 334.3999938964844, :x2 0, :y2 353.5999984741211, :width 845.9999999999999, :height 1056.3400365630712} {:x1 398.80461424589157, :y1 548.8999938964844, :x2 736.3926269412041, :y2 566.5, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.93750303983688, :y1 570.8999938964844, :x2 267.27711790800095, :y2 588.5, :width 845.9999999999999, :height 1056.3400365630712}), :page 809}, :content {:text "模块文件按需加载，且后续模块的请求会因为每个依赖模块的网络延迟而同步延迟"}, :properties {:color "yellow"}} {:id #uuid "63d4efec-7b60-4321-9c08-0ba5b0651fbc", :page 809, :position {:bounding {:x1 149.1125060915947, :y1 649.0500183105469, :x2 223.36271971464157, :y2 671.4500122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 649.0500183105469, :x2 223.36271971464157, :y2 671.4500122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 809}, :content {:text "模块行为"}, :properties {:color "green"}} {:id #uuid "63d4f024-b014-4830-a069-01dc26db88e3", :page 810, :position {:bounding {:x1 179.83749693632126, :y1 176.33749389648438, :x2 254.0877258181572, :y2 198.73748779296875, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 176.33749389648438, :x2 254.0877258181572, :y2 198.73748779296875, :width 845.9999999999999, :height 1056.3400365630712}), :page 810}, :content {:text "模块导出"}, :properties {:color "green"}} {:id #uuid "63d4f03e-c100-4f7b-a2bc-339944bdc31d", :page 810, :position {:bounding {:x1 138.99139708280563, :y1 236.42498779296875, :x2 444.6299926638603, :y2 254.0250244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 138.99139708280563, :y1 236.42498779296875, :x2 444.6299926638603, :y2 254.0250244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 810}, :content {:text "。ES6 模块支持两种导出：命名导出和默认导出"}, :properties {:color "yellow"}} {:id #uuid "63d4f081-146a-4832-a350-a550fd30eff1", :page 810, :position {:bounding {:x1 0, :y1 417.09999084472656, :x2 767.1728393435478, :y2 465.59999084472656, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 479.53407591581345, :y1 417.09999084472656, :x2 767.1728393435478, :y2 434.6999969482422, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 437.96250915527344, :x2 398.9075805544853, :y2 455.56251525878906, :width 845.9999999999999, :height 1056.3400365630712} {:x1 0, :y1 446.40000915527344, :x2 0, :y2 465.59999084472656, :width 845.9999999999999, :height 1056.3400365630712}), :page 810}, :content {:text "因此 export 语句与导出值的相对位置或者 export 关键字在模块中出现的顺序没有限制"}, :properties {:color "yellow"}} {:id #uuid "63d4f0af-cba5-46fb-9eba-efc301bb99d5", :page 810, :position {:bounding {:x1 137.52499693632126, :y1 279.1000061035156, :x2 426.77565306425095, :y2 296.6999969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 137.52499693632126, :y1 279.1000061035156, :x2 426.77565306425095, :y2 296.6999969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 810}, :content {:text "export 关键字用于声明一个值为命名导出。"}, :properties {:color "yellow"}} {:id #uuid "63d4f0dd-cc10-416b-8e83-da4c5dc1a5f7", :page 810, :position {:bounding {:x1 139.1000091433525, :y1 619.0749969482422, :x2 516.5600463747978, :y2 636.6750030517578, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 619.0749969482422, :x2 516.5600463747978, :y2 636.6750030517578, :width 845.9999999999999, :height 1056.3400365630712}), :page 810}, :content {:text "命名导出（named export）就好像模块是被导出值的容器。"}, :properties {:color "yellow"}} {:id #uuid "63d4f14d-8073-46d2-847a-78e02399e83c", :page 810, :position {:bounding {:x1 139.1000091433525, :y1 883.4125061035156, :x2 679.7299529910088, :y2 901.0125122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 883.4125061035156, :x2 679.7299529910088, :y2 901.0125122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 810}, :content {:text "因为 ES6 命名导出可以将模块作为容器，所以可以在一个模块中声明多个命名导出。"}, :properties {:color "yellow"}} {:id #uuid "63d4f17f-2a4f-4c7a-97b0-678c2e026900", :page 811, :position {:bounding {:x1 0, :y1 14.399993896484375, :x2 736.3693115115166, :y2 159.5625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 14.399993896484375, :x2 0, :y2 33.600006103515625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 120.0625, :x2 736.3693115115166, :y2 137.6624755859375, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.94999998807907, :y1 141.9625244140625, :x2 137.6531555056572, :y2 159.5625, :width 845.9999999999999, :height 1056.3400365630712}), :page 811}, :content {:text "考虑到导出多个值是常见的操作，ES6 模块也支持对导出声明分组，可以同时为部分或全部导出值指定别名"}, :properties {:color "yellow"}} {:id #uuid "63d4f1a2-7c95-4c33-bedc-1aaf43b2de98", :page 811, :position {:bounding {:x1 108.37500303983688, :y1 233.77500915527344, :x2 509.2796508669853, :y2 252.3625030517578, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 233.77500915527344, :x2 244.72803038358688, :y2 251.37501525878906, :width 845.9999999999999, :height 1056.3400365630712} {:x1 261.68751829862595, :y1 234.7624969482422, :x2 509.2796508669853, :y2 252.3625030517578, :width 845.9999999999999, :height 1056.3400365630712}), :page 811}, :content {:text "默认导出（default export）就好像模块与被导出的值是一回事。"}, :properties {:color "yellow"}} {:id #uuid "63d4f1b4-0ea3-4696-bff0-2ad0161781c7", :page 811, :position {:bounding {:x1 225.7906829714775, :y1 256.75001525878906, :x2 416.70241087675095, :y2 274.34999084472656, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 225.7906829714775, :y1 256.75001525878906, :x2 416.70241087675095, :y2 274.34999084472656, :width 845.9999999999999, :height 1056.3400365630712}), :page 811}, :content {:text "每个模块只能有一个默认导出"}, :properties {:color "yellow"}} {:id #uuid "63d4f1e3-d426-4f8e-9994-21a55a95a513", :page 811, :position {:bounding {:x1 108.37500303983688, :y1 456.82501220703125, :x2 653.6359741091728, :y2 474.4250183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 456.82501220703125, :x2 653.6359741091728, :y2 474.4250183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 811}, :content {:text "因为命名导出和默认导出不会冲突，所以 ES6 支持在一个模块中同时定义这两种导出"}, :properties {:color "yellow"}} {:id #uuid "63d4f21d-2212-40b1-8841-6bcd0603335d", :page 810, :position {:bounding {:x1 139.1000091433525, :y1 776.1375122070312, :x2 605.9880248904228, :y2 793.7375183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 776.1375122070312, :x2 605.9880248904228, :y2 793.7375183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 810}, :content {:text "导出时也可以提供别名，别名必须在 export 子句的大括号语法中指定。"}, :properties {:color "yellow"}} {:id #uuid "63d4f270-893e-4cbc-842c-c9ca71f64bbb", :page 811, :position {:bounding {:x1 0, :y1 430.40003204345703, :x2 736.1568481326103, :y2 718.6625366210938, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 430.40003204345703, :x2 0, :y2 449.60003662109375, :width 845.9999999999999, :height 1056.3400365630712} {:x1 546.2927123904228, :y1 679.1625366210938, :x2 736.1568481326103, :y2 696.7625427246094, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 701.0625457763672, :x2 137.66565245389938, :y2 718.6625366210938, :width 845.9999999999999, :height 1056.3400365630712}), :page 811}, :content {:text "意，有的形式使用了分号，有的则没有"}, :properties {:color "yellow"}} {:id #uuid "63d4f277-71b5-4ca2-9028-c479f1b61c76", :page 812, :position {:bounding {:x1 179.83749693632126, :y1 484.6125030517578, :x2 254.0877258181572, :y2 507.01251220703125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 484.6125030517578, :x2 254.0877258181572, :y2 507.01251220703125, :width 845.9999999999999, :height 1056.3400365630712}), :page 812}, :content {:text "模块导入"}, :properties {:color "green"}} {:id #uuid "63d4f2b2-8379-4e9d-ba00-ef4d28ca29fc", :page 812, :position {:bounding {:x1 139.1000091433525, :y1 522.7125091552734, :x2 521.0431396365166, :y2 540.3125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 522.7125091552734, :x2 521.0431396365166, :y2 540.3125, :width 845.9999999999999, :height 1056.3400365630712}), :page 812}, :content {:text "模块可以通过使用 import 关键字使用其他模块导出的值。"}, :properties {:color "yellow"}} {:id #uuid "63d4f2c0-fe4d-4de9-8abf-a54d60ba656e", :page 812, :position {:bounding {:x1 137.52499693632126, :y1 680.4375, :x2 349.9720031619072, :y2 698.0375061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 137.52499693632126, :y1 680.4375, :x2 349.9720031619072, :y2 698.0375061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 812}, :content {:text "import 语句被提升到模块顶部。"}, :properties {:color "yellow"}} {:id #uuid "63d4f2cf-ec4f-46b8-8cc0-f7054a865ac5", :page 812, :position {:bounding {:x1 139.1000091433525, :y1 840.3500366210938, :x2 679.4797088503838, :y2 857.9500427246094, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 840.3500366210938, :x2 679.4797088503838, :y2 857.9500427246094, :width 845.9999999999999, :height 1056.3400365630712}), :page 812}, :content {:text "模块标识符可以是相对于当前模块的相对路径，也可以是指向模块文件的绝对路径。"}, :properties {:color "yellow"}} {:id #uuid "63d4f3bf-3719-4933-84a4-1c640d08491d", :page 813, :position {:bounding {:x1 0, :y1 254.40000915527344, :x2 736.4828979372978, :y2 514.5125274658203, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 254.40000915527344, :x2 0, :y2 273.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 108.37500303983688, :y1 475.0125274658203, :x2 736.4828979372978, :y2 492.6125030517578, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 496.9125213623047, :x2 343.24982756376266, :y2 514.5125274658203, :width 845.9999999999999, :height 1056.3400365630712}), :page 813}, :content {:text "命名导出和默认导出的区别也反映在它们的导入上。命名导出可以使用*批量获取并赋值给保存导出集合的别名，而无须列出每个标识符："}, :properties {:color "yellow"}} {:id #uuid "63d4f3d6-7a0d-4fef-bd6a-daef9cdcb05d", :page 813, :position {:bounding {:x1 108.37500303983688, :y1 741.3375091552734, :x2 692.4103881716728, :y2 758.9375457763672, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 741.3375091552734, :x2 692.4103881716728, :y2 758.9375457763672, :width 845.9999999999999, :height 1056.3400365630712}), :page 813}, :content {:text "默认导出就好像整个模块就是导出的值一样。可以使用 default 关键字并提供别名来导入"}, :properties {:color "yellow"}} {:id #uuid "63d4f3ea-6ec2-4aad-8fed-0132c846cb01", :page 814, :position {:bounding {:x1 179.83749693632126, :y1 198.69998168945312, :x2 291.20656126737595, :y2 221.10000610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 198.69998168945312, :x2 291.20656126737595, :y2 221.10000610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 814}, :content {:text "模块转移导出"}, :properties {:color "green"}} {:id #uuid "63d4fffe-7dca-4ee1-9a89-3f50746d67c9", :page 814, :position {:bounding {:x1 179.83749693632126, :y1 758.3624877929688, :x2 272.64714354276657, :y2 780.7625122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 758.3624877929688, :x2 272.64714354276657, :y2 780.7625122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 814}, :content {:text "工作者模块"}, :properties {:color "green"}} {:id #uuid "63d5004a-5c8c-4de9-88a0-435d640ee0ef", :page 814, :position {:bounding {:x1 139.1000091433525, :y1 236.8000030517578, :x2 418.113314807415, :y2 254.4000015258789, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 236.8000030517578, :x2 418.113314807415, :y2 254.4000015258789, :width 845.9999999999999, :height 1056.3400365630712}), :page 814}, :content {:text "模块导入的值可以直接通过管道转移到导出"}, :properties {:color "yellow"}} {:id #uuid "63d5005c-2a3c-4738-b5a3-e236fe7c1354", :page 814, :position {:bounding {:x1 183.08749693632126, :y1 306.5375061035156, :x2 536.7580444216728, :y2 324.13751220703125, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 183.08749693632126, :y1 306.5375061035156, :x2 536.7580444216728, :y2 324.13751220703125, :width 845.9999999999999, :height 1056.3400365630712}), :page 814}, :content {:text "foo.js 中的所有命名导出都会出现在导入 bar.js 的模块中"}, :properties {:color "yellow"}} {:id #uuid "63d50071-a25d-45ec-aae0-162502d5d5d9", :page 814, :position {:bounding {:x1 109.68750303983688, :y1 258.7000045776367, :x2 655.5914184451103, :y2 276.3000030517578, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 109.68750303983688, :y1 258.7000045776367, :x2 655.5914184451103, :y2 276.3000030517578, :width 845.9999999999999, :height 1056.3400365630712}), :page 814}, :content {:text "如果想把一个模块的所有命名导出集中在一块，可以像下面这样在 bar.js 中使用*导出"}, :properties {:color "yellow"}} {:id #uuid "63d5011e-553b-45f5-9a7a-d63af6733126", :page 815, :position {:bounding {:x1 149.1125060915947, :y1 118.3375015258789, :x2 223.36271971464157, :y2 140.73749542236328, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 118.3375015258789, :x2 223.36271971464157, :y2 140.73749542236328, :width 845.9999999999999, :height 1056.3400365630712}), :page 815}, :content {:text "向后兼容"}, :properties {:color "green"}} {:id #uuid "63d50133-184e-4430-ba3a-878b35c33913", :page 815, :position {:bounding {:x1 0, :y1 46.40000009536743, :x2 736.4498168826103, :y2 217.83750009536743, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 46.40000009536743, :x2 0, :y2 65.60000085830688, :width 845.9999999999999, :height 1056.3400365630712} {:x1 468.63749998807907, :y1 177.36250925064087, :x2 736.4498168826103, :y2 194.96250009536743, :width 845.9999999999999, :height 1056.3400365630712} {:x1 137.70080870389938, :y1 178.33750009536743, :x2 457.9413635134697, :y2 195.93750619888306, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.97500151395798, :y1 200.23750925064087, :x2 311.9985610842705, :y2 217.83750009536743, :width 845.9999999999999, :height 1056.3400365630712}), :page 815}, :content {:text "对于想要尽可能在浏览器中原生使用 ECMAScript 6 模块的用户，可以提供两个版本的代码：基于模块的版本与基于脚本的版本。"}, :properties {:color "yellow"}} {:id #uuid "63d50142-b13e-4fca-975c-86ab7d727d0b", :page 815, :position {:bounding {:x1 108.37500303983688, :y1 309.83750009536743, :x2 589.5853759646416, :y2 327.43750619888306, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 309.83750009536743, :x2 589.5853759646416, :y2 327.43750619888306, :width 845.9999999999999, :height 1056.3400365630712}), :page 815}, :content {:text "浏览器在遇到<script>标签上无法识别的 type 属性时会拒绝执行其内容"}, :properties {:color "yellow"}} {:id #uuid "63d50176-05b4-464c-990f-0c2e1bc29698", :page 816, :position {:bounding {:x1 173.52499693632126, :y1 603.0500001907349, :x2 325.0268432497978, :y2 629.4500246047974, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.52499693632126, :y1 603.0500001907349, :x2 325.0268432497978, :y2 629.4500246047974, :width 845.9999999999999, :height 1056.3400365630712}), :page 816}, :content {:text "工作者线程简介"}, :properties {:color "green"}} {:id #uuid "63d502e6-ed02-43a9-9071-17c26dae1317", :page 816, :position {:bounding {:x1 179.83749693632126, :y1 790.6499938964844, :x2 328.33793944120407, :y2 813.0500183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 790.6499938964844, :x2 328.33793944120407, :y2 813.0500183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 816}, :content {:text "工作者线程与线程"}, :properties {:color "green"}} {:id #uuid "63d5030e-a9a6-489c-a283-aa3fd7b81d35", :page 816, :position {:bounding {:x1 139.1000091433525, :y1 734.3000183105469, :x2 694.17752379179, :y2 751.9000244140625, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 139.1000091433525, :y1 734.3000183105469, :x2 694.17752379179, :y2 751.9000244140625, :width 845.9999999999999, :height 1056.3400365630712}), :page 816}, :content {:text "使用工作者线程，浏览器可以在原始页面环境之外再分配一个完全独立的二级子环境。"}, :properties {:color "yellow"}} {:id #uuid "63d5031b-0771-4249-8ab1-d17bbacd7745", :page 816, :position {:bounding {:x1 0, :y1 558.4000244140625, :x2 767.1328002810478, :y2 773.8875122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 558.4000244140625, :x2 0, :y2 577.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 723.3447143435478, :y1 734.3000183105469, :x2 767.1328002810478, :y2 751.9000244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 756.2875061035156, :x2 630.3224975466728, :y2 773.8875122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 816}, :content {:text "子环境不能与依赖单线程交互的 API（如 DOM）互操作，但可以与父环境并行执行代码"}, :properties {:color "yellow"}} {:id #uuid "63d503bd-6b84-4785-b8d5-70325c9b7390", :page 817, :position {:bounding {:x1 149.1125060915947, :y1 448.51249980926514, :x2 297.61293333768845, :y2 470.9124937057495, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 448.51249980926514, :x2 297.61293333768845, :y2 470.9124937057495, :width 845.9999999999999, :height 1056.3400365630712}), :page 817}, :content {:text "工作者线程的类型"}, :properties {:color "green"}} {:id #uuid "63d5042a-ebf4-4e19-812a-12383bbfae8d", :page 818, :position {:bounding {:x1 179.83749693632126, :y1 117.5, :x2 357.90629881620407, :y2 139.10000610351562, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 179.83749693632126, :y1 117.5, :x2 357.90629881620407, :y2 139.10000610351562, :width 845.9999999999999, :height 1056.3400365630712}), :page 818}, :content {:text "WorkerGlobalScope"}, :properties {:color "green"}} {:id #uuid "63d50455-0868-481c-bb14-774599386e0a", :page 818, :position {:bounding {:x1 173.52499693632126, :y1 868.9125366210938, :x2 325.0268432497978, :y2 895.3125305175781, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.52499693632126, :y1 868.9125366210938, :x2 325.0268432497978, :y2 895.3125305175781, :width 845.9999999999999, :height 1056.3400365630712}), :page 818}, :content {:text "专用工作者线程"}, :properties {:color "green"}} {:id #uuid "63d50467-3b8c-4816-bf37-48cb7c739ace", :page 818, :position {:bounding {:x1 0, :y1 814.4000091552734, :x2 767.4943115115166, :y2 972.0125122070312, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 814.4000091552734, :x2 0, :y2 833.6000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 254.99277037382126, :y1 932.5, :x2 767.4943115115166, :y2 950.1000061035156, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.68750303983688, :y1 954.4125061035156, :x2 763.9180328249931, :y2 972.0125122070312, :width 845.9999999999999, :height 1056.3400365630712}), :page 818}, :content {:text "这样的线程可以与父页面交换信息、发送网络请求、执行文件输入/输出、进行密集计算、处理大量数据，以及实现其他不适合在页面执行线程里做的任务（否则会导致页面响应迟钝）"}, :properties {:color "yellow"}} {:id #uuid "63d5046c-1e72-4ab0-b525-780eb0134cbf", :page 819, :position {:bounding {:x1 149.1125060915947, :y1 198.8000030517578, :x2 371.85063475370407, :y2 221.1999969482422, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 149.1125060915947, :y1 198.8000030517578, :x2 371.85063475370407, :y2 221.1999969482422, :width 845.9999999999999, :height 1056.3400365630712}), :page 819}, :content {:text "专用工作者线程的基本概念"}, :properties {:color "green"}} {:id #uuid "63d50486-d0c8-4efb-8356-3ecf6087f600", :page 819, :position {:bounding {:x1 0, :y1 126.4000015258789, :x2 736.5097534060478, :y2 365.3000183105469, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 126.4000015258789, :x2 0, :y2 145.60000610351562, :width 845.9999999999999, :height 1056.3400365630712} {:x1 485.48927611112595, :y1 325.8000183105469, :x2 736.5097534060478, :y2 343.3999938964844, :width 845.9999999999999, :height 1056.3400365630712} {:x1 78.96250456571579, :y1 347.70001220703125, :x2 446.09540861845016, :y2 365.3000183105469, :width 845.9999999999999, :height 1056.3400365630712}), :page 819}, :content {:text "把文件路径提供给 Worker 构造函数，然后构造函数再在后台异步加载脚本并实例化工作者线程"}, :properties {:color "yellow"}} {:id #uuid "63d5049a-b07f-4cd1-838b-948ded5063c3", :page 819, :position {:bounding {:x1 108.37500303983688, :y1 728.6125183105469, :x2 446.1098663210869, :y2 746.2124938964844, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 108.37500303983688, :y1 728.6125183105469, :x2 446.1098663210869, :y2 746.2124938964844, :width 845.9999999999999, :height 1056.3400365630712}), :page 819}, :content {:text "工作者线程的脚本文件只能从与父页面相同的源加载"}, :properties {:color "yellow"}} {:id #uuid "63d504e0-b0ce-487e-a7d9-b5a93af99376", :page 820, :position {:bounding {:x1 137.52499693632126, :y1 270.56251525878906, :x2 678.9816772341728, :y2 288.1625061035156, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 137.52499693632126, :y1 270.56251525878906, :x2 678.9816772341728, :y2 288.1625061035156, :width 845.9999999999999, :height 1056.3400365630712}), :page 820}, :content {:text "Worker()构造函数返回的 Worker 对象是与刚创建的专用工作者线程通信的连接点"}, :properties {:color "yellow"}} {:id #uuid "63d50512-7720-41d8-bde5-50e851302cae", :page 820, :position {:bounding {:x1 0, :y1 638.4000244140625, :x2 767.1954223513603, :y2 787.2250213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 0, :y1 638.4000244140625, :x2 0, :y2 657.6000289916992, :width 845.9999999999999, :height 1056.3400365630712} {:x1 139.1000091433525, :y1 748.8625335693359, :x2 767.1954223513603, :y2 766.4625244140625, :width 845.9999999999999, :height 1056.3400365630712} {:x1 109.67499846220016, :y1 769.6250305175781, :x2 457.2364379763603, :y2 787.2250213623047, :width 845.9999999999999, :height 1056.3400365630712}), :page 820}, :content {:text "在专用工作者线程内部，全局作用域是 DedicatedWorkerGlobalScope 的实例。因为这继承自 WorkerGlobalScope，所以包含它的所有属性和方法"}, :properties {:color "yellow"}} {:id #uuid "63d50527-8e74-4591-8000-314d852ba0f9", :page 867, :position {:bounding {:x1 142.8000060915947, :y1 515.3625243902206, :x2 229.3878509402275, :y2 541.7624877691269, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 142.8000060915947, :y1 515.3625243902206, :x2 229.3878509402275, :y2 541.7624877691269, :width 845.9999999999999, :height 1056.3400365630712}), :page 867}, :content {:text "可维护性"}, :properties {:color "green"}} {:id #uuid "63d50911-f98f-4ac1-940c-9db3deecf074", :page 876, :position {:bounding {:x1 173.51249998807907, :y1 419.13751220703125, :x2 216.75993651151657, :y2 445.5375213623047, :width 845.9999999999999, :height 1056.3400365630712}, :rects ({:x1 173.51249998807907, :y1 419.13751220703125, :x2 216.75993651151657, :y2 445.5375213623047, :width 845.9999999999999, :height 1056.3400365630712}), :page 876}, :content {:text "性能"}, :properties {:color "green"}}], :extra {:page 210}}